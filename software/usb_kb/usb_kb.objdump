
usb_kb.elf:     file format elf32-littlenios2
usb_kb.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001bc

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x000208d4 memsz 0x000208d4 flags r-x
    LOAD off    0x000218f4 vaddr 0x080208f4 paddr 0x08022420 align 2**12
         filesz 0x00001b2c memsz 0x00001b2c flags rw-
    LOAD off    0x00023f4c vaddr 0x08023f4c paddr 0x08023f4c align 2**12
         filesz 0x00000000 memsz 0x00004ba0 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001f420  080001bc  080001bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00001318  0801f5dc  0801f5dc  000205dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b2c  080208f4  08022420  000218f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00004ba0  08023f4c  08023f4c  00023f4c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00023420  2**0
                  CONTENTS
  7 .sdram        00000000  08028aec  08028aec  00023420  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00023420  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000012b8  00000000  00000000  00023448  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002f30b  00000000  00000000  00024700  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000c732  00000000  00000000  00053a0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00010e07  00000000  00000000  0006013d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002ee0  00000000  00000000  00070f44  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000044bc  00000000  00000000  00073e24  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00024b14  00000000  00000000  000782e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0009cdf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018a0  00000000  00000000  0009ce38  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000a2897  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000a289a  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000a28a6  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000a28a7  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000a28a8  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000a28ac  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000a28b0  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  000a28b4  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  000a28bf  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  000a28ca  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000b  00000000  00000000  000a28d5  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000024  00000000  00000000  000a28e0  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00097e28  00000000  00000000  000a2904  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
080001bc l    d  .text	00000000 .text
0801f5dc l    d  .rodata	00000000 .rodata
080208f4 l    d  .rwdata	00000000 .rwdata
08023f4c l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
08028aec l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../usb_kb_bsp//obj/HAL/src/crt0.o
080001f4 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
08000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 final_input.c
00000000 l    df *ABS*	00000000 final_sm.c
080223d4 l     O .rwdata	00000004 toSample
00000000 l    df *ABS*	00000000 io_handler.c
00000000 l    df *ABS*	00000000 main.c
08023fd8 l     O .bss	00000002 ctl_reg.3332
08023fda l     O .bss	00000002 no_device.3333
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_round.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 w_log10.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_log10.c
00000000 l    df *ABS*	00000000 e_pow.c
080200ec l     O .rodata	00000010 bp
080200cc l     O .rodata	00000010 dp_l
080200dc l     O .rodata	00000010 dp_h
00000000 l    df *ABS*	00000000 e_rem_pio2.c
0802017c l     O .rodata	00000108 two_over_pi
080200fc l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
080202c4 l     O .rodata	00000010 init_jk
08020284 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 s_rint.c
080202d4 l     O .rodata	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
08009eb8 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 atof.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
080208f4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtod.c
08020d2c l     O .rwdata	00000014 fpi.2638
080203fc l     O .rodata	00000028 tinytens
08020d18 l     O .rwdata	00000014 fpinan.2674
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 vfprintf.c
08020463 l     O .rodata	00000010 zeroes.4166
08020473 l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
08020483 l     O .rodata	00000010 zeroes.4181
08020493 l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
080205a4 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
08012ec4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08014a6c l     F .text	00000008 __fp_lock
08014a74 l     F .text	00000008 __fp_unlock
08014a88 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
08015848 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 locale.c
08020d60 l     O .rwdata	00000020 lc_ctype_charset
08020d40 l     O .rwdata	00000020 lc_message_charset
08020d80 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0802075c l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
08020880 l     O .rodata	00000010 zeroes.4110
08020890 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
0801a00c l     F .text	000000fc __sprint_r.part.0
080208b0 l     O .rodata	00000010 blanks.4125
080208a0 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0801cd98 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0801cec0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0801ceec l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0801cff4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0801d0f0 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0801d1d4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0801d3b8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08022410 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0801d66c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0801d7bc l     F .text	00000038 alt_dev_reg
08021368 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0801da98 l     F .text	00000204 altera_avalon_jtag_uart_irq
0801dc9c l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0801e570 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0801ea08 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0801eb60 l     F .text	00000050 alt_get_errno
0801ebb0 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
08018268 g     F .text	00000074 _mprec_log10
08018354 g     F .text	0000008c __any_on
0801ba38 g     F .text	00000054 _isatty_r
08020768 g     O .rodata	00000028 __mprec_tinytens
0801d300 g     F .text	00000078 alt_main
0800d028 g     F .text	000000b8 _puts_r
080289ec g     O .bss	00000100 alt_irq
080090b4 g     F .text	00000014 fabs
0801ba8c g     F .text	0000005c _lseek_r
08005e1c g     F .text	00000130 sqrt
08022420 g       *ABS*	00000000 __flash_rwdata_start
0800b7ac g     F .text	00000084 .hidden __eqdf2
08028aec g       *ABS*	00000000 __alt_heap_start
0800cfec g     F .text	0000003c printf
0801bcb4 g     F .text	0000009c _wcrtomb_r
08018aac g     F .text	0000005c __sseek
08014dd0 g     F .text	00000010 __sinit
0801bb44 g     F .text	00000154 __swbuf_r
080164b8 g     F .text	0000007c _setlocale_r
08014c28 g     F .text	00000078 __sfmoreglue
0801d398 g     F .text	00000020 __malloc_unlock
080055e8 g     F .text	00000104 round
0800d250 g     F .text	00001608 _strtod_r
0800a00c g     F .text	00000450 .hidden __divsf3
08005400 g     F .text	00000080 UsbGetRetryCnt
08000574 g     F .text	00000110 generate_frequencies
08017118 g     F .text	0000015c memmove
08003524 g     F .text	00000044 IO_init
08014db8 g     F .text	00000018 _cleanup
08017398 g     F .text	000000a8 _Balloc
08023f58 g     O .bss	00000008 b2
08002fc0 g     F .text	00000564 addToGraph
0800b830 g     F .text	000000e0 .hidden __gtdf2
0801efa0 g     F .text	00000020 altera_nios2_gen2_irq_init
0800cfb0 g     F .text	00000010 __errno
08000000 g     F .entry	0000000c __reset
08023f60 g     O .bss	00000004 type
08000020 g       *ABS*	00000000 __flash_exceptions_start
0801b9e0 g     F .text	00000058 _fstat_r
08023ff4 g     O .bss	00000004 errno
080090e4 g     F .text	000001f4 floor
08018a28 g     F .text	00000008 __seofread
08000a38 g     F .text	00002588 process_filter
08018e3c g     F .text	000011d0 ___svfiprintf_internal_r
08023ffc g     O .bss	00000004 alt_argv
0802a3c8 g       *ABS*	00000000 _gp
0801d63c g     F .text	00000030 usleep
080211e8 g     O .rwdata	00000180 alt_fd_list
080071e8 g     F .text	0000079c __ieee754_rem_pio2
0801efc0 g     F .text	00000090 alt_find_dev
08023f64 g     O .bss	00000008 A
08016fe0 g     F .text	00000138 memcpy
08016224 g     F .text	00000294 __hexnan
08023f6c g     O .bss	00000004 int_in
08014a7c g     F .text	0000000c _cleanup_r
0800cbb4 g     F .text	000000d0 .hidden __floatsidf
0801eae8 g     F .text	00000078 alt_io_redirect
0800b910 g     F .text	000000e0 .hidden __ltdf2
0801f5dc g       *ABS*	00000000 __DTOR_END__
0800d0e0 g     F .text	00000014 puts
080092d8 g     F .text	00000074 __fpclassifyd
080181c4 g     F .text	000000a4 __ratio
0801b544 g     F .text	00000024 __vfiprintf_internal
0801de98 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
0800cfc0 g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
08009fd4 g     F .text	00000008 .hidden __udivsi3
0801d044 g     F .text	000000ac isatty
080207b8 g     O .rodata	000000c8 __mprec_tens
08023f70 g     O .bss	00000008 Q
08023f78 g     O .bss	00000008 b1
08016534 g     F .text	0000000c __locale_charset
08007c18 g     F .text	000004a4 __kernel_cos
0801cc3c g     F .text	000000b8 .hidden __lesf2
08009e44 g     F .text	00000074 .hidden __fixunsdfsi
08023ff0 g     O .bss	00000004 __malloc_top_pad
08004aa0 g     F .text	00000264 UsbGetConfigDesc2
080223e8 g     O .rwdata	00000004 __mb_cur_max
08016564 g     F .text	0000000c _localeconv_r
080177c0 g     F .text	0000003c __i2b
08015234 g     F .text	000004a4 __sfvwrite_r
08023f80 g     O .bss	00000008 a1
08018980 g     F .text	00000054 _sbrk_r
0801bae8 g     F .text	0000005c _read_r
08005f4c g     F .text	000001d0 __ieee754_log10
08022408 g     O .rwdata	00000004 alt_max_fd
0801b6f0 g     F .text	00000100 _fclose_r
08014a3c g     F .text	00000030 fflush
08023fec g     O .bss	00000004 __malloc_max_sbrked_mem
08008dec g     F .text	000002c8 __kernel_sin
0800cc84 g     F .text	00000110 .hidden __extendsfdf2
0800a590 g     F .text	0000089c .hidden __adddf3
0801cb10 g     F .text	00000074 .hidden __nesf2
08017f6c g     F .text	0000011c __b2d
0801c4f4 g     F .text	0000061c .hidden __umoddi3
0801d224 g     F .text	000000dc lseek
080223d8 g     O .rwdata	00000004 __fdlib_version
080223dc g     O .rwdata	00000004 _global_impure_ptr
080183e0 g     F .text	000005a0 _realloc_r
08028aec g       *ABS*	00000000 __bss_end
0801e918 g     F .text	000000f0 alt_iic_isr_register
0801ee9c g     F .text	00000104 alt_tick
080288ec g     O .bss	00000100 __hexdig
0801beb4 g     F .text	00000640 .hidden __udivdi3
0801b804 g     F .text	00000184 _fputwc_r
08020790 g     O .rodata	00000028 __mprec_bigtens
080175a4 g     F .text	00000104 __s2b
0801ccf4 g     F .text	000000a4 .hidden __floatunsidf
08017d14 g     F .text	00000060 __mcmp
08004500 g     F .text	000000fc UsbSetAddress
08014df0 g     F .text	00000018 __fp_lock_all
0801e8cc g     F .text	0000004c alt_ic_irq_enabled
08023f54 g     O .bss	00000004 state
0801ee04 g     F .text	00000098 alt_alarm_stop
0800ebe0 g     F .text	00000024 strtol
08024004 g     O .bss	00000004 alt_irq_active
080000ec g     F .exceptions	000000d0 alt_irq_handler
080211c0 g     O .rwdata	00000028 alt_dev_null
080080bc g     F .text	00000d30 __kernel_rem_pio2
08009360 g     F .text	000001e4 rint
0801e554 g     F .text	0000001c alt_dcache_flush_all
080176a8 g     F .text	00000068 __hi0bits
080035c0 g     F .text	00000054 IO_read
0800cb2c g     F .text	00000088 .hidden __fixdfsi
0800e858 g     F .text	0000001c strtod
08022420 g       *ABS*	00000000 __ram_rwdata_end
08023f88 g     O .bss	00000008 w0
08022400 g     O .rwdata	00000008 alt_dev_list
0801d6bc g     F .text	00000100 write
0800cf90 g     F .text	00000008 atof
0801cb84 g     F .text	000000b8 .hidden __gtsf2
080208f4 g       *ABS*	00000000 __ram_rodata_end
0801cf3c g     F .text	000000b8 fstat
08023f90 g     O .bss	00000004 biquad
0800b910 g     F .text	000000e0 .hidden __ledf2
08005480 g     F .text	0000007c UsbPrintMem
08017a8c g     F .text	00000140 __pow5mult
0801a120 g     F .text	00001424 ___vfiprintf_internal_r
08023fe4 g     O .bss	00000004 __nlocale_changed
08009fdc g     F .text	00000008 .hidden __umodsi3
08028aec g       *ABS*	00000000 end
0800cfa4 g     F .text	0000000c _atoi_r
0801d9d4 g     F .text	000000c4 altera_avalon_jtag_uart_init
080223c8 g     O .rwdata	00000004 i
0801f5dc g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
0800cf2c g     F .text	00000064 .hidden __clzsi2
0801e0a4 g     F .text	00000218 altera_avalon_jtag_uart_write
080054fc g     F .text	000000ec cos
08014de0 g     F .text	00000004 __sfp_lock_acquire
08016ef8 g     F .text	000000e8 memchr
08010c74 g     F .text	000020fc ___vfprintf_internal_r
0800d0f4 g     F .text	00000058 _sprintf_r
08004e00 g     F .text	000000fc UsbClassRequest
08014f44 g     F .text	000002f0 _free_r
08016540 g     F .text	00000010 __locale_mb_cur_max
0801f414 g     F .text	00000194 __call_exitprocs
08023fe0 g     O .bss	00000004 __mlocale_changed
080223ec g     O .rwdata	00000004 __malloc_sbrk_base
080001bc g     F .text	0000003c _start
08024008 g     O .bss	00000004 _alt_tick_rate
080056ec g     F .text	000000f0 sin
08017bcc g     F .text	00000148 __lshift
0802400c g     O .bss	00000004 _alt_nticks
0801d408 g     F .text	00000104 read
0801d828 g     F .text	00000048 alt_sys_init
0800a45c g     F .text	00000134 .hidden __floatsisf
08018c74 g     F .text	000001c8 __ssprint_r
0801f300 g     F .text	00000114 __register_exitproc
08018bb4 g     F .text	000000c0 strncmp
080177fc g     F .text	00000290 __multiply
0800611c g     F .text	000010cc __ieee754_pow
0801dd44 g     F .text	00000068 altera_avalon_jtag_uart_close
08005978 g     F .text	000004a4 pow
08009fe4 g     F .text	00000028 .hidden __mulsi3
080208f4 g       *ABS*	00000000 __ram_rwdata_start
0801f5dc g       *ABS*	00000000 __ram_rodata_start
08024824 g     O .bss	00000028 __malloc_current_mallinfo
0801cb10 g     F .text	00000074 .hidden __eqsf2
08018088 g     F .text	0000013c __d2b
08023f94 g     O .bss	00000008 G
080057dc g     F .text	0000019c log10
080045fc g     F .text	00000144 UsbGetDeviceDesc1
0801d870 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0801f164 g     F .text	000000d4 alt_get_fd
0801e3fc g     F .text	00000158 alt_busy_sleep
0801b5c4 g     F .text	00000054 _close_r
0801f284 g     F .text	0000007c memcmp
0801d930 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
08028aec g       *ABS*	00000000 __alt_stack_base
0801d980 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
08023f9c g     O .bss	00000008 bCoeffsSq
08012d94 g     F .text	00000130 __swsetup_r
0800ae2c g     F .text	00000980 .hidden __divdf3
08014ca0 g     F .text	00000118 __sfp
080182dc g     F .text	00000078 __copybits
08020db8 g     O .rwdata	00000408 __malloc_av_
08014dec g     F .text	00000004 __sinit_lock_release
0800b9f0 g     F .text	0000086c .hidden __muldf3
080189d4 g     F .text	00000054 __sread
0800537c g     F .text	00000084 UsbWaitTDListDone
08023fa4 g     O .bss	00000008 double_in
0801f050 g     F .text	00000114 alt_find_file
0801e5c0 g     F .text	000000a4 alt_dev_llist_insert
0801d378 g     F .text	00000020 __malloc_lock
0801d58c g     F .text	000000b0 sbrk
0800ec04 g     F .text	00002070 ___svfprintf_internal_r
08014814 g     F .text	00000228 _fflush_r
0801b618 g     F .text	000000d8 _calloc_r
08023f4c g       *ABS*	00000000 __bss_start
08017274 g     F .text	00000124 memset
08003614 g     F .text	00000d9c main
08024000 g     O .bss	00000004 alt_envp
08023fe8 g     O .bss	00000004 __malloc_max_total_mem
0801d8d0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
08004d04 g     F .text	000000fc UsbSetConfig
08023fac g     O .bss	00000008 a2
0801bc98 g     F .text	0000001c __swbuf
0801cc3c g     F .text	000000b8 .hidden __ltsf2
08018b08 g     F .text	00000008 __sclose
0800934c g     F .text	00000008 matherr
0c000000 g       *ABS*	00000000 __alt_heap_limit
0801b7f0 g     F .text	00000014 fclose
0800e978 g     F .text	00000268 _strtol_r
0800cd94 g     F .text	00000198 .hidden __truncdfsf2
080130ec g     F .text	00001728 _dtoa_r
08016750 g     F .text	000007a8 _malloc_r
0801be28 g     F .text	00000030 __ascii_wctomb
0802240c g     O .rwdata	00000004 alt_errno
080156d8 g     F .text	000000b8 _fwalk
08009f24 g     F .text	00000054 .hidden __divsi3
08014e20 g     F .text	00000124 _malloc_trim_r
08004efc g     F .text	00000144 UsbGetHidDesc
0801f5dc g       *ABS*	00000000 __CTOR_END__
080090c8 g     F .text	0000001c finite
08018b10 g     F .text	000000a4 strcmp
0801f5dc g       *ABS*	00000000 __flash_rodata_start
0801f5dc g       *ABS*	00000000 __DTOR_LIST__
08009e28 g     F .text	0000001c copysign
0800b7ac g     F .text	00000084 .hidden __nedf2
08004404 g     F .text	0000004c UsbRead
0801d7f4 g     F .text	00000034 alt_irq_init
0801d50c g     F .text	00000080 alt_release_fd
0800d14c g     F .text	0000006c sprintf
080202e4 g     O .rodata	00000100 .hidden __clz_tab
08023fdc g     O .bss	00000004 _PathLocale
0800e874 g     F .text	00000104 strtof
0801f238 g     F .text	00000014 atexit
0801cb84 g     F .text	000000b8 .hidden __gesf2
0801b568 g     F .text	0000005c _write_r
08016570 g     F .text	0000001c setlocale
080223e0 g     O .rwdata	00000004 _impure_ptr
08023ff8 g     O .bss	00000004 alt_argc
08009544 g     F .text	000001cc scalbn
0801e6c0 g     F .text	0000005c _do_dtors
0801655c g     F .text	00000008 __locale_cjk_lang
08009710 g     F .text	00000718 __ieee754_log
08023fb4 g     O .bss	00000008 aCoeffsSq
08000020 g       .exceptions	00000000 alt_irq_entry
08017f0c g     F .text	00000060 __ulp
08014e08 g     F .text	00000018 __fp_unlock_all
0802484c g     O .bss	000040a0 samples
080223f8 g     O .rwdata	00000008 alt_fs_list
08005040 g     F .text	0000033c UsbGetReportDesc
08009354 g     F .text	0000000c nan
08000020 g       *ABS*	00000000 __ram_exceptions_start
0801658c g     F .text	0000000c localeconv
08007984 g     F .text	00000294 __ieee754_sqrt
0801e738 g     F .text	00000050 alt_ic_isr_register
08015948 g     F .text	00000084 __hexdig_init
08022420 g       *ABS*	00000000 _edata
08028aec g       *ABS*	00000000 _end
080043b0 g     F .text	00000054 UsbWrite
080001bc g       *ABS*	00000000 __ram_exceptions_end
0801ddac g     F .text	000000ec altera_avalon_jtag_uart_ioctl
08023f4c g     O .bss	00000006 str
0801e828 g     F .text	000000a4 alt_ic_irq_disable
08018a30 g     F .text	0000007c __swrite
080223f0 g     O .rwdata	00000004 __malloc_trim_threshold
08016550 g     F .text	0000000c __locale_msgcharset
08023fbc g     O .bss	00000008 b0
0801f24c g     F .text	00000038 exit
08015790 g     F .text	000000b8 _fwalk_reent
08017d74 g     F .text	00000198 __mdiff
080001f8 g     F .text	0000037c handle_keycode
08009f78 g     F .text	0000005c .hidden __modsi3
080223e4 g     O .rwdata	00000004 __ctype_ptr__
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
08014de4 g     F .text	00000004 __sfp_lock_release
08000000 g       *ABS*	00000000 __alt_mem_sdram
0800cf98 g     F .text	0000000c atoi
08003568 g     F .text	00000058 IO_write
080204a3 g     O .rodata	00000101 _ctype_
0801f5a8 g     F .text	00000034 _exit
0801e2bc g     F .text	00000140 alt_alarm_start
08016598 g     F .text	000001b8 __smakebuf_r
0800d1b8 g     F .text	00000098 strlen
0801eca4 g     F .text	00000160 open
0800b830 g     F .text	000000e0 .hidden __gedf2
080159cc g     F .text	00000858 __gethex
080223f4 g     O .rwdata	00000004 __wctomb
0801a108 g     F .text	00000018 __sprint_r
0801e71c g     F .text	0000001c alt_icache_flush_all
080006f0 g     F .text	00000348 sm_process_str
08022414 g     O .rwdata	00000004 alt_priority_mask
0801e788 g     F .text	000000a0 alt_ic_irq_enable
08012d70 g     F .text	00000024 __vfprintf_internal
0801be58 g     F .text	0000005c _wctomb_r
080223cc g     O .rwdata	00000008 Fs
0800c25c g     F .text	000008d0 .hidden __subdf3
08023fc4 g     O .bss	00000008 a0
08023fcc g     O .bss	00000008 alpha
08017710 g     F .text	000000b0 __lo0bits
08004914 g     F .text	0000018c UsbGetConfigDesc1
08022418 g     O .rwdata	00000008 alt_alarm_list
0801e664 g     F .text	0000005c _do_ctors
08023fd4 g     O .bss	00000004 F
08000684 g     F .text	0000006c sm_init
08004450 g     F .text	000000b0 UsbSoftReset
0801bd50 g     F .text	000000d8 wcrtomb
0801cde8 g     F .text	000000d8 close
08004740 g     F .text	000001d4 UsbGetDeviceDesc2
0801d154 g     F .text	00000080 alt_load
0801b988 g     F .text	00000058 fputwc
08024010 g     O .bss	00000814 frequencies
00000000  w      *UND*	00000000 free
08014de8 g     F .text	00000004 __sinit_lock_acquire
08017468 g     F .text	0000013c __multadd
08017440 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000000:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000004:	08406f14 	ori	at,at,444
    jmp r1
 8000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000ec0 	call	80000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000306 	br	8000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)

08000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 8000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 8000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 800009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000e8:	ef80083a 	eret

080000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000ec:	defff904 	addi	sp,sp,-28
 80000f0:	dfc00615 	stw	ra,24(sp)
 80000f4:	df000515 	stw	fp,20(sp)
 80000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 80000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000100:	0005313a 	rdctl	r2,ipending
 8000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000114:	00800044 	movi	r2,1
 8000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800011c:	e0fffb17 	ldw	r3,-20(fp)
 8000120:	e0bffc17 	ldw	r2,-16(fp)
 8000124:	1884703a 	and	r2,r3,r2
 8000128:	10001426 	beq	r2,zero,800017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 800012c:	008200f4 	movhi	r2,2051
 8000130:	10a27b04 	addi	r2,r2,-30228
 8000134:	e0fffd17 	ldw	r3,-12(fp)
 8000138:	180690fa 	slli	r3,r3,3
 800013c:	10c5883a 	add	r2,r2,r3
 8000140:	10c00017 	ldw	r3,0(r2)
 8000144:	008200f4 	movhi	r2,2051
 8000148:	10a27b04 	addi	r2,r2,-30228
 800014c:	e13ffd17 	ldw	r4,-12(fp)
 8000150:	200890fa 	slli	r4,r4,3
 8000154:	1105883a 	add	r2,r2,r4
 8000158:	10800104 	addi	r2,r2,4
 800015c:	10800017 	ldw	r2,0(r2)
 8000160:	1009883a 	mov	r4,r2
 8000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 8000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 800016c:	0005313a 	rdctl	r2,ipending
 8000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000174:	e0bfff17 	ldw	r2,-4(fp)
 8000178:	00000706 	br	8000198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 800017c:	e0bffc17 	ldw	r2,-16(fp)
 8000180:	1085883a 	add	r2,r2,r2
 8000184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 8000188:	e0bffd17 	ldw	r2,-12(fp)
 800018c:	10800044 	addi	r2,r2,1
 8000190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 8000194:	003fe106 	br	800011c <__alt_data_end+0xfc00011c>

    active = alt_irq_pending ();
 8000198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 800019c:	e0bffb17 	ldw	r2,-20(fp)
 80001a0:	103fdb1e 	bne	r2,zero,8000110 <__alt_data_end+0xfc000110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001a4:	0001883a 	nop
}
 80001a8:	e037883a 	mov	sp,fp
 80001ac:	dfc00117 	ldw	ra,4(sp)
 80001b0:	df000017 	ldw	fp,0(sp)
 80001b4:	dec00204 	addi	sp,sp,8
 80001b8:	f800283a 	ret

Disassembly of section .text:

080001bc <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 80001bc:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 80001c0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 80001c4:	068200b4 	movhi	gp,2050
    ori gp, gp, %lo(_gp)
 80001c8:	d6a8f214 	ori	gp,gp,41928
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 80001cc:	008200b4 	movhi	r2,2050
    ori r2, r2, %lo(__bss_start)
 80001d0:	108fd314 	ori	r2,r2,16204

    movhi r3, %hi(__bss_end)
 80001d4:	00c200b4 	movhi	r3,2050
    ori r3, r3, %lo(__bss_end)
 80001d8:	18e2bb14 	ori	r3,r3,35564

    beq r2, r3, 1f
 80001dc:	10c00326 	beq	r2,r3,80001ec <_start+0x30>

0:
    stw zero, (r2)
 80001e0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 80001e4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 80001e8:	10fffd36 	bltu	r2,r3,80001e0 <__alt_data_end+0xfc0001e0>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 80001ec:	801d1540 	call	801d154 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 80001f0:	801d3000 	call	801d300 <alt_main>

080001f4 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 80001f4:	003fff06 	br	80001f4 <__alt_data_end+0xfc0001f4>

080001f8 <handle_keycode>:
#define false 0

char str[6] = {0,0,0,0,0,0}; // can store 5 characters
int i = -1;

void handle_keycode(char key) {
 80001f8:	defffd04 	addi	sp,sp,-12
 80001fc:	dfc00215 	stw	ra,8(sp)
 8000200:	df000115 	stw	fp,4(sp)
 8000204:	df000104 	addi	fp,sp,4
 8000208:	2005883a 	mov	r2,r4
 800020c:	e0bfff05 	stb	r2,-4(fp)
	if (i >= 4 && key != 0x28) // handle out of bounds
 8000210:	d0a00017 	ldw	r2,-32768(gp)
 8000214:	10800110 	cmplti	r2,r2,4
 8000218:	1000041e 	bne	r2,zero,800022c <handle_keycode+0x34>
 800021c:	e0bfff07 	ldb	r2,-4(fp)
 8000220:	10800a20 	cmpeqi	r2,r2,40
 8000224:	1000011e 	bne	r2,zero,800022c <handle_keycode+0x34>
		return;
 8000228:	0000cd06 	br	8000560 <handle_keycode+0x368>
	switch (key) {
 800022c:	e0bfff07 	ldb	r2,-4(fp)
 8000230:	10bffe04 	addi	r2,r2,-8
 8000234:	10c00c28 	cmpgeui	r3,r2,48
 8000238:	1800c91e 	bne	r3,zero,8000560 <handle_keycode+0x368>
 800023c:	100690ba 	slli	r3,r2,2
 8000240:	00820034 	movhi	r2,2048
 8000244:	10809504 	addi	r2,r2,596
 8000248:	1885883a 	add	r2,r3,r2
 800024c:	10800017 	ldw	r2,0(r2)
 8000250:	1000683a 	jmp	r2
 8000254:	08000314 	ori	zero,at,12
 8000258:	08000560 	cmpeqi	zero,at,21
 800025c:	08000560 	cmpeqi	zero,at,21
 8000260:	08000560 	cmpeqi	zero,at,21
 8000264:	08000560 	cmpeqi	zero,at,21
 8000268:	08000560 	cmpeqi	zero,at,21
 800026c:	08000560 	cmpeqi	zero,at,21
 8000270:	08000560 	cmpeqi	zero,at,21
 8000274:	08000560 	cmpeqi	zero,at,21
 8000278:	08000560 	cmpeqi	zero,at,21
 800027c:	08000560 	cmpeqi	zero,at,21
 8000280:	08000560 	cmpeqi	zero,at,21
 8000284:	08000560 	cmpeqi	zero,at,21
 8000288:	08000560 	cmpeqi	zero,at,21
 800028c:	08000560 	cmpeqi	zero,at,21
 8000290:	08000560 	cmpeqi	zero,at,21
 8000294:	08000560 	cmpeqi	zero,at,21
 8000298:	08000560 	cmpeqi	zero,at,21
 800029c:	08000560 	cmpeqi	zero,at,21
 80002a0:	08000560 	cmpeqi	zero,at,21
 80002a4:	08000560 	cmpeqi	zero,at,21
 80002a8:	08000560 	cmpeqi	zero,at,21
 80002ac:	080003b0 	cmpltui	zero,at,14
 80002b0:	080003d4 	ori	zero,at,15
 80002b4:	080003f8 	rdprs	zero,at,15
 80002b8:	0800041c 	xori	zero,at,16
 80002bc:	08000440 	call	800044 <__alt_mem_onchip_memory2_0+0x800044>
 80002c0:	08000464 	muli	zero,at,17
 80002c4:	08000488 	cmpgei	zero,at,18
 80002c8:	080004ac 	andhi	zero,at,18
 80002cc:	080004d0 	cmplti	zero,at,19
 80002d0:	080004f4 	orhi	zero,at,19
 80002d4:	0800035c 	xori	zero,at,13
 80002d8:	08000560 	cmpeqi	zero,at,21
 80002dc:	08000560 	cmpeqi	zero,at,21
 80002e0:	08000560 	cmpeqi	zero,at,21
 80002e4:	08000560 	cmpeqi	zero,at,21
 80002e8:	0800053c 	xorhi	zero,at,20
 80002ec:	08000560 	cmpeqi	zero,at,21
 80002f0:	08000560 	cmpeqi	zero,at,21
 80002f4:	08000560 	cmpeqi	zero,at,21
 80002f8:	08000560 	cmpeqi	zero,at,21
 80002fc:	08000560 	cmpeqi	zero,at,21
 8000300:	08000560 	cmpeqi	zero,at,21
 8000304:	08000560 	cmpeqi	zero,at,21
 8000308:	08000560 	cmpeqi	zero,at,21
 800030c:	08000560 	cmpeqi	zero,at,21
 8000310:	08000518 	cmpnei	zero,at,20
	case 0x08: // 'E'
		if (sm_init()) { // if initialization ran, clear any existing data
 8000314:	80006840 	call	8000684 <sm_init>
 8000318:	10000f26 	beq	r2,zero,8000358 <handle_keycode+0x160>
			for (i = 0; i < 6; i++) {
 800031c:	d0200015 	stw	zero,-32768(gp)
 8000320:	00000706 	br	8000340 <handle_keycode+0x148>
				str[i] = 0;
 8000324:	d0e00017 	ldw	r3,-32768(gp)
 8000328:	d0a6e104 	addi	r2,gp,-25724
 800032c:	1885883a 	add	r2,r3,r2
 8000330:	10000005 	stb	zero,0(r2)
	if (i >= 4 && key != 0x28) // handle out of bounds
		return;
	switch (key) {
	case 0x08: // 'E'
		if (sm_init()) { // if initialization ran, clear any existing data
			for (i = 0; i < 6; i++) {
 8000334:	d0a00017 	ldw	r2,-32768(gp)
 8000338:	10800044 	addi	r2,r2,1
 800033c:	d0a00015 	stw	r2,-32768(gp)
 8000340:	d0a00017 	ldw	r2,-32768(gp)
 8000344:	10800190 	cmplti	r2,r2,6
 8000348:	103ff61e 	bne	r2,zero,8000324 <__alt_data_end+0xfc000324>
				str[i] = 0;
			}
			i = -1;
 800034c:	00bfffc4 	movi	r2,-1
 8000350:	d0a00015 	stw	r2,-32768(gp)
		}
		break;
 8000354:	00008206 	br	8000560 <handle_keycode+0x368>
 8000358:	00008106 	br	8000560 <handle_keycode+0x368>
	case 0x28: // ENTER
		if (i != -1) {
 800035c:	d0a00017 	ldw	r2,-32768(gp)
 8000360:	10bfffe0 	cmpeqi	r2,r2,-1
 8000364:	1000111e 	bne	r2,zero,80003ac <handle_keycode+0x1b4>
			sm_process_str(str);
 8000368:	d126e104 	addi	r4,gp,-25724
 800036c:	80006f00 	call	80006f0 <sm_process_str>
			for (i = 0; i < 6; i++) {
 8000370:	d0200015 	stw	zero,-32768(gp)
 8000374:	00000706 	br	8000394 <handle_keycode+0x19c>
				str[i] = 0;
 8000378:	d0e00017 	ldw	r3,-32768(gp)
 800037c:	d0a6e104 	addi	r2,gp,-25724
 8000380:	1885883a 	add	r2,r3,r2
 8000384:	10000005 	stb	zero,0(r2)
		}
		break;
	case 0x28: // ENTER
		if (i != -1) {
			sm_process_str(str);
			for (i = 0; i < 6; i++) {
 8000388:	d0a00017 	ldw	r2,-32768(gp)
 800038c:	10800044 	addi	r2,r2,1
 8000390:	d0a00015 	stw	r2,-32768(gp)
 8000394:	d0a00017 	ldw	r2,-32768(gp)
 8000398:	10800190 	cmplti	r2,r2,6
 800039c:	103ff61e 	bne	r2,zero,8000378 <__alt_data_end+0xfc000378>
				str[i] = 0;
			}
			i = -1;
 80003a0:	00bfffc4 	movi	r2,-1
 80003a4:	d0a00015 	stw	r2,-32768(gp)
		}
		break;
 80003a8:	00006d06 	br	8000560 <handle_keycode+0x368>
 80003ac:	00006c06 	br	8000560 <handle_keycode+0x368>
	case 0x1e: // '1'
		i++;
 80003b0:	d0a00017 	ldw	r2,-32768(gp)
 80003b4:	10800044 	addi	r2,r2,1
 80003b8:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '1';
 80003bc:	d0e00017 	ldw	r3,-32768(gp)
 80003c0:	d0a6e104 	addi	r2,gp,-25724
 80003c4:	1885883a 	add	r2,r3,r2
 80003c8:	00c00c44 	movi	r3,49
 80003cc:	10c00005 	stb	r3,0(r2)
		break;
 80003d0:	00006306 	br	8000560 <handle_keycode+0x368>
	case 0x1f: // '2'
		i++;
 80003d4:	d0a00017 	ldw	r2,-32768(gp)
 80003d8:	10800044 	addi	r2,r2,1
 80003dc:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '2';
 80003e0:	d0e00017 	ldw	r3,-32768(gp)
 80003e4:	d0a6e104 	addi	r2,gp,-25724
 80003e8:	1885883a 	add	r2,r3,r2
 80003ec:	00c00c84 	movi	r3,50
 80003f0:	10c00005 	stb	r3,0(r2)
		break;
 80003f4:	00005a06 	br	8000560 <handle_keycode+0x368>
	case 0x20: // '3'
		i++;
 80003f8:	d0a00017 	ldw	r2,-32768(gp)
 80003fc:	10800044 	addi	r2,r2,1
 8000400:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '3';
 8000404:	d0e00017 	ldw	r3,-32768(gp)
 8000408:	d0a6e104 	addi	r2,gp,-25724
 800040c:	1885883a 	add	r2,r3,r2
 8000410:	00c00cc4 	movi	r3,51
 8000414:	10c00005 	stb	r3,0(r2)
		break;
 8000418:	00005106 	br	8000560 <handle_keycode+0x368>
	case 0x21: // '4'
		i++;
 800041c:	d0a00017 	ldw	r2,-32768(gp)
 8000420:	10800044 	addi	r2,r2,1
 8000424:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '4';
 8000428:	d0e00017 	ldw	r3,-32768(gp)
 800042c:	d0a6e104 	addi	r2,gp,-25724
 8000430:	1885883a 	add	r2,r3,r2
 8000434:	00c00d04 	movi	r3,52
 8000438:	10c00005 	stb	r3,0(r2)
		break;
 800043c:	00004806 	br	8000560 <handle_keycode+0x368>
	case 0x22: // '5'
		i++;
 8000440:	d0a00017 	ldw	r2,-32768(gp)
 8000444:	10800044 	addi	r2,r2,1
 8000448:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '5';
 800044c:	d0e00017 	ldw	r3,-32768(gp)
 8000450:	d0a6e104 	addi	r2,gp,-25724
 8000454:	1885883a 	add	r2,r3,r2
 8000458:	00c00d44 	movi	r3,53
 800045c:	10c00005 	stb	r3,0(r2)
		break;
 8000460:	00003f06 	br	8000560 <handle_keycode+0x368>
	case 0x23: // '6'
		i++;
 8000464:	d0a00017 	ldw	r2,-32768(gp)
 8000468:	10800044 	addi	r2,r2,1
 800046c:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '6';
 8000470:	d0e00017 	ldw	r3,-32768(gp)
 8000474:	d0a6e104 	addi	r2,gp,-25724
 8000478:	1885883a 	add	r2,r3,r2
 800047c:	00c00d84 	movi	r3,54
 8000480:	10c00005 	stb	r3,0(r2)
		break;
 8000484:	00003606 	br	8000560 <handle_keycode+0x368>
	case 0x24: // '7'
		i++;
 8000488:	d0a00017 	ldw	r2,-32768(gp)
 800048c:	10800044 	addi	r2,r2,1
 8000490:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '7';
 8000494:	d0e00017 	ldw	r3,-32768(gp)
 8000498:	d0a6e104 	addi	r2,gp,-25724
 800049c:	1885883a 	add	r2,r3,r2
 80004a0:	00c00dc4 	movi	r3,55
 80004a4:	10c00005 	stb	r3,0(r2)
		break;
 80004a8:	00002d06 	br	8000560 <handle_keycode+0x368>
	case 0x25: // '8'
		i++;
 80004ac:	d0a00017 	ldw	r2,-32768(gp)
 80004b0:	10800044 	addi	r2,r2,1
 80004b4:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '8';
 80004b8:	d0e00017 	ldw	r3,-32768(gp)
 80004bc:	d0a6e104 	addi	r2,gp,-25724
 80004c0:	1885883a 	add	r2,r3,r2
 80004c4:	00c00e04 	movi	r3,56
 80004c8:	10c00005 	stb	r3,0(r2)
		break;
 80004cc:	00002406 	br	8000560 <handle_keycode+0x368>
	case 0x26: // '9'
		i++;
 80004d0:	d0a00017 	ldw	r2,-32768(gp)
 80004d4:	10800044 	addi	r2,r2,1
 80004d8:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '9';
 80004dc:	d0e00017 	ldw	r3,-32768(gp)
 80004e0:	d0a6e104 	addi	r2,gp,-25724
 80004e4:	1885883a 	add	r2,r3,r2
 80004e8:	00c00e44 	movi	r3,57
 80004ec:	10c00005 	stb	r3,0(r2)
		break;
 80004f0:	00001b06 	br	8000560 <handle_keycode+0x368>
	case 0x27: // '0'
		i++;
 80004f4:	d0a00017 	ldw	r2,-32768(gp)
 80004f8:	10800044 	addi	r2,r2,1
 80004fc:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '0';
 8000500:	d0e00017 	ldw	r3,-32768(gp)
 8000504:	d0a6e104 	addi	r2,gp,-25724
 8000508:	1885883a 	add	r2,r3,r2
 800050c:	00c00c04 	movi	r3,48
 8000510:	10c00005 	stb	r3,0(r2)
		break;
 8000514:	00001206 	br	8000560 <handle_keycode+0x368>
	case 0x37: // '.'
		i++;
 8000518:	d0a00017 	ldw	r2,-32768(gp)
 800051c:	10800044 	addi	r2,r2,1
 8000520:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '.';
 8000524:	d0e00017 	ldw	r3,-32768(gp)
 8000528:	d0a6e104 	addi	r2,gp,-25724
 800052c:	1885883a 	add	r2,r3,r2
 8000530:	00c00b84 	movi	r3,46
 8000534:	10c00005 	stb	r3,0(r2)
		break;
 8000538:	00000906 	br	8000560 <handle_keycode+0x368>
	case 0x2d: // '-'
		i++;
 800053c:	d0a00017 	ldw	r2,-32768(gp)
 8000540:	10800044 	addi	r2,r2,1
 8000544:	d0a00015 	stw	r2,-32768(gp)
		str[i] = '-';
 8000548:	d0e00017 	ldw	r3,-32768(gp)
 800054c:	d0a6e104 	addi	r2,gp,-25724
 8000550:	1885883a 	add	r2,r3,r2
 8000554:	00c00b44 	movi	r3,45
 8000558:	10c00005 	stb	r3,0(r2)
		break;
 800055c:	0001883a 	nop
	}
}
 8000560:	e037883a 	mov	sp,fp
 8000564:	dfc00117 	ldw	ra,4(sp)
 8000568:	df000017 	ldw	fp,0(sp)
 800056c:	dec00204 	addi	sp,sp,8
 8000570:	f800283a 	ret

08000574 <generate_frequencies>:
float frequencies[517] = {0};
int samples[8][517]; // initialize to 0db, aka 191
// Constants, in an attempt to speed up processing
static const float toSample = (float) 32 / 5;

void generate_frequencies() {
 8000574:	defffb04 	addi	sp,sp,-20
 8000578:	dfc00415 	stw	ra,16(sp)
 800057c:	df000315 	stw	fp,12(sp)
 8000580:	df000304 	addi	fp,sp,12
	printf("Generating the frequency range...\n");
 8000584:	010200b4 	movhi	r4,2050
 8000588:	213d7704 	addi	r4,r4,-2596
 800058c:	800d0e00 	call	800d0e0 <puts>
	*to_hw_sig = 7;
 8000590:	00881804 	movi	r2,8288
 8000594:	00c001c4 	movi	r3,7
 8000598:	10c00005 	stb	r3,0(r2)
	int i;
	const double log20 = log10(20);
 800059c:	00b50a34 	movhi	r2,54312
 80005a0:	10b7a004 	addi	r2,r2,-8576
 80005a4:	e0bffe15 	stw	r2,-8(fp)
 80005a8:	008ffd74 	movhi	r2,16373
 80005ac:	10b44104 	addi	r2,r2,-12028
 80005b0:	e0bfff15 	stw	r2,-4(fp)
	for (i = 0; i < 517; i++) {
 80005b4:	e03ffd15 	stw	zero,-12(fp)
 80005b8:	00002a06 	br	8000664 <generate_frequencies+0xf0>
		frequencies[i] = pow(10, ((float) i / 172) + log20);
 80005bc:	e13ffd17 	ldw	r4,-12(fp)
 80005c0:	800a45c0 	call	800a45c <__floatsisf>
 80005c4:	1007883a 	mov	r3,r2
 80005c8:	1809883a 	mov	r4,r3
 80005cc:	0150cb34 	movhi	r5,17196
 80005d0:	800a00c0 	call	800a00c <__divsf3>
 80005d4:	1007883a 	mov	r3,r2
 80005d8:	1805883a 	mov	r2,r3
 80005dc:	1009883a 	mov	r4,r2
 80005e0:	800cc840 	call	800cc84 <__extendsfdf2>
 80005e4:	100b883a 	mov	r5,r2
 80005e8:	180d883a 	mov	r6,r3
 80005ec:	2809883a 	mov	r4,r5
 80005f0:	300b883a 	mov	r5,r6
 80005f4:	e1bffe17 	ldw	r6,-8(fp)
 80005f8:	e1ffff17 	ldw	r7,-4(fp)
 80005fc:	800a5900 	call	800a590 <__adddf3>
 8000600:	1009883a 	mov	r4,r2
 8000604:	180b883a 	mov	r5,r3
 8000608:	2005883a 	mov	r2,r4
 800060c:	2807883a 	mov	r3,r5
 8000610:	0009883a 	mov	r4,zero
 8000614:	01500934 	movhi	r5,16420
 8000618:	100d883a 	mov	r6,r2
 800061c:	180f883a 	mov	r7,r3
 8000620:	80059780 	call	8005978 <pow>
 8000624:	100b883a 	mov	r5,r2
 8000628:	180d883a 	mov	r6,r3
 800062c:	2809883a 	mov	r4,r5
 8000630:	300b883a 	mov	r5,r6
 8000634:	800cd940 	call	800cd94 <__truncdfsf2>
 8000638:	1009883a 	mov	r4,r2
 800063c:	008200b4 	movhi	r2,2050
 8000640:	10900404 	addi	r2,r2,16400
 8000644:	e0fffd17 	ldw	r3,-12(fp)
 8000648:	18c7883a 	add	r3,r3,r3
 800064c:	18c7883a 	add	r3,r3,r3
 8000650:	10c5883a 	add	r2,r2,r3
 8000654:	11000015 	stw	r4,0(r2)
void generate_frequencies() {
	printf("Generating the frequency range...\n");
	*to_hw_sig = 7;
	int i;
	const double log20 = log10(20);
	for (i = 0; i < 517; i++) {
 8000658:	e0bffd17 	ldw	r2,-12(fp)
 800065c:	10800044 	addi	r2,r2,1
 8000660:	e0bffd15 	stw	r2,-12(fp)
 8000664:	e0bffd17 	ldw	r2,-12(fp)
 8000668:	10808150 	cmplti	r2,r2,517
 800066c:	103fd31e 	bne	r2,zero,80005bc <__alt_data_end+0xfc0005bc>
		frequencies[i] = pow(10, ((float) i / 172) + log20);
	}
}
 8000670:	e037883a 	mov	sp,fp
 8000674:	dfc00117 	ldw	ra,4(sp)
 8000678:	df000017 	ldw	fp,0(sp)
 800067c:	dec00204 	addi	sp,sp,8
 8000680:	f800283a 	ret

08000684 <sm_init>:

// return 1 if anything was done, 0 otherwise
int sm_init() {
 8000684:	defffe04 	addi	sp,sp,-8
 8000688:	dfc00115 	stw	ra,4(sp)
 800068c:	df000015 	stw	fp,0(sp)
 8000690:	d839883a 	mov	fp,sp
	if (state == 0) {
 8000694:	d0a6e317 	ldw	r2,-25716(gp)
 8000698:	10000f1e 	bne	r2,zero,80006d8 <sm_init+0x54>
		printf("Select biquad #1-8 then press [ENTER]\n");
 800069c:	010200b4 	movhi	r4,2050
 80006a0:	213d8004 	addi	r4,r4,-2560
 80006a4:	800d0e00 	call	800d0e0 <puts>
		biquad = 0;
 80006a8:	d026f215 	stw	zero,-25656(gp)
		*to_hw_sig =  8;
 80006ac:	00881804 	movi	r2,8288
 80006b0:	00c00204 	movi	r3,8
 80006b4:	10c00005 	stb	r3,0(r2)
		F = 0;
 80006b8:	d0270315 	stw	zero,-25588(gp)
		Q = 0;
 80006bc:	d026ea15 	stw	zero,-25688(gp)
 80006c0:	d0a6eb04 	addi	r2,gp,-25684
 80006c4:	10000015 	stw	zero,0(r2)
		state = 1;
 80006c8:	00800044 	movi	r2,1
 80006cc:	d0a6e315 	stw	r2,-25716(gp)
		return 1;
 80006d0:	00800044 	movi	r2,1
 80006d4:	00000106 	br	80006dc <sm_init+0x58>
	}
	return 0;
 80006d8:	0005883a 	mov	r2,zero
}
 80006dc:	e037883a 	mov	sp,fp
 80006e0:	dfc00117 	ldw	ra,4(sp)
 80006e4:	df000017 	ldw	fp,0(sp)
 80006e8:	dec00204 	addi	sp,sp,8
 80006ec:	f800283a 	ret

080006f0 <sm_process_str>:

void sm_process_str(char* str) {
 80006f0:	defffd04 	addi	sp,sp,-12
 80006f4:	dfc00215 	stw	ra,8(sp)
 80006f8:	df000115 	stw	fp,4(sp)
 80006fc:	df000104 	addi	fp,sp,4
 8000700:	e13fff15 	stw	r4,-4(fp)
	switch (state) {
 8000704:	d0a6e317 	ldw	r2,-25716(gp)
 8000708:	10c001a8 	cmpgeui	r3,r2,6
 800070c:	1800c51e 	bne	r3,zero,8000a24 <sm_process_str+0x334>
 8000710:	100690ba 	slli	r3,r2,2
 8000714:	00820034 	movhi	r2,2048
 8000718:	1081ca04 	addi	r2,r2,1832
 800071c:	1885883a 	add	r2,r3,r2
 8000720:	10800017 	ldw	r2,0(r2)
 8000724:	1000683a 	jmp	r2
 8000728:	08000a24 	muli	zero,at,40
 800072c:	08000740 	call	800074 <__alt_mem_onchip_memory2_0+0x800074>
 8000730:	080007d8 	cmpnei	zero,at,31
 8000734:	08000840 	call	800084 <__alt_mem_onchip_memory2_0+0x800084>
 8000738:	080008ac 	andhi	zero,at,34
 800073c:	08000988 	cmpgei	zero,at,38
	case 1:
		int_in = atoi(str);
 8000740:	e13fff17 	ldw	r4,-4(fp)
 8000744:	800cf980 	call	800cf98 <atoi>
 8000748:	d0a6e915 	stw	r2,-25692(gp)
		if (int_in >= 1 && int_in <= 9) {
 800074c:	d0a6e917 	ldw	r2,-25692(gp)
 8000750:	00801d0e 	bge	zero,r2,80007c8 <sm_process_str+0xd8>
 8000754:	d0a6e917 	ldw	r2,-25692(gp)
 8000758:	10800288 	cmpgei	r2,r2,10
 800075c:	10001a1e 	bne	r2,zero,80007c8 <sm_process_str+0xd8>
			biquad = int_in;
 8000760:	d0a6e917 	ldw	r2,-25692(gp)
 8000764:	d0a6f215 	stw	r2,-25656(gp)
			printf("Pick the type of filter then press [ENTER]\n");
 8000768:	010200b4 	movhi	r4,2050
 800076c:	213d8a04 	addi	r4,r4,-2520
 8000770:	800d0e00 	call	800d0e0 <puts>
			printf("1: Peak EQ\n");
 8000774:	010200b4 	movhi	r4,2050
 8000778:	213d9504 	addi	r4,r4,-2476
 800077c:	800d0e00 	call	800d0e0 <puts>
			printf("2: Low Shelf\n");
 8000780:	010200b4 	movhi	r4,2050
 8000784:	213d9804 	addi	r4,r4,-2464
 8000788:	800d0e00 	call	800d0e0 <puts>
			printf("3: High Shelf\n");
 800078c:	010200b4 	movhi	r4,2050
 8000790:	213d9c04 	addi	r4,r4,-2448
 8000794:	800d0e00 	call	800d0e0 <puts>
			printf("4: Low Pass\n");
 8000798:	010200b4 	movhi	r4,2050
 800079c:	213da004 	addi	r4,r4,-2432
 80007a0:	800d0e00 	call	800d0e0 <puts>
			printf("5: High Pass\n");
 80007a4:	010200b4 	movhi	r4,2050
 80007a8:	213da304 	addi	r4,r4,-2420
 80007ac:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 15;
 80007b0:	00881804 	movi	r2,8288
 80007b4:	00c003c4 	movi	r3,15
 80007b8:	10c00005 	stb	r3,0(r2)
			state = 2;
 80007bc:	00800084 	movi	r2,2
 80007c0:	d0a6e315 	stw	r2,-25716(gp)
		} else {
			printf("Please select a biquad in the range 1 to 8 then press [ENTER]\n");
		}
		break;
 80007c4:	00009706 	br	8000a24 <sm_process_str+0x334>
			printf("4: Low Pass\n");
			printf("5: High Pass\n");
			*to_hw_sig = 15;
			state = 2;
		} else {
			printf("Please select a biquad in the range 1 to 8 then press [ENTER]\n");
 80007c8:	010200b4 	movhi	r4,2050
 80007cc:	213da704 	addi	r4,r4,-2404
 80007d0:	800d0e00 	call	800d0e0 <puts>
		}
		break;
 80007d4:	00009306 	br	8000a24 <sm_process_str+0x334>
	case 2:
		int_in = atoi(str);
 80007d8:	e13fff17 	ldw	r4,-4(fp)
 80007dc:	800cf980 	call	800cf98 <atoi>
 80007e0:	d0a6e915 	stw	r2,-25692(gp)
		if (int_in >= 1 && int_in <= 5) {
 80007e4:	d0a6e917 	ldw	r2,-25692(gp)
 80007e8:	00800e0e 	bge	zero,r2,8000824 <sm_process_str+0x134>
 80007ec:	d0a6e917 	ldw	r2,-25692(gp)
 80007f0:	10800188 	cmpgei	r2,r2,6
 80007f4:	10000b1e 	bne	r2,zero,8000824 <sm_process_str+0x134>
			type = int_in;
 80007f8:	d0a6e917 	ldw	r2,-25692(gp)
 80007fc:	d0a6e615 	stw	r2,-25704(gp)
			printf("Enter the Center Frequency (F) then press [ENTER]\n");
 8000800:	010200b4 	movhi	r4,2050
 8000804:	213db704 	addi	r4,r4,-2340
 8000808:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 14;
 800080c:	00881804 	movi	r2,8288
 8000810:	00c00384 	movi	r3,14
 8000814:	10c00005 	stb	r3,0(r2)
			state = 3;
 8000818:	008000c4 	movi	r2,3
 800081c:	d0a6e315 	stw	r2,-25716(gp)
		} else {
			printf("Please select a filter in the range 1 to 5 then press [ENTER]\n");
			*to_hw_sig = 13;
		}
		break;
 8000820:	00008006 	br	8000a24 <sm_process_str+0x334>
			type = int_in;
			printf("Enter the Center Frequency (F) then press [ENTER]\n");
			*to_hw_sig = 14;
			state = 3;
		} else {
			printf("Please select a filter in the range 1 to 5 then press [ENTER]\n");
 8000824:	010200b4 	movhi	r4,2050
 8000828:	213dc404 	addi	r4,r4,-2288
 800082c:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 13;
 8000830:	00881804 	movi	r2,8288
 8000834:	00c00344 	movi	r3,13
 8000838:	10c00005 	stb	r3,0(r2)
		}
		break;
 800083c:	00007906 	br	8000a24 <sm_process_str+0x334>
	case 3:
		int_in = atoi(str);
 8000840:	e13fff17 	ldw	r4,-4(fp)
 8000844:	800cf980 	call	800cf98 <atoi>
 8000848:	d0a6e915 	stw	r2,-25692(gp)
		if (int_in >= 20 && int_in <= 20000) {
 800084c:	d0a6e917 	ldw	r2,-25692(gp)
 8000850:	10800510 	cmplti	r2,r2,20
 8000854:	10000e1e 	bne	r2,zero,8000890 <sm_process_str+0x1a0>
 8000858:	d0a6e917 	ldw	r2,-25692(gp)
 800085c:	10938848 	cmpgei	r2,r2,20001
 8000860:	10000b1e 	bne	r2,zero,8000890 <sm_process_str+0x1a0>
			F = int_in;
 8000864:	d0a6e917 	ldw	r2,-25692(gp)
 8000868:	d0a70315 	stw	r2,-25588(gp)
			printf("Input the Q factor then press [ENTER]\n");
 800086c:	010200b4 	movhi	r4,2050
 8000870:	213dd404 	addi	r4,r4,-2224
 8000874:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 12;
 8000878:	00881804 	movi	r2,8288
 800087c:	00c00304 	movi	r3,12
 8000880:	10c00005 	stb	r3,0(r2)
			state = 4;
 8000884:	00800104 	movi	r2,4
 8000888:	d0a6e315 	stw	r2,-25716(gp)
		} else {
			printf("Please select a center frequency between 20 and 20,000 then press [ENTER]\n");
			*to_hw_sig = 11;
		}
		break;
 800088c:	00006506 	br	8000a24 <sm_process_str+0x334>
			F = int_in;
			printf("Input the Q factor then press [ENTER]\n");
			*to_hw_sig = 12;
			state = 4;
		} else {
			printf("Please select a center frequency between 20 and 20,000 then press [ENTER]\n");
 8000890:	010200b4 	movhi	r4,2050
 8000894:	213dde04 	addi	r4,r4,-2184
 8000898:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 11;
 800089c:	00881804 	movi	r2,8288
 80008a0:	00c002c4 	movi	r3,11
 80008a4:	10c00005 	stb	r3,0(r2)
		}
		break;
 80008a8:	00005e06 	br	8000a24 <sm_process_str+0x334>
	case 4:
		double_in = atof(str);
 80008ac:	e13fff17 	ldw	r4,-4(fp)
 80008b0:	800cf900 	call	800cf90 <atof>
 80008b4:	1009883a 	mov	r4,r2
 80008b8:	180b883a 	mov	r5,r3
 80008bc:	d126f715 	stw	r4,-25636(gp)
 80008c0:	d0a6f804 	addi	r2,gp,-25632
 80008c4:	11400015 	stw	r5,0(r2)
		if (double_in >= 0 && double_in < 20) {
 80008c8:	d0a6f717 	ldw	r2,-25636(gp)
 80008cc:	d126f804 	addi	r4,gp,-25632
 80008d0:	20c00017 	ldw	r3,0(r4)
 80008d4:	1009883a 	mov	r4,r2
 80008d8:	180b883a 	mov	r5,r3
 80008dc:	000d883a 	mov	r6,zero
 80008e0:	000f883a 	mov	r7,zero
 80008e4:	800b8300 	call	800b830 <__gedf2>
 80008e8:	10001f16 	blt	r2,zero,8000968 <sm_process_str+0x278>
 80008ec:	d0a6f717 	ldw	r2,-25636(gp)
 80008f0:	d126f804 	addi	r4,gp,-25632
 80008f4:	20c00017 	ldw	r3,0(r4)
 80008f8:	1009883a 	mov	r4,r2
 80008fc:	180b883a 	mov	r5,r3
 8000900:	000d883a 	mov	r6,zero
 8000904:	01d00d34 	movhi	r7,16436
 8000908:	800b9100 	call	800b910 <__ledf2>
 800090c:	1000160e 	bge	r2,zero,8000968 <sm_process_str+0x278>
			Q = double_in;
 8000910:	d0a6f717 	ldw	r2,-25636(gp)
 8000914:	d126f804 	addi	r4,gp,-25632
 8000918:	20c00017 	ldw	r3,0(r4)
 800091c:	d0a6ea15 	stw	r2,-25688(gp)
 8000920:	d126eb04 	addi	r4,gp,-25684
 8000924:	20c00015 	stw	r3,0(r4)
			if (type >= 1 && type <= 3) { // these filters need a gain
 8000928:	d0a6e617 	ldw	r2,-25704(gp)
 800092c:	00800c0e 	bge	zero,r2,8000960 <sm_process_str+0x270>
 8000930:	d0a6e617 	ldw	r2,-25704(gp)
 8000934:	10800108 	cmpgei	r2,r2,4
 8000938:	1000091e 	bne	r2,zero,8000960 <sm_process_str+0x270>
				printf("Enter the gain of the filter then press [ENTER]\n");
 800093c:	010200b4 	movhi	r4,2050
 8000940:	213df104 	addi	r4,r4,-2108
 8000944:	800d0e00 	call	800d0e0 <puts>
				*to_hw_sig = 10;
 8000948:	00881804 	movi	r2,8288
 800094c:	00c00284 	movi	r3,10
 8000950:	10c00005 	stb	r3,0(r2)
				state = 5;
 8000954:	00800144 	movi	r2,5
 8000958:	d0a6e315 	stw	r2,-25716(gp)
		break;
	case 4:
		double_in = atof(str);
		if (double_in >= 0 && double_in < 20) {
			Q = double_in;
			if (type >= 1 && type <= 3) { // these filters need a gain
 800095c:	00000906 	br	8000984 <sm_process_str+0x294>
				printf("Enter the gain of the filter then press [ENTER]\n");
				*to_hw_sig = 10;
				state = 5;
			} else {
				process_filter();
 8000960:	8000a380 	call	8000a38 <process_filter>
		break;
	case 4:
		double_in = atof(str);
		if (double_in >= 0 && double_in < 20) {
			Q = double_in;
			if (type >= 1 && type <= 3) { // these filters need a gain
 8000964:	00000706 	br	8000984 <sm_process_str+0x294>
				state = 5;
			} else {
				process_filter();
			}
		} else {
			printf("Please select a non-negative Q factor less than 20 then press [ENTER]\n");
 8000968:	010200b4 	movhi	r4,2050
 800096c:	213dfd04 	addi	r4,r4,-2060
 8000970:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 9;
 8000974:	00881804 	movi	r2,8288
 8000978:	00c00244 	movi	r3,9
 800097c:	10c00005 	stb	r3,0(r2)
		}
		break;
 8000980:	00002806 	br	8000a24 <sm_process_str+0x334>
 8000984:	00002706 	br	8000a24 <sm_process_str+0x334>
	case 5:
		double_in = atof(str);
 8000988:	e13fff17 	ldw	r4,-4(fp)
 800098c:	800cf900 	call	800cf90 <atof>
 8000990:	1009883a 	mov	r4,r2
 8000994:	180b883a 	mov	r5,r3
 8000998:	d126f715 	stw	r4,-25636(gp)
 800099c:	d0a6f804 	addi	r2,gp,-25632
 80009a0:	11400015 	stw	r5,0(r2)
		if (double_in >= -20 && double_in <= 20) {
 80009a4:	d0a6f717 	ldw	r2,-25636(gp)
 80009a8:	d126f804 	addi	r4,gp,-25632
 80009ac:	20c00017 	ldw	r3,0(r4)
 80009b0:	1009883a 	mov	r4,r2
 80009b4:	180b883a 	mov	r5,r3
 80009b8:	000d883a 	mov	r6,zero
 80009bc:	01f00d34 	movhi	r7,49204
 80009c0:	800b8300 	call	800b830 <__gedf2>
 80009c4:	10001116 	blt	r2,zero,8000a0c <sm_process_str+0x31c>
 80009c8:	d0a6f717 	ldw	r2,-25636(gp)
 80009cc:	d126f804 	addi	r4,gp,-25632
 80009d0:	20c00017 	ldw	r3,0(r4)
 80009d4:	1009883a 	mov	r4,r2
 80009d8:	180b883a 	mov	r5,r3
 80009dc:	000d883a 	mov	r6,zero
 80009e0:	01d00d34 	movhi	r7,16436
 80009e4:	800b9100 	call	800b910 <__ledf2>
 80009e8:	00800816 	blt	zero,r2,8000a0c <sm_process_str+0x31c>
			G = double_in;
 80009ec:	d0a6f717 	ldw	r2,-25636(gp)
 80009f0:	d126f804 	addi	r4,gp,-25632
 80009f4:	20c00017 	ldw	r3,0(r4)
 80009f8:	d0a6f315 	stw	r2,-25652(gp)
 80009fc:	d126f404 	addi	r4,gp,-25648
 8000a00:	20c00015 	stw	r3,0(r4)
			process_filter();
 8000a04:	8000a380 	call	8000a38 <process_filter>
 8000a08:	00000606 	br	8000a24 <sm_process_str+0x334>
		} else {
			printf("Please select a gain in the range -20db to 20db then press [ENTER]\n");
 8000a0c:	010200b4 	movhi	r4,2050
 8000a10:	213e0f04 	addi	r4,r4,-1988
 8000a14:	800d0e00 	call	800d0e0 <puts>
			*to_hw_sig = 8;
 8000a18:	00881804 	movi	r2,8288
 8000a1c:	00c00204 	movi	r3,8
 8000a20:	10c00005 	stb	r3,0(r2)
		}
	}
}
 8000a24:	e037883a 	mov	sp,fp
 8000a28:	dfc00117 	ldw	ra,4(sp)
 8000a2c:	df000017 	ldw	fp,0(sp)
 8000a30:	dec00204 	addi	sp,sp,8
 8000a34:	f800283a 	ret

08000a38 <process_filter>:

void process_filter() {
 8000a38:	deffcb04 	addi	sp,sp,-212
 8000a3c:	dfc03415 	stw	ra,208(sp)
 8000a40:	df003315 	stw	fp,204(sp)
 8000a44:	ddc03215 	stw	r23,200(sp)
 8000a48:	dd803115 	stw	r22,196(sp)
 8000a4c:	dd403015 	stw	r21,192(sp)
 8000a50:	dd002f15 	stw	r20,188(sp)
 8000a54:	dcc02e15 	stw	r19,184(sp)
 8000a58:	dc802d15 	stw	r18,180(sp)
 8000a5c:	dc402c15 	stw	r17,176(sp)
 8000a60:	dc002b15 	stw	r16,172(sp)
 8000a64:	df003304 	addi	fp,sp,204
	printf("Processing filter... \n");
 8000a68:	010200b4 	movhi	r4,2050
 8000a6c:	213e2004 	addi	r4,r4,-1920
 8000a70:	800d0e00 	call	800d0e0 <puts>
	printf("Biquad %d, Type: %d, F: %d, Q: %f, G: %f\n", biquad, type, F, Q, G);
 8000a74:	d266f217 	ldw	r9,-25656(gp)
 8000a78:	d226e617 	ldw	r8,-25704(gp)
 8000a7c:	d1e70317 	ldw	r7,-25588(gp)
 8000a80:	d126ea17 	ldw	r4,-25688(gp)
 8000a84:	d0a6eb04 	addi	r2,gp,-25684
 8000a88:	11400017 	ldw	r5,0(r2)
 8000a8c:	d0a6f317 	ldw	r2,-25652(gp)
 8000a90:	d1a6f404 	addi	r6,gp,-25648
 8000a94:	30c00017 	ldw	r3,0(r6)
 8000a98:	d9000015 	stw	r4,0(sp)
 8000a9c:	d9400115 	stw	r5,4(sp)
 8000aa0:	d8800215 	stw	r2,8(sp)
 8000aa4:	d8c00315 	stw	r3,12(sp)
 8000aa8:	010200b4 	movhi	r4,2050
 8000aac:	213e2604 	addi	r4,r4,-1896
 8000ab0:	480b883a 	mov	r5,r9
 8000ab4:	400d883a 	mov	r6,r8
 8000ab8:	800cfec0 	call	800cfec <printf>

	A = pow(10, G / 40);
 8000abc:	d0a6f317 	ldw	r2,-25652(gp)
 8000ac0:	d126f404 	addi	r4,gp,-25648
 8000ac4:	20c00017 	ldw	r3,0(r4)
 8000ac8:	1009883a 	mov	r4,r2
 8000acc:	180b883a 	mov	r5,r3
 8000ad0:	000d883a 	mov	r6,zero
 8000ad4:	01d01134 	movhi	r7,16452
 8000ad8:	800ae2c0 	call	800ae2c <__divdf3>
 8000adc:	1009883a 	mov	r4,r2
 8000ae0:	180b883a 	mov	r5,r3
 8000ae4:	2005883a 	mov	r2,r4
 8000ae8:	2807883a 	mov	r3,r5
 8000aec:	0009883a 	mov	r4,zero
 8000af0:	01500934 	movhi	r5,16420
 8000af4:	100d883a 	mov	r6,r2
 8000af8:	180f883a 	mov	r7,r3
 8000afc:	80059780 	call	8005978 <pow>
 8000b00:	1009883a 	mov	r4,r2
 8000b04:	180b883a 	mov	r5,r3
 8000b08:	d126e715 	stw	r4,-25700(gp)
 8000b0c:	d0a6e804 	addi	r2,gp,-25696
 8000b10:	11400015 	stw	r5,0(r2)
	w0 = 2*M_PI*((double)F / Fs);
 8000b14:	d0a70317 	ldw	r2,-25588(gp)
 8000b18:	1009883a 	mov	r4,r2
 8000b1c:	800cbb40 	call	800cbb4 <__floatsidf>
 8000b20:	100b883a 	mov	r5,r2
 8000b24:	180d883a 	mov	r6,r3
 8000b28:	d0a00117 	ldw	r2,-32764(gp)
 8000b2c:	d1200204 	addi	r4,gp,-32760
 8000b30:	20c00017 	ldw	r3,0(r4)
 8000b34:	2809883a 	mov	r4,r5
 8000b38:	300b883a 	mov	r5,r6
 8000b3c:	100d883a 	mov	r6,r2
 8000b40:	180f883a 	mov	r7,r3
 8000b44:	800ae2c0 	call	800ae2c <__divdf3>
 8000b48:	1009883a 	mov	r4,r2
 8000b4c:	180b883a 	mov	r5,r3
 8000b50:	2005883a 	mov	r2,r4
 8000b54:	2807883a 	mov	r3,r5
 8000b58:	1009883a 	mov	r4,r2
 8000b5c:	180b883a 	mov	r5,r3
 8000b60:	01951134 	movhi	r6,21572
 8000b64:	318b4604 	addi	r6,r6,11544
 8000b68:	01d00674 	movhi	r7,16409
 8000b6c:	39c87ec4 	addi	r7,r7,8699
 8000b70:	800b9f00 	call	800b9f0 <__muldf3>
 8000b74:	1009883a 	mov	r4,r2
 8000b78:	180b883a 	mov	r5,r3
 8000b7c:	2005883a 	mov	r2,r4
 8000b80:	2807883a 	mov	r3,r5
 8000b84:	d0a6f015 	stw	r2,-25664(gp)
 8000b88:	d126f104 	addi	r4,gp,-25660
 8000b8c:	20c00015 	stw	r3,0(r4)
	alpha = sin(w0)/(2 * Q);
 8000b90:	d0a6f017 	ldw	r2,-25664(gp)
 8000b94:	d126f104 	addi	r4,gp,-25660
 8000b98:	20c00017 	ldw	r3,0(r4)
 8000b9c:	1009883a 	mov	r4,r2
 8000ba0:	180b883a 	mov	r5,r3
 8000ba4:	80056ec0 	call	80056ec <sin>
 8000ba8:	e0bfe415 	stw	r2,-112(fp)
 8000bac:	e0ffe515 	stw	r3,-108(fp)
 8000bb0:	d0a6ea17 	ldw	r2,-25688(gp)
 8000bb4:	d126eb04 	addi	r4,gp,-25684
 8000bb8:	20c00017 	ldw	r3,0(r4)
 8000bbc:	1009883a 	mov	r4,r2
 8000bc0:	180b883a 	mov	r5,r3
 8000bc4:	100d883a 	mov	r6,r2
 8000bc8:	180f883a 	mov	r7,r3
 8000bcc:	800a5900 	call	800a590 <__adddf3>
 8000bd0:	1009883a 	mov	r4,r2
 8000bd4:	180b883a 	mov	r5,r3
 8000bd8:	2005883a 	mov	r2,r4
 8000bdc:	2807883a 	mov	r3,r5
 8000be0:	e13fe417 	ldw	r4,-112(fp)
 8000be4:	e17fe517 	ldw	r5,-108(fp)
 8000be8:	100d883a 	mov	r6,r2
 8000bec:	180f883a 	mov	r7,r3
 8000bf0:	800ae2c0 	call	800ae2c <__divdf3>
 8000bf4:	1009883a 	mov	r4,r2
 8000bf8:	180b883a 	mov	r5,r3
 8000bfc:	2005883a 	mov	r2,r4
 8000c00:	2807883a 	mov	r3,r5
 8000c04:	d0a70115 	stw	r2,-25596(gp)
 8000c08:	d1270204 	addi	r4,gp,-25592
 8000c0c:	20c00015 	stw	r3,0(r4)
	if (type == 1) // PeakEQ
 8000c10:	d0a6e617 	ldw	r2,-25704(gp)
 8000c14:	10800058 	cmpnei	r2,r2,1
 8000c18:	10001c1e 	bne	r2,zero,8000c8c <process_filter+0x254>
		a0 = 1 + (alpha / A);
 8000c1c:	d1670117 	ldw	r5,-25596(gp)
 8000c20:	d0a70204 	addi	r2,gp,-25592
 8000c24:	11800017 	ldw	r6,0(r2)
 8000c28:	d0a6e717 	ldw	r2,-25700(gp)
 8000c2c:	d126e804 	addi	r4,gp,-25696
 8000c30:	20c00017 	ldw	r3,0(r4)
 8000c34:	2809883a 	mov	r4,r5
 8000c38:	300b883a 	mov	r5,r6
 8000c3c:	100d883a 	mov	r6,r2
 8000c40:	180f883a 	mov	r7,r3
 8000c44:	800ae2c0 	call	800ae2c <__divdf3>
 8000c48:	1009883a 	mov	r4,r2
 8000c4c:	180b883a 	mov	r5,r3
 8000c50:	2005883a 	mov	r2,r4
 8000c54:	2807883a 	mov	r3,r5
 8000c58:	1009883a 	mov	r4,r2
 8000c5c:	180b883a 	mov	r5,r3
 8000c60:	000d883a 	mov	r6,zero
 8000c64:	01cffc34 	movhi	r7,16368
 8000c68:	800a5900 	call	800a590 <__adddf3>
 8000c6c:	1009883a 	mov	r4,r2
 8000c70:	180b883a 	mov	r5,r3
 8000c74:	2005883a 	mov	r2,r4
 8000c78:	2807883a 	mov	r3,r5
 8000c7c:	d0a6ff15 	stw	r2,-25604(gp)
 8000c80:	d1270004 	addi	r4,gp,-25600
 8000c84:	20c00015 	stw	r3,0(r4)
 8000c88:	0000d306 	br	8000fd8 <process_filter+0x5a0>
	else if (type == 2) // Low Shelf
 8000c8c:	d0a6e617 	ldw	r2,-25704(gp)
 8000c90:	10800098 	cmpnei	r2,r2,2
 8000c94:	10005c1e 	bne	r2,zero,8000e08 <process_filter+0x3d0>
		a0 = (A + 1) + ((A - 1) * cos(w0)) + (2 * sqrt(A) * alpha);
 8000c98:	d0a6e717 	ldw	r2,-25700(gp)
 8000c9c:	d126e804 	addi	r4,gp,-25696
 8000ca0:	20c00017 	ldw	r3,0(r4)
 8000ca4:	1009883a 	mov	r4,r2
 8000ca8:	180b883a 	mov	r5,r3
 8000cac:	000d883a 	mov	r6,zero
 8000cb0:	01cffc34 	movhi	r7,16368
 8000cb4:	800a5900 	call	800a590 <__adddf3>
 8000cb8:	1009883a 	mov	r4,r2
 8000cbc:	180b883a 	mov	r5,r3
 8000cc0:	e13fe615 	stw	r4,-104(fp)
 8000cc4:	e17fe715 	stw	r5,-100(fp)
 8000cc8:	d0a6e717 	ldw	r2,-25700(gp)
 8000ccc:	d126e804 	addi	r4,gp,-25696
 8000cd0:	20c00017 	ldw	r3,0(r4)
 8000cd4:	1009883a 	mov	r4,r2
 8000cd8:	180b883a 	mov	r5,r3
 8000cdc:	000d883a 	mov	r6,zero
 8000ce0:	01cffc34 	movhi	r7,16368
 8000ce4:	800c25c0 	call	800c25c <__subdf3>
 8000ce8:	1009883a 	mov	r4,r2
 8000cec:	180b883a 	mov	r5,r3
 8000cf0:	e13fe815 	stw	r4,-96(fp)
 8000cf4:	e17fe915 	stw	r5,-92(fp)
 8000cf8:	d0a6f017 	ldw	r2,-25664(gp)
 8000cfc:	d126f104 	addi	r4,gp,-25660
 8000d00:	20c00017 	ldw	r3,0(r4)
 8000d04:	1009883a 	mov	r4,r2
 8000d08:	180b883a 	mov	r5,r3
 8000d0c:	80054fc0 	call	80054fc <cos>
 8000d10:	100f883a 	mov	r7,r2
 8000d14:	1811883a 	mov	r8,r3
 8000d18:	e13fe817 	ldw	r4,-96(fp)
 8000d1c:	e17fe917 	ldw	r5,-92(fp)
 8000d20:	380d883a 	mov	r6,r7
 8000d24:	400f883a 	mov	r7,r8
 8000d28:	800b9f00 	call	800b9f0 <__muldf3>
 8000d2c:	1009883a 	mov	r4,r2
 8000d30:	180b883a 	mov	r5,r3
 8000d34:	2005883a 	mov	r2,r4
 8000d38:	2807883a 	mov	r3,r5
 8000d3c:	e13fe617 	ldw	r4,-104(fp)
 8000d40:	e17fe717 	ldw	r5,-100(fp)
 8000d44:	100d883a 	mov	r6,r2
 8000d48:	180f883a 	mov	r7,r3
 8000d4c:	800a5900 	call	800a590 <__adddf3>
 8000d50:	1009883a 	mov	r4,r2
 8000d54:	180b883a 	mov	r5,r3
 8000d58:	e13fea15 	stw	r4,-88(fp)
 8000d5c:	e17feb15 	stw	r5,-84(fp)
 8000d60:	d0a6e717 	ldw	r2,-25700(gp)
 8000d64:	d126e804 	addi	r4,gp,-25696
 8000d68:	20c00017 	ldw	r3,0(r4)
 8000d6c:	1009883a 	mov	r4,r2
 8000d70:	180b883a 	mov	r5,r3
 8000d74:	8005e1c0 	call	8005e1c <sqrt>
 8000d78:	100f883a 	mov	r7,r2
 8000d7c:	1811883a 	mov	r8,r3
 8000d80:	3809883a 	mov	r4,r7
 8000d84:	400b883a 	mov	r5,r8
 8000d88:	380d883a 	mov	r6,r7
 8000d8c:	400f883a 	mov	r7,r8
 8000d90:	800a5900 	call	800a590 <__adddf3>
 8000d94:	100f883a 	mov	r7,r2
 8000d98:	1811883a 	mov	r8,r3
 8000d9c:	380b883a 	mov	r5,r7
 8000da0:	400d883a 	mov	r6,r8
 8000da4:	d0a70117 	ldw	r2,-25596(gp)
 8000da8:	d1270204 	addi	r4,gp,-25592
 8000dac:	20c00017 	ldw	r3,0(r4)
 8000db0:	2809883a 	mov	r4,r5
 8000db4:	300b883a 	mov	r5,r6
 8000db8:	100d883a 	mov	r6,r2
 8000dbc:	180f883a 	mov	r7,r3
 8000dc0:	800b9f00 	call	800b9f0 <__muldf3>
 8000dc4:	1009883a 	mov	r4,r2
 8000dc8:	180b883a 	mov	r5,r3
 8000dcc:	2005883a 	mov	r2,r4
 8000dd0:	2807883a 	mov	r3,r5
 8000dd4:	e13fea17 	ldw	r4,-88(fp)
 8000dd8:	e17feb17 	ldw	r5,-84(fp)
 8000ddc:	100d883a 	mov	r6,r2
 8000de0:	180f883a 	mov	r7,r3
 8000de4:	800a5900 	call	800a590 <__adddf3>
 8000de8:	1009883a 	mov	r4,r2
 8000dec:	180b883a 	mov	r5,r3
 8000df0:	2005883a 	mov	r2,r4
 8000df4:	2807883a 	mov	r3,r5
 8000df8:	d0a6ff15 	stw	r2,-25604(gp)
 8000dfc:	d1270004 	addi	r4,gp,-25600
 8000e00:	20c00015 	stw	r3,0(r4)
 8000e04:	00007406 	br	8000fd8 <process_filter+0x5a0>
	else if (type == 3) // High Shelf
 8000e08:	d0a6e617 	ldw	r2,-25704(gp)
 8000e0c:	108000d8 	cmpnei	r2,r2,3
 8000e10:	10005c1e 	bne	r2,zero,8000f84 <process_filter+0x54c>
		a0 = (A + 1) - ((A - 1) * cos(w0)) + (2 * sqrt(A) * alpha);
 8000e14:	d0a6e717 	ldw	r2,-25700(gp)
 8000e18:	d126e804 	addi	r4,gp,-25696
 8000e1c:	20c00017 	ldw	r3,0(r4)
 8000e20:	1009883a 	mov	r4,r2
 8000e24:	180b883a 	mov	r5,r3
 8000e28:	000d883a 	mov	r6,zero
 8000e2c:	01cffc34 	movhi	r7,16368
 8000e30:	800a5900 	call	800a590 <__adddf3>
 8000e34:	1009883a 	mov	r4,r2
 8000e38:	180b883a 	mov	r5,r3
 8000e3c:	e13fec15 	stw	r4,-80(fp)
 8000e40:	e17fed15 	stw	r5,-76(fp)
 8000e44:	d0a6e717 	ldw	r2,-25700(gp)
 8000e48:	d126e804 	addi	r4,gp,-25696
 8000e4c:	20c00017 	ldw	r3,0(r4)
 8000e50:	1009883a 	mov	r4,r2
 8000e54:	180b883a 	mov	r5,r3
 8000e58:	000d883a 	mov	r6,zero
 8000e5c:	01cffc34 	movhi	r7,16368
 8000e60:	800c25c0 	call	800c25c <__subdf3>
 8000e64:	1009883a 	mov	r4,r2
 8000e68:	180b883a 	mov	r5,r3
 8000e6c:	e13fee15 	stw	r4,-72(fp)
 8000e70:	e17fef15 	stw	r5,-68(fp)
 8000e74:	d0a6f017 	ldw	r2,-25664(gp)
 8000e78:	d126f104 	addi	r4,gp,-25660
 8000e7c:	20c00017 	ldw	r3,0(r4)
 8000e80:	1009883a 	mov	r4,r2
 8000e84:	180b883a 	mov	r5,r3
 8000e88:	80054fc0 	call	80054fc <cos>
 8000e8c:	100f883a 	mov	r7,r2
 8000e90:	1811883a 	mov	r8,r3
 8000e94:	e13fee17 	ldw	r4,-72(fp)
 8000e98:	e17fef17 	ldw	r5,-68(fp)
 8000e9c:	380d883a 	mov	r6,r7
 8000ea0:	400f883a 	mov	r7,r8
 8000ea4:	800b9f00 	call	800b9f0 <__muldf3>
 8000ea8:	1009883a 	mov	r4,r2
 8000eac:	180b883a 	mov	r5,r3
 8000eb0:	2005883a 	mov	r2,r4
 8000eb4:	2807883a 	mov	r3,r5
 8000eb8:	e13fec17 	ldw	r4,-80(fp)
 8000ebc:	e17fed17 	ldw	r5,-76(fp)
 8000ec0:	100d883a 	mov	r6,r2
 8000ec4:	180f883a 	mov	r7,r3
 8000ec8:	800c25c0 	call	800c25c <__subdf3>
 8000ecc:	1009883a 	mov	r4,r2
 8000ed0:	180b883a 	mov	r5,r3
 8000ed4:	e13ff015 	stw	r4,-64(fp)
 8000ed8:	e17ff115 	stw	r5,-60(fp)
 8000edc:	d0a6e717 	ldw	r2,-25700(gp)
 8000ee0:	d126e804 	addi	r4,gp,-25696
 8000ee4:	20c00017 	ldw	r3,0(r4)
 8000ee8:	1009883a 	mov	r4,r2
 8000eec:	180b883a 	mov	r5,r3
 8000ef0:	8005e1c0 	call	8005e1c <sqrt>
 8000ef4:	100f883a 	mov	r7,r2
 8000ef8:	1811883a 	mov	r8,r3
 8000efc:	3809883a 	mov	r4,r7
 8000f00:	400b883a 	mov	r5,r8
 8000f04:	380d883a 	mov	r6,r7
 8000f08:	400f883a 	mov	r7,r8
 8000f0c:	800a5900 	call	800a590 <__adddf3>
 8000f10:	100f883a 	mov	r7,r2
 8000f14:	1811883a 	mov	r8,r3
 8000f18:	380b883a 	mov	r5,r7
 8000f1c:	400d883a 	mov	r6,r8
 8000f20:	d0a70117 	ldw	r2,-25596(gp)
 8000f24:	d1270204 	addi	r4,gp,-25592
 8000f28:	20c00017 	ldw	r3,0(r4)
 8000f2c:	2809883a 	mov	r4,r5
 8000f30:	300b883a 	mov	r5,r6
 8000f34:	100d883a 	mov	r6,r2
 8000f38:	180f883a 	mov	r7,r3
 8000f3c:	800b9f00 	call	800b9f0 <__muldf3>
 8000f40:	1009883a 	mov	r4,r2
 8000f44:	180b883a 	mov	r5,r3
 8000f48:	2005883a 	mov	r2,r4
 8000f4c:	2807883a 	mov	r3,r5
 8000f50:	e13ff017 	ldw	r4,-64(fp)
 8000f54:	e17ff117 	ldw	r5,-60(fp)
 8000f58:	100d883a 	mov	r6,r2
 8000f5c:	180f883a 	mov	r7,r3
 8000f60:	800a5900 	call	800a590 <__adddf3>
 8000f64:	1009883a 	mov	r4,r2
 8000f68:	180b883a 	mov	r5,r3
 8000f6c:	2005883a 	mov	r2,r4
 8000f70:	2807883a 	mov	r3,r5
 8000f74:	d0a6ff15 	stw	r2,-25604(gp)
 8000f78:	d1270004 	addi	r4,gp,-25600
 8000f7c:	20c00015 	stw	r3,0(r4)
 8000f80:	00001506 	br	8000fd8 <process_filter+0x5a0>
	else if (type == 4 || type == 5) // Passband
 8000f84:	d0a6e617 	ldw	r2,-25704(gp)
 8000f88:	10800120 	cmpeqi	r2,r2,4
 8000f8c:	1000031e 	bne	r2,zero,8000f9c <process_filter+0x564>
 8000f90:	d0a6e617 	ldw	r2,-25704(gp)
 8000f94:	10800158 	cmpnei	r2,r2,5
 8000f98:	10000f1e 	bne	r2,zero,8000fd8 <process_filter+0x5a0>
		a0 = 1 + alpha;
 8000f9c:	d0a70117 	ldw	r2,-25596(gp)
 8000fa0:	d1270204 	addi	r4,gp,-25592
 8000fa4:	20c00017 	ldw	r3,0(r4)
 8000fa8:	1009883a 	mov	r4,r2
 8000fac:	180b883a 	mov	r5,r3
 8000fb0:	000d883a 	mov	r6,zero
 8000fb4:	01cffc34 	movhi	r7,16368
 8000fb8:	800a5900 	call	800a590 <__adddf3>
 8000fbc:	1009883a 	mov	r4,r2
 8000fc0:	180b883a 	mov	r5,r3
 8000fc4:	2005883a 	mov	r2,r4
 8000fc8:	2807883a 	mov	r3,r5
 8000fcc:	d0a6ff15 	stw	r2,-25604(gp)
 8000fd0:	d1270004 	addi	r4,gp,-25600
 8000fd4:	20c00015 	stw	r3,0(r4)

	switch (type) {
 8000fd8:	d0a6e617 	ldw	r2,-25704(gp)
 8000fdc:	10c001a8 	cmpgeui	r3,r2,6
 8000fe0:	18060b1e 	bne	r3,zero,8002810 <process_filter+0x1dd8>
 8000fe4:	100690ba 	slli	r3,r2,2
 8000fe8:	00820034 	movhi	r2,2048
 8000fec:	1083ff04 	addi	r2,r2,4092
 8000ff0:	1885883a 	add	r2,r3,r2
 8000ff4:	10800017 	ldw	r2,0(r2)
 8000ff8:	1000683a 	jmp	r2
 8000ffc:	08002810 	cmplti	zero,at,160
 8001000:	08001014 	ori	zero,at,64
 8001004:	080012f8 	rdprs	zero,at,75
 8001008:	08001abc 	xorhi	zero,at,106
 800100c:	08002288 	cmpgei	zero,at,138
 8001010:	08002548 	cmpgei	zero,at,149
	case 1: //Peak EQ
		b0 = (1 + (alpha * A)) / a0;
 8001014:	d1670117 	ldw	r5,-25596(gp)
 8001018:	d0a70204 	addi	r2,gp,-25592
 800101c:	11800017 	ldw	r6,0(r2)
 8001020:	d0a6e717 	ldw	r2,-25700(gp)
 8001024:	d126e804 	addi	r4,gp,-25696
 8001028:	20c00017 	ldw	r3,0(r4)
 800102c:	2809883a 	mov	r4,r5
 8001030:	300b883a 	mov	r5,r6
 8001034:	100d883a 	mov	r6,r2
 8001038:	180f883a 	mov	r7,r3
 800103c:	800b9f00 	call	800b9f0 <__muldf3>
 8001040:	1009883a 	mov	r4,r2
 8001044:	180b883a 	mov	r5,r3
 8001048:	2005883a 	mov	r2,r4
 800104c:	2807883a 	mov	r3,r5
 8001050:	1009883a 	mov	r4,r2
 8001054:	180b883a 	mov	r5,r3
 8001058:	000d883a 	mov	r6,zero
 800105c:	01cffc34 	movhi	r7,16368
 8001060:	800a5900 	call	800a590 <__adddf3>
 8001064:	100f883a 	mov	r7,r2
 8001068:	1811883a 	mov	r8,r3
 800106c:	380b883a 	mov	r5,r7
 8001070:	400d883a 	mov	r6,r8
 8001074:	d0a6ff17 	ldw	r2,-25604(gp)
 8001078:	d1270004 	addi	r4,gp,-25600
 800107c:	20c00017 	ldw	r3,0(r4)
 8001080:	2809883a 	mov	r4,r5
 8001084:	300b883a 	mov	r5,r6
 8001088:	100d883a 	mov	r6,r2
 800108c:	180f883a 	mov	r7,r3
 8001090:	800ae2c0 	call	800ae2c <__divdf3>
 8001094:	1009883a 	mov	r4,r2
 8001098:	180b883a 	mov	r5,r3
 800109c:	2005883a 	mov	r2,r4
 80010a0:	2807883a 	mov	r3,r5
 80010a4:	d0a6fd15 	stw	r2,-25612(gp)
 80010a8:	d126fe04 	addi	r4,gp,-25608
 80010ac:	20c00015 	stw	r3,0(r4)
		b1 = (-2 * cos(w0)) / a0;
 80010b0:	d0a6f017 	ldw	r2,-25664(gp)
 80010b4:	d126f104 	addi	r4,gp,-25660
 80010b8:	20c00017 	ldw	r3,0(r4)
 80010bc:	1009883a 	mov	r4,r2
 80010c0:	180b883a 	mov	r5,r3
 80010c4:	80054fc0 	call	80054fc <cos>
 80010c8:	100b883a 	mov	r5,r2
 80010cc:	180d883a 	mov	r6,r3
 80010d0:	2809883a 	mov	r4,r5
 80010d4:	300b883a 	mov	r5,r6
 80010d8:	000d883a 	mov	r6,zero
 80010dc:	01f00034 	movhi	r7,49152
 80010e0:	800b9f00 	call	800b9f0 <__muldf3>
 80010e4:	100f883a 	mov	r7,r2
 80010e8:	1811883a 	mov	r8,r3
 80010ec:	380b883a 	mov	r5,r7
 80010f0:	400d883a 	mov	r6,r8
 80010f4:	d0a6ff17 	ldw	r2,-25604(gp)
 80010f8:	d1270004 	addi	r4,gp,-25600
 80010fc:	20c00017 	ldw	r3,0(r4)
 8001100:	2809883a 	mov	r4,r5
 8001104:	300b883a 	mov	r5,r6
 8001108:	100d883a 	mov	r6,r2
 800110c:	180f883a 	mov	r7,r3
 8001110:	800ae2c0 	call	800ae2c <__divdf3>
 8001114:	1009883a 	mov	r4,r2
 8001118:	180b883a 	mov	r5,r3
 800111c:	2005883a 	mov	r2,r4
 8001120:	2807883a 	mov	r3,r5
 8001124:	d0a6ec15 	stw	r2,-25680(gp)
 8001128:	d126ed04 	addi	r4,gp,-25676
 800112c:	20c00015 	stw	r3,0(r4)
		b2 = (1 - (alpha * A)) / a0;
 8001130:	d1670117 	ldw	r5,-25596(gp)
 8001134:	d0a70204 	addi	r2,gp,-25592
 8001138:	11800017 	ldw	r6,0(r2)
 800113c:	d0a6e717 	ldw	r2,-25700(gp)
 8001140:	d126e804 	addi	r4,gp,-25696
 8001144:	20c00017 	ldw	r3,0(r4)
 8001148:	2809883a 	mov	r4,r5
 800114c:	300b883a 	mov	r5,r6
 8001150:	100d883a 	mov	r6,r2
 8001154:	180f883a 	mov	r7,r3
 8001158:	800b9f00 	call	800b9f0 <__muldf3>
 800115c:	1009883a 	mov	r4,r2
 8001160:	180b883a 	mov	r5,r3
 8001164:	2005883a 	mov	r2,r4
 8001168:	2807883a 	mov	r3,r5
 800116c:	0009883a 	mov	r4,zero
 8001170:	014ffc34 	movhi	r5,16368
 8001174:	100d883a 	mov	r6,r2
 8001178:	180f883a 	mov	r7,r3
 800117c:	800c25c0 	call	800c25c <__subdf3>
 8001180:	100f883a 	mov	r7,r2
 8001184:	1811883a 	mov	r8,r3
 8001188:	380b883a 	mov	r5,r7
 800118c:	400d883a 	mov	r6,r8
 8001190:	d0a6ff17 	ldw	r2,-25604(gp)
 8001194:	d1270004 	addi	r4,gp,-25600
 8001198:	20c00017 	ldw	r3,0(r4)
 800119c:	2809883a 	mov	r4,r5
 80011a0:	300b883a 	mov	r5,r6
 80011a4:	100d883a 	mov	r6,r2
 80011a8:	180f883a 	mov	r7,r3
 80011ac:	800ae2c0 	call	800ae2c <__divdf3>
 80011b0:	1009883a 	mov	r4,r2
 80011b4:	180b883a 	mov	r5,r3
 80011b8:	2005883a 	mov	r2,r4
 80011bc:	2807883a 	mov	r3,r5
 80011c0:	d0a6e415 	stw	r2,-25712(gp)
 80011c4:	d126e504 	addi	r4,gp,-25708
 80011c8:	20c00015 	stw	r3,0(r4)
		a1 = -(-2 * cos(w0)) / a0;
 80011cc:	d0a6f017 	ldw	r2,-25664(gp)
 80011d0:	d126f104 	addi	r4,gp,-25660
 80011d4:	20c00017 	ldw	r3,0(r4)
 80011d8:	1009883a 	mov	r4,r2
 80011dc:	180b883a 	mov	r5,r3
 80011e0:	80054fc0 	call	80054fc <cos>
 80011e4:	100f883a 	mov	r7,r2
 80011e8:	1811883a 	mov	r8,r3
 80011ec:	3809883a 	mov	r4,r7
 80011f0:	400b883a 	mov	r5,r8
 80011f4:	380d883a 	mov	r6,r7
 80011f8:	400f883a 	mov	r7,r8
 80011fc:	800a5900 	call	800a590 <__adddf3>
 8001200:	100f883a 	mov	r7,r2
 8001204:	1811883a 	mov	r8,r3
 8001208:	380b883a 	mov	r5,r7
 800120c:	400d883a 	mov	r6,r8
 8001210:	d0a6ff17 	ldw	r2,-25604(gp)
 8001214:	d1270004 	addi	r4,gp,-25600
 8001218:	20c00017 	ldw	r3,0(r4)
 800121c:	2809883a 	mov	r4,r5
 8001220:	300b883a 	mov	r5,r6
 8001224:	100d883a 	mov	r6,r2
 8001228:	180f883a 	mov	r7,r3
 800122c:	800ae2c0 	call	800ae2c <__divdf3>
 8001230:	1009883a 	mov	r4,r2
 8001234:	180b883a 	mov	r5,r3
 8001238:	2005883a 	mov	r2,r4
 800123c:	2807883a 	mov	r3,r5
 8001240:	d0a6ee15 	stw	r2,-25672(gp)
 8001244:	d126ef04 	addi	r4,gp,-25668
 8001248:	20c00015 	stw	r3,0(r4)
		a2 = -(1 - (alpha / A)) / a0;
 800124c:	d1670117 	ldw	r5,-25596(gp)
 8001250:	d0a70204 	addi	r2,gp,-25592
 8001254:	11800017 	ldw	r6,0(r2)
 8001258:	d0a6e717 	ldw	r2,-25700(gp)
 800125c:	d126e804 	addi	r4,gp,-25696
 8001260:	20c00017 	ldw	r3,0(r4)
 8001264:	2809883a 	mov	r4,r5
 8001268:	300b883a 	mov	r5,r6
 800126c:	100d883a 	mov	r6,r2
 8001270:	180f883a 	mov	r7,r3
 8001274:	800ae2c0 	call	800ae2c <__divdf3>
 8001278:	1009883a 	mov	r4,r2
 800127c:	180b883a 	mov	r5,r3
 8001280:	2005883a 	mov	r2,r4
 8001284:	2807883a 	mov	r3,r5
 8001288:	0009883a 	mov	r4,zero
 800128c:	014ffc34 	movhi	r5,16368
 8001290:	100d883a 	mov	r6,r2
 8001294:	180f883a 	mov	r7,r3
 8001298:	800c25c0 	call	800c25c <__subdf3>
 800129c:	1009883a 	mov	r4,r2
 80012a0:	180b883a 	mov	r5,r3
 80012a4:	2005883a 	mov	r2,r4
 80012a8:	2807883a 	mov	r3,r5
 80012ac:	e0bff215 	stw	r2,-56(fp)
 80012b0:	1920003c 	xorhi	r4,r3,32768
 80012b4:	e13ff315 	stw	r4,-52(fp)
 80012b8:	d0a6ff17 	ldw	r2,-25604(gp)
 80012bc:	d1270004 	addi	r4,gp,-25600
 80012c0:	20c00017 	ldw	r3,0(r4)
 80012c4:	e13ff217 	ldw	r4,-56(fp)
 80012c8:	e17ff317 	ldw	r5,-52(fp)
 80012cc:	100d883a 	mov	r6,r2
 80012d0:	180f883a 	mov	r7,r3
 80012d4:	800ae2c0 	call	800ae2c <__divdf3>
 80012d8:	1009883a 	mov	r4,r2
 80012dc:	180b883a 	mov	r5,r3
 80012e0:	2005883a 	mov	r2,r4
 80012e4:	2807883a 	mov	r3,r5
 80012e8:	d0a6f915 	stw	r2,-25628(gp)
 80012ec:	d126fa04 	addi	r4,gp,-25624
 80012f0:	20c00015 	stw	r3,0(r4)
		break;
 80012f4:	00054606 	br	8002810 <process_filter+0x1dd8>
	case 2: //Low Shelf
		b0 = (A*((A+1)-((A-1)*cos(w0))+(2*sqrt(A)*alpha)))/a0;
 80012f8:	d0a6e717 	ldw	r2,-25700(gp)
 80012fc:	d126e804 	addi	r4,gp,-25696
 8001300:	20c00017 	ldw	r3,0(r4)
 8001304:	1009883a 	mov	r4,r2
 8001308:	180b883a 	mov	r5,r3
 800130c:	000d883a 	mov	r6,zero
 8001310:	01cffc34 	movhi	r7,16368
 8001314:	800a5900 	call	800a590 <__adddf3>
 8001318:	1009883a 	mov	r4,r2
 800131c:	180b883a 	mov	r5,r3
 8001320:	2021883a 	mov	r16,r4
 8001324:	2823883a 	mov	r17,r5
 8001328:	d0a6e717 	ldw	r2,-25700(gp)
 800132c:	d126e804 	addi	r4,gp,-25696
 8001330:	20c00017 	ldw	r3,0(r4)
 8001334:	1009883a 	mov	r4,r2
 8001338:	180b883a 	mov	r5,r3
 800133c:	000d883a 	mov	r6,zero
 8001340:	01cffc34 	movhi	r7,16368
 8001344:	800c25c0 	call	800c25c <__subdf3>
 8001348:	1009883a 	mov	r4,r2
 800134c:	180b883a 	mov	r5,r3
 8001350:	2025883a 	mov	r18,r4
 8001354:	2827883a 	mov	r19,r5
 8001358:	d0a6f017 	ldw	r2,-25664(gp)
 800135c:	d126f104 	addi	r4,gp,-25660
 8001360:	20c00017 	ldw	r3,0(r4)
 8001364:	1009883a 	mov	r4,r2
 8001368:	180b883a 	mov	r5,r3
 800136c:	80054fc0 	call	80054fc <cos>
 8001370:	100f883a 	mov	r7,r2
 8001374:	1811883a 	mov	r8,r3
 8001378:	9009883a 	mov	r4,r18
 800137c:	980b883a 	mov	r5,r19
 8001380:	380d883a 	mov	r6,r7
 8001384:	400f883a 	mov	r7,r8
 8001388:	800b9f00 	call	800b9f0 <__muldf3>
 800138c:	1009883a 	mov	r4,r2
 8001390:	180b883a 	mov	r5,r3
 8001394:	2005883a 	mov	r2,r4
 8001398:	2807883a 	mov	r3,r5
 800139c:	8009883a 	mov	r4,r16
 80013a0:	880b883a 	mov	r5,r17
 80013a4:	100d883a 	mov	r6,r2
 80013a8:	180f883a 	mov	r7,r3
 80013ac:	800c25c0 	call	800c25c <__subdf3>
 80013b0:	1009883a 	mov	r4,r2
 80013b4:	180b883a 	mov	r5,r3
 80013b8:	2021883a 	mov	r16,r4
 80013bc:	2823883a 	mov	r17,r5
 80013c0:	d0a6e717 	ldw	r2,-25700(gp)
 80013c4:	d126e804 	addi	r4,gp,-25696
 80013c8:	20c00017 	ldw	r3,0(r4)
 80013cc:	1009883a 	mov	r4,r2
 80013d0:	180b883a 	mov	r5,r3
 80013d4:	8005e1c0 	call	8005e1c <sqrt>
 80013d8:	100f883a 	mov	r7,r2
 80013dc:	1811883a 	mov	r8,r3
 80013e0:	3809883a 	mov	r4,r7
 80013e4:	400b883a 	mov	r5,r8
 80013e8:	380d883a 	mov	r6,r7
 80013ec:	400f883a 	mov	r7,r8
 80013f0:	800a5900 	call	800a590 <__adddf3>
 80013f4:	100f883a 	mov	r7,r2
 80013f8:	1811883a 	mov	r8,r3
 80013fc:	380b883a 	mov	r5,r7
 8001400:	400d883a 	mov	r6,r8
 8001404:	d0a70117 	ldw	r2,-25596(gp)
 8001408:	d1270204 	addi	r4,gp,-25592
 800140c:	20c00017 	ldw	r3,0(r4)
 8001410:	2809883a 	mov	r4,r5
 8001414:	300b883a 	mov	r5,r6
 8001418:	100d883a 	mov	r6,r2
 800141c:	180f883a 	mov	r7,r3
 8001420:	800b9f00 	call	800b9f0 <__muldf3>
 8001424:	1009883a 	mov	r4,r2
 8001428:	180b883a 	mov	r5,r3
 800142c:	2005883a 	mov	r2,r4
 8001430:	2807883a 	mov	r3,r5
 8001434:	8009883a 	mov	r4,r16
 8001438:	880b883a 	mov	r5,r17
 800143c:	100d883a 	mov	r6,r2
 8001440:	180f883a 	mov	r7,r3
 8001444:	800a5900 	call	800a590 <__adddf3>
 8001448:	100f883a 	mov	r7,r2
 800144c:	1811883a 	mov	r8,r3
 8001450:	380b883a 	mov	r5,r7
 8001454:	400d883a 	mov	r6,r8
 8001458:	d0a6e717 	ldw	r2,-25700(gp)
 800145c:	d126e804 	addi	r4,gp,-25696
 8001460:	20c00017 	ldw	r3,0(r4)
 8001464:	2809883a 	mov	r4,r5
 8001468:	300b883a 	mov	r5,r6
 800146c:	100d883a 	mov	r6,r2
 8001470:	180f883a 	mov	r7,r3
 8001474:	800b9f00 	call	800b9f0 <__muldf3>
 8001478:	100f883a 	mov	r7,r2
 800147c:	1811883a 	mov	r8,r3
 8001480:	380b883a 	mov	r5,r7
 8001484:	400d883a 	mov	r6,r8
 8001488:	d0a6ff17 	ldw	r2,-25604(gp)
 800148c:	d1270004 	addi	r4,gp,-25600
 8001490:	20c00017 	ldw	r3,0(r4)
 8001494:	2809883a 	mov	r4,r5
 8001498:	300b883a 	mov	r5,r6
 800149c:	100d883a 	mov	r6,r2
 80014a0:	180f883a 	mov	r7,r3
 80014a4:	800ae2c0 	call	800ae2c <__divdf3>
 80014a8:	1009883a 	mov	r4,r2
 80014ac:	180b883a 	mov	r5,r3
 80014b0:	2005883a 	mov	r2,r4
 80014b4:	2807883a 	mov	r3,r5
 80014b8:	d0a6fd15 	stw	r2,-25612(gp)
 80014bc:	d126fe04 	addi	r4,gp,-25608
 80014c0:	20c00015 	stw	r3,0(r4)
		b1 = (2*A*((A-1) - ((A+1)*cos(w0))))/a0;
 80014c4:	d0a6e717 	ldw	r2,-25700(gp)
 80014c8:	d126e804 	addi	r4,gp,-25696
 80014cc:	20c00017 	ldw	r3,0(r4)
 80014d0:	1009883a 	mov	r4,r2
 80014d4:	180b883a 	mov	r5,r3
 80014d8:	100d883a 	mov	r6,r2
 80014dc:	180f883a 	mov	r7,r3
 80014e0:	800a5900 	call	800a590 <__adddf3>
 80014e4:	1009883a 	mov	r4,r2
 80014e8:	180b883a 	mov	r5,r3
 80014ec:	2021883a 	mov	r16,r4
 80014f0:	2823883a 	mov	r17,r5
 80014f4:	d0a6e717 	ldw	r2,-25700(gp)
 80014f8:	d126e804 	addi	r4,gp,-25696
 80014fc:	20c00017 	ldw	r3,0(r4)
 8001500:	1009883a 	mov	r4,r2
 8001504:	180b883a 	mov	r5,r3
 8001508:	000d883a 	mov	r6,zero
 800150c:	01cffc34 	movhi	r7,16368
 8001510:	800c25c0 	call	800c25c <__subdf3>
 8001514:	1009883a 	mov	r4,r2
 8001518:	180b883a 	mov	r5,r3
 800151c:	2025883a 	mov	r18,r4
 8001520:	2827883a 	mov	r19,r5
 8001524:	d0a6e717 	ldw	r2,-25700(gp)
 8001528:	d126e804 	addi	r4,gp,-25696
 800152c:	20c00017 	ldw	r3,0(r4)
 8001530:	1009883a 	mov	r4,r2
 8001534:	180b883a 	mov	r5,r3
 8001538:	000d883a 	mov	r6,zero
 800153c:	01cffc34 	movhi	r7,16368
 8001540:	800a5900 	call	800a590 <__adddf3>
 8001544:	1009883a 	mov	r4,r2
 8001548:	180b883a 	mov	r5,r3
 800154c:	2029883a 	mov	r20,r4
 8001550:	282b883a 	mov	r21,r5
 8001554:	d0a6f017 	ldw	r2,-25664(gp)
 8001558:	d126f104 	addi	r4,gp,-25660
 800155c:	20c00017 	ldw	r3,0(r4)
 8001560:	1009883a 	mov	r4,r2
 8001564:	180b883a 	mov	r5,r3
 8001568:	80054fc0 	call	80054fc <cos>
 800156c:	100f883a 	mov	r7,r2
 8001570:	1811883a 	mov	r8,r3
 8001574:	a009883a 	mov	r4,r20
 8001578:	a80b883a 	mov	r5,r21
 800157c:	380d883a 	mov	r6,r7
 8001580:	400f883a 	mov	r7,r8
 8001584:	800b9f00 	call	800b9f0 <__muldf3>
 8001588:	1009883a 	mov	r4,r2
 800158c:	180b883a 	mov	r5,r3
 8001590:	2005883a 	mov	r2,r4
 8001594:	2807883a 	mov	r3,r5
 8001598:	9009883a 	mov	r4,r18
 800159c:	980b883a 	mov	r5,r19
 80015a0:	100d883a 	mov	r6,r2
 80015a4:	180f883a 	mov	r7,r3
 80015a8:	800c25c0 	call	800c25c <__subdf3>
 80015ac:	1009883a 	mov	r4,r2
 80015b0:	180b883a 	mov	r5,r3
 80015b4:	2005883a 	mov	r2,r4
 80015b8:	2807883a 	mov	r3,r5
 80015bc:	8009883a 	mov	r4,r16
 80015c0:	880b883a 	mov	r5,r17
 80015c4:	100d883a 	mov	r6,r2
 80015c8:	180f883a 	mov	r7,r3
 80015cc:	800b9f00 	call	800b9f0 <__muldf3>
 80015d0:	100f883a 	mov	r7,r2
 80015d4:	1811883a 	mov	r8,r3
 80015d8:	380b883a 	mov	r5,r7
 80015dc:	400d883a 	mov	r6,r8
 80015e0:	d0a6ff17 	ldw	r2,-25604(gp)
 80015e4:	d1270004 	addi	r4,gp,-25600
 80015e8:	20c00017 	ldw	r3,0(r4)
 80015ec:	2809883a 	mov	r4,r5
 80015f0:	300b883a 	mov	r5,r6
 80015f4:	100d883a 	mov	r6,r2
 80015f8:	180f883a 	mov	r7,r3
 80015fc:	800ae2c0 	call	800ae2c <__divdf3>
 8001600:	1009883a 	mov	r4,r2
 8001604:	180b883a 	mov	r5,r3
 8001608:	2005883a 	mov	r2,r4
 800160c:	2807883a 	mov	r3,r5
 8001610:	d0a6ec15 	stw	r2,-25680(gp)
 8001614:	d126ed04 	addi	r4,gp,-25676
 8001618:	20c00015 	stw	r3,0(r4)
		b2 = (A*((A+1)-((A-1)*cos(w0))-(2*sqrt(A)*alpha)))/a0;
 800161c:	d0a6e717 	ldw	r2,-25700(gp)
 8001620:	d126e804 	addi	r4,gp,-25696
 8001624:	20c00017 	ldw	r3,0(r4)
 8001628:	1009883a 	mov	r4,r2
 800162c:	180b883a 	mov	r5,r3
 8001630:	000d883a 	mov	r6,zero
 8001634:	01cffc34 	movhi	r7,16368
 8001638:	800a5900 	call	800a590 <__adddf3>
 800163c:	1009883a 	mov	r4,r2
 8001640:	180b883a 	mov	r5,r3
 8001644:	2021883a 	mov	r16,r4
 8001648:	2823883a 	mov	r17,r5
 800164c:	d0a6e717 	ldw	r2,-25700(gp)
 8001650:	d126e804 	addi	r4,gp,-25696
 8001654:	20c00017 	ldw	r3,0(r4)
 8001658:	1009883a 	mov	r4,r2
 800165c:	180b883a 	mov	r5,r3
 8001660:	000d883a 	mov	r6,zero
 8001664:	01cffc34 	movhi	r7,16368
 8001668:	800c25c0 	call	800c25c <__subdf3>
 800166c:	1009883a 	mov	r4,r2
 8001670:	180b883a 	mov	r5,r3
 8001674:	2025883a 	mov	r18,r4
 8001678:	2827883a 	mov	r19,r5
 800167c:	d0a6f017 	ldw	r2,-25664(gp)
 8001680:	d126f104 	addi	r4,gp,-25660
 8001684:	20c00017 	ldw	r3,0(r4)
 8001688:	1009883a 	mov	r4,r2
 800168c:	180b883a 	mov	r5,r3
 8001690:	80054fc0 	call	80054fc <cos>
 8001694:	100f883a 	mov	r7,r2
 8001698:	1811883a 	mov	r8,r3
 800169c:	9009883a 	mov	r4,r18
 80016a0:	980b883a 	mov	r5,r19
 80016a4:	380d883a 	mov	r6,r7
 80016a8:	400f883a 	mov	r7,r8
 80016ac:	800b9f00 	call	800b9f0 <__muldf3>
 80016b0:	1009883a 	mov	r4,r2
 80016b4:	180b883a 	mov	r5,r3
 80016b8:	2005883a 	mov	r2,r4
 80016bc:	2807883a 	mov	r3,r5
 80016c0:	8009883a 	mov	r4,r16
 80016c4:	880b883a 	mov	r5,r17
 80016c8:	100d883a 	mov	r6,r2
 80016cc:	180f883a 	mov	r7,r3
 80016d0:	800c25c0 	call	800c25c <__subdf3>
 80016d4:	1009883a 	mov	r4,r2
 80016d8:	180b883a 	mov	r5,r3
 80016dc:	2021883a 	mov	r16,r4
 80016e0:	2823883a 	mov	r17,r5
 80016e4:	d0a6e717 	ldw	r2,-25700(gp)
 80016e8:	d126e804 	addi	r4,gp,-25696
 80016ec:	20c00017 	ldw	r3,0(r4)
 80016f0:	1009883a 	mov	r4,r2
 80016f4:	180b883a 	mov	r5,r3
 80016f8:	8005e1c0 	call	8005e1c <sqrt>
 80016fc:	100f883a 	mov	r7,r2
 8001700:	1811883a 	mov	r8,r3
 8001704:	3809883a 	mov	r4,r7
 8001708:	400b883a 	mov	r5,r8
 800170c:	380d883a 	mov	r6,r7
 8001710:	400f883a 	mov	r7,r8
 8001714:	800a5900 	call	800a590 <__adddf3>
 8001718:	100f883a 	mov	r7,r2
 800171c:	1811883a 	mov	r8,r3
 8001720:	380b883a 	mov	r5,r7
 8001724:	400d883a 	mov	r6,r8
 8001728:	d0a70117 	ldw	r2,-25596(gp)
 800172c:	d1270204 	addi	r4,gp,-25592
 8001730:	20c00017 	ldw	r3,0(r4)
 8001734:	2809883a 	mov	r4,r5
 8001738:	300b883a 	mov	r5,r6
 800173c:	100d883a 	mov	r6,r2
 8001740:	180f883a 	mov	r7,r3
 8001744:	800b9f00 	call	800b9f0 <__muldf3>
 8001748:	1009883a 	mov	r4,r2
 800174c:	180b883a 	mov	r5,r3
 8001750:	2005883a 	mov	r2,r4
 8001754:	2807883a 	mov	r3,r5
 8001758:	8009883a 	mov	r4,r16
 800175c:	880b883a 	mov	r5,r17
 8001760:	100d883a 	mov	r6,r2
 8001764:	180f883a 	mov	r7,r3
 8001768:	800c25c0 	call	800c25c <__subdf3>
 800176c:	100f883a 	mov	r7,r2
 8001770:	1811883a 	mov	r8,r3
 8001774:	380b883a 	mov	r5,r7
 8001778:	400d883a 	mov	r6,r8
 800177c:	d0a6e717 	ldw	r2,-25700(gp)
 8001780:	d126e804 	addi	r4,gp,-25696
 8001784:	20c00017 	ldw	r3,0(r4)
 8001788:	2809883a 	mov	r4,r5
 800178c:	300b883a 	mov	r5,r6
 8001790:	100d883a 	mov	r6,r2
 8001794:	180f883a 	mov	r7,r3
 8001798:	800b9f00 	call	800b9f0 <__muldf3>
 800179c:	100f883a 	mov	r7,r2
 80017a0:	1811883a 	mov	r8,r3
 80017a4:	380b883a 	mov	r5,r7
 80017a8:	400d883a 	mov	r6,r8
 80017ac:	d0a6ff17 	ldw	r2,-25604(gp)
 80017b0:	d1270004 	addi	r4,gp,-25600
 80017b4:	20c00017 	ldw	r3,0(r4)
 80017b8:	2809883a 	mov	r4,r5
 80017bc:	300b883a 	mov	r5,r6
 80017c0:	100d883a 	mov	r6,r2
 80017c4:	180f883a 	mov	r7,r3
 80017c8:	800ae2c0 	call	800ae2c <__divdf3>
 80017cc:	1009883a 	mov	r4,r2
 80017d0:	180b883a 	mov	r5,r3
 80017d4:	2005883a 	mov	r2,r4
 80017d8:	2807883a 	mov	r3,r5
 80017dc:	d0a6e415 	stw	r2,-25712(gp)
 80017e0:	d126e504 	addi	r4,gp,-25708
 80017e4:	20c00015 	stw	r3,0(r4)
		a1 = -(-2*((A-1) + ((A+1)*cos(w0))))/a0;
 80017e8:	d0a6e717 	ldw	r2,-25700(gp)
 80017ec:	d126e804 	addi	r4,gp,-25696
 80017f0:	20c00017 	ldw	r3,0(r4)
 80017f4:	1009883a 	mov	r4,r2
 80017f8:	180b883a 	mov	r5,r3
 80017fc:	000d883a 	mov	r6,zero
 8001800:	01cffc34 	movhi	r7,16368
 8001804:	800c25c0 	call	800c25c <__subdf3>
 8001808:	1009883a 	mov	r4,r2
 800180c:	180b883a 	mov	r5,r3
 8001810:	2021883a 	mov	r16,r4
 8001814:	2823883a 	mov	r17,r5
 8001818:	d0a6e717 	ldw	r2,-25700(gp)
 800181c:	d126e804 	addi	r4,gp,-25696
 8001820:	20c00017 	ldw	r3,0(r4)
 8001824:	1009883a 	mov	r4,r2
 8001828:	180b883a 	mov	r5,r3
 800182c:	000d883a 	mov	r6,zero
 8001830:	01cffc34 	movhi	r7,16368
 8001834:	800a5900 	call	800a590 <__adddf3>
 8001838:	1009883a 	mov	r4,r2
 800183c:	180b883a 	mov	r5,r3
 8001840:	2025883a 	mov	r18,r4
 8001844:	2827883a 	mov	r19,r5
 8001848:	d0a6f017 	ldw	r2,-25664(gp)
 800184c:	d126f104 	addi	r4,gp,-25660
 8001850:	20c00017 	ldw	r3,0(r4)
 8001854:	1009883a 	mov	r4,r2
 8001858:	180b883a 	mov	r5,r3
 800185c:	80054fc0 	call	80054fc <cos>
 8001860:	100f883a 	mov	r7,r2
 8001864:	1811883a 	mov	r8,r3
 8001868:	9009883a 	mov	r4,r18
 800186c:	980b883a 	mov	r5,r19
 8001870:	380d883a 	mov	r6,r7
 8001874:	400f883a 	mov	r7,r8
 8001878:	800b9f00 	call	800b9f0 <__muldf3>
 800187c:	1009883a 	mov	r4,r2
 8001880:	180b883a 	mov	r5,r3
 8001884:	2005883a 	mov	r2,r4
 8001888:	2807883a 	mov	r3,r5
 800188c:	8009883a 	mov	r4,r16
 8001890:	880b883a 	mov	r5,r17
 8001894:	100d883a 	mov	r6,r2
 8001898:	180f883a 	mov	r7,r3
 800189c:	800a5900 	call	800a590 <__adddf3>
 80018a0:	1009883a 	mov	r4,r2
 80018a4:	180b883a 	mov	r5,r3
 80018a8:	2005883a 	mov	r2,r4
 80018ac:	2807883a 	mov	r3,r5
 80018b0:	1009883a 	mov	r4,r2
 80018b4:	180b883a 	mov	r5,r3
 80018b8:	100d883a 	mov	r6,r2
 80018bc:	180f883a 	mov	r7,r3
 80018c0:	800a5900 	call	800a590 <__adddf3>
 80018c4:	100f883a 	mov	r7,r2
 80018c8:	1811883a 	mov	r8,r3
 80018cc:	380b883a 	mov	r5,r7
 80018d0:	400d883a 	mov	r6,r8
 80018d4:	d0a6ff17 	ldw	r2,-25604(gp)
 80018d8:	d1270004 	addi	r4,gp,-25600
 80018dc:	20c00017 	ldw	r3,0(r4)
 80018e0:	2809883a 	mov	r4,r5
 80018e4:	300b883a 	mov	r5,r6
 80018e8:	100d883a 	mov	r6,r2
 80018ec:	180f883a 	mov	r7,r3
 80018f0:	800ae2c0 	call	800ae2c <__divdf3>
 80018f4:	1009883a 	mov	r4,r2
 80018f8:	180b883a 	mov	r5,r3
 80018fc:	2005883a 	mov	r2,r4
 8001900:	2807883a 	mov	r3,r5
 8001904:	d0a6ee15 	stw	r2,-25672(gp)
 8001908:	d126ef04 	addi	r4,gp,-25668
 800190c:	20c00015 	stw	r3,0(r4)
		a2 = -((A+1) + ((A-1)*cos(w0)) - (2*sqrt(A)*alpha))/a0;
 8001910:	d0a6e717 	ldw	r2,-25700(gp)
 8001914:	d126e804 	addi	r4,gp,-25696
 8001918:	20c00017 	ldw	r3,0(r4)
 800191c:	1009883a 	mov	r4,r2
 8001920:	180b883a 	mov	r5,r3
 8001924:	000d883a 	mov	r6,zero
 8001928:	01cffc34 	movhi	r7,16368
 800192c:	800a5900 	call	800a590 <__adddf3>
 8001930:	1009883a 	mov	r4,r2
 8001934:	180b883a 	mov	r5,r3
 8001938:	2021883a 	mov	r16,r4
 800193c:	2823883a 	mov	r17,r5
 8001940:	d0a6e717 	ldw	r2,-25700(gp)
 8001944:	d126e804 	addi	r4,gp,-25696
 8001948:	20c00017 	ldw	r3,0(r4)
 800194c:	1009883a 	mov	r4,r2
 8001950:	180b883a 	mov	r5,r3
 8001954:	000d883a 	mov	r6,zero
 8001958:	01cffc34 	movhi	r7,16368
 800195c:	800c25c0 	call	800c25c <__subdf3>
 8001960:	1009883a 	mov	r4,r2
 8001964:	180b883a 	mov	r5,r3
 8001968:	2025883a 	mov	r18,r4
 800196c:	2827883a 	mov	r19,r5
 8001970:	d0a6f017 	ldw	r2,-25664(gp)
 8001974:	d126f104 	addi	r4,gp,-25660
 8001978:	20c00017 	ldw	r3,0(r4)
 800197c:	1009883a 	mov	r4,r2
 8001980:	180b883a 	mov	r5,r3
 8001984:	80054fc0 	call	80054fc <cos>
 8001988:	100f883a 	mov	r7,r2
 800198c:	1811883a 	mov	r8,r3
 8001990:	9009883a 	mov	r4,r18
 8001994:	980b883a 	mov	r5,r19
 8001998:	380d883a 	mov	r6,r7
 800199c:	400f883a 	mov	r7,r8
 80019a0:	800b9f00 	call	800b9f0 <__muldf3>
 80019a4:	1009883a 	mov	r4,r2
 80019a8:	180b883a 	mov	r5,r3
 80019ac:	2005883a 	mov	r2,r4
 80019b0:	2807883a 	mov	r3,r5
 80019b4:	8009883a 	mov	r4,r16
 80019b8:	880b883a 	mov	r5,r17
 80019bc:	100d883a 	mov	r6,r2
 80019c0:	180f883a 	mov	r7,r3
 80019c4:	800a5900 	call	800a590 <__adddf3>
 80019c8:	1009883a 	mov	r4,r2
 80019cc:	180b883a 	mov	r5,r3
 80019d0:	2021883a 	mov	r16,r4
 80019d4:	2823883a 	mov	r17,r5
 80019d8:	d0a6e717 	ldw	r2,-25700(gp)
 80019dc:	d126e804 	addi	r4,gp,-25696
 80019e0:	20c00017 	ldw	r3,0(r4)
 80019e4:	1009883a 	mov	r4,r2
 80019e8:	180b883a 	mov	r5,r3
 80019ec:	8005e1c0 	call	8005e1c <sqrt>
 80019f0:	100f883a 	mov	r7,r2
 80019f4:	1811883a 	mov	r8,r3
 80019f8:	3809883a 	mov	r4,r7
 80019fc:	400b883a 	mov	r5,r8
 8001a00:	380d883a 	mov	r6,r7
 8001a04:	400f883a 	mov	r7,r8
 8001a08:	800a5900 	call	800a590 <__adddf3>
 8001a0c:	100f883a 	mov	r7,r2
 8001a10:	1811883a 	mov	r8,r3
 8001a14:	380b883a 	mov	r5,r7
 8001a18:	400d883a 	mov	r6,r8
 8001a1c:	d0a70117 	ldw	r2,-25596(gp)
 8001a20:	d1270204 	addi	r4,gp,-25592
 8001a24:	20c00017 	ldw	r3,0(r4)
 8001a28:	2809883a 	mov	r4,r5
 8001a2c:	300b883a 	mov	r5,r6
 8001a30:	100d883a 	mov	r6,r2
 8001a34:	180f883a 	mov	r7,r3
 8001a38:	800b9f00 	call	800b9f0 <__muldf3>
 8001a3c:	1009883a 	mov	r4,r2
 8001a40:	180b883a 	mov	r5,r3
 8001a44:	2005883a 	mov	r2,r4
 8001a48:	2807883a 	mov	r3,r5
 8001a4c:	8009883a 	mov	r4,r16
 8001a50:	880b883a 	mov	r5,r17
 8001a54:	100d883a 	mov	r6,r2
 8001a58:	180f883a 	mov	r7,r3
 8001a5c:	800c25c0 	call	800c25c <__subdf3>
 8001a60:	1009883a 	mov	r4,r2
 8001a64:	180b883a 	mov	r5,r3
 8001a68:	2005883a 	mov	r2,r4
 8001a6c:	2807883a 	mov	r3,r5
 8001a70:	e0bff415 	stw	r2,-48(fp)
 8001a74:	1920003c 	xorhi	r4,r3,32768
 8001a78:	e13ff515 	stw	r4,-44(fp)
 8001a7c:	d0a6ff17 	ldw	r2,-25604(gp)
 8001a80:	d1270004 	addi	r4,gp,-25600
 8001a84:	20c00017 	ldw	r3,0(r4)
 8001a88:	e13ff417 	ldw	r4,-48(fp)
 8001a8c:	e17ff517 	ldw	r5,-44(fp)
 8001a90:	100d883a 	mov	r6,r2
 8001a94:	180f883a 	mov	r7,r3
 8001a98:	800ae2c0 	call	800ae2c <__divdf3>
 8001a9c:	1009883a 	mov	r4,r2
 8001aa0:	180b883a 	mov	r5,r3
 8001aa4:	2005883a 	mov	r2,r4
 8001aa8:	2807883a 	mov	r3,r5
 8001aac:	d0a6f915 	stw	r2,-25628(gp)
 8001ab0:	d126fa04 	addi	r4,gp,-25624
 8001ab4:	20c00015 	stw	r3,0(r4)
		break;
 8001ab8:	00035506 	br	8002810 <process_filter+0x1dd8>
	case 3: //High shelf
		b0 = (A*((A+1)+((A-1)*cos(w0))+(2*sqrt(A)*alpha)))/a0;
 8001abc:	d0a6e717 	ldw	r2,-25700(gp)
 8001ac0:	d126e804 	addi	r4,gp,-25696
 8001ac4:	20c00017 	ldw	r3,0(r4)
 8001ac8:	1009883a 	mov	r4,r2
 8001acc:	180b883a 	mov	r5,r3
 8001ad0:	000d883a 	mov	r6,zero
 8001ad4:	01cffc34 	movhi	r7,16368
 8001ad8:	800a5900 	call	800a590 <__adddf3>
 8001adc:	1009883a 	mov	r4,r2
 8001ae0:	180b883a 	mov	r5,r3
 8001ae4:	2021883a 	mov	r16,r4
 8001ae8:	2823883a 	mov	r17,r5
 8001aec:	d0a6e717 	ldw	r2,-25700(gp)
 8001af0:	d126e804 	addi	r4,gp,-25696
 8001af4:	20c00017 	ldw	r3,0(r4)
 8001af8:	1009883a 	mov	r4,r2
 8001afc:	180b883a 	mov	r5,r3
 8001b00:	000d883a 	mov	r6,zero
 8001b04:	01cffc34 	movhi	r7,16368
 8001b08:	800c25c0 	call	800c25c <__subdf3>
 8001b0c:	1009883a 	mov	r4,r2
 8001b10:	180b883a 	mov	r5,r3
 8001b14:	2025883a 	mov	r18,r4
 8001b18:	2827883a 	mov	r19,r5
 8001b1c:	d0a6f017 	ldw	r2,-25664(gp)
 8001b20:	d126f104 	addi	r4,gp,-25660
 8001b24:	20c00017 	ldw	r3,0(r4)
 8001b28:	1009883a 	mov	r4,r2
 8001b2c:	180b883a 	mov	r5,r3
 8001b30:	80054fc0 	call	80054fc <cos>
 8001b34:	100f883a 	mov	r7,r2
 8001b38:	1811883a 	mov	r8,r3
 8001b3c:	9009883a 	mov	r4,r18
 8001b40:	980b883a 	mov	r5,r19
 8001b44:	380d883a 	mov	r6,r7
 8001b48:	400f883a 	mov	r7,r8
 8001b4c:	800b9f00 	call	800b9f0 <__muldf3>
 8001b50:	1009883a 	mov	r4,r2
 8001b54:	180b883a 	mov	r5,r3
 8001b58:	2005883a 	mov	r2,r4
 8001b5c:	2807883a 	mov	r3,r5
 8001b60:	8009883a 	mov	r4,r16
 8001b64:	880b883a 	mov	r5,r17
 8001b68:	100d883a 	mov	r6,r2
 8001b6c:	180f883a 	mov	r7,r3
 8001b70:	800a5900 	call	800a590 <__adddf3>
 8001b74:	1009883a 	mov	r4,r2
 8001b78:	180b883a 	mov	r5,r3
 8001b7c:	2021883a 	mov	r16,r4
 8001b80:	2823883a 	mov	r17,r5
 8001b84:	d0a6e717 	ldw	r2,-25700(gp)
 8001b88:	d126e804 	addi	r4,gp,-25696
 8001b8c:	20c00017 	ldw	r3,0(r4)
 8001b90:	1009883a 	mov	r4,r2
 8001b94:	180b883a 	mov	r5,r3
 8001b98:	8005e1c0 	call	8005e1c <sqrt>
 8001b9c:	100f883a 	mov	r7,r2
 8001ba0:	1811883a 	mov	r8,r3
 8001ba4:	3809883a 	mov	r4,r7
 8001ba8:	400b883a 	mov	r5,r8
 8001bac:	380d883a 	mov	r6,r7
 8001bb0:	400f883a 	mov	r7,r8
 8001bb4:	800a5900 	call	800a590 <__adddf3>
 8001bb8:	100f883a 	mov	r7,r2
 8001bbc:	1811883a 	mov	r8,r3
 8001bc0:	380b883a 	mov	r5,r7
 8001bc4:	400d883a 	mov	r6,r8
 8001bc8:	d0a70117 	ldw	r2,-25596(gp)
 8001bcc:	d1270204 	addi	r4,gp,-25592
 8001bd0:	20c00017 	ldw	r3,0(r4)
 8001bd4:	2809883a 	mov	r4,r5
 8001bd8:	300b883a 	mov	r5,r6
 8001bdc:	100d883a 	mov	r6,r2
 8001be0:	180f883a 	mov	r7,r3
 8001be4:	800b9f00 	call	800b9f0 <__muldf3>
 8001be8:	1009883a 	mov	r4,r2
 8001bec:	180b883a 	mov	r5,r3
 8001bf0:	2005883a 	mov	r2,r4
 8001bf4:	2807883a 	mov	r3,r5
 8001bf8:	8009883a 	mov	r4,r16
 8001bfc:	880b883a 	mov	r5,r17
 8001c00:	100d883a 	mov	r6,r2
 8001c04:	180f883a 	mov	r7,r3
 8001c08:	800a5900 	call	800a590 <__adddf3>
 8001c0c:	100f883a 	mov	r7,r2
 8001c10:	1811883a 	mov	r8,r3
 8001c14:	380b883a 	mov	r5,r7
 8001c18:	400d883a 	mov	r6,r8
 8001c1c:	d0a6e717 	ldw	r2,-25700(gp)
 8001c20:	d126e804 	addi	r4,gp,-25696
 8001c24:	20c00017 	ldw	r3,0(r4)
 8001c28:	2809883a 	mov	r4,r5
 8001c2c:	300b883a 	mov	r5,r6
 8001c30:	100d883a 	mov	r6,r2
 8001c34:	180f883a 	mov	r7,r3
 8001c38:	800b9f00 	call	800b9f0 <__muldf3>
 8001c3c:	100f883a 	mov	r7,r2
 8001c40:	1811883a 	mov	r8,r3
 8001c44:	380b883a 	mov	r5,r7
 8001c48:	400d883a 	mov	r6,r8
 8001c4c:	d0a6ff17 	ldw	r2,-25604(gp)
 8001c50:	d1270004 	addi	r4,gp,-25600
 8001c54:	20c00017 	ldw	r3,0(r4)
 8001c58:	2809883a 	mov	r4,r5
 8001c5c:	300b883a 	mov	r5,r6
 8001c60:	100d883a 	mov	r6,r2
 8001c64:	180f883a 	mov	r7,r3
 8001c68:	800ae2c0 	call	800ae2c <__divdf3>
 8001c6c:	1009883a 	mov	r4,r2
 8001c70:	180b883a 	mov	r5,r3
 8001c74:	2005883a 	mov	r2,r4
 8001c78:	2807883a 	mov	r3,r5
 8001c7c:	d0a6fd15 	stw	r2,-25612(gp)
 8001c80:	d126fe04 	addi	r4,gp,-25608
 8001c84:	20c00015 	stw	r3,0(r4)
		b1 = (-2*A*((A-1) + ((A+1)*cos(w0))))/a0;
 8001c88:	d0a6e717 	ldw	r2,-25700(gp)
 8001c8c:	d126e804 	addi	r4,gp,-25696
 8001c90:	20c00017 	ldw	r3,0(r4)
 8001c94:	1009883a 	mov	r4,r2
 8001c98:	180b883a 	mov	r5,r3
 8001c9c:	000d883a 	mov	r6,zero
 8001ca0:	01f00034 	movhi	r7,49152
 8001ca4:	800b9f00 	call	800b9f0 <__muldf3>
 8001ca8:	1009883a 	mov	r4,r2
 8001cac:	180b883a 	mov	r5,r3
 8001cb0:	2021883a 	mov	r16,r4
 8001cb4:	2823883a 	mov	r17,r5
 8001cb8:	d0a6e717 	ldw	r2,-25700(gp)
 8001cbc:	d126e804 	addi	r4,gp,-25696
 8001cc0:	20c00017 	ldw	r3,0(r4)
 8001cc4:	1009883a 	mov	r4,r2
 8001cc8:	180b883a 	mov	r5,r3
 8001ccc:	000d883a 	mov	r6,zero
 8001cd0:	01cffc34 	movhi	r7,16368
 8001cd4:	800c25c0 	call	800c25c <__subdf3>
 8001cd8:	1009883a 	mov	r4,r2
 8001cdc:	180b883a 	mov	r5,r3
 8001ce0:	2025883a 	mov	r18,r4
 8001ce4:	2827883a 	mov	r19,r5
 8001ce8:	d0a6e717 	ldw	r2,-25700(gp)
 8001cec:	d126e804 	addi	r4,gp,-25696
 8001cf0:	20c00017 	ldw	r3,0(r4)
 8001cf4:	1009883a 	mov	r4,r2
 8001cf8:	180b883a 	mov	r5,r3
 8001cfc:	000d883a 	mov	r6,zero
 8001d00:	01cffc34 	movhi	r7,16368
 8001d04:	800a5900 	call	800a590 <__adddf3>
 8001d08:	1009883a 	mov	r4,r2
 8001d0c:	180b883a 	mov	r5,r3
 8001d10:	2029883a 	mov	r20,r4
 8001d14:	282b883a 	mov	r21,r5
 8001d18:	d0a6f017 	ldw	r2,-25664(gp)
 8001d1c:	d126f104 	addi	r4,gp,-25660
 8001d20:	20c00017 	ldw	r3,0(r4)
 8001d24:	1009883a 	mov	r4,r2
 8001d28:	180b883a 	mov	r5,r3
 8001d2c:	80054fc0 	call	80054fc <cos>
 8001d30:	100f883a 	mov	r7,r2
 8001d34:	1811883a 	mov	r8,r3
 8001d38:	a009883a 	mov	r4,r20
 8001d3c:	a80b883a 	mov	r5,r21
 8001d40:	380d883a 	mov	r6,r7
 8001d44:	400f883a 	mov	r7,r8
 8001d48:	800b9f00 	call	800b9f0 <__muldf3>
 8001d4c:	1009883a 	mov	r4,r2
 8001d50:	180b883a 	mov	r5,r3
 8001d54:	2005883a 	mov	r2,r4
 8001d58:	2807883a 	mov	r3,r5
 8001d5c:	9009883a 	mov	r4,r18
 8001d60:	980b883a 	mov	r5,r19
 8001d64:	100d883a 	mov	r6,r2
 8001d68:	180f883a 	mov	r7,r3
 8001d6c:	800a5900 	call	800a590 <__adddf3>
 8001d70:	1009883a 	mov	r4,r2
 8001d74:	180b883a 	mov	r5,r3
 8001d78:	2005883a 	mov	r2,r4
 8001d7c:	2807883a 	mov	r3,r5
 8001d80:	8009883a 	mov	r4,r16
 8001d84:	880b883a 	mov	r5,r17
 8001d88:	100d883a 	mov	r6,r2
 8001d8c:	180f883a 	mov	r7,r3
 8001d90:	800b9f00 	call	800b9f0 <__muldf3>
 8001d94:	100f883a 	mov	r7,r2
 8001d98:	1811883a 	mov	r8,r3
 8001d9c:	380b883a 	mov	r5,r7
 8001da0:	400d883a 	mov	r6,r8
 8001da4:	d0a6ff17 	ldw	r2,-25604(gp)
 8001da8:	d1270004 	addi	r4,gp,-25600
 8001dac:	20c00017 	ldw	r3,0(r4)
 8001db0:	2809883a 	mov	r4,r5
 8001db4:	300b883a 	mov	r5,r6
 8001db8:	100d883a 	mov	r6,r2
 8001dbc:	180f883a 	mov	r7,r3
 8001dc0:	800ae2c0 	call	800ae2c <__divdf3>
 8001dc4:	1009883a 	mov	r4,r2
 8001dc8:	180b883a 	mov	r5,r3
 8001dcc:	2005883a 	mov	r2,r4
 8001dd0:	2807883a 	mov	r3,r5
 8001dd4:	d0a6ec15 	stw	r2,-25680(gp)
 8001dd8:	d126ed04 	addi	r4,gp,-25676
 8001ddc:	20c00015 	stw	r3,0(r4)
		b2 = (A*((A+1)+((A-1)*cos(w0))-(2*sqrt(A)*alpha)))/a0;
 8001de0:	d0a6e717 	ldw	r2,-25700(gp)
 8001de4:	d126e804 	addi	r4,gp,-25696
 8001de8:	20c00017 	ldw	r3,0(r4)
 8001dec:	1009883a 	mov	r4,r2
 8001df0:	180b883a 	mov	r5,r3
 8001df4:	000d883a 	mov	r6,zero
 8001df8:	01cffc34 	movhi	r7,16368
 8001dfc:	800a5900 	call	800a590 <__adddf3>
 8001e00:	1009883a 	mov	r4,r2
 8001e04:	180b883a 	mov	r5,r3
 8001e08:	2021883a 	mov	r16,r4
 8001e0c:	2823883a 	mov	r17,r5
 8001e10:	d0a6e717 	ldw	r2,-25700(gp)
 8001e14:	d126e804 	addi	r4,gp,-25696
 8001e18:	20c00017 	ldw	r3,0(r4)
 8001e1c:	1009883a 	mov	r4,r2
 8001e20:	180b883a 	mov	r5,r3
 8001e24:	000d883a 	mov	r6,zero
 8001e28:	01cffc34 	movhi	r7,16368
 8001e2c:	800c25c0 	call	800c25c <__subdf3>
 8001e30:	1009883a 	mov	r4,r2
 8001e34:	180b883a 	mov	r5,r3
 8001e38:	2025883a 	mov	r18,r4
 8001e3c:	2827883a 	mov	r19,r5
 8001e40:	d0a6f017 	ldw	r2,-25664(gp)
 8001e44:	d126f104 	addi	r4,gp,-25660
 8001e48:	20c00017 	ldw	r3,0(r4)
 8001e4c:	1009883a 	mov	r4,r2
 8001e50:	180b883a 	mov	r5,r3
 8001e54:	80054fc0 	call	80054fc <cos>
 8001e58:	100f883a 	mov	r7,r2
 8001e5c:	1811883a 	mov	r8,r3
 8001e60:	9009883a 	mov	r4,r18
 8001e64:	980b883a 	mov	r5,r19
 8001e68:	380d883a 	mov	r6,r7
 8001e6c:	400f883a 	mov	r7,r8
 8001e70:	800b9f00 	call	800b9f0 <__muldf3>
 8001e74:	1009883a 	mov	r4,r2
 8001e78:	180b883a 	mov	r5,r3
 8001e7c:	2005883a 	mov	r2,r4
 8001e80:	2807883a 	mov	r3,r5
 8001e84:	8009883a 	mov	r4,r16
 8001e88:	880b883a 	mov	r5,r17
 8001e8c:	100d883a 	mov	r6,r2
 8001e90:	180f883a 	mov	r7,r3
 8001e94:	800a5900 	call	800a590 <__adddf3>
 8001e98:	1009883a 	mov	r4,r2
 8001e9c:	180b883a 	mov	r5,r3
 8001ea0:	2021883a 	mov	r16,r4
 8001ea4:	2823883a 	mov	r17,r5
 8001ea8:	d0a6e717 	ldw	r2,-25700(gp)
 8001eac:	d126e804 	addi	r4,gp,-25696
 8001eb0:	20c00017 	ldw	r3,0(r4)
 8001eb4:	1009883a 	mov	r4,r2
 8001eb8:	180b883a 	mov	r5,r3
 8001ebc:	8005e1c0 	call	8005e1c <sqrt>
 8001ec0:	100f883a 	mov	r7,r2
 8001ec4:	1811883a 	mov	r8,r3
 8001ec8:	3809883a 	mov	r4,r7
 8001ecc:	400b883a 	mov	r5,r8
 8001ed0:	380d883a 	mov	r6,r7
 8001ed4:	400f883a 	mov	r7,r8
 8001ed8:	800a5900 	call	800a590 <__adddf3>
 8001edc:	100f883a 	mov	r7,r2
 8001ee0:	1811883a 	mov	r8,r3
 8001ee4:	380b883a 	mov	r5,r7
 8001ee8:	400d883a 	mov	r6,r8
 8001eec:	d0a70117 	ldw	r2,-25596(gp)
 8001ef0:	d1270204 	addi	r4,gp,-25592
 8001ef4:	20c00017 	ldw	r3,0(r4)
 8001ef8:	2809883a 	mov	r4,r5
 8001efc:	300b883a 	mov	r5,r6
 8001f00:	100d883a 	mov	r6,r2
 8001f04:	180f883a 	mov	r7,r3
 8001f08:	800b9f00 	call	800b9f0 <__muldf3>
 8001f0c:	1009883a 	mov	r4,r2
 8001f10:	180b883a 	mov	r5,r3
 8001f14:	2005883a 	mov	r2,r4
 8001f18:	2807883a 	mov	r3,r5
 8001f1c:	8009883a 	mov	r4,r16
 8001f20:	880b883a 	mov	r5,r17
 8001f24:	100d883a 	mov	r6,r2
 8001f28:	180f883a 	mov	r7,r3
 8001f2c:	800c25c0 	call	800c25c <__subdf3>
 8001f30:	100f883a 	mov	r7,r2
 8001f34:	1811883a 	mov	r8,r3
 8001f38:	380b883a 	mov	r5,r7
 8001f3c:	400d883a 	mov	r6,r8
 8001f40:	d0a6e717 	ldw	r2,-25700(gp)
 8001f44:	d126e804 	addi	r4,gp,-25696
 8001f48:	20c00017 	ldw	r3,0(r4)
 8001f4c:	2809883a 	mov	r4,r5
 8001f50:	300b883a 	mov	r5,r6
 8001f54:	100d883a 	mov	r6,r2
 8001f58:	180f883a 	mov	r7,r3
 8001f5c:	800b9f00 	call	800b9f0 <__muldf3>
 8001f60:	100f883a 	mov	r7,r2
 8001f64:	1811883a 	mov	r8,r3
 8001f68:	380b883a 	mov	r5,r7
 8001f6c:	400d883a 	mov	r6,r8
 8001f70:	d0a6ff17 	ldw	r2,-25604(gp)
 8001f74:	d1270004 	addi	r4,gp,-25600
 8001f78:	20c00017 	ldw	r3,0(r4)
 8001f7c:	2809883a 	mov	r4,r5
 8001f80:	300b883a 	mov	r5,r6
 8001f84:	100d883a 	mov	r6,r2
 8001f88:	180f883a 	mov	r7,r3
 8001f8c:	800ae2c0 	call	800ae2c <__divdf3>
 8001f90:	1009883a 	mov	r4,r2
 8001f94:	180b883a 	mov	r5,r3
 8001f98:	2005883a 	mov	r2,r4
 8001f9c:	2807883a 	mov	r3,r5
 8001fa0:	d0a6e415 	stw	r2,-25712(gp)
 8001fa4:	d126e504 	addi	r4,gp,-25708
 8001fa8:	20c00015 	stw	r3,0(r4)
		a1 = -(2*((A-1) - ((A+1)*cos(w0))))/a0;
 8001fac:	d0a6e717 	ldw	r2,-25700(gp)
 8001fb0:	d126e804 	addi	r4,gp,-25696
 8001fb4:	20c00017 	ldw	r3,0(r4)
 8001fb8:	1009883a 	mov	r4,r2
 8001fbc:	180b883a 	mov	r5,r3
 8001fc0:	000d883a 	mov	r6,zero
 8001fc4:	01cffc34 	movhi	r7,16368
 8001fc8:	800c25c0 	call	800c25c <__subdf3>
 8001fcc:	1009883a 	mov	r4,r2
 8001fd0:	180b883a 	mov	r5,r3
 8001fd4:	2021883a 	mov	r16,r4
 8001fd8:	2823883a 	mov	r17,r5
 8001fdc:	d0a6e717 	ldw	r2,-25700(gp)
 8001fe0:	d126e804 	addi	r4,gp,-25696
 8001fe4:	20c00017 	ldw	r3,0(r4)
 8001fe8:	1009883a 	mov	r4,r2
 8001fec:	180b883a 	mov	r5,r3
 8001ff0:	000d883a 	mov	r6,zero
 8001ff4:	01cffc34 	movhi	r7,16368
 8001ff8:	800a5900 	call	800a590 <__adddf3>
 8001ffc:	1009883a 	mov	r4,r2
 8002000:	180b883a 	mov	r5,r3
 8002004:	2025883a 	mov	r18,r4
 8002008:	2827883a 	mov	r19,r5
 800200c:	d0a6f017 	ldw	r2,-25664(gp)
 8002010:	d126f104 	addi	r4,gp,-25660
 8002014:	20c00017 	ldw	r3,0(r4)
 8002018:	1009883a 	mov	r4,r2
 800201c:	180b883a 	mov	r5,r3
 8002020:	80054fc0 	call	80054fc <cos>
 8002024:	100f883a 	mov	r7,r2
 8002028:	1811883a 	mov	r8,r3
 800202c:	9009883a 	mov	r4,r18
 8002030:	980b883a 	mov	r5,r19
 8002034:	380d883a 	mov	r6,r7
 8002038:	400f883a 	mov	r7,r8
 800203c:	800b9f00 	call	800b9f0 <__muldf3>
 8002040:	1009883a 	mov	r4,r2
 8002044:	180b883a 	mov	r5,r3
 8002048:	2005883a 	mov	r2,r4
 800204c:	2807883a 	mov	r3,r5
 8002050:	8009883a 	mov	r4,r16
 8002054:	880b883a 	mov	r5,r17
 8002058:	100d883a 	mov	r6,r2
 800205c:	180f883a 	mov	r7,r3
 8002060:	800c25c0 	call	800c25c <__subdf3>
 8002064:	1009883a 	mov	r4,r2
 8002068:	180b883a 	mov	r5,r3
 800206c:	2005883a 	mov	r2,r4
 8002070:	2807883a 	mov	r3,r5
 8002074:	1009883a 	mov	r4,r2
 8002078:	180b883a 	mov	r5,r3
 800207c:	100d883a 	mov	r6,r2
 8002080:	180f883a 	mov	r7,r3
 8002084:	800a5900 	call	800a590 <__adddf3>
 8002088:	1009883a 	mov	r4,r2
 800208c:	180b883a 	mov	r5,r3
 8002090:	2005883a 	mov	r2,r4
 8002094:	2807883a 	mov	r3,r5
 8002098:	e0bff615 	stw	r2,-40(fp)
 800209c:	1920003c 	xorhi	r4,r3,32768
 80020a0:	e13ff715 	stw	r4,-36(fp)
 80020a4:	d0a6ff17 	ldw	r2,-25604(gp)
 80020a8:	d1270004 	addi	r4,gp,-25600
 80020ac:	20c00017 	ldw	r3,0(r4)
 80020b0:	e13ff617 	ldw	r4,-40(fp)
 80020b4:	e17ff717 	ldw	r5,-36(fp)
 80020b8:	100d883a 	mov	r6,r2
 80020bc:	180f883a 	mov	r7,r3
 80020c0:	800ae2c0 	call	800ae2c <__divdf3>
 80020c4:	1009883a 	mov	r4,r2
 80020c8:	180b883a 	mov	r5,r3
 80020cc:	2005883a 	mov	r2,r4
 80020d0:	2807883a 	mov	r3,r5
 80020d4:	d0a6ee15 	stw	r2,-25672(gp)
 80020d8:	d126ef04 	addi	r4,gp,-25668
 80020dc:	20c00015 	stw	r3,0(r4)
		a2 = -((A+1) - ((A-1)*cos(w0)) - (2*sqrt(A)*alpha))/a0;
 80020e0:	d0a6e717 	ldw	r2,-25700(gp)
 80020e4:	d126e804 	addi	r4,gp,-25696
 80020e8:	20c00017 	ldw	r3,0(r4)
 80020ec:	1009883a 	mov	r4,r2
 80020f0:	180b883a 	mov	r5,r3
 80020f4:	000d883a 	mov	r6,zero
 80020f8:	01cffc34 	movhi	r7,16368
 80020fc:	800a5900 	call	800a590 <__adddf3>
 8002100:	1009883a 	mov	r4,r2
 8002104:	180b883a 	mov	r5,r3
 8002108:	2021883a 	mov	r16,r4
 800210c:	2823883a 	mov	r17,r5
 8002110:	d0a6e717 	ldw	r2,-25700(gp)
 8002114:	d126e804 	addi	r4,gp,-25696
 8002118:	20c00017 	ldw	r3,0(r4)
 800211c:	1009883a 	mov	r4,r2
 8002120:	180b883a 	mov	r5,r3
 8002124:	000d883a 	mov	r6,zero
 8002128:	01cffc34 	movhi	r7,16368
 800212c:	800c25c0 	call	800c25c <__subdf3>
 8002130:	1009883a 	mov	r4,r2
 8002134:	180b883a 	mov	r5,r3
 8002138:	2025883a 	mov	r18,r4
 800213c:	2827883a 	mov	r19,r5
 8002140:	d0a6f017 	ldw	r2,-25664(gp)
 8002144:	d126f104 	addi	r4,gp,-25660
 8002148:	20c00017 	ldw	r3,0(r4)
 800214c:	1009883a 	mov	r4,r2
 8002150:	180b883a 	mov	r5,r3
 8002154:	80054fc0 	call	80054fc <cos>
 8002158:	100f883a 	mov	r7,r2
 800215c:	1811883a 	mov	r8,r3
 8002160:	9009883a 	mov	r4,r18
 8002164:	980b883a 	mov	r5,r19
 8002168:	380d883a 	mov	r6,r7
 800216c:	400f883a 	mov	r7,r8
 8002170:	800b9f00 	call	800b9f0 <__muldf3>
 8002174:	1009883a 	mov	r4,r2
 8002178:	180b883a 	mov	r5,r3
 800217c:	2005883a 	mov	r2,r4
 8002180:	2807883a 	mov	r3,r5
 8002184:	8009883a 	mov	r4,r16
 8002188:	880b883a 	mov	r5,r17
 800218c:	100d883a 	mov	r6,r2
 8002190:	180f883a 	mov	r7,r3
 8002194:	800c25c0 	call	800c25c <__subdf3>
 8002198:	1009883a 	mov	r4,r2
 800219c:	180b883a 	mov	r5,r3
 80021a0:	2021883a 	mov	r16,r4
 80021a4:	2823883a 	mov	r17,r5
 80021a8:	d0a6e717 	ldw	r2,-25700(gp)
 80021ac:	d126e804 	addi	r4,gp,-25696
 80021b0:	20c00017 	ldw	r3,0(r4)
 80021b4:	1009883a 	mov	r4,r2
 80021b8:	180b883a 	mov	r5,r3
 80021bc:	8005e1c0 	call	8005e1c <sqrt>
 80021c0:	100f883a 	mov	r7,r2
 80021c4:	1811883a 	mov	r8,r3
 80021c8:	3809883a 	mov	r4,r7
 80021cc:	400b883a 	mov	r5,r8
 80021d0:	380d883a 	mov	r6,r7
 80021d4:	400f883a 	mov	r7,r8
 80021d8:	800a5900 	call	800a590 <__adddf3>
 80021dc:	100f883a 	mov	r7,r2
 80021e0:	1811883a 	mov	r8,r3
 80021e4:	380b883a 	mov	r5,r7
 80021e8:	400d883a 	mov	r6,r8
 80021ec:	d0a70117 	ldw	r2,-25596(gp)
 80021f0:	d1270204 	addi	r4,gp,-25592
 80021f4:	20c00017 	ldw	r3,0(r4)
 80021f8:	2809883a 	mov	r4,r5
 80021fc:	300b883a 	mov	r5,r6
 8002200:	100d883a 	mov	r6,r2
 8002204:	180f883a 	mov	r7,r3
 8002208:	800b9f00 	call	800b9f0 <__muldf3>
 800220c:	1009883a 	mov	r4,r2
 8002210:	180b883a 	mov	r5,r3
 8002214:	2005883a 	mov	r2,r4
 8002218:	2807883a 	mov	r3,r5
 800221c:	8009883a 	mov	r4,r16
 8002220:	880b883a 	mov	r5,r17
 8002224:	100d883a 	mov	r6,r2
 8002228:	180f883a 	mov	r7,r3
 800222c:	800c25c0 	call	800c25c <__subdf3>
 8002230:	1009883a 	mov	r4,r2
 8002234:	180b883a 	mov	r5,r3
 8002238:	2005883a 	mov	r2,r4
 800223c:	2807883a 	mov	r3,r5
 8002240:	102d883a 	mov	r22,r2
 8002244:	1de0003c 	xorhi	r23,r3,32768
 8002248:	d0a6ff17 	ldw	r2,-25604(gp)
 800224c:	d1270004 	addi	r4,gp,-25600
 8002250:	20c00017 	ldw	r3,0(r4)
 8002254:	b009883a 	mov	r4,r22
 8002258:	b80b883a 	mov	r5,r23
 800225c:	100d883a 	mov	r6,r2
 8002260:	180f883a 	mov	r7,r3
 8002264:	800ae2c0 	call	800ae2c <__divdf3>
 8002268:	1009883a 	mov	r4,r2
 800226c:	180b883a 	mov	r5,r3
 8002270:	2005883a 	mov	r2,r4
 8002274:	2807883a 	mov	r3,r5
 8002278:	d0a6f915 	stw	r2,-25628(gp)
 800227c:	d126fa04 	addi	r4,gp,-25624
 8002280:	20c00015 	stw	r3,0(r4)
		break;
 8002284:	00016206 	br	8002810 <process_filter+0x1dd8>
	case 4: //low pass
		b0 = ((1-cos(w0))/(2))/a0;
 8002288:	d0a6f017 	ldw	r2,-25664(gp)
 800228c:	d126f104 	addi	r4,gp,-25660
 8002290:	20c00017 	ldw	r3,0(r4)
 8002294:	1009883a 	mov	r4,r2
 8002298:	180b883a 	mov	r5,r3
 800229c:	80054fc0 	call	80054fc <cos>
 80022a0:	100f883a 	mov	r7,r2
 80022a4:	1811883a 	mov	r8,r3
 80022a8:	0009883a 	mov	r4,zero
 80022ac:	014ffc34 	movhi	r5,16368
 80022b0:	380d883a 	mov	r6,r7
 80022b4:	400f883a 	mov	r7,r8
 80022b8:	800c25c0 	call	800c25c <__subdf3>
 80022bc:	1009883a 	mov	r4,r2
 80022c0:	180b883a 	mov	r5,r3
 80022c4:	2005883a 	mov	r2,r4
 80022c8:	2807883a 	mov	r3,r5
 80022cc:	1009883a 	mov	r4,r2
 80022d0:	180b883a 	mov	r5,r3
 80022d4:	000d883a 	mov	r6,zero
 80022d8:	01d00034 	movhi	r7,16384
 80022dc:	800ae2c0 	call	800ae2c <__divdf3>
 80022e0:	100f883a 	mov	r7,r2
 80022e4:	1811883a 	mov	r8,r3
 80022e8:	380b883a 	mov	r5,r7
 80022ec:	400d883a 	mov	r6,r8
 80022f0:	d0a6ff17 	ldw	r2,-25604(gp)
 80022f4:	d1270004 	addi	r4,gp,-25600
 80022f8:	20c00017 	ldw	r3,0(r4)
 80022fc:	2809883a 	mov	r4,r5
 8002300:	300b883a 	mov	r5,r6
 8002304:	100d883a 	mov	r6,r2
 8002308:	180f883a 	mov	r7,r3
 800230c:	800ae2c0 	call	800ae2c <__divdf3>
 8002310:	1009883a 	mov	r4,r2
 8002314:	180b883a 	mov	r5,r3
 8002318:	2005883a 	mov	r2,r4
 800231c:	2807883a 	mov	r3,r5
 8002320:	d0a6fd15 	stw	r2,-25612(gp)
 8002324:	d126fe04 	addi	r4,gp,-25608
 8002328:	20c00015 	stw	r3,0(r4)
		b1 = (1-cos(w0))/a0;
 800232c:	d0a6f017 	ldw	r2,-25664(gp)
 8002330:	d126f104 	addi	r4,gp,-25660
 8002334:	20c00017 	ldw	r3,0(r4)
 8002338:	1009883a 	mov	r4,r2
 800233c:	180b883a 	mov	r5,r3
 8002340:	80054fc0 	call	80054fc <cos>
 8002344:	100f883a 	mov	r7,r2
 8002348:	1811883a 	mov	r8,r3
 800234c:	0009883a 	mov	r4,zero
 8002350:	014ffc34 	movhi	r5,16368
 8002354:	380d883a 	mov	r6,r7
 8002358:	400f883a 	mov	r7,r8
 800235c:	800c25c0 	call	800c25c <__subdf3>
 8002360:	100f883a 	mov	r7,r2
 8002364:	1811883a 	mov	r8,r3
 8002368:	380b883a 	mov	r5,r7
 800236c:	400d883a 	mov	r6,r8
 8002370:	d0a6ff17 	ldw	r2,-25604(gp)
 8002374:	d1270004 	addi	r4,gp,-25600
 8002378:	20c00017 	ldw	r3,0(r4)
 800237c:	2809883a 	mov	r4,r5
 8002380:	300b883a 	mov	r5,r6
 8002384:	100d883a 	mov	r6,r2
 8002388:	180f883a 	mov	r7,r3
 800238c:	800ae2c0 	call	800ae2c <__divdf3>
 8002390:	1009883a 	mov	r4,r2
 8002394:	180b883a 	mov	r5,r3
 8002398:	2005883a 	mov	r2,r4
 800239c:	2807883a 	mov	r3,r5
 80023a0:	d0a6ec15 	stw	r2,-25680(gp)
 80023a4:	d126ed04 	addi	r4,gp,-25676
 80023a8:	20c00015 	stw	r3,0(r4)
		b2 = ((1-cos(w0))/(2))/a0;
 80023ac:	d0a6f017 	ldw	r2,-25664(gp)
 80023b0:	d126f104 	addi	r4,gp,-25660
 80023b4:	20c00017 	ldw	r3,0(r4)
 80023b8:	1009883a 	mov	r4,r2
 80023bc:	180b883a 	mov	r5,r3
 80023c0:	80054fc0 	call	80054fc <cos>
 80023c4:	100f883a 	mov	r7,r2
 80023c8:	1811883a 	mov	r8,r3
 80023cc:	0009883a 	mov	r4,zero
 80023d0:	014ffc34 	movhi	r5,16368
 80023d4:	380d883a 	mov	r6,r7
 80023d8:	400f883a 	mov	r7,r8
 80023dc:	800c25c0 	call	800c25c <__subdf3>
 80023e0:	1009883a 	mov	r4,r2
 80023e4:	180b883a 	mov	r5,r3
 80023e8:	2005883a 	mov	r2,r4
 80023ec:	2807883a 	mov	r3,r5
 80023f0:	1009883a 	mov	r4,r2
 80023f4:	180b883a 	mov	r5,r3
 80023f8:	000d883a 	mov	r6,zero
 80023fc:	01d00034 	movhi	r7,16384
 8002400:	800ae2c0 	call	800ae2c <__divdf3>
 8002404:	100f883a 	mov	r7,r2
 8002408:	1811883a 	mov	r8,r3
 800240c:	380b883a 	mov	r5,r7
 8002410:	400d883a 	mov	r6,r8
 8002414:	d0a6ff17 	ldw	r2,-25604(gp)
 8002418:	d1270004 	addi	r4,gp,-25600
 800241c:	20c00017 	ldw	r3,0(r4)
 8002420:	2809883a 	mov	r4,r5
 8002424:	300b883a 	mov	r5,r6
 8002428:	100d883a 	mov	r6,r2
 800242c:	180f883a 	mov	r7,r3
 8002430:	800ae2c0 	call	800ae2c <__divdf3>
 8002434:	1009883a 	mov	r4,r2
 8002438:	180b883a 	mov	r5,r3
 800243c:	2005883a 	mov	r2,r4
 8002440:	2807883a 	mov	r3,r5
 8002444:	d0a6e415 	stw	r2,-25712(gp)
 8002448:	d126e504 	addi	r4,gp,-25708
 800244c:	20c00015 	stw	r3,0(r4)
		a1 = -(-2*cos(w0))/a0;
 8002450:	d0a6f017 	ldw	r2,-25664(gp)
 8002454:	d126f104 	addi	r4,gp,-25660
 8002458:	20c00017 	ldw	r3,0(r4)
 800245c:	1009883a 	mov	r4,r2
 8002460:	180b883a 	mov	r5,r3
 8002464:	80054fc0 	call	80054fc <cos>
 8002468:	100f883a 	mov	r7,r2
 800246c:	1811883a 	mov	r8,r3
 8002470:	3809883a 	mov	r4,r7
 8002474:	400b883a 	mov	r5,r8
 8002478:	380d883a 	mov	r6,r7
 800247c:	400f883a 	mov	r7,r8
 8002480:	800a5900 	call	800a590 <__adddf3>
 8002484:	100f883a 	mov	r7,r2
 8002488:	1811883a 	mov	r8,r3
 800248c:	380b883a 	mov	r5,r7
 8002490:	400d883a 	mov	r6,r8
 8002494:	d0a6ff17 	ldw	r2,-25604(gp)
 8002498:	d1270004 	addi	r4,gp,-25600
 800249c:	20c00017 	ldw	r3,0(r4)
 80024a0:	2809883a 	mov	r4,r5
 80024a4:	300b883a 	mov	r5,r6
 80024a8:	100d883a 	mov	r6,r2
 80024ac:	180f883a 	mov	r7,r3
 80024b0:	800ae2c0 	call	800ae2c <__divdf3>
 80024b4:	1009883a 	mov	r4,r2
 80024b8:	180b883a 	mov	r5,r3
 80024bc:	2005883a 	mov	r2,r4
 80024c0:	2807883a 	mov	r3,r5
 80024c4:	d0a6ee15 	stw	r2,-25672(gp)
 80024c8:	d126ef04 	addi	r4,gp,-25668
 80024cc:	20c00015 	stw	r3,0(r4)
		a2 = -(1-alpha)/a0;
 80024d0:	d0a70117 	ldw	r2,-25596(gp)
 80024d4:	d1270204 	addi	r4,gp,-25592
 80024d8:	20c00017 	ldw	r3,0(r4)
 80024dc:	0009883a 	mov	r4,zero
 80024e0:	014ffc34 	movhi	r5,16368
 80024e4:	100d883a 	mov	r6,r2
 80024e8:	180f883a 	mov	r7,r3
 80024ec:	800c25c0 	call	800c25c <__subdf3>
 80024f0:	1009883a 	mov	r4,r2
 80024f4:	180b883a 	mov	r5,r3
 80024f8:	2005883a 	mov	r2,r4
 80024fc:	2807883a 	mov	r3,r5
 8002500:	1029883a 	mov	r20,r2
 8002504:	1d60003c 	xorhi	r21,r3,32768
 8002508:	d0a6ff17 	ldw	r2,-25604(gp)
 800250c:	d1270004 	addi	r4,gp,-25600
 8002510:	20c00017 	ldw	r3,0(r4)
 8002514:	a009883a 	mov	r4,r20
 8002518:	a80b883a 	mov	r5,r21
 800251c:	100d883a 	mov	r6,r2
 8002520:	180f883a 	mov	r7,r3
 8002524:	800ae2c0 	call	800ae2c <__divdf3>
 8002528:	1009883a 	mov	r4,r2
 800252c:	180b883a 	mov	r5,r3
 8002530:	2005883a 	mov	r2,r4
 8002534:	2807883a 	mov	r3,r5
 8002538:	d0a6f915 	stw	r2,-25628(gp)
 800253c:	d126fa04 	addi	r4,gp,-25624
 8002540:	20c00015 	stw	r3,0(r4)
		break;
 8002544:	0000b206 	br	8002810 <process_filter+0x1dd8>
	case 5: //high pass
		b0 = ((1+cos(w0))/(2))/a0;
 8002548:	d0a6f017 	ldw	r2,-25664(gp)
 800254c:	d126f104 	addi	r4,gp,-25660
 8002550:	20c00017 	ldw	r3,0(r4)
 8002554:	1009883a 	mov	r4,r2
 8002558:	180b883a 	mov	r5,r3
 800255c:	80054fc0 	call	80054fc <cos>
 8002560:	100b883a 	mov	r5,r2
 8002564:	180d883a 	mov	r6,r3
 8002568:	2809883a 	mov	r4,r5
 800256c:	300b883a 	mov	r5,r6
 8002570:	000d883a 	mov	r6,zero
 8002574:	01cffc34 	movhi	r7,16368
 8002578:	800a5900 	call	800a590 <__adddf3>
 800257c:	1009883a 	mov	r4,r2
 8002580:	180b883a 	mov	r5,r3
 8002584:	2005883a 	mov	r2,r4
 8002588:	2807883a 	mov	r3,r5
 800258c:	1009883a 	mov	r4,r2
 8002590:	180b883a 	mov	r5,r3
 8002594:	000d883a 	mov	r6,zero
 8002598:	01d00034 	movhi	r7,16384
 800259c:	800ae2c0 	call	800ae2c <__divdf3>
 80025a0:	100f883a 	mov	r7,r2
 80025a4:	1811883a 	mov	r8,r3
 80025a8:	380b883a 	mov	r5,r7
 80025ac:	400d883a 	mov	r6,r8
 80025b0:	d0a6ff17 	ldw	r2,-25604(gp)
 80025b4:	d1270004 	addi	r4,gp,-25600
 80025b8:	20c00017 	ldw	r3,0(r4)
 80025bc:	2809883a 	mov	r4,r5
 80025c0:	300b883a 	mov	r5,r6
 80025c4:	100d883a 	mov	r6,r2
 80025c8:	180f883a 	mov	r7,r3
 80025cc:	800ae2c0 	call	800ae2c <__divdf3>
 80025d0:	1009883a 	mov	r4,r2
 80025d4:	180b883a 	mov	r5,r3
 80025d8:	2005883a 	mov	r2,r4
 80025dc:	2807883a 	mov	r3,r5
 80025e0:	d0a6fd15 	stw	r2,-25612(gp)
 80025e4:	d126fe04 	addi	r4,gp,-25608
 80025e8:	20c00015 	stw	r3,0(r4)
		b1 = -(1+cos(w0))/a0;
 80025ec:	d0a6f017 	ldw	r2,-25664(gp)
 80025f0:	d126f104 	addi	r4,gp,-25660
 80025f4:	20c00017 	ldw	r3,0(r4)
 80025f8:	1009883a 	mov	r4,r2
 80025fc:	180b883a 	mov	r5,r3
 8002600:	80054fc0 	call	80054fc <cos>
 8002604:	100b883a 	mov	r5,r2
 8002608:	180d883a 	mov	r6,r3
 800260c:	2809883a 	mov	r4,r5
 8002610:	300b883a 	mov	r5,r6
 8002614:	000d883a 	mov	r6,zero
 8002618:	01cffc34 	movhi	r7,16368
 800261c:	800a5900 	call	800a590 <__adddf3>
 8002620:	1009883a 	mov	r4,r2
 8002624:	180b883a 	mov	r5,r3
 8002628:	2005883a 	mov	r2,r4
 800262c:	2807883a 	mov	r3,r5
 8002630:	1025883a 	mov	r18,r2
 8002634:	1ce0003c 	xorhi	r19,r3,32768
 8002638:	d0a6ff17 	ldw	r2,-25604(gp)
 800263c:	d1270004 	addi	r4,gp,-25600
 8002640:	20c00017 	ldw	r3,0(r4)
 8002644:	9009883a 	mov	r4,r18
 8002648:	980b883a 	mov	r5,r19
 800264c:	100d883a 	mov	r6,r2
 8002650:	180f883a 	mov	r7,r3
 8002654:	800ae2c0 	call	800ae2c <__divdf3>
 8002658:	1009883a 	mov	r4,r2
 800265c:	180b883a 	mov	r5,r3
 8002660:	2005883a 	mov	r2,r4
 8002664:	2807883a 	mov	r3,r5
 8002668:	d0a6ec15 	stw	r2,-25680(gp)
 800266c:	d126ed04 	addi	r4,gp,-25676
 8002670:	20c00015 	stw	r3,0(r4)
		b2 = ((1+cos(w0))/(2))/a0;
 8002674:	d0a6f017 	ldw	r2,-25664(gp)
 8002678:	d126f104 	addi	r4,gp,-25660
 800267c:	20c00017 	ldw	r3,0(r4)
 8002680:	1009883a 	mov	r4,r2
 8002684:	180b883a 	mov	r5,r3
 8002688:	80054fc0 	call	80054fc <cos>
 800268c:	100b883a 	mov	r5,r2
 8002690:	180d883a 	mov	r6,r3
 8002694:	2809883a 	mov	r4,r5
 8002698:	300b883a 	mov	r5,r6
 800269c:	000d883a 	mov	r6,zero
 80026a0:	01cffc34 	movhi	r7,16368
 80026a4:	800a5900 	call	800a590 <__adddf3>
 80026a8:	1009883a 	mov	r4,r2
 80026ac:	180b883a 	mov	r5,r3
 80026b0:	2005883a 	mov	r2,r4
 80026b4:	2807883a 	mov	r3,r5
 80026b8:	1009883a 	mov	r4,r2
 80026bc:	180b883a 	mov	r5,r3
 80026c0:	000d883a 	mov	r6,zero
 80026c4:	01d00034 	movhi	r7,16384
 80026c8:	800ae2c0 	call	800ae2c <__divdf3>
 80026cc:	100f883a 	mov	r7,r2
 80026d0:	1811883a 	mov	r8,r3
 80026d4:	380b883a 	mov	r5,r7
 80026d8:	400d883a 	mov	r6,r8
 80026dc:	d0a6ff17 	ldw	r2,-25604(gp)
 80026e0:	d1270004 	addi	r4,gp,-25600
 80026e4:	20c00017 	ldw	r3,0(r4)
 80026e8:	2809883a 	mov	r4,r5
 80026ec:	300b883a 	mov	r5,r6
 80026f0:	100d883a 	mov	r6,r2
 80026f4:	180f883a 	mov	r7,r3
 80026f8:	800ae2c0 	call	800ae2c <__divdf3>
 80026fc:	1009883a 	mov	r4,r2
 8002700:	180b883a 	mov	r5,r3
 8002704:	2005883a 	mov	r2,r4
 8002708:	2807883a 	mov	r3,r5
 800270c:	d0a6e415 	stw	r2,-25712(gp)
 8002710:	d126e504 	addi	r4,gp,-25708
 8002714:	20c00015 	stw	r3,0(r4)
		a1 = -(-2*cos(w0))/a0;
 8002718:	d0a6f017 	ldw	r2,-25664(gp)
 800271c:	d126f104 	addi	r4,gp,-25660
 8002720:	20c00017 	ldw	r3,0(r4)
 8002724:	1009883a 	mov	r4,r2
 8002728:	180b883a 	mov	r5,r3
 800272c:	80054fc0 	call	80054fc <cos>
 8002730:	100f883a 	mov	r7,r2
 8002734:	1811883a 	mov	r8,r3
 8002738:	3809883a 	mov	r4,r7
 800273c:	400b883a 	mov	r5,r8
 8002740:	380d883a 	mov	r6,r7
 8002744:	400f883a 	mov	r7,r8
 8002748:	800a5900 	call	800a590 <__adddf3>
 800274c:	100f883a 	mov	r7,r2
 8002750:	1811883a 	mov	r8,r3
 8002754:	380b883a 	mov	r5,r7
 8002758:	400d883a 	mov	r6,r8
 800275c:	d0a6ff17 	ldw	r2,-25604(gp)
 8002760:	d1270004 	addi	r4,gp,-25600
 8002764:	20c00017 	ldw	r3,0(r4)
 8002768:	2809883a 	mov	r4,r5
 800276c:	300b883a 	mov	r5,r6
 8002770:	100d883a 	mov	r6,r2
 8002774:	180f883a 	mov	r7,r3
 8002778:	800ae2c0 	call	800ae2c <__divdf3>
 800277c:	1009883a 	mov	r4,r2
 8002780:	180b883a 	mov	r5,r3
 8002784:	2005883a 	mov	r2,r4
 8002788:	2807883a 	mov	r3,r5
 800278c:	d0a6ee15 	stw	r2,-25672(gp)
 8002790:	d126ef04 	addi	r4,gp,-25668
 8002794:	20c00015 	stw	r3,0(r4)
		a2 = -(1-alpha)/a0;
 8002798:	d0a70117 	ldw	r2,-25596(gp)
 800279c:	d1270204 	addi	r4,gp,-25592
 80027a0:	20c00017 	ldw	r3,0(r4)
 80027a4:	0009883a 	mov	r4,zero
 80027a8:	014ffc34 	movhi	r5,16368
 80027ac:	100d883a 	mov	r6,r2
 80027b0:	180f883a 	mov	r7,r3
 80027b4:	800c25c0 	call	800c25c <__subdf3>
 80027b8:	1009883a 	mov	r4,r2
 80027bc:	180b883a 	mov	r5,r3
 80027c0:	2005883a 	mov	r2,r4
 80027c4:	2807883a 	mov	r3,r5
 80027c8:	1021883a 	mov	r16,r2
 80027cc:	1c60003c 	xorhi	r17,r3,32768
 80027d0:	d0a6ff17 	ldw	r2,-25604(gp)
 80027d4:	d1270004 	addi	r4,gp,-25600
 80027d8:	20c00017 	ldw	r3,0(r4)
 80027dc:	8009883a 	mov	r4,r16
 80027e0:	880b883a 	mov	r5,r17
 80027e4:	100d883a 	mov	r6,r2
 80027e8:	180f883a 	mov	r7,r3
 80027ec:	800ae2c0 	call	800ae2c <__divdf3>
 80027f0:	1009883a 	mov	r4,r2
 80027f4:	180b883a 	mov	r5,r3
 80027f8:	2005883a 	mov	r2,r4
 80027fc:	2807883a 	mov	r3,r5
 8002800:	d0a6f915 	stw	r2,-25628(gp)
 8002804:	d126fa04 	addi	r4,gp,-25624
 8002808:	20c00015 	stw	r3,0(r4)
		break;
 800280c:	0001883a 	nop
	}

	printf("b0: %Lf, b1: %Lf, b2: %Lf, a1: %Lf, a2: %Lf\n", b0, b1, b2, a1, a2);
 8002810:	d2a6fd17 	ldw	r10,-25612(gp)
 8002814:	d0a6fe04 	addi	r2,gp,-25608
 8002818:	12c00017 	ldw	r11,0(r2)
 800281c:	d226ec17 	ldw	r8,-25680(gp)
 8002820:	d0a6ed04 	addi	r2,gp,-25676
 8002824:	12400017 	ldw	r9,0(r2)
 8002828:	d1a6e417 	ldw	r6,-25712(gp)
 800282c:	d0a6e504 	addi	r2,gp,-25708
 8002830:	11c00017 	ldw	r7,0(r2)
 8002834:	d126ee17 	ldw	r4,-25672(gp)
 8002838:	d0a6ef04 	addi	r2,gp,-25668
 800283c:	11400017 	ldw	r5,0(r2)
 8002840:	d0a6f917 	ldw	r2,-25628(gp)
 8002844:	d326fa04 	addi	r12,gp,-25624
 8002848:	60c00017 	ldw	r3,0(r12)
 800284c:	d9800115 	stw	r6,4(sp)
 8002850:	d9c00215 	stw	r7,8(sp)
 8002854:	d9000315 	stw	r4,12(sp)
 8002858:	d9400415 	stw	r5,16(sp)
 800285c:	d8800515 	stw	r2,20(sp)
 8002860:	d8c00615 	stw	r3,24(sp)
 8002864:	da400015 	stw	r9,0(sp)
 8002868:	400f883a 	mov	r7,r8
 800286c:	010200b4 	movhi	r4,2050
 8002870:	213e3104 	addi	r4,r4,-1852
 8002874:	500b883a 	mov	r5,r10
 8002878:	580d883a 	mov	r6,r11
 800287c:	800cfec0 	call	800cfec <printf>
	long double coeffs[5];
	coeffs[0] = b0;
 8002880:	d0a6fd17 	ldw	r2,-25612(gp)
 8002884:	d126fe04 	addi	r4,gp,-25608
 8002888:	20c00017 	ldw	r3,0(r4)
 800288c:	e0bfd715 	stw	r2,-164(fp)
 8002890:	e0ffd815 	stw	r3,-160(fp)
	coeffs[1] = b1;
 8002894:	d0a6ec17 	ldw	r2,-25680(gp)
 8002898:	d126ed04 	addi	r4,gp,-25676
 800289c:	20c00017 	ldw	r3,0(r4)
 80028a0:	e0bfd915 	stw	r2,-156(fp)
 80028a4:	e0ffda15 	stw	r3,-152(fp)
	coeffs[2] = b2;
 80028a8:	d0a6e417 	ldw	r2,-25712(gp)
 80028ac:	d126e504 	addi	r4,gp,-25708
 80028b0:	20c00017 	ldw	r3,0(r4)
 80028b4:	e0bfdb15 	stw	r2,-148(fp)
 80028b8:	e0ffdc15 	stw	r3,-144(fp)
	coeffs[3] = a1;
 80028bc:	d0a6ee17 	ldw	r2,-25672(gp)
 80028c0:	d126ef04 	addi	r4,gp,-25668
 80028c4:	20c00017 	ldw	r3,0(r4)
 80028c8:	e0bfdd15 	stw	r2,-140(fp)
 80028cc:	e0ffde15 	stw	r3,-136(fp)
	coeffs[4] = a2;
 80028d0:	d0a6f917 	ldw	r2,-25628(gp)
 80028d4:	d126fa04 	addi	r4,gp,-25624
 80028d8:	20c00017 	ldw	r3,0(r4)
 80028dc:	e0bfdf15 	stw	r2,-132(fp)
 80028e0:	e0ffe015 	stw	r3,-128(fp)
	int i;
	char F_str[4];
	char G_str[4];
	char Q_str[4];
	// Calculate displayed signals
	*biquad_index = biquad - 1;
 80028e4:	00881c04 	movi	r2,8304
 80028e8:	d0e6f217 	ldw	r3,-25656(gp)
 80028ec:	18ffffc4 	addi	r3,r3,-1
 80028f0:	10c00005 	stb	r3,0(r2)
	*type_index = type;
 80028f4:	00880804 	movi	r2,8224
 80028f8:	d0e6e617 	ldw	r3,-25704(gp)
 80028fc:	10c00005 	stb	r3,0(r2)
	if (F >= 10000) {
 8002900:	d0a70317 	ldw	r2,-25588(gp)
 8002904:	1089c410 	cmplti	r2,r2,10000
 8002908:	10001c1e 	bne	r2,zero,800297c <process_filter+0x1f44>
		sprintf(F_str, "%3d", (int) ((double) F / 1000));
 800290c:	d0a70317 	ldw	r2,-25588(gp)
 8002910:	1009883a 	mov	r4,r2
 8002914:	800cbb40 	call	800cbb4 <__floatsidf>
 8002918:	100b883a 	mov	r5,r2
 800291c:	180d883a 	mov	r6,r3
 8002920:	2809883a 	mov	r4,r5
 8002924:	300b883a 	mov	r5,r6
 8002928:	000d883a 	mov	r6,zero
 800292c:	01d023f4 	movhi	r7,16527
 8002930:	39d00004 	addi	r7,r7,16384
 8002934:	800ae2c0 	call	800ae2c <__divdf3>
 8002938:	1009883a 	mov	r4,r2
 800293c:	180b883a 	mov	r5,r3
 8002940:	2005883a 	mov	r2,r4
 8002944:	2807883a 	mov	r3,r5
 8002948:	1009883a 	mov	r4,r2
 800294c:	180b883a 	mov	r5,r3
 8002950:	800cb2c0 	call	800cb2c <__fixdfsi>
 8002954:	1007883a 	mov	r3,r2
 8002958:	e0bfe104 	addi	r2,fp,-124
 800295c:	1009883a 	mov	r4,r2
 8002960:	014200b4 	movhi	r5,2050
 8002964:	297e3d04 	addi	r5,r5,-1804
 8002968:	180d883a 	mov	r6,r3
 800296c:	800d14c0 	call	800d14c <sprintf>
		F_str[3] = 'K';
 8002970:	008012c4 	movi	r2,75
 8002974:	e0bfe1c5 	stb	r2,-121(fp)
 8002978:	00002206 	br	8002a04 <process_filter+0x1fcc>
	} else if (F >= 1000) {
 800297c:	d0a70317 	ldw	r2,-25588(gp)
 8002980:	1080fa10 	cmplti	r2,r2,1000
 8002984:	1000181e 	bne	r2,zero,80029e8 <process_filter+0x1fb0>
		sprintf(F_str, "%3f", (double) F / 1000);
 8002988:	d0a70317 	ldw	r2,-25588(gp)
 800298c:	1009883a 	mov	r4,r2
 8002990:	800cbb40 	call	800cbb4 <__floatsidf>
 8002994:	100b883a 	mov	r5,r2
 8002998:	180d883a 	mov	r6,r3
 800299c:	2809883a 	mov	r4,r5
 80029a0:	300b883a 	mov	r5,r6
 80029a4:	000d883a 	mov	r6,zero
 80029a8:	01d023f4 	movhi	r7,16527
 80029ac:	39d00004 	addi	r7,r7,16384
 80029b0:	800ae2c0 	call	800ae2c <__divdf3>
 80029b4:	1009883a 	mov	r4,r2
 80029b8:	180b883a 	mov	r5,r3
 80029bc:	2005883a 	mov	r2,r4
 80029c0:	2807883a 	mov	r3,r5
 80029c4:	e13fe104 	addi	r4,fp,-124
 80029c8:	014200b4 	movhi	r5,2050
 80029cc:	297e3e04 	addi	r5,r5,-1800
 80029d0:	100d883a 	mov	r6,r2
 80029d4:	180f883a 	mov	r7,r3
 80029d8:	800d14c0 	call	800d14c <sprintf>
		F_str[3] = 'K';
 80029dc:	008012c4 	movi	r2,75
 80029e0:	e0bfe1c5 	stb	r2,-121(fp)
 80029e4:	00000706 	br	8002a04 <process_filter+0x1fcc>
	} else {
		sprintf(F_str, "%4d", F);
 80029e8:	d0a70317 	ldw	r2,-25588(gp)
 80029ec:	e0ffe104 	addi	r3,fp,-124
 80029f0:	1809883a 	mov	r4,r3
 80029f4:	014200b4 	movhi	r5,2050
 80029f8:	297e3f04 	addi	r5,r5,-1796
 80029fc:	100d883a 	mov	r6,r2
 8002a00:	800d14c0 	call	800d14c <sprintf>
	}
	*F_string = (F_str[0] << 24) | (F_str[1] << 16) | (F_str[2] << 8) | F_str[3];
 8002a04:	00881004 	movi	r2,8256
 8002a08:	e0ffe103 	ldbu	r3,-124(fp)
 8002a0c:	18c03fcc 	andi	r3,r3,255
 8002a10:	18c0201c 	xori	r3,r3,128
 8002a14:	18ffe004 	addi	r3,r3,-128
 8002a18:	1808963a 	slli	r4,r3,24
 8002a1c:	e0ffe143 	ldbu	r3,-123(fp)
 8002a20:	18c03fcc 	andi	r3,r3,255
 8002a24:	18c0201c 	xori	r3,r3,128
 8002a28:	18ffe004 	addi	r3,r3,-128
 8002a2c:	1806943a 	slli	r3,r3,16
 8002a30:	20c8b03a 	or	r4,r4,r3
 8002a34:	e0ffe183 	ldbu	r3,-122(fp)
 8002a38:	18c03fcc 	andi	r3,r3,255
 8002a3c:	18c0201c 	xori	r3,r3,128
 8002a40:	18ffe004 	addi	r3,r3,-128
 8002a44:	1806923a 	slli	r3,r3,8
 8002a48:	20c8b03a 	or	r4,r4,r3
 8002a4c:	e0ffe1c3 	ldbu	r3,-121(fp)
 8002a50:	18c03fcc 	andi	r3,r3,255
 8002a54:	18c0201c 	xori	r3,r3,128
 8002a58:	18ffe004 	addi	r3,r3,-128
 8002a5c:	20c6b03a 	or	r3,r4,r3
 8002a60:	10c00015 	stw	r3,0(r2)

	if (G <= -10) {
 8002a64:	d0a6f317 	ldw	r2,-25652(gp)
 8002a68:	d126f404 	addi	r4,gp,-25648
 8002a6c:	20c00017 	ldw	r3,0(r4)
 8002a70:	1009883a 	mov	r4,r2
 8002a74:	180b883a 	mov	r5,r3
 8002a78:	000d883a 	mov	r6,zero
 8002a7c:	01f00934 	movhi	r7,49188
 8002a80:	800b9100 	call	800b910 <__ledf2>
 8002a84:	00801316 	blt	zero,r2,8002ad4 <process_filter+0x209c>
		sprintf(G_str, "%4d", (int) round(G));
 8002a88:	d0a6f317 	ldw	r2,-25652(gp)
 8002a8c:	d126f404 	addi	r4,gp,-25648
 8002a90:	20c00017 	ldw	r3,0(r4)
 8002a94:	1009883a 	mov	r4,r2
 8002a98:	180b883a 	mov	r5,r3
 8002a9c:	80055e80 	call	80055e8 <round>
 8002aa0:	100b883a 	mov	r5,r2
 8002aa4:	180d883a 	mov	r6,r3
 8002aa8:	2809883a 	mov	r4,r5
 8002aac:	300b883a 	mov	r5,r6
 8002ab0:	800cb2c0 	call	800cb2c <__fixdfsi>
 8002ab4:	1007883a 	mov	r3,r2
 8002ab8:	e0bfe204 	addi	r2,fp,-120
 8002abc:	1009883a 	mov	r4,r2
 8002ac0:	014200b4 	movhi	r5,2050
 8002ac4:	297e3f04 	addi	r5,r5,-1796
 8002ac8:	180d883a 	mov	r6,r3
 8002acc:	800d14c0 	call	800d14c <sprintf>
 8002ad0:	00000906 	br	8002af8 <process_filter+0x20c0>
	} else {
		sprintf(G_str, "%4f", G);
 8002ad4:	d0a6f317 	ldw	r2,-25652(gp)
 8002ad8:	d126f404 	addi	r4,gp,-25648
 8002adc:	20c00017 	ldw	r3,0(r4)
 8002ae0:	e13fe204 	addi	r4,fp,-120
 8002ae4:	014200b4 	movhi	r5,2050
 8002ae8:	297e4004 	addi	r5,r5,-1792
 8002aec:	100d883a 	mov	r6,r2
 8002af0:	180f883a 	mov	r7,r3
 8002af4:	800d14c0 	call	800d14c <sprintf>
	}
	*G_string = (G_str[0] << 24) | (G_str[1] << 16) | (G_str[2] << 8) | G_str[3];
 8002af8:	00880c04 	movi	r2,8240
 8002afc:	e0ffe203 	ldbu	r3,-120(fp)
 8002b00:	18c03fcc 	andi	r3,r3,255
 8002b04:	18c0201c 	xori	r3,r3,128
 8002b08:	18ffe004 	addi	r3,r3,-128
 8002b0c:	1808963a 	slli	r4,r3,24
 8002b10:	e0ffe243 	ldbu	r3,-119(fp)
 8002b14:	18c03fcc 	andi	r3,r3,255
 8002b18:	18c0201c 	xori	r3,r3,128
 8002b1c:	18ffe004 	addi	r3,r3,-128
 8002b20:	1806943a 	slli	r3,r3,16
 8002b24:	20c8b03a 	or	r4,r4,r3
 8002b28:	e0ffe283 	ldbu	r3,-118(fp)
 8002b2c:	18c03fcc 	andi	r3,r3,255
 8002b30:	18c0201c 	xori	r3,r3,128
 8002b34:	18ffe004 	addi	r3,r3,-128
 8002b38:	1806923a 	slli	r3,r3,8
 8002b3c:	20c8b03a 	or	r4,r4,r3
 8002b40:	e0ffe2c3 	ldbu	r3,-117(fp)
 8002b44:	18c03fcc 	andi	r3,r3,255
 8002b48:	18c0201c 	xori	r3,r3,128
 8002b4c:	18ffe004 	addi	r3,r3,-128
 8002b50:	20c6b03a 	or	r3,r4,r3
 8002b54:	10c00015 	stw	r3,0(r2)

	sprintf(Q_str, "%4f", Q);
 8002b58:	d0a6ea17 	ldw	r2,-25688(gp)
 8002b5c:	d126eb04 	addi	r4,gp,-25684
 8002b60:	20c00017 	ldw	r3,0(r4)
 8002b64:	e13fe304 	addi	r4,fp,-116
 8002b68:	014200b4 	movhi	r5,2050
 8002b6c:	297e4004 	addi	r5,r5,-1792
 8002b70:	100d883a 	mov	r6,r2
 8002b74:	180f883a 	mov	r7,r3
 8002b78:	800d14c0 	call	800d14c <sprintf>
	*Q_string = (Q_str[0] << 24) | (Q_str[1] << 16) | (Q_str[2] << 8) | Q_str[3];
 8002b7c:	00880404 	movi	r2,8208
 8002b80:	e0ffe303 	ldbu	r3,-116(fp)
 8002b84:	18c03fcc 	andi	r3,r3,255
 8002b88:	18c0201c 	xori	r3,r3,128
 8002b8c:	18ffe004 	addi	r3,r3,-128
 8002b90:	1808963a 	slli	r4,r3,24
 8002b94:	e0ffe343 	ldbu	r3,-115(fp)
 8002b98:	18c03fcc 	andi	r3,r3,255
 8002b9c:	18c0201c 	xori	r3,r3,128
 8002ba0:	18ffe004 	addi	r3,r3,-128
 8002ba4:	1806943a 	slli	r3,r3,16
 8002ba8:	20c8b03a 	or	r4,r4,r3
 8002bac:	e0ffe383 	ldbu	r3,-114(fp)
 8002bb0:	18c03fcc 	andi	r3,r3,255
 8002bb4:	18c0201c 	xori	r3,r3,128
 8002bb8:	18ffe004 	addi	r3,r3,-128
 8002bbc:	1806923a 	slli	r3,r3,8
 8002bc0:	20c8b03a 	or	r4,r4,r3
 8002bc4:	e0ffe3c3 	ldbu	r3,-113(fp)
 8002bc8:	18c03fcc 	andi	r3,r3,255
 8002bcc:	18c0201c 	xori	r3,r3,128
 8002bd0:	18ffe004 	addi	r3,r3,-128
 8002bd4:	20c6b03a 	or	r3,r4,r3
 8002bd8:	10c00015 	stw	r3,0(r2)

	for (i = 0; i < 5; i++) {
 8002bdc:	e03fd415 	stw	zero,-176(fp)
 8002be0:	00002806 	br	8002c84 <process_filter+0x224c>
		while (*to_sw_sig != 0); // wait until hardware is doing nothing
 8002be4:	0001883a 	nop
 8002be8:	00881404 	movi	r2,8272
 8002bec:	10800003 	ldbu	r2,0(r2)
 8002bf0:	10803fcc 	andi	r2,r2,255
 8002bf4:	103ffc1e 	bne	r2,zero,8002be8 <__alt_data_end+0xfc002be8>
		*coefficient = (alt_u32)(coeffs[i] * (1 << 14));
 8002bf8:	04082004 	movi	r16,8320
 8002bfc:	e0bfd417 	ldw	r2,-176(fp)
 8002c00:	100490fa 	slli	r2,r2,3
 8002c04:	e0ffd404 	addi	r3,fp,-176
 8002c08:	1885883a 	add	r2,r3,r2
 8002c0c:	11000304 	addi	r4,r2,12
 8002c10:	20800017 	ldw	r2,0(r4)
 8002c14:	20c00117 	ldw	r3,4(r4)
 8002c18:	1009883a 	mov	r4,r2
 8002c1c:	180b883a 	mov	r5,r3
 8002c20:	000d883a 	mov	r6,zero
 8002c24:	01d03434 	movhi	r7,16592
 8002c28:	800b9f00 	call	800b9f0 <__muldf3>
 8002c2c:	1009883a 	mov	r4,r2
 8002c30:	180b883a 	mov	r5,r3
 8002c34:	2005883a 	mov	r2,r4
 8002c38:	2807883a 	mov	r3,r5
 8002c3c:	1009883a 	mov	r4,r2
 8002c40:	180b883a 	mov	r5,r3
 8002c44:	8009e440 	call	8009e44 <__fixunsdfsi>
 8002c48:	80800015 	stw	r2,0(r16)
		*to_hw_sig = 1; // tell hw to process the coefficient
 8002c4c:	00881804 	movi	r2,8288
 8002c50:	00c00044 	movi	r3,1
 8002c54:	10c00005 	stb	r3,0(r2)
		while (*to_sw_sig != 1); // wait until hw is done
 8002c58:	0001883a 	nop
 8002c5c:	00881404 	movi	r2,8272
 8002c60:	10800003 	ldbu	r2,0(r2)
 8002c64:	10803fcc 	andi	r2,r2,255
 8002c68:	10800058 	cmpnei	r2,r2,1
 8002c6c:	103ffb1e 	bne	r2,zero,8002c5c <__alt_data_end+0xfc002c5c>
		*to_hw_sig = 0; // tell hw that we know it's done
 8002c70:	00881804 	movi	r2,8288
 8002c74:	10000005 	stb	zero,0(r2)
	*G_string = (G_str[0] << 24) | (G_str[1] << 16) | (G_str[2] << 8) | G_str[3];

	sprintf(Q_str, "%4f", Q);
	*Q_string = (Q_str[0] << 24) | (Q_str[1] << 16) | (Q_str[2] << 8) | Q_str[3];

	for (i = 0; i < 5; i++) {
 8002c78:	e0bfd417 	ldw	r2,-176(fp)
 8002c7c:	10800044 	addi	r2,r2,1
 8002c80:	e0bfd415 	stw	r2,-176(fp)
 8002c84:	e0bfd417 	ldw	r2,-176(fp)
 8002c88:	10800150 	cmplti	r2,r2,5
 8002c8c:	103fd51e 	bne	r2,zero,8002be4 <__alt_data_end+0xfc002be4>
		*coefficient = (alt_u32)(coeffs[i] * (1 << 14));
		*to_hw_sig = 1; // tell hw to process the coefficient
		while (*to_sw_sig != 1); // wait until hw is done
		*to_hw_sig = 0; // tell hw that we know it's done
	}
	printf("Beginning graph calculations...");
 8002c90:	010200b4 	movhi	r4,2050
 8002c94:	213e4104 	addi	r4,r4,-1788
 8002c98:	800cfec0 	call	800cfec <printf>
	bCoeffsSq = pow(b0 + b1 + b2, 2);
 8002c9c:	d166fd17 	ldw	r5,-25612(gp)
 8002ca0:	d0a6fe04 	addi	r2,gp,-25608
 8002ca4:	11800017 	ldw	r6,0(r2)
 8002ca8:	d0a6ec17 	ldw	r2,-25680(gp)
 8002cac:	d126ed04 	addi	r4,gp,-25676
 8002cb0:	20c00017 	ldw	r3,0(r4)
 8002cb4:	2809883a 	mov	r4,r5
 8002cb8:	300b883a 	mov	r5,r6
 8002cbc:	100d883a 	mov	r6,r2
 8002cc0:	180f883a 	mov	r7,r3
 8002cc4:	800a5900 	call	800a590 <__adddf3>
 8002cc8:	100f883a 	mov	r7,r2
 8002ccc:	1811883a 	mov	r8,r3
 8002cd0:	380b883a 	mov	r5,r7
 8002cd4:	400d883a 	mov	r6,r8
 8002cd8:	d0a6e417 	ldw	r2,-25712(gp)
 8002cdc:	d126e504 	addi	r4,gp,-25708
 8002ce0:	20c00017 	ldw	r3,0(r4)
 8002ce4:	2809883a 	mov	r4,r5
 8002ce8:	300b883a 	mov	r5,r6
 8002cec:	100d883a 	mov	r6,r2
 8002cf0:	180f883a 	mov	r7,r3
 8002cf4:	800a5900 	call	800a590 <__adddf3>
 8002cf8:	1009883a 	mov	r4,r2
 8002cfc:	180b883a 	mov	r5,r3
 8002d00:	2005883a 	mov	r2,r4
 8002d04:	2807883a 	mov	r3,r5
 8002d08:	1009883a 	mov	r4,r2
 8002d0c:	180b883a 	mov	r5,r3
 8002d10:	000d883a 	mov	r6,zero
 8002d14:	01d00034 	movhi	r7,16384
 8002d18:	80059780 	call	8005978 <pow>
 8002d1c:	1009883a 	mov	r4,r2
 8002d20:	180b883a 	mov	r5,r3
 8002d24:	d126f515 	stw	r4,-25644(gp)
 8002d28:	d0a6f604 	addi	r2,gp,-25640
 8002d2c:	11400015 	stw	r5,0(r2)
	aCoeffsSq = pow(1 + -a1 + -a2, 2);
 8002d30:	d0a6ee17 	ldw	r2,-25672(gp)
 8002d34:	d126ef04 	addi	r4,gp,-25668
 8002d38:	20c00017 	ldw	r3,0(r4)
 8002d3c:	0009883a 	mov	r4,zero
 8002d40:	014ffc34 	movhi	r5,16368
 8002d44:	100d883a 	mov	r6,r2
 8002d48:	180f883a 	mov	r7,r3
 8002d4c:	800c25c0 	call	800c25c <__subdf3>
 8002d50:	100f883a 	mov	r7,r2
 8002d54:	1811883a 	mov	r8,r3
 8002d58:	380b883a 	mov	r5,r7
 8002d5c:	400d883a 	mov	r6,r8
 8002d60:	d0a6f917 	ldw	r2,-25628(gp)
 8002d64:	d126fa04 	addi	r4,gp,-25624
 8002d68:	20c00017 	ldw	r3,0(r4)
 8002d6c:	2809883a 	mov	r4,r5
 8002d70:	300b883a 	mov	r5,r6
 8002d74:	100d883a 	mov	r6,r2
 8002d78:	180f883a 	mov	r7,r3
 8002d7c:	800c25c0 	call	800c25c <__subdf3>
 8002d80:	1009883a 	mov	r4,r2
 8002d84:	180b883a 	mov	r5,r3
 8002d88:	2005883a 	mov	r2,r4
 8002d8c:	2807883a 	mov	r3,r5
 8002d90:	1009883a 	mov	r4,r2
 8002d94:	180b883a 	mov	r5,r3
 8002d98:	000d883a 	mov	r6,zero
 8002d9c:	01d00034 	movhi	r7,16384
 8002da0:	80059780 	call	8005978 <pow>
 8002da4:	1009883a 	mov	r4,r2
 8002da8:	180b883a 	mov	r5,r3
 8002dac:	d126fb15 	stw	r4,-25620(gp)
 8002db0:	d0a6fc04 	addi	r2,gp,-25616
 8002db4:	11400015 	stw	r5,0(r2)
	for (i = 0; i < 517; i++) {
 8002db8:	e03fd415 	stw	zero,-176(fp)
 8002dbc:	00005406 	br	8002f10 <process_filter+0x24d8>
		while (*to_sw_sig != 0); // wait until hardware is doing nothing
 8002dc0:	0001883a 	nop
 8002dc4:	00881404 	movi	r2,8272
 8002dc8:	10800003 	ldbu	r2,0(r2)
 8002dcc:	10803fcc 	andi	r2,r2,255
 8002dd0:	103ffc1e 	bne	r2,zero,8002dc4 <__alt_data_end+0xfc002dc4>
		addToGraph(i, b0, b1, b2, a1, a2);
 8002dd4:	d2a6fd17 	ldw	r10,-25612(gp)
 8002dd8:	d0a6fe04 	addi	r2,gp,-25608
 8002ddc:	12c00017 	ldw	r11,0(r2)
 8002de0:	d226ec17 	ldw	r8,-25680(gp)
 8002de4:	d0a6ed04 	addi	r2,gp,-25676
 8002de8:	12400017 	ldw	r9,0(r2)
 8002dec:	d1a6e417 	ldw	r6,-25712(gp)
 8002df0:	d0a6e504 	addi	r2,gp,-25708
 8002df4:	11c00017 	ldw	r7,0(r2)
 8002df8:	d126ee17 	ldw	r4,-25672(gp)
 8002dfc:	d0a6ef04 	addi	r2,gp,-25668
 8002e00:	11400017 	ldw	r5,0(r2)
 8002e04:	d0a6f917 	ldw	r2,-25628(gp)
 8002e08:	d326fa04 	addi	r12,gp,-25624
 8002e0c:	60c00017 	ldw	r3,0(r12)
 8002e10:	d9800115 	stw	r6,4(sp)
 8002e14:	d9c00215 	stw	r7,8(sp)
 8002e18:	d9000315 	stw	r4,12(sp)
 8002e1c:	d9400415 	stw	r5,16(sp)
 8002e20:	d8800515 	stw	r2,20(sp)
 8002e24:	d8c00615 	stw	r3,24(sp)
 8002e28:	da400015 	stw	r9,0(sp)
 8002e2c:	400f883a 	mov	r7,r8
 8002e30:	e13fd417 	ldw	r4,-176(fp)
 8002e34:	500b883a 	mov	r5,r10
 8002e38:	580d883a 	mov	r6,r11
 8002e3c:	8002fc00 	call	8002fc0 <addToGraph>
		int sampleSum = 191;
 8002e40:	00802fc4 	movi	r2,191
 8002e44:	e0bfd515 	stw	r2,-172(fp)
		int j;
		for (j = 0; j < 8; j++)
 8002e48:	e03fd615 	stw	zero,-168(fp)
 8002e4c:	00001306 	br	8002e9c <process_filter+0x2464>
			sampleSum += samples[j][i];
 8002e50:	040200b4 	movhi	r16,2050
 8002e54:	84121304 	addi	r16,r16,18508
 8002e58:	e0bfd617 	ldw	r2,-168(fp)
 8002e5c:	1009883a 	mov	r4,r2
 8002e60:	01408144 	movi	r5,517
 8002e64:	8009fe40 	call	8009fe4 <__mulsi3>
 8002e68:	1007883a 	mov	r3,r2
 8002e6c:	e0bfd417 	ldw	r2,-176(fp)
 8002e70:	1885883a 	add	r2,r3,r2
 8002e74:	1085883a 	add	r2,r2,r2
 8002e78:	1085883a 	add	r2,r2,r2
 8002e7c:	8085883a 	add	r2,r16,r2
 8002e80:	10800017 	ldw	r2,0(r2)
 8002e84:	e0ffd517 	ldw	r3,-172(fp)
 8002e88:	1885883a 	add	r2,r3,r2
 8002e8c:	e0bfd515 	stw	r2,-172(fp)
	for (i = 0; i < 517; i++) {
		while (*to_sw_sig != 0); // wait until hardware is doing nothing
		addToGraph(i, b0, b1, b2, a1, a2);
		int sampleSum = 191;
		int j;
		for (j = 0; j < 8; j++)
 8002e90:	e0bfd617 	ldw	r2,-168(fp)
 8002e94:	10800044 	addi	r2,r2,1
 8002e98:	e0bfd615 	stw	r2,-168(fp)
 8002e9c:	e0bfd617 	ldw	r2,-168(fp)
 8002ea0:	10800210 	cmplti	r2,r2,8
 8002ea4:	103fea1e 	bne	r2,zero,8002e50 <__alt_data_end+0xfc002e50>
			sampleSum += samples[j][i];
		if (sampleSum < 0) {
 8002ea8:	e0bfd517 	ldw	r2,-172(fp)
 8002eac:	1000020e 	bge	r2,zero,8002eb8 <process_filter+0x2480>
			sampleSum = 0;
 8002eb0:	e03fd515 	stw	zero,-172(fp)
 8002eb4:	00000506 	br	8002ecc <process_filter+0x2494>
		} else if (sampleSum > 255) {
 8002eb8:	e0bfd517 	ldw	r2,-172(fp)
 8002ebc:	10804010 	cmplti	r2,r2,256
 8002ec0:	1000021e 	bne	r2,zero,8002ecc <process_filter+0x2494>
			sampleSum = 255;
 8002ec4:	00803fc4 	movi	r2,255
 8002ec8:	e0bfd515 	stw	r2,-172(fp)
		}
		*coefficient = (alt_u32)(sampleSum);
 8002ecc:	00882004 	movi	r2,8320
 8002ed0:	e0ffd517 	ldw	r3,-172(fp)
 8002ed4:	10c00015 	stw	r3,0(r2)
		*to_hw_sig = 1; // tell hw to process the coefficient
 8002ed8:	00881804 	movi	r2,8288
 8002edc:	00c00044 	movi	r3,1
 8002ee0:	10c00005 	stb	r3,0(r2)
		while (*to_sw_sig != 1); // wait until hw is done
 8002ee4:	0001883a 	nop
 8002ee8:	00881404 	movi	r2,8272
 8002eec:	10800003 	ldbu	r2,0(r2)
 8002ef0:	10803fcc 	andi	r2,r2,255
 8002ef4:	10800058 	cmpnei	r2,r2,1
 8002ef8:	103ffb1e 	bne	r2,zero,8002ee8 <__alt_data_end+0xfc002ee8>
		*to_hw_sig = 0; // tell hw that we know it's done
 8002efc:	00881804 	movi	r2,8288
 8002f00:	10000005 	stb	zero,0(r2)
		*to_hw_sig = 0; // tell hw that we know it's done
	}
	printf("Beginning graph calculations...");
	bCoeffsSq = pow(b0 + b1 + b2, 2);
	aCoeffsSq = pow(1 + -a1 + -a2, 2);
	for (i = 0; i < 517; i++) {
 8002f04:	e0bfd417 	ldw	r2,-176(fp)
 8002f08:	10800044 	addi	r2,r2,1
 8002f0c:	e0bfd415 	stw	r2,-176(fp)
 8002f10:	e0bfd417 	ldw	r2,-176(fp)
 8002f14:	10808150 	cmplti	r2,r2,517
 8002f18:	103fa91e 	bne	r2,zero,8002dc0 <__alt_data_end+0xfc002dc0>
		*coefficient = (alt_u32)(sampleSum);
		*to_hw_sig = 1; // tell hw to process the coefficient
		while (*to_sw_sig != 1); // wait until hw is done
		*to_hw_sig = 0; // tell hw that we know it's done
	}
	while (*to_sw_sig != 0);
 8002f1c:	0001883a 	nop
 8002f20:	00881404 	movi	r2,8272
 8002f24:	10800003 	ldbu	r2,0(r2)
 8002f28:	10803fcc 	andi	r2,r2,255
 8002f2c:	103ffc1e 	bne	r2,zero,8002f20 <__alt_data_end+0xfc002f20>
	*to_hw_sig = 1;
 8002f30:	00881804 	movi	r2,8288
 8002f34:	00c00044 	movi	r3,1
 8002f38:	10c00005 	stb	r3,0(r2)
	while (*to_sw_sig != 1);
 8002f3c:	0001883a 	nop
 8002f40:	00881404 	movi	r2,8272
 8002f44:	10800003 	ldbu	r2,0(r2)
 8002f48:	10803fcc 	andi	r2,r2,255
 8002f4c:	10800058 	cmpnei	r2,r2,1
 8002f50:	103ffb1e 	bne	r2,zero,8002f40 <__alt_data_end+0xfc002f40>
	*to_hw_sig = 0;
 8002f54:	00881804 	movi	r2,8288
 8002f58:	10000005 	stb	zero,0(r2)
	while (*to_sw_sig != 0); // wait until it's back in the reset state
 8002f5c:	0001883a 	nop
 8002f60:	00881404 	movi	r2,8272
 8002f64:	10800003 	ldbu	r2,0(r2)
 8002f68:	10803fcc 	andi	r2,r2,255
 8002f6c:	103ffc1e 	bne	r2,zero,8002f60 <__alt_data_end+0xfc002f60>

	state = 0;
 8002f70:	d026e315 	stw	zero,-25716(gp)
	printf("\nPress E to edit the filters\n");
 8002f74:	010200b4 	movhi	r4,2050
 8002f78:	213e4904 	addi	r4,r4,-1756
 8002f7c:	800d0e00 	call	800d0e0 <puts>
	*to_hw_sig = 6;
 8002f80:	00881804 	movi	r2,8288
 8002f84:	00c00184 	movi	r3,6
 8002f88:	10c00005 	stb	r3,0(r2)
}
 8002f8c:	e6fff804 	addi	sp,fp,-32
 8002f90:	dfc00917 	ldw	ra,36(sp)
 8002f94:	df000817 	ldw	fp,32(sp)
 8002f98:	ddc00717 	ldw	r23,28(sp)
 8002f9c:	dd800617 	ldw	r22,24(sp)
 8002fa0:	dd400517 	ldw	r21,20(sp)
 8002fa4:	dd000417 	ldw	r20,16(sp)
 8002fa8:	dcc00317 	ldw	r19,12(sp)
 8002fac:	dc800217 	ldw	r18,8(sp)
 8002fb0:	dc400117 	ldw	r17,4(sp)
 8002fb4:	dc000017 	ldw	r16,0(sp)
 8002fb8:	dec00a04 	addi	sp,sp,40
 8002fbc:	f800283a 	ret

08002fc0 <addToGraph>:

void addToGraph(int i, double b0, double b1, double b2, double a1, double a2) {
 8002fc0:	deffe604 	addi	sp,sp,-104
 8002fc4:	dfc01815 	stw	ra,96(sp)
 8002fc8:	df001715 	stw	fp,92(sp)
 8002fcc:	ddc01615 	stw	r23,88(sp)
 8002fd0:	dd801515 	stw	r22,84(sp)
 8002fd4:	dd401415 	stw	r21,80(sp)
 8002fd8:	dd001315 	stw	r20,76(sp)
 8002fdc:	dcc01215 	stw	r19,72(sp)
 8002fe0:	dc801115 	stw	r18,68(sp)
 8002fe4:	dc401015 	stw	r17,64(sp)
 8002fe8:	dc000f15 	stw	r16,60(sp)
 8002fec:	df001704 	addi	fp,sp,92
 8002ff0:	e13ff315 	stw	r4,-52(fp)
 8002ff4:	e17ff415 	stw	r5,-48(fp)
 8002ff8:	e1bff515 	stw	r6,-44(fp)
 8002ffc:	e1c00215 	stw	r7,8(fp)
	double w = 2 * M_PI * frequencies[i] / Fs;
 8003000:	008200b4 	movhi	r2,2050
 8003004:	10900404 	addi	r2,r2,16400
 8003008:	e0fff317 	ldw	r3,-52(fp)
 800300c:	18c7883a 	add	r3,r3,r3
 8003010:	18c7883a 	add	r3,r3,r3
 8003014:	10c5883a 	add	r2,r2,r3
 8003018:	10c00017 	ldw	r3,0(r2)
 800301c:	1809883a 	mov	r4,r3
 8003020:	800cc840 	call	800cc84 <__extendsfdf2>
 8003024:	100b883a 	mov	r5,r2
 8003028:	180d883a 	mov	r6,r3
 800302c:	2809883a 	mov	r4,r5
 8003030:	300b883a 	mov	r5,r6
 8003034:	01951134 	movhi	r6,21572
 8003038:	318b4604 	addi	r6,r6,11544
 800303c:	01d00674 	movhi	r7,16409
 8003040:	39c87ec4 	addi	r7,r7,8699
 8003044:	800b9f00 	call	800b9f0 <__muldf3>
 8003048:	100f883a 	mov	r7,r2
 800304c:	1811883a 	mov	r8,r3
 8003050:	380b883a 	mov	r5,r7
 8003054:	400d883a 	mov	r6,r8
 8003058:	d0a00117 	ldw	r2,-32764(gp)
 800305c:	d1200204 	addi	r4,gp,-32760
 8003060:	20c00017 	ldw	r3,0(r4)
 8003064:	2809883a 	mov	r4,r5
 8003068:	300b883a 	mov	r5,r6
 800306c:	100d883a 	mov	r6,r2
 8003070:	180f883a 	mov	r7,r3
 8003074:	800ae2c0 	call	800ae2c <__divdf3>
 8003078:	1009883a 	mov	r4,r2
 800307c:	180b883a 	mov	r5,r3
 8003080:	e13fe915 	stw	r4,-92(fp)
 8003084:	e17fea15 	stw	r5,-88(fp)
	double phi = 4 * pow(sin(w / 2), 2);
 8003088:	e13fe917 	ldw	r4,-92(fp)
 800308c:	e17fea17 	ldw	r5,-88(fp)
 8003090:	000d883a 	mov	r6,zero
 8003094:	01d00034 	movhi	r7,16384
 8003098:	800ae2c0 	call	800ae2c <__divdf3>
 800309c:	1009883a 	mov	r4,r2
 80030a0:	180b883a 	mov	r5,r3
 80030a4:	2005883a 	mov	r2,r4
 80030a8:	2807883a 	mov	r3,r5
 80030ac:	1009883a 	mov	r4,r2
 80030b0:	180b883a 	mov	r5,r3
 80030b4:	80056ec0 	call	80056ec <sin>
 80030b8:	100b883a 	mov	r5,r2
 80030bc:	180d883a 	mov	r6,r3
 80030c0:	2809883a 	mov	r4,r5
 80030c4:	300b883a 	mov	r5,r6
 80030c8:	000d883a 	mov	r6,zero
 80030cc:	01d00034 	movhi	r7,16384
 80030d0:	80059780 	call	8005978 <pow>
 80030d4:	100b883a 	mov	r5,r2
 80030d8:	180d883a 	mov	r6,r3
 80030dc:	2809883a 	mov	r4,r5
 80030e0:	300b883a 	mov	r5,r6
 80030e4:	000d883a 	mov	r6,zero
 80030e8:	01d00434 	movhi	r7,16400
 80030ec:	800b9f00 	call	800b9f0 <__muldf3>
 80030f0:	1009883a 	mov	r4,r2
 80030f4:	180b883a 	mov	r5,r3
 80030f8:	e13feb15 	stw	r4,-84(fp)
 80030fc:	e17fec15 	stw	r5,-80(fp)
	double bCalc = (b0 * b2 * phi) - ((b1 * (b0 + b2)) + (4 * b0 * b2));
 8003100:	e13ff417 	ldw	r4,-48(fp)
 8003104:	e17ff517 	ldw	r5,-44(fp)
 8003108:	e1800417 	ldw	r6,16(fp)
 800310c:	e1c00517 	ldw	r7,20(fp)
 8003110:	800b9f00 	call	800b9f0 <__muldf3>
 8003114:	1009883a 	mov	r4,r2
 8003118:	180b883a 	mov	r5,r3
 800311c:	2005883a 	mov	r2,r4
 8003120:	2807883a 	mov	r3,r5
 8003124:	1009883a 	mov	r4,r2
 8003128:	180b883a 	mov	r5,r3
 800312c:	e1bfeb17 	ldw	r6,-84(fp)
 8003130:	e1ffec17 	ldw	r7,-80(fp)
 8003134:	800b9f00 	call	800b9f0 <__muldf3>
 8003138:	1009883a 	mov	r4,r2
 800313c:	180b883a 	mov	r5,r3
 8003140:	202d883a 	mov	r22,r4
 8003144:	282f883a 	mov	r23,r5
 8003148:	e13ff417 	ldw	r4,-48(fp)
 800314c:	e17ff517 	ldw	r5,-44(fp)
 8003150:	e1800417 	ldw	r6,16(fp)
 8003154:	e1c00517 	ldw	r7,20(fp)
 8003158:	800a5900 	call	800a590 <__adddf3>
 800315c:	1009883a 	mov	r4,r2
 8003160:	180b883a 	mov	r5,r3
 8003164:	2005883a 	mov	r2,r4
 8003168:	2807883a 	mov	r3,r5
 800316c:	1009883a 	mov	r4,r2
 8003170:	180b883a 	mov	r5,r3
 8003174:	e1800217 	ldw	r6,8(fp)
 8003178:	e1c00317 	ldw	r7,12(fp)
 800317c:	800b9f00 	call	800b9f0 <__muldf3>
 8003180:	1009883a 	mov	r4,r2
 8003184:	180b883a 	mov	r5,r3
 8003188:	e13ff615 	stw	r4,-40(fp)
 800318c:	e17ff715 	stw	r5,-36(fp)
 8003190:	e13ff417 	ldw	r4,-48(fp)
 8003194:	e17ff517 	ldw	r5,-44(fp)
 8003198:	000d883a 	mov	r6,zero
 800319c:	01d00434 	movhi	r7,16400
 80031a0:	800b9f00 	call	800b9f0 <__muldf3>
 80031a4:	1009883a 	mov	r4,r2
 80031a8:	180b883a 	mov	r5,r3
 80031ac:	2005883a 	mov	r2,r4
 80031b0:	2807883a 	mov	r3,r5
 80031b4:	1009883a 	mov	r4,r2
 80031b8:	180b883a 	mov	r5,r3
 80031bc:	e1800417 	ldw	r6,16(fp)
 80031c0:	e1c00517 	ldw	r7,20(fp)
 80031c4:	800b9f00 	call	800b9f0 <__muldf3>
 80031c8:	1009883a 	mov	r4,r2
 80031cc:	180b883a 	mov	r5,r3
 80031d0:	2005883a 	mov	r2,r4
 80031d4:	2807883a 	mov	r3,r5
 80031d8:	e13ff617 	ldw	r4,-40(fp)
 80031dc:	e17ff717 	ldw	r5,-36(fp)
 80031e0:	100d883a 	mov	r6,r2
 80031e4:	180f883a 	mov	r7,r3
 80031e8:	800a5900 	call	800a590 <__adddf3>
 80031ec:	1009883a 	mov	r4,r2
 80031f0:	180b883a 	mov	r5,r3
 80031f4:	2005883a 	mov	r2,r4
 80031f8:	2807883a 	mov	r3,r5
 80031fc:	b009883a 	mov	r4,r22
 8003200:	b80b883a 	mov	r5,r23
 8003204:	100d883a 	mov	r6,r2
 8003208:	180f883a 	mov	r7,r3
 800320c:	800c25c0 	call	800c25c <__subdf3>
 8003210:	1009883a 	mov	r4,r2
 8003214:	180b883a 	mov	r5,r3
 8003218:	e13fed15 	stw	r4,-76(fp)
 800321c:	e17fee15 	stw	r5,-72(fp)
	double aCalc = (1 * -a2 * phi) - ((-a1 * (1 + -a2)) + (4 * 1 * -a2));
 8003220:	e5000817 	ldw	r20,32(fp)
 8003224:	e0800917 	ldw	r2,36(fp)
 8003228:	1560003c 	xorhi	r21,r2,32768
 800322c:	a009883a 	mov	r4,r20
 8003230:	a80b883a 	mov	r5,r21
 8003234:	e1bfeb17 	ldw	r6,-84(fp)
 8003238:	e1ffec17 	ldw	r7,-80(fp)
 800323c:	800b9f00 	call	800b9f0 <__muldf3>
 8003240:	1009883a 	mov	r4,r2
 8003244:	180b883a 	mov	r5,r3
 8003248:	2029883a 	mov	r20,r4
 800324c:	282b883a 	mov	r21,r5
 8003250:	e4800617 	ldw	r18,24(fp)
 8003254:	e0800717 	ldw	r2,28(fp)
 8003258:	14e0003c 	xorhi	r19,r2,32768
 800325c:	0009883a 	mov	r4,zero
 8003260:	014ffc34 	movhi	r5,16368
 8003264:	e1800817 	ldw	r6,32(fp)
 8003268:	e1c00917 	ldw	r7,36(fp)
 800326c:	800c25c0 	call	800c25c <__subdf3>
 8003270:	1009883a 	mov	r4,r2
 8003274:	180b883a 	mov	r5,r3
 8003278:	2005883a 	mov	r2,r4
 800327c:	2807883a 	mov	r3,r5
 8003280:	9009883a 	mov	r4,r18
 8003284:	980b883a 	mov	r5,r19
 8003288:	100d883a 	mov	r6,r2
 800328c:	180f883a 	mov	r7,r3
 8003290:	800b9f00 	call	800b9f0 <__muldf3>
 8003294:	1009883a 	mov	r4,r2
 8003298:	180b883a 	mov	r5,r3
 800329c:	2025883a 	mov	r18,r4
 80032a0:	2827883a 	mov	r19,r5
 80032a4:	e4000817 	ldw	r16,32(fp)
 80032a8:	e0800917 	ldw	r2,36(fp)
 80032ac:	1460003c 	xorhi	r17,r2,32768
 80032b0:	8009883a 	mov	r4,r16
 80032b4:	880b883a 	mov	r5,r17
 80032b8:	000d883a 	mov	r6,zero
 80032bc:	01d00434 	movhi	r7,16400
 80032c0:	800b9f00 	call	800b9f0 <__muldf3>
 80032c4:	1009883a 	mov	r4,r2
 80032c8:	180b883a 	mov	r5,r3
 80032cc:	2005883a 	mov	r2,r4
 80032d0:	2807883a 	mov	r3,r5
 80032d4:	9009883a 	mov	r4,r18
 80032d8:	980b883a 	mov	r5,r19
 80032dc:	100d883a 	mov	r6,r2
 80032e0:	180f883a 	mov	r7,r3
 80032e4:	800a5900 	call	800a590 <__adddf3>
 80032e8:	1009883a 	mov	r4,r2
 80032ec:	180b883a 	mov	r5,r3
 80032f0:	2005883a 	mov	r2,r4
 80032f4:	2807883a 	mov	r3,r5
 80032f8:	a009883a 	mov	r4,r20
 80032fc:	a80b883a 	mov	r5,r21
 8003300:	100d883a 	mov	r6,r2
 8003304:	180f883a 	mov	r7,r3
 8003308:	800c25c0 	call	800c25c <__subdf3>
 800330c:	1009883a 	mov	r4,r2
 8003310:	180b883a 	mov	r5,r3
 8003314:	e13fef15 	stw	r4,-68(fp)
 8003318:	e17ff015 	stw	r5,-64(fp)
	// printf("%f: bCalc - %f, aCalc - %f\n", F, bCalc, aCalc);
	double db = (10 * log10(bCoeffsSq + (bCalc * phi))) -
 800331c:	e13fed17 	ldw	r4,-76(fp)
 8003320:	e17fee17 	ldw	r5,-72(fp)
 8003324:	e1bfeb17 	ldw	r6,-84(fp)
 8003328:	e1ffec17 	ldw	r7,-80(fp)
 800332c:	800b9f00 	call	800b9f0 <__muldf3>
 8003330:	100f883a 	mov	r7,r2
 8003334:	1811883a 	mov	r8,r3
 8003338:	380b883a 	mov	r5,r7
 800333c:	400d883a 	mov	r6,r8
 8003340:	d0a6f517 	ldw	r2,-25644(gp)
 8003344:	d126f604 	addi	r4,gp,-25640
 8003348:	20c00017 	ldw	r3,0(r4)
 800334c:	2809883a 	mov	r4,r5
 8003350:	300b883a 	mov	r5,r6
 8003354:	100d883a 	mov	r6,r2
 8003358:	180f883a 	mov	r7,r3
 800335c:	800a5900 	call	800a590 <__adddf3>
 8003360:	1009883a 	mov	r4,r2
 8003364:	180b883a 	mov	r5,r3
 8003368:	2005883a 	mov	r2,r4
 800336c:	2807883a 	mov	r3,r5
 8003370:	1009883a 	mov	r4,r2
 8003374:	180b883a 	mov	r5,r3
 8003378:	80057dc0 	call	80057dc <log10>
 800337c:	100b883a 	mov	r5,r2
 8003380:	180d883a 	mov	r6,r3
 8003384:	2809883a 	mov	r4,r5
 8003388:	300b883a 	mov	r5,r6
 800338c:	000d883a 	mov	r6,zero
 8003390:	01d00934 	movhi	r7,16420
 8003394:	800b9f00 	call	800b9f0 <__muldf3>
 8003398:	1009883a 	mov	r4,r2
 800339c:	180b883a 	mov	r5,r3
 80033a0:	2021883a 	mov	r16,r4
 80033a4:	2823883a 	mov	r17,r5
			   (10 * log10(aCoeffsSq + (aCalc * phi)));
 80033a8:	e13fef17 	ldw	r4,-68(fp)
 80033ac:	e17ff017 	ldw	r5,-64(fp)
 80033b0:	e1bfeb17 	ldw	r6,-84(fp)
 80033b4:	e1ffec17 	ldw	r7,-80(fp)
 80033b8:	800b9f00 	call	800b9f0 <__muldf3>
 80033bc:	100f883a 	mov	r7,r2
 80033c0:	1811883a 	mov	r8,r3
 80033c4:	380b883a 	mov	r5,r7
 80033c8:	400d883a 	mov	r6,r8
 80033cc:	d0a6fb17 	ldw	r2,-25620(gp)
 80033d0:	d126fc04 	addi	r4,gp,-25616
 80033d4:	20c00017 	ldw	r3,0(r4)
 80033d8:	2809883a 	mov	r4,r5
 80033dc:	300b883a 	mov	r5,r6
 80033e0:	100d883a 	mov	r6,r2
 80033e4:	180f883a 	mov	r7,r3
 80033e8:	800a5900 	call	800a590 <__adddf3>
 80033ec:	1009883a 	mov	r4,r2
 80033f0:	180b883a 	mov	r5,r3
 80033f4:	2005883a 	mov	r2,r4
 80033f8:	2807883a 	mov	r3,r5
 80033fc:	1009883a 	mov	r4,r2
 8003400:	180b883a 	mov	r5,r3
 8003404:	80057dc0 	call	80057dc <log10>
 8003408:	100b883a 	mov	r5,r2
 800340c:	180d883a 	mov	r6,r3
 8003410:	2809883a 	mov	r4,r5
 8003414:	300b883a 	mov	r5,r6
 8003418:	000d883a 	mov	r6,zero
 800341c:	01d00934 	movhi	r7,16420
 8003420:	800b9f00 	call	800b9f0 <__muldf3>
 8003424:	1009883a 	mov	r4,r2
 8003428:	180b883a 	mov	r5,r3
 800342c:	2005883a 	mov	r2,r4
 8003430:	2807883a 	mov	r3,r5
	double w = 2 * M_PI * frequencies[i] / Fs;
	double phi = 4 * pow(sin(w / 2), 2);
	double bCalc = (b0 * b2 * phi) - ((b1 * (b0 + b2)) + (4 * b0 * b2));
	double aCalc = (1 * -a2 * phi) - ((-a1 * (1 + -a2)) + (4 * 1 * -a2));
	// printf("%f: bCalc - %f, aCalc - %f\n", F, bCalc, aCalc);
	double db = (10 * log10(bCoeffsSq + (bCalc * phi))) -
 8003434:	8009883a 	mov	r4,r16
 8003438:	880b883a 	mov	r5,r17
 800343c:	100d883a 	mov	r6,r2
 8003440:	180f883a 	mov	r7,r3
 8003444:	800c25c0 	call	800c25c <__subdf3>
 8003448:	1009883a 	mov	r4,r2
 800344c:	180b883a 	mov	r5,r3
 8003450:	e13ff115 	stw	r4,-60(fp)
 8003454:	e17ff215 	stw	r5,-56(fp)
			   (10 * log10(aCoeffsSq + (aCalc * phi)));
	// each integer is 5/32 of a db.  Range is -30db to +10db.  0db is 191
	samples[biquad - 1][i] = round(db * toSample);
 8003458:	d0a6f217 	ldw	r2,-25656(gp)
 800345c:	14bfffc4 	addi	r18,r2,-1
 8003460:	00903374 	movhi	r2,16589
 8003464:	10b33344 	addi	r2,r2,-13107
 8003468:	1009883a 	mov	r4,r2
 800346c:	800cc840 	call	800cc84 <__extendsfdf2>
 8003470:	100b883a 	mov	r5,r2
 8003474:	180d883a 	mov	r6,r3
 8003478:	2809883a 	mov	r4,r5
 800347c:	300b883a 	mov	r5,r6
 8003480:	e1bff117 	ldw	r6,-60(fp)
 8003484:	e1fff217 	ldw	r7,-56(fp)
 8003488:	800b9f00 	call	800b9f0 <__muldf3>
 800348c:	1009883a 	mov	r4,r2
 8003490:	180b883a 	mov	r5,r3
 8003494:	2005883a 	mov	r2,r4
 8003498:	2807883a 	mov	r3,r5
 800349c:	1009883a 	mov	r4,r2
 80034a0:	180b883a 	mov	r5,r3
 80034a4:	80055e80 	call	80055e8 <round>
 80034a8:	100b883a 	mov	r5,r2
 80034ac:	180d883a 	mov	r6,r3
 80034b0:	2809883a 	mov	r4,r5
 80034b4:	300b883a 	mov	r5,r6
 80034b8:	800cb2c0 	call	800cb2c <__fixdfsi>
 80034bc:	1023883a 	mov	r17,r2
 80034c0:	040200b4 	movhi	r16,2050
 80034c4:	84121304 	addi	r16,r16,18508
 80034c8:	9009883a 	mov	r4,r18
 80034cc:	01408144 	movi	r5,517
 80034d0:	8009fe40 	call	8009fe4 <__mulsi3>
 80034d4:	1007883a 	mov	r3,r2
 80034d8:	e0bff317 	ldw	r2,-52(fp)
 80034dc:	1885883a 	add	r2,r3,r2
 80034e0:	1085883a 	add	r2,r2,r2
 80034e4:	1085883a 	add	r2,r2,r2
 80034e8:	8085883a 	add	r2,r16,r2
 80034ec:	14400015 	stw	r17,0(r2)
}
 80034f0:	e6fff804 	addi	sp,fp,-32
 80034f4:	dfc00917 	ldw	ra,36(sp)
 80034f8:	df000817 	ldw	fp,32(sp)
 80034fc:	ddc00717 	ldw	r23,28(sp)
 8003500:	dd800617 	ldw	r22,24(sp)
 8003504:	dd400517 	ldw	r21,20(sp)
 8003508:	dd000417 	ldw	r20,16(sp)
 800350c:	dcc00317 	ldw	r19,12(sp)
 8003510:	dc800217 	ldw	r18,8(sp)
 8003514:	dc400117 	ldw	r17,4(sp)
 8003518:	dc000017 	ldw	r16,0(sp)
 800351c:	dec00b04 	addi	sp,sp,44
 8003520:	f800283a 	ret

08003524 <IO_init>:
#define otg_hpi_r			(volatile char*)	OTG_HPI_R_BASE
#define otg_hpi_cs			(volatile char*)	OTG_HPI_CS_BASE //FOR SOME REASON CS BASE BEHAVES WEIRDLY MIGHT HAVE TO SET MANUALLY
#define otg_hpi_w			(volatile char*)	OTG_HPI_W_BASE

void IO_init(void)
{
 8003524:	deffff04 	addi	sp,sp,-4
 8003528:	df000015 	stw	fp,0(sp)
 800352c:	d839883a 	mov	fp,sp
	*otg_hpi_r = 1;
 8003530:	00882804 	movi	r2,8352
 8003534:	00c00044 	movi	r3,1
 8003538:	10c00005 	stb	r3,0(r2)
	*otg_hpi_w = 1;
 800353c:	00882404 	movi	r2,8336
 8003540:	00c00044 	movi	r3,1
 8003544:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = 0;
 8003548:	00883004 	movi	r2,8384
 800354c:	10000015 	stw	zero,0(r2)
	*otg_hpi_data = 0;
 8003550:	00882c04 	movi	r2,8368
 8003554:	10000015 	stw	zero,0(r2)
}
 8003558:	e037883a 	mov	sp,fp
 800355c:	df000017 	ldw	fp,0(sp)
 8003560:	dec00104 	addi	sp,sp,4
 8003564:	f800283a 	ret

08003568 <IO_write>:

void IO_write(alt_u8 Address, alt_u16 Data) {
 8003568:	defffd04 	addi	sp,sp,-12
 800356c:	df000215 	stw	fp,8(sp)
 8003570:	df000204 	addi	fp,sp,8
 8003574:	2007883a 	mov	r3,r4
 8003578:	2805883a 	mov	r2,r5
 800357c:	e0fffe05 	stb	r3,-8(fp)
 8003580:	e0bfff0d 	sth	r2,-4(fp)
	*otg_hpi_data = Data;
 8003584:	00882c04 	movi	r2,8368
 8003588:	e0ffff0b 	ldhu	r3,-4(fp)
 800358c:	10c00015 	stw	r3,0(r2)
	*otg_hpi_address = Address;
 8003590:	00883004 	movi	r2,8384
 8003594:	e0fffe03 	ldbu	r3,-8(fp)
 8003598:	10c00015 	stw	r3,0(r2)
	*otg_hpi_w = 0;
 800359c:	00882404 	movi	r2,8336
 80035a0:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 1;
 80035a4:	00882404 	movi	r2,8336
 80035a8:	00c00044 	movi	r3,1
 80035ac:	10c00005 	stb	r3,0(r2)
}
 80035b0:	e037883a 	mov	sp,fp
 80035b4:	df000017 	ldw	fp,0(sp)
 80035b8:	dec00104 	addi	sp,sp,4
 80035bc:	f800283a 	ret

080035c0 <IO_read>:

alt_u16 IO_read(alt_u8 Address)
{
 80035c0:	defffd04 	addi	sp,sp,-12
 80035c4:	df000215 	stw	fp,8(sp)
 80035c8:	df000204 	addi	fp,sp,8
 80035cc:	2005883a 	mov	r2,r4
 80035d0:	e0bfff05 	stb	r2,-4(fp)
	*otg_hpi_address = Address;
 80035d4:	00883004 	movi	r2,8384
 80035d8:	e0ffff03 	ldbu	r3,-4(fp)
 80035dc:	10c00015 	stw	r3,0(r2)
	*otg_hpi_r = 0;
 80035e0:	00882804 	movi	r2,8352
 80035e4:	10000005 	stb	zero,0(r2)
	alt_u16 temp;
	temp = *otg_hpi_data;
 80035e8:	00882c04 	movi	r2,8368
 80035ec:	10800017 	ldw	r2,0(r2)
 80035f0:	e0bffe0d 	sth	r2,-8(fp)
	*otg_hpi_r = 1;
 80035f4:	00882804 	movi	r2,8352
 80035f8:	00c00044 	movi	r3,1
 80035fc:	10c00005 	stb	r3,0(r2)
//	printf("%x\n",temp);
	return temp;
 8003600:	e0bffe0b 	ldhu	r2,-8(fp)
}
 8003604:	e037883a 	mov	sp,fp
 8003608:	df000017 	ldw	fp,0(sp)
 800360c:	dec00104 	addi	sp,sp,4
 8003610:	f800283a 	ret

08003614 <main>:
//
//                                Main function
//
//----------------------------------------------------------------------------------------//
int main(void)
{
 8003614:	defff904 	addi	sp,sp,-28
 8003618:	dfc00615 	stw	ra,24(sp)
 800361c:	df000515 	stw	fp,20(sp)
 8003620:	df000504 	addi	fp,sp,20
	IO_init();
 8003624:	80035240 	call	8003524 <IO_init>
	generate_frequencies();
 8003628:	80005740 	call	8000574 <generate_frequencies>

	alt_u16 intStat;
	alt_u16 usb_ctl_val;
	static alt_u16 ctl_reg = 0;
	static alt_u16 no_device = 0;
	alt_u16 fs_device = 0;
 800362c:	e03ffc8d 	sth	zero,-14(fp)
	int keycode = 0;
 8003630:	e03ffd15 	stw	zero,-12(fp)
	char old_key = 0;
 8003634:	e03ffb85 	stb	zero,-18(fp)
	char new_key = 0;
 8003638:	e03ffbc5 	stb	zero,-17(fp)
	alt_u8 toggle = 0;
 800363c:	e03ffc05 	stb	zero,-16(fp)
	alt_u8 data_size;
	alt_u8 hot_plug_count;
	alt_u16 code;

	printf("USB keyboard setup...\n\n");
 8003640:	010200b4 	movhi	r4,2050
 8003644:	213e5104 	addi	r4,r4,-1724
 8003648:	800d0e00 	call	800d0e0 <puts>

	//----------------------------------------SIE1 initial---------------------------------------------------//
	USB_HOT_PLUG:
	UsbSoftReset();
 800364c:	80044500 	call	8004450 <UsbSoftReset>

	// STEP 1a:
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
 8003650:	01005104 	movi	r4,324
 8003654:	000b883a 	mov	r5,zero
 8003658:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite (HOST1_STAT_REG, 0xFFFF);
 800365c:	01302414 	movui	r4,49296
 8003660:	017fffd4 	movui	r5,65535
 8003664:	80043b00 	call	80043b0 <UsbWrite>

	/* Set HUSB_pEOT time */
	UsbWrite(HUSB_pEOT, 600); // adjust the according to your USB device speed
 8003668:	01006d04 	movi	r4,436
 800366c:	01409604 	movi	r5,600
 8003670:	80043b00 	call	80043b0 <UsbWrite>

	usb_ctl_val = SOFEOP1_TO_CPU_EN | RESUME1_TO_HPI_EN;// | SOFEOP1_TO_HPI_EN;
 8003674:	00811004 	movi	r2,1088
 8003678:	e0bffb0d 	sth	r2,-20(fp)
	UsbWrite(HPI_IRQ_ROUTING_REG, usb_ctl_val);
 800367c:	e0bffb0b 	ldhu	r2,-20(fp)
 8003680:	01005084 	movi	r4,322
 8003684:	100b883a 	mov	r5,r2
 8003688:	80043b00 	call	80043b0 <UsbWrite>

	intStat = A_CHG_IRQ_EN | SOF_EOP_IRQ_EN ;
 800368c:	00808404 	movi	r2,528
 8003690:	e0bffe0d 	sth	r2,-8(fp)
	UsbWrite(HOST1_IRQ_EN_REG, intStat);
 8003694:	e0bffe0b 	ldhu	r2,-8(fp)
 8003698:	01302314 	movui	r4,49292
 800369c:	100b883a 	mov	r5,r2
 80036a0:	80043b00 	call	80043b0 <UsbWrite>
	// STEP 1a end

	// STEP 1b begin
	UsbWrite(COMM_R0,0x0000);//reset time
 80036a4:	01007104 	movi	r4,452
 80036a8:	000b883a 	mov	r5,zero
 80036ac:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
 80036b0:	01007184 	movi	r4,454
 80036b4:	000b883a 	mov	r5,zero
 80036b8:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
 80036bc:	01007204 	movi	r4,456
 80036c0:	000b883a 	mov	r5,zero
 80036c4:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
 80036c8:	01007284 	movi	r4,458
 80036cc:	000b883a 	mov	r5,zero
 80036d0:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
 80036d4:	01007304 	movi	r4,460
 80036d8:	000b883a 	mov	r5,zero
 80036dc:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
 80036e0:	01007384 	movi	r4,462
 80036e4:	000b883a 	mov	r5,zero
 80036e8:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
 80036ec:	01007404 	movi	r4,464
 80036f0:	000b883a 	mov	r5,zero
 80036f4:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
 80036f8:	01007484 	movi	r4,466
 80036fc:	000b883a 	mov	r5,zero
 8003700:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
 8003704:	01007504 	movi	r4,468
 8003708:	000b883a 	mov	r5,zero
 800370c:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
 8003710:	01007584 	movi	r4,470
 8003714:	000b883a 	mov	r5,zero
 8003718:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
 800371c:	01007604 	movi	r4,472
 8003720:	000b883a 	mov	r5,zero
 8003724:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
 8003728:	01007684 	movi	r4,474
 800372c:	000b883a 	mov	r5,zero
 8003730:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
 8003734:	01007704 	movi	r4,476
 8003738:	000b883a 	mov	r5,zero
 800373c:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
 8003740:	01007784 	movi	r4,478
 8003744:	000b883a 	mov	r5,zero
 8003748:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_INT_NUM,HUSB_SIE1_INIT_INT); //HUSB_SIE1_INIT_INT
 800374c:	01007084 	movi	r4,450
 8003750:	01401c84 	movi	r5,114
 8003754:	80043b00 	call	80043b0 <UsbWrite>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
 8003758:	01000044 	movi	r4,1
 800375c:	01738054 	movui	r5,52737
 8003760:	80035680 	call	8003568 <IO_write>

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
 8003764:	0001883a 	nop
 8003768:	010000c4 	movi	r4,3
 800376c:	80035c00 	call	80035c0 <IO_read>
 8003770:	10bfffcc 	andi	r2,r2,65535
 8003774:	103ffc26 	beq	r2,zero,8003768 <__alt_data_end+0xfc003768>
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
 8003778:	0001883a 	nop
 800377c:	01000044 	movi	r4,1
 8003780:	80035c00 	call	80035c0 <IO_read>
 8003784:	10bfffcc 	andi	r2,r2,65535
 8003788:	1083fb58 	cmpnei	r2,r2,4077
 800378c:	10000826 	beq	r2,zero,80037b0 <main+0x19c>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
 8003790:	01000044 	movi	r4,1
 8003794:	80035c00 	call	80035c0 <IO_read>
 8003798:	10bfffcc 	andi	r2,r2,65535
 800379c:	010200b4 	movhi	r4,2050
 80037a0:	213e5704 	addi	r4,r4,-1700
 80037a4:	100b883a 	mov	r5,r2
 80037a8:	800cfec0 	call	800cfec <printf>
		goto USB_HOT_PLUG;
 80037ac:	003fa706 	br	800364c <__alt_data_end+0xfc00364c>
	}
	// STEP 1b end

	printf("STEP 1 Complete");
 80037b0:	010200b4 	movhi	r4,2050
 80037b4:	213e6004 	addi	r4,r4,-1664
 80037b8:	800cfec0 	call	800cfec <printf>
	// STEP 2 begin
	UsbWrite(COMM_INT_NUM,HUSB_RESET_INT); //husb reset
 80037bc:	01007084 	movi	r4,450
 80037c0:	01401d04 	movi	r5,116
 80037c4:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R0,0x003c);//reset time
 80037c8:	01007104 	movi	r4,452
 80037cc:	01400f04 	movi	r5,60
 80037d0:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
 80037d4:	01007184 	movi	r4,454
 80037d8:	000b883a 	mov	r5,zero
 80037dc:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
 80037e0:	01007204 	movi	r4,456
 80037e4:	000b883a 	mov	r5,zero
 80037e8:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
 80037ec:	01007284 	movi	r4,458
 80037f0:	000b883a 	mov	r5,zero
 80037f4:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
 80037f8:	01007304 	movi	r4,460
 80037fc:	000b883a 	mov	r5,zero
 8003800:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
 8003804:	01007384 	movi	r4,462
 8003808:	000b883a 	mov	r5,zero
 800380c:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
 8003810:	01007404 	movi	r4,464
 8003814:	000b883a 	mov	r5,zero
 8003818:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
 800381c:	01007484 	movi	r4,466
 8003820:	000b883a 	mov	r5,zero
 8003824:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
 8003828:	01007504 	movi	r4,468
 800382c:	000b883a 	mov	r5,zero
 8003830:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
 8003834:	01007584 	movi	r4,470
 8003838:	000b883a 	mov	r5,zero
 800383c:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
 8003840:	01007604 	movi	r4,472
 8003844:	000b883a 	mov	r5,zero
 8003848:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
 800384c:	01007684 	movi	r4,474
 8003850:	000b883a 	mov	r5,zero
 8003854:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
 8003858:	01007704 	movi	r4,476
 800385c:	000b883a 	mov	r5,zero
 8003860:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
 8003864:	01007784 	movi	r4,478
 8003868:	000b883a 	mov	r5,zero
 800386c:	80043b00 	call	80043b0 <UsbWrite>

	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
 8003870:	01000044 	movi	r4,1
 8003874:	01738054 	movui	r5,52737
 8003878:	80035680 	call	8003568 <IO_write>

	while (IO_read(HPI_MAILBOX) != COMM_ACK)
 800387c:	0001883a 	nop
 8003880:	01000044 	movi	r4,1
 8003884:	80035c00 	call	80035c0 <IO_read>
 8003888:	10bfffcc 	andi	r2,r2,65535
 800388c:	1083fb58 	cmpnei	r2,r2,4077
 8003890:	10000826 	beq	r2,zero,80038b4 <main+0x2a0>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
 8003894:	01000044 	movi	r4,1
 8003898:	80035c00 	call	80035c0 <IO_read>
 800389c:	10bfffcc 	andi	r2,r2,65535
 80038a0:	010200b4 	movhi	r4,2050
 80038a4:	213e5704 	addi	r4,r4,-1700
 80038a8:	100b883a 	mov	r5,r2
 80038ac:	800cfec0 	call	800cfec <printf>
		goto USB_HOT_PLUG;
 80038b0:	003f6606 	br	800364c <__alt_data_end+0xfc00364c>
	}
	// STEP 2 end

	ctl_reg = USB1_CTL_REG;
 80038b4:	00b02284 	movi	r2,-16246
 80038b8:	d0a7040d 	sth	r2,-25584(gp)
	no_device = (A_DP_STAT | A_DM_STAT);
 80038bc:	008c0004 	movi	r2,12288
 80038c0:	d0a7048d 	sth	r2,-25582(gp)
	fs_device = A_DP_STAT;
 80038c4:	00880004 	movi	r2,8192
 80038c8:	e0bffc8d 	sth	r2,-14(fp)
	usb_ctl_val = UsbRead(ctl_reg);
 80038cc:	d0a7040b 	ldhu	r2,-25584(gp)
 80038d0:	10bfffcc 	andi	r2,r2,65535
 80038d4:	1009883a 	mov	r4,r2
 80038d8:	80044040 	call	8004404 <UsbRead>
 80038dc:	e0bffb0d 	sth	r2,-20(fp)

	if (!(usb_ctl_val & no_device))
 80038e0:	d0a7048b 	ldhu	r2,-25582(gp)
 80038e4:	e0fffb0b 	ldhu	r3,-20(fp)
 80038e8:	1884703a 	and	r2,r3,r2
 80038ec:	10bfffcc 	andi	r2,r2,65535
 80038f0:	1000341e 	bne	r2,zero,80039c4 <main+0x3b0>
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
 80038f4:	e03ffc45 	stb	zero,-15(fp)
 80038f8:	00001006 	br	800393c <main+0x328>
		{
			usleep(5*1000);
 80038fc:	0104e204 	movi	r4,5000
 8003900:	801d63c0 	call	801d63c <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
 8003904:	d0a7040b 	ldhu	r2,-25584(gp)
 8003908:	10bfffcc 	andi	r2,r2,65535
 800390c:	1009883a 	mov	r4,r2
 8003910:	80044040 	call	8004404 <UsbRead>
 8003914:	e0bffb0d 	sth	r2,-20(fp)
			if(usb_ctl_val & no_device) break;
 8003918:	d0a7048b 	ldhu	r2,-25582(gp)
 800391c:	e0fffb0b 	ldhu	r3,-20(fp)
 8003920:	1884703a 	and	r2,r3,r2
 8003924:	10bfffcc 	andi	r2,r2,65535
 8003928:	10000126 	beq	r2,zero,8003930 <main+0x31c>
 800392c:	00000606 	br	8003948 <main+0x334>
	fs_device = A_DP_STAT;
	usb_ctl_val = UsbRead(ctl_reg);

	if (!(usb_ctl_val & no_device))
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
 8003930:	e0bffc43 	ldbu	r2,-15(fp)
 8003934:	10800044 	addi	r2,r2,1
 8003938:	e0bffc45 	stb	r2,-15(fp)
 800393c:	e0bffc43 	ldbu	r2,-15(fp)
 8003940:	10800170 	cmpltui	r2,r2,5
 8003944:	103fed1e 	bne	r2,zero,80038fc <__alt_data_end+0xfc0038fc>
		{
			usleep(5*1000);
			usb_ctl_val = UsbRead(ctl_reg);
			if(usb_ctl_val & no_device) break;
		}
		if(!(usb_ctl_val & no_device))
 8003948:	d0a7048b 	ldhu	r2,-25582(gp)
 800394c:	e0fffb0b 	ldhu	r3,-20(fp)
 8003950:	1884703a 	and	r2,r3,r2
 8003954:	10bfffcc 	andi	r2,r2,65535
 8003958:	1000261e 	bne	r2,zero,80039f4 <main+0x3e0>
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
 800395c:	010200b4 	movhi	r4,2050
 8003960:	213e6404 	addi	r4,r4,-1648
 8003964:	800d0e00 	call	800d0e0 <puts>
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
 8003968:	010200b4 	movhi	r4,2050
 800396c:	213e6e04 	addi	r4,r4,-1608
 8003970:	800d0e00 	call	800d0e0 <puts>
			while (!(usb_ctl_val & no_device))
 8003974:	00000d06 	br	80039ac <main+0x398>
			{
				usb_ctl_val = UsbRead(ctl_reg);
 8003978:	d0a7040b 	ldhu	r2,-25584(gp)
 800397c:	10bfffcc 	andi	r2,r2,65535
 8003980:	1009883a 	mov	r4,r2
 8003984:	80044040 	call	8004404 <UsbRead>
 8003988:	e0bffb0d 	sth	r2,-20(fp)
				if(usb_ctl_val & no_device)
 800398c:	d0a7048b 	ldhu	r2,-25582(gp)
 8003990:	e0fffb0b 	ldhu	r3,-20(fp)
 8003994:	1884703a 	and	r2,r3,r2
 8003998:	10bfffcc 	andi	r2,r2,65535
 800399c:	10000126 	beq	r2,zero,80039a4 <main+0x390>
					goto USB_HOT_PLUG;
 80039a0:	003f2a06 	br	800364c <__alt_data_end+0xfc00364c>

				usleep(2000);
 80039a4:	0101f404 	movi	r4,2000
 80039a8:	801d63c0 	call	801d63c <usleep>
		}
		if(!(usb_ctl_val & no_device))
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
			while (!(usb_ctl_val & no_device))
 80039ac:	d0a7048b 	ldhu	r2,-25582(gp)
 80039b0:	e0fffb0b 	ldhu	r3,-20(fp)
 80039b4:	1884703a 	and	r2,r3,r2
 80039b8:	10bfffcc 	andi	r2,r2,65535
 80039bc:	103fee26 	beq	r2,zero,8003978 <__alt_data_end+0xfc003978>
 80039c0:	00000c06 	br	80039f4 <main+0x3e0>
		}
	}
	else
	{
		/* check for low speed or full speed by reading D+ and D- lines */
		if (usb_ctl_val & fs_device)
 80039c4:	e0fffb0b 	ldhu	r3,-20(fp)
 80039c8:	e0bffc8b 	ldhu	r2,-14(fp)
 80039cc:	1884703a 	and	r2,r3,r2
 80039d0:	10bfffcc 	andi	r2,r2,65535
 80039d4:	10000426 	beq	r2,zero,80039e8 <main+0x3d4>
		{
			printf("[INFO]: full speed device\n");
 80039d8:	010200b4 	movhi	r4,2050
 80039dc:	213e7a04 	addi	r4,r4,-1560
 80039e0:	800d0e00 	call	800d0e0 <puts>
 80039e4:	00000306 	br	80039f4 <main+0x3e0>
		}
		else
		{
			printf("[INFO]: low speed device\n");
 80039e8:	010200b4 	movhi	r4,2050
 80039ec:	213e8104 	addi	r4,r4,-1532
 80039f0:	800d0e00 	call	800d0e0 <puts>



	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();
 80039f4:	80045000 	call	8004500 <UsbSetAddress>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 80039f8:	00000306 	br	8003a08 <main+0x3f4>
	{
		UsbSetAddress();
 80039fc:	80045000 	call	8004500 <UsbSetAddress>
		usleep(10*1000);
 8003a00:	0109c404 	movi	r4,10000
 8003a04:	801d63c0 	call	801d63c <usleep>

	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003a08:	010000c4 	movi	r4,3
 8003a0c:	80035c00 	call	80035c0 <IO_read>
 8003a10:	10bfffcc 	andi	r2,r2,65535
 8003a14:	1080040c 	andi	r2,r2,16
 8003a18:	103ff826 	beq	r2,zero,80039fc <__alt_data_end+0xfc0039fc>
	{
		UsbSetAddress();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003a1c:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506); // i
 8003a20:	01000084 	movi	r4,2
 8003a24:	01414184 	movi	r5,1286
 8003a28:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 3 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003a2c:	0009883a 	mov	r4,zero
 8003a30:	80035c00 	call	80035c0 <IO_read>
 8003a34:	10bfffcc 	andi	r2,r2,65535
 8003a38:	010200b4 	movhi	r4,2050
 8003a3c:	213e8804 	addi	r4,r4,-1504
 8003a40:	100b883a 	mov	r5,r2
 8003a44:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508); // n
 8003a48:	01000084 	movi	r4,2
 8003a4c:	01414204 	movi	r5,1288
 8003a50:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003a54:	0009883a 	mov	r4,zero
 8003a58:	80035c00 	call	80035c0 <IO_read>
 8003a5c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 3 TD Control Byte is %x\n",usb_ctl_val);
 8003a60:	e0bffb0b 	ldhu	r2,-20(fp)
 8003a64:	010200b4 	movhi	r4,2050
 8003a68:	213e9304 	addi	r4,r4,-1460
 8003a6c:	100b883a 	mov	r5,r2
 8003a70:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03) // retries occurred
 8003a74:	e0bffb0b 	ldhu	r2,-20(fp)
 8003a78:	108000e0 	cmpeqi	r2,r2,3
 8003a7c:	1000031e 	bne	r2,zero,8003a8c <main+0x478>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003a80:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003a84:	e0bffb0d 	sth	r2,-20(fp)

		goto USB_HOT_PLUG;
 8003a88:	003ef006 	br	800364c <__alt_data_end+0xfc00364c>
	}

	printf("------------[ENUM PROCESS]:set address done!---------------\n");
 8003a8c:	010200b4 	movhi	r4,2050
 8003a90:	213e9f04 	addi	r4,r4,-1412
 8003a94:	800d0e00 	call	800d0e0 <puts>

	// STEP 4 begin
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1
 8003a98:	80045fc0 	call	80045fc <UsbGetDeviceDesc1>

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003a9c:	00000306 	br	8003aac <main+0x498>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
 8003aa0:	80045fc0 	call	80045fc <UsbGetDeviceDesc1>
		usleep(10*1000);
 8003aa4:	0109c404 	movi	r4,10000
 8003aa8:	801d63c0 	call	801d63c <usleep>
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003aac:	010000c4 	movi	r4,3
 8003ab0:	80035c00 	call	80035c0 <IO_read>
 8003ab4:	10bfffcc 	andi	r2,r2,65535
 8003ab8:	1080040c 	andi	r2,r2,16
 8003abc:	103ff826 	beq	r2,zero,8003aa0 <__alt_data_end+0xfc003aa0>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003ac0:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003ac4:	01000084 	movi	r4,2
 8003ac8:	01414184 	movi	r5,1286
 8003acc:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003ad0:	0009883a 	mov	r4,zero
 8003ad4:	80035c00 	call	80035c0 <IO_read>
 8003ad8:	10bfffcc 	andi	r2,r2,65535
 8003adc:	010200b4 	movhi	r4,2050
 8003ae0:	213eae04 	addi	r4,r4,-1352
 8003ae4:	100b883a 	mov	r5,r2
 8003ae8:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003aec:	01000084 	movi	r4,2
 8003af0:	01414204 	movi	r5,1288
 8003af4:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003af8:	0009883a 	mov	r4,zero
 8003afc:	80035c00 	call	80035c0 <IO_read>
 8003b00:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
 8003b04:	e0bffb0b 	ldhu	r2,-20(fp)
 8003b08:	010200b4 	movhi	r4,2050
 8003b0c:	213eb904 	addi	r4,r4,-1308
 8003b10:	100b883a 	mov	r5,r2
 8003b14:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003b18:	00000206 	br	8003b24 <main+0x510>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003b1c:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003b20:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003b24:	e0bffb0b 	ldhu	r2,-20(fp)
 8003b28:	108000d8 	cmpnei	r2,r2,3
 8003b2c:	103ffb1e 	bne	r2,zero,8003b1c <__alt_data_end+0xfc003b1c>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("---------------[ENUM PROCESS]:get device descriptor-1 done!-----------------\n");
 8003b30:	010200b4 	movhi	r4,2050
 8003b34:	213ec504 	addi	r4,r4,-1260
 8003b38:	800d0e00 	call	800d0e0 <puts>


	//--------------------------------get device descriptor-2---------------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2
 8003b3c:	80047400 	call	8004740 <UsbGetDeviceDesc2>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003b40:	00000306 	br	8003b50 <main+0x53c>
	{
		//resend the get device descriptor
		//get device descriptor
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
 8003b44:	80047400 	call	8004740 <UsbGetDeviceDesc2>
		usleep(10*1000);
 8003b48:	0109c404 	movi	r4,10000
 8003b4c:	801d63c0 	call	801d63c <usleep>
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003b50:	010000c4 	movi	r4,3
 8003b54:	80035c00 	call	80035c0 <IO_read>
 8003b58:	10bfffcc 	andi	r2,r2,65535
 8003b5c:	1080040c 	andi	r2,r2,16
 8003b60:	103ff826 	beq	r2,zero,8003b44 <__alt_data_end+0xfc003b44>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003b64:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003b68:	01000084 	movi	r4,2
 8003b6c:	01414184 	movi	r5,1286
 8003b70:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003b74:	0009883a 	mov	r4,zero
 8003b78:	80035c00 	call	80035c0 <IO_read>
 8003b7c:	10bfffcc 	andi	r2,r2,65535
 8003b80:	010200b4 	movhi	r4,2050
 8003b84:	213eae04 	addi	r4,r4,-1352
 8003b88:	100b883a 	mov	r5,r2
 8003b8c:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003b90:	01000084 	movi	r4,2
 8003b94:	01414204 	movi	r5,1288
 8003b98:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003b9c:	0009883a 	mov	r4,zero
 8003ba0:	80035c00 	call	80035c0 <IO_read>
 8003ba4:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
 8003ba8:	e0bffb0b 	ldhu	r2,-20(fp)
 8003bac:	010200b4 	movhi	r4,2050
 8003bb0:	213eb904 	addi	r4,r4,-1308
 8003bb4:	100b883a 	mov	r5,r2
 8003bb8:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003bbc:	00000206 	br	8003bc8 <main+0x5b4>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003bc0:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003bc4:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003bc8:	e0bffb0b 	ldhu	r2,-20(fp)
 8003bcc:	108000d8 	cmpnei	r2,r2,3
 8003bd0:	103ffb1e 	bne	r2,zero,8003bc0 <__alt_data_end+0xfc003bc0>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("------------[ENUM PROCESS]:get device descriptor-2 done!--------------\n");
 8003bd4:	010200b4 	movhi	r4,2050
 8003bd8:	213ed904 	addi	r4,r4,-1180
 8003bdc:	800d0e00 	call	800d0e0 <puts>


	// STEP 5 begin
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1
 8003be0:	80049140 	call	8004914 <UsbGetConfigDesc1>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003be4:	00000306 	br	8003bf4 <main+0x5e0>
	{
		//resend the get device descriptor
		//get device descriptor

		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
 8003be8:	80049140 	call	8004914 <UsbGetConfigDesc1>
		usleep(10*1000);
 8003bec:	0109c404 	movi	r4,10000
 8003bf0:	801d63c0 	call	801d63c <usleep>
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003bf4:	010000c4 	movi	r4,3
 8003bf8:	80035c00 	call	80035c0 <IO_read>
 8003bfc:	10bfffcc 	andi	r2,r2,65535
 8003c00:	1080040c 	andi	r2,r2,16
 8003c04:	103ff826 	beq	r2,zero,8003be8 <__alt_data_end+0xfc003be8>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003c08:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003c0c:	01000084 	movi	r4,2
 8003c10:	01414184 	movi	r5,1286
 8003c14:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003c18:	0009883a 	mov	r4,zero
 8003c1c:	80035c00 	call	80035c0 <IO_read>
 8003c20:	10bfffcc 	andi	r2,r2,65535
 8003c24:	010200b4 	movhi	r4,2050
 8003c28:	213eeb04 	addi	r4,r4,-1108
 8003c2c:	100b883a 	mov	r5,r2
 8003c30:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003c34:	01000084 	movi	r4,2
 8003c38:	01414204 	movi	r5,1288
 8003c3c:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003c40:	0009883a 	mov	r4,zero
 8003c44:	80035c00 	call	80035c0 <IO_read>
 8003c48:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
 8003c4c:	e0bffb0b 	ldhu	r2,-20(fp)
 8003c50:	010200b4 	movhi	r4,2050
 8003c54:	213ef604 	addi	r4,r4,-1064
 8003c58:	100b883a 	mov	r5,r2
 8003c5c:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003c60:	00000206 	br	8003c6c <main+0x658>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003c64:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003c68:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003c6c:	e0bffb0b 	ldhu	r2,-20(fp)
 8003c70:	108000d8 	cmpnei	r2,r2,3
 8003c74:	103ffb1e 	bne	r2,zero,8003c64 <__alt_data_end+0xfc003c64>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}
	printf("------------[ENUM PROCESS]:get configuration descriptor-1 pass------------\n");
 8003c78:	010200b4 	movhi	r4,2050
 8003c7c:	213f0204 	addi	r4,r4,-1016
 8003c80:	800d0e00 	call	800d0e0 <puts>

	// STEP 6 begin
	//-----------------------------------get configuration descriptor-2------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2
 8003c84:	8004aa00 	call	8004aa0 <UsbGetConfigDesc2>

	usleep(100*1000);
 8003c88:	010000b4 	movhi	r4,2
 8003c8c:	2121a804 	addi	r4,r4,-31072
 8003c90:	801d63c0 	call	801d63c <usleep>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003c94:	00000306 	br	8003ca4 <main+0x690>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
 8003c98:	8004aa00 	call	8004aa0 <UsbGetConfigDesc2>
		usleep(10*1000);
 8003c9c:	0109c404 	movi	r4,10000
 8003ca0:	801d63c0 	call	801d63c <usleep>
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2

	usleep(100*1000);
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003ca4:	010000c4 	movi	r4,3
 8003ca8:	80035c00 	call	80035c0 <IO_read>
 8003cac:	10bfffcc 	andi	r2,r2,65535
 8003cb0:	1080040c 	andi	r2,r2,16
 8003cb4:	103ff826 	beq	r2,zero,8003c98 <__alt_data_end+0xfc003c98>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003cb8:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003cbc:	01000084 	movi	r4,2
 8003cc0:	01414184 	movi	r5,1286
 8003cc4:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003cc8:	0009883a 	mov	r4,zero
 8003ccc:	80035c00 	call	80035c0 <IO_read>
 8003cd0:	10bfffcc 	andi	r2,r2,65535
 8003cd4:	010200b4 	movhi	r4,2050
 8003cd8:	213f1504 	addi	r4,r4,-940
 8003cdc:	100b883a 	mov	r5,r2
 8003ce0:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003ce4:	01000084 	movi	r4,2
 8003ce8:	01414204 	movi	r5,1288
 8003cec:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003cf0:	0009883a 	mov	r4,zero
 8003cf4:	80035c00 	call	80035c0 <IO_read>
 8003cf8:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
 8003cfc:	e0bffb0b 	ldhu	r2,-20(fp)
 8003d00:	010200b4 	movhi	r4,2050
 8003d04:	213f2004 	addi	r4,r4,-896
 8003d08:	100b883a 	mov	r5,r2
 8003d0c:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003d10:	00000206 	br	8003d1c <main+0x708>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003d14:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003d18:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003d1c:	e0bffb0b 	ldhu	r2,-20(fp)
 8003d20:	108000d8 	cmpnei	r2,r2,3
 8003d24:	103ffb1e 	bne	r2,zero,8003d14 <__alt_data_end+0xfc003d14>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}


	printf("-----------[ENUM PROCESS]:get configuration descriptor-2 done!------------\n");
 8003d28:	010200b4 	movhi	r4,2050
 8003d2c:	213f2c04 	addi	r4,r4,-848
 8003d30:	800d0e00 	call	800d0e0 <puts>


	// ---------------------------------get device info---------------------------------------------//

	// TASK: Write the address to read from the memory for byte 7 of the interface descriptor to HPI_ADDR.
	IO_write(HPI_ADDR,0x056c);
 8003d34:	01000084 	movi	r4,2
 8003d38:	01415b04 	movi	r5,1388
 8003d3c:	80035680 	call	8003568 <IO_write>
	code = IO_read(HPI_DATA);
 8003d40:	0009883a 	mov	r4,zero
 8003d44:	80035c00 	call	80035c0 <IO_read>
 8003d48:	e0bffe8d 	sth	r2,-6(fp)
	code = code & 0x003;
 8003d4c:	e0bffe8b 	ldhu	r2,-6(fp)
 8003d50:	108000cc 	andi	r2,r2,3
 8003d54:	e0bffe8d 	sth	r2,-6(fp)
	printf("\ncode = %x\n", code);
 8003d58:	e0bffe8b 	ldhu	r2,-6(fp)
 8003d5c:	010200b4 	movhi	r4,2050
 8003d60:	213f3f04 	addi	r4,r4,-772
 8003d64:	100b883a 	mov	r5,r2
 8003d68:	800cfec0 	call	800cfec <printf>

	if (code == 0x01)
 8003d6c:	e0bffe8b 	ldhu	r2,-6(fp)
 8003d70:	10800058 	cmpnei	r2,r2,1
 8003d74:	1000041e 	bne	r2,zero,8003d88 <main+0x774>
	{
		printf("\n[INFO]:check TD rec data7 \n[INFO]:Keyboard Detected!!!\n\n");
 8003d78:	010200b4 	movhi	r4,2050
 8003d7c:	213f4204 	addi	r4,r4,-760
 8003d80:	800d0e00 	call	800d0e0 <puts>
 8003d84:	00000306 	br	8003d94 <main+0x780>
	}
	else
	{
		printf("\n[INFO]:Keyboard Not Detected!!! \n\n");
 8003d88:	010200b4 	movhi	r4,2050
 8003d8c:	213f5104 	addi	r4,r4,-700
 8003d90:	800d0e00 	call	800d0e0 <puts>
	}

	// TASK: Write the address to read from the memory for the endpoint descriptor to HPI_ADDR.

	IO_write(HPI_ADDR,0x0576);
 8003d94:	01000084 	movi	r4,2
 8003d98:	01415d84 	movi	r5,1398
 8003d9c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x073F);
 8003da0:	0009883a 	mov	r4,zero
 8003da4:	0141cfc4 	movi	r5,1855
 8003da8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x8105);
 8003dac:	0009883a 	mov	r4,zero
 8003db0:	01604154 	movui	r5,33029
 8003db4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0003);
 8003db8:	0009883a 	mov	r4,zero
 8003dbc:	014000c4 	movi	r5,3
 8003dc0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);
 8003dc4:	0009883a 	mov	r4,zero
 8003dc8:	01400204 	movi	r5,8
 8003dcc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0xAC0A);
 8003dd0:	0009883a 	mov	r4,zero
 8003dd4:	016b0294 	movui	r5,44042
 8003dd8:	80035680 	call	8003568 <IO_write>
	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0576); //HUSB_SIE1_pCurrentTDPtr
 8003ddc:	01006c04 	movi	r4,432
 8003de0:	01415d84 	movi	r5,1398
 8003de4:	80043b00 	call	80043b0 <UsbWrite>

	//data_size = (IO_read(HPI_DATA)>>8)&0x0ff;
	//data_size = 0x08;//(IO_read(HPI_DATA))&0x0ff;
	//UsbPrintMem();
	IO_write(HPI_ADDR,0x057c);
 8003de8:	01000084 	movi	r4,2
 8003dec:	01415f04 	movi	r5,1404
 8003df0:	80035680 	call	8003568 <IO_write>
	data_size = (IO_read(HPI_DATA))&0x0ff;
 8003df4:	0009883a 	mov	r4,zero
 8003df8:	80035c00 	call	80035c0 <IO_read>
 8003dfc:	e0bfff05 	stb	r2,-4(fp)
	printf("[ENUM PROCESS]:data packet size is %d\n",data_size);
 8003e00:	e0bfff03 	ldbu	r2,-4(fp)
 8003e04:	010200b4 	movhi	r4,2050
 8003e08:	213f5a04 	addi	r4,r4,-664
 8003e0c:	100b883a 	mov	r5,r2
 8003e10:	800cfec0 	call	800cfec <printf>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration
 8003e14:	8004d040 	call	8004d04 <UsbSetConfig>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003e18:	00000306 	br	8003e28 <main+0x814>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
 8003e1c:	8004d040 	call	8004d04 <UsbSetConfig>
		usleep(10*1000);
 8003e20:	0109c404 	movi	r4,10000
 8003e24:	801d63c0 	call	801d63c <usleep>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003e28:	010000c4 	movi	r4,3
 8003e2c:	80035c00 	call	80035c0 <IO_read>
 8003e30:	10bfffcc 	andi	r2,r2,65535
 8003e34:	1080040c 	andi	r2,r2,16
 8003e38:	103ff826 	beq	r2,zero,8003e1c <__alt_data_end+0xfc003e1c>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003e3c:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003e40:	01000084 	movi	r4,2
 8003e44:	01414184 	movi	r5,1286
 8003e48:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003e4c:	0009883a 	mov	r4,zero
 8003e50:	80035c00 	call	80035c0 <IO_read>
 8003e54:	10bfffcc 	andi	r2,r2,65535
 8003e58:	010200b4 	movhi	r4,2050
 8003e5c:	213f6404 	addi	r4,r4,-624
 8003e60:	100b883a 	mov	r5,r2
 8003e64:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003e68:	01000084 	movi	r4,2
 8003e6c:	01414204 	movi	r5,1288
 8003e70:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003e74:	0009883a 	mov	r4,zero
 8003e78:	80035c00 	call	80035c0 <IO_read>
 8003e7c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
 8003e80:	e0bffb0b 	ldhu	r2,-20(fp)
 8003e84:	010200b4 	movhi	r4,2050
 8003e88:	213f6f04 	addi	r4,r4,-580
 8003e8c:	100b883a 	mov	r5,r2
 8003e90:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003e94:	00000206 	br	8003ea0 <main+0x88c>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003e98:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003e9c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003ea0:	e0bffb0b 	ldhu	r2,-20(fp)
 8003ea4:	108000d8 	cmpnei	r2,r2,3
 8003ea8:	103ffb1e 	bne	r2,zero,8003e98 <__alt_data_end+0xfc003e98>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("------------[ENUM PROCESS]:set configuration done!-------------------\n");
 8003eac:	010200b4 	movhi	r4,2050
 8003eb0:	213f7b04 	addi	r4,r4,-532
 8003eb4:	800d0e00 	call	800d0e0 <puts>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();
 8003eb8:	8004e000 	call	8004e00 <UsbClassRequest>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003ebc:	00000306 	br	8003ecc <main+0x8b8>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
 8003ec0:	8004e000 	call	8004e00 <UsbClassRequest>
		usleep(10*1000);
 8003ec4:	0109c404 	movi	r4,10000
 8003ec8:	801d63c0 	call	801d63c <usleep>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003ecc:	010000c4 	movi	r4,3
 8003ed0:	80035c00 	call	80035c0 <IO_read>
 8003ed4:	10bfffcc 	andi	r2,r2,65535
 8003ed8:	1080040c 	andi	r2,r2,16
 8003edc:	103ff826 	beq	r2,zero,8003ec0 <__alt_data_end+0xfc003ec0>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003ee0:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003ee4:	01000084 	movi	r4,2
 8003ee8:	01414184 	movi	r5,1286
 8003eec:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003ef0:	0009883a 	mov	r4,zero
 8003ef4:	80035c00 	call	80035c0 <IO_read>
 8003ef8:	10bfffcc 	andi	r2,r2,65535
 8003efc:	010200b4 	movhi	r4,2050
 8003f00:	213f8d04 	addi	r4,r4,-460
 8003f04:	100b883a 	mov	r5,r2
 8003f08:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003f0c:	01000084 	movi	r4,2
 8003f10:	01414204 	movi	r5,1288
 8003f14:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003f18:	0009883a 	mov	r4,zero
 8003f1c:	80035c00 	call	80035c0 <IO_read>
 8003f20:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
 8003f24:	e0bffb0b 	ldhu	r2,-20(fp)
 8003f28:	010200b4 	movhi	r4,2050
 8003f2c:	213f9804 	addi	r4,r4,-416
 8003f30:	100b883a 	mov	r5,r2
 8003f34:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003f38:	00000206 	br	8003f44 <main+0x930>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003f3c:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003f40:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003f44:	e0bffb0b 	ldhu	r2,-20(fp)
 8003f48:	108000d8 	cmpnei	r2,r2,3
 8003f4c:	103ffb1e 	bne	r2,zero,8003f3c <__alt_data_end+0xfc003f3c>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}


	printf("------------[ENUM PROCESS]:class request out done!-------------------\n");
 8003f50:	010200b4 	movhi	r4,2050
 8003f54:	213fa404 	addi	r4,r4,-368
 8003f58:	800d0e00 	call	800d0e0 <puts>

	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();
 8003f5c:	8004efc0 	call	8004efc <UsbGetHidDesc>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003f60:	00000306 	br	8003f70 <main+0x95c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
 8003f64:	8004efc0 	call	8004efc <UsbGetHidDesc>
		usleep(10*1000);
 8003f68:	0109c404 	movi	r4,10000
 8003f6c:	801d63c0 	call	801d63c <usleep>
	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8003f70:	010000c4 	movi	r4,3
 8003f74:	80035c00 	call	80035c0 <IO_read>
 8003f78:	10bfffcc 	andi	r2,r2,65535
 8003f7c:	1080040c 	andi	r2,r2,16
 8003f80:	103ff826 	beq	r2,zero,8003f64 <__alt_data_end+0xfc003f64>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8003f84:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 8003f88:	01000084 	movi	r4,2
 8003f8c:	01414184 	movi	r5,1286
 8003f90:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8003f94:	0009883a 	mov	r4,zero
 8003f98:	80035c00 	call	80035c0 <IO_read>
 8003f9c:	10bfffcc 	andi	r2,r2,65535
 8003fa0:	010200b4 	movhi	r4,2050
 8003fa4:	213f8d04 	addi	r4,r4,-460
 8003fa8:	100b883a 	mov	r5,r2
 8003fac:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8003fb0:	01000084 	movi	r4,2
 8003fb4:	01414204 	movi	r5,1288
 8003fb8:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8003fbc:	0009883a 	mov	r4,zero
 8003fc0:	80035c00 	call	80035c0 <IO_read>
 8003fc4:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
 8003fc8:	e0bffb0b 	ldhu	r2,-20(fp)
 8003fcc:	010200b4 	movhi	r4,2050
 8003fd0:	213f9804 	addi	r4,r4,-416
 8003fd4:	100b883a 	mov	r5,r2
 8003fd8:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8003fdc:	00000206 	br	8003fe8 <main+0x9d4>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8003fe0:	80054000 	call	8005400 <UsbGetRetryCnt>
 8003fe4:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 8003fe8:	e0bffb0b 	ldhu	r2,-20(fp)
 8003fec:	108000d8 	cmpnei	r2,r2,3
 8003ff0:	103ffb1e 	bne	r2,zero,8003fe0 <__alt_data_end+0xfc003fe0>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("------------[ENUM PROCESS]:get descriptor (class 0x21) done!-------------------\n");
 8003ff4:	010200b4 	movhi	r4,2050
 8003ff8:	213fb604 	addi	r4,r4,-296
 8003ffc:	800d0e00 	call	800d0e0 <puts>

	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
 8004000:	80050400 	call	8005040 <UsbGetReportDesc>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8004004:	00000306 	br	8004014 <main+0xa00>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
 8004008:	80050400 	call	8005040 <UsbGetReportDesc>
		usleep(10*1000);
 800400c:	0109c404 	movi	r4,10000
 8004010:	801d63c0 	call	801d63c <usleep>
	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8004014:	010000c4 	movi	r4,3
 8004018:	80035c00 	call	80035c0 <IO_read>
 800401c:	10bfffcc 	andi	r2,r2,65535
 8004020:	1080040c 	andi	r2,r2,16
 8004024:	103ff826 	beq	r2,zero,8004008 <__alt_data_end+0xfc004008>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
 8004028:	800537c0 	call	800537c <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
 800402c:	01000084 	movi	r4,2
 8004030:	01414184 	movi	r5,1286
 8004034:	80035680 	call	8003568 <IO_write>
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));
 8004038:	0009883a 	mov	r4,zero
 800403c:	80035c00 	call	80035c0 <IO_read>
 8004040:	10bfffcc 	andi	r2,r2,65535
 8004044:	010200b4 	movhi	r4,2050
 8004048:	213fca04 	addi	r4,r4,-216
 800404c:	100b883a 	mov	r5,r2
 8004050:	800cfec0 	call	800cfec <printf>

	IO_write(HPI_ADDR,0x0508);
 8004054:	01000084 	movi	r4,2
 8004058:	01414204 	movi	r5,1288
 800405c:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 8004060:	0009883a 	mov	r4,zero
 8004064:	80035c00 	call	80035c0 <IO_read>
 8004068:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
 800406c:	e0bffb0b 	ldhu	r2,-20(fp)
 8004070:	010200b4 	movhi	r4,2050
 8004074:	213fd604 	addi	r4,r4,-168
 8004078:	100b883a 	mov	r5,r2
 800407c:	800cfec0 	call	800cfec <printf>
	while (usb_ctl_val != 0x03)
 8004080:	00000206 	br	800408c <main+0xa78>
	{
		usb_ctl_val = UsbGetRetryCnt();
 8004084:	80054000 	call	8005400 <UsbGetRetryCnt>
 8004088:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
 800408c:	e0bffb0b 	ldhu	r2,-20(fp)
 8004090:	108000d8 	cmpnei	r2,r2,3
 8004094:	103ffb1e 	bne	r2,zero,8004084 <__alt_data_end+0xfc004084>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("---------------[ENUM PROCESS]:get descriptor (class 0x22) done!----------------\n");
 8004098:	010200b4 	movhi	r4,2050
 800409c:	213fe204 	addi	r4,r4,-120
 80040a0:	800d0e00 	call	800d0e0 <puts>



	//-----------------------------------get keycode value------------------------------------------------//
	usleep(10000);
 80040a4:	0109c404 	movi	r4,10000
 80040a8:	801d63c0 	call	801d63c <usleep>
	printf("\n\nPress E to edit the filters\n");
 80040ac:	010200b4 	movhi	r4,2050
 80040b0:	213ff604 	addi	r4,r4,-40
 80040b4:	800d0e00 	call	800d0e0 <puts>
	*to_hw_sig = 6;
 80040b8:	00881804 	movi	r2,8288
 80040bc:	00c00184 	movi	r3,6
 80040c0:	10c00005 	stb	r3,0(r2)
	while(1)
	{
		toggle++;
 80040c4:	e0bffc03 	ldbu	r2,-16(fp)
 80040c8:	10800044 	addi	r2,r2,1
 80040cc:	e0bffc05 	stb	r2,-16(fp)
		IO_write(HPI_ADDR,0x0500); //the start address
 80040d0:	01000084 	movi	r4,2
 80040d4:	01414004 	movi	r5,1280
 80040d8:	80035680 	call	8003568 <IO_write>
		//data phase IN-1
		IO_write(HPI_DATA,0x051c); //500
 80040dc:	0009883a 	mov	r4,zero
 80040e0:	01414704 	movi	r5,1308
 80040e4:	80035680 	call	8003568 <IO_write>

		IO_write(HPI_DATA,0x000f & data_size);//2 data length
 80040e8:	e0bfff03 	ldbu	r2,-4(fp)
 80040ec:	108003cc 	andi	r2,r2,15
 80040f0:	0009883a 	mov	r4,zero
 80040f4:	100b883a 	mov	r5,r2
 80040f8:	80035680 	call	8003568 <IO_write>

		IO_write(HPI_DATA,0x0291);//4 //endpoint 1
 80040fc:	0009883a 	mov	r4,zero
 8004100:	0140a444 	movi	r5,657
 8004104:	80035680 	call	8003568 <IO_write>
		if(toggle%2)
 8004108:	e0bffc03 	ldbu	r2,-16(fp)
 800410c:	1080004c 	andi	r2,r2,1
 8004110:	10803fcc 	andi	r2,r2,255
 8004114:	10000426 	beq	r2,zero,8004128 <main+0xb14>
		{
			IO_write(HPI_DATA,0x0001);//6 //data 1
 8004118:	0009883a 	mov	r4,zero
 800411c:	01400044 	movi	r5,1
 8004120:	80035680 	call	8003568 <IO_write>
 8004124:	00000306 	br	8004134 <main+0xb20>
		}
		else
		{
			IO_write(HPI_DATA,0x0041);//6 //data 1
 8004128:	0009883a 	mov	r4,zero
 800412c:	01401044 	movi	r5,65
 8004130:	80035680 	call	8003568 <IO_write>
		}
		IO_write(HPI_DATA,0x0013);//8
 8004134:	0009883a 	mov	r4,zero
 8004138:	014004c4 	movi	r5,19
 800413c:	80035680 	call	8003568 <IO_write>
		IO_write(HPI_DATA,0x0000);//a
 8004140:	0009883a 	mov	r4,zero
 8004144:	000b883a 	mov	r5,zero
 8004148:	80035680 	call	8003568 <IO_write>
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 800414c:	01006c04 	movi	r4,432
 8004150:	01414004 	movi	r5,1280
 8004154:	80043b00 	call	80043b0 <UsbWrite>
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8004158:	00002406 	br	80041ec <main+0xbd8>
		{
			IO_write(HPI_ADDR,0x0500); //the start address
 800415c:	01000084 	movi	r4,2
 8004160:	01414004 	movi	r5,1280
 8004164:	80035680 	call	8003568 <IO_write>
			//data phase IN-1
			IO_write(HPI_DATA,0x051c); //500
 8004168:	0009883a 	mov	r4,zero
 800416c:	01414704 	movi	r5,1308
 8004170:	80035680 	call	8003568 <IO_write>

			IO_write(HPI_DATA,0x000f & data_size);//2 data length
 8004174:	e0bfff03 	ldbu	r2,-4(fp)
 8004178:	108003cc 	andi	r2,r2,15
 800417c:	0009883a 	mov	r4,zero
 8004180:	100b883a 	mov	r5,r2
 8004184:	80035680 	call	8003568 <IO_write>

			IO_write(HPI_DATA,0x0291);//4 //endpoint 1
 8004188:	0009883a 	mov	r4,zero
 800418c:	0140a444 	movi	r5,657
 8004190:	80035680 	call	8003568 <IO_write>
			if(toggle%2)
 8004194:	e0bffc03 	ldbu	r2,-16(fp)
 8004198:	1080004c 	andi	r2,r2,1
 800419c:	10803fcc 	andi	r2,r2,255
 80041a0:	10000426 	beq	r2,zero,80041b4 <main+0xba0>
			{
				IO_write(HPI_DATA,0x0001);//6 //data 1
 80041a4:	0009883a 	mov	r4,zero
 80041a8:	01400044 	movi	r5,1
 80041ac:	80035680 	call	8003568 <IO_write>
 80041b0:	00000306 	br	80041c0 <main+0xbac>
			}
			else
			{
				IO_write(HPI_DATA,0x0041);//6 //data 1
 80041b4:	0009883a 	mov	r4,zero
 80041b8:	01401044 	movi	r5,65
 80041bc:	80035680 	call	8003568 <IO_write>
			}
			IO_write(HPI_DATA,0x0013);//8
 80041c0:	0009883a 	mov	r4,zero
 80041c4:	014004c4 	movi	r5,19
 80041c8:	80035680 	call	8003568 <IO_write>
			IO_write(HPI_DATA,0x0000);//
 80041cc:	0009883a 	mov	r4,zero
 80041d0:	000b883a 	mov	r5,zero
 80041d4:	80035680 	call	8003568 <IO_write>
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 80041d8:	01006c04 	movi	r4,432
 80041dc:	01414004 	movi	r5,1280
 80041e0:	80043b00 	call	80043b0 <UsbWrite>
			usleep(10*1000);
 80041e4:	0109c404 	movi	r4,10000
 80041e8:	801d63c0 	call	801d63c <usleep>
		}
		IO_write(HPI_DATA,0x0013);//8
		IO_write(HPI_DATA,0x0000);//a
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 80041ec:	010000c4 	movi	r4,3
 80041f0:	80035c00 	call	80035c0 <IO_read>
 80041f4:	10bfffcc 	andi	r2,r2,65535
 80041f8:	1080040c 	andi	r2,r2,16
 80041fc:	103fd726 	beq	r2,zero,800415c <__alt_data_end+0xfc00415c>
			usleep(10*1000);
		}//end while



		usb_ctl_val = UsbWaitTDListDone();
 8004200:	800537c0 	call	800537c <UsbWaitTDListDone>
 8004204:	e0bffb0d 	sth	r2,-20(fp)

		// packet starts from 0x051c, reading third byte
		// TASK: Write the address to read from the memory for byte 3 of the report descriptor to HPI_ADDR.
		IO_write(HPI_ADDR,0x051e); //the start address
 8004208:	01000084 	movi	r4,2
 800420c:	01414784 	movi	r5,1310
 8004210:	80035680 	call	8003568 <IO_write>
		keycode = IO_read(HPI_DATA);
 8004214:	0009883a 	mov	r4,zero
 8004218:	80035c00 	call	80035c0 <IO_read>
 800421c:	10bfffcc 	andi	r2,r2,65535
 8004220:	e0bffd15 	stw	r2,-12(fp)
		if ((keycode & 0xff00) != 0)
 8004224:	e0bffd17 	ldw	r2,-12(fp)
 8004228:	10bfc00c 	andi	r2,r2,65280
 800422c:	10000426 	beq	r2,zero,8004240 <main+0xc2c>
			new_key = keycode >> 8;
 8004230:	e0bffd17 	ldw	r2,-12(fp)
 8004234:	1005d23a 	srai	r2,r2,8
 8004238:	e0bffbc5 	stb	r2,-17(fp)
 800423c:	00000206 	br	8004248 <main+0xc34>
		else
			new_key = (keycode & 0x00ff);
 8004240:	e0bffd17 	ldw	r2,-12(fp)
 8004244:	e0bffbc5 	stb	r2,-17(fp)
//		printf("\nfirst two keycode values are %04x\n",keycode);
		if (new_key != old_key && new_key != 0) {
 8004248:	e0fffbc7 	ldb	r3,-17(fp)
 800424c:	e0bffb87 	ldb	r2,-18(fp)
 8004250:	18800526 	beq	r3,r2,8004268 <main+0xc54>
 8004254:	e0bffbc7 	ldb	r2,-17(fp)
 8004258:	10000326 	beq	r2,zero,8004268 <main+0xc54>
			handle_keycode(new_key);
 800425c:	e0bffbc7 	ldb	r2,-17(fp)
 8004260:	1009883a 	mov	r4,r2
 8004264:	80001f80 	call	80001f8 <handle_keycode>
		}
		old_key = new_key;
 8004268:	e0bffbc3 	ldbu	r2,-17(fp)
 800426c:	e0bffb85 	stb	r2,-18(fp)
//		IOWR(KEYCODE_BASE, 0, keycode & 0xff);


		usleep(200);//usleep(5000);
 8004270:	01003204 	movi	r4,200
 8004274:	801d63c0 	call	801d63c <usleep>
		usb_ctl_val = UsbRead(ctl_reg);
 8004278:	d0a7040b 	ldhu	r2,-25584(gp)
 800427c:	10bfffcc 	andi	r2,r2,65535
 8004280:	1009883a 	mov	r4,r2
 8004284:	80044040 	call	8004404 <UsbRead>
 8004288:	e0bffb0d 	sth	r2,-20(fp)

		if(!(usb_ctl_val & no_device))
 800428c:	d0a7048b 	ldhu	r2,-25582(gp)
 8004290:	e0fffb0b 	ldhu	r3,-20(fp)
 8004294:	1884703a 	and	r2,r3,r2
 8004298:	10bfffcc 	andi	r2,r2,65535
 800429c:	1000201e 	bne	r2,zero,8004320 <main+0xd0c>
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
 80042a0:	e03ffc45 	stb	zero,-15(fp)
 80042a4:	00001006 	br	80042e8 <main+0xcd4>
			{
				usleep(5*1000);
 80042a8:	0104e204 	movi	r4,5000
 80042ac:	801d63c0 	call	801d63c <usleep>
				usb_ctl_val = UsbRead(ctl_reg);
 80042b0:	d0a7040b 	ldhu	r2,-25584(gp)
 80042b4:	10bfffcc 	andi	r2,r2,65535
 80042b8:	1009883a 	mov	r4,r2
 80042bc:	80044040 	call	8004404 <UsbRead>
 80042c0:	e0bffb0d 	sth	r2,-20(fp)
				if(usb_ctl_val & no_device) break;
 80042c4:	d0a7048b 	ldhu	r2,-25582(gp)
 80042c8:	e0fffb0b 	ldhu	r3,-20(fp)
 80042cc:	1884703a 	and	r2,r3,r2
 80042d0:	10bfffcc 	andi	r2,r2,65535
 80042d4:	10000126 	beq	r2,zero,80042dc <main+0xcc8>
 80042d8:	00000606 	br	80042f4 <main+0xce0>
		usb_ctl_val = UsbRead(ctl_reg);

		if(!(usb_ctl_val & no_device))
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
 80042dc:	e0bffc43 	ldbu	r2,-15(fp)
 80042e0:	10800044 	addi	r2,r2,1
 80042e4:	e0bffc45 	stb	r2,-15(fp)
 80042e8:	e0bffc43 	ldbu	r2,-15(fp)
 80042ec:	108001f0 	cmpltui	r2,r2,7
 80042f0:	103fed1e 	bne	r2,zero,80042a8 <__alt_data_end+0xfc0042a8>
			{
				usleep(5*1000);
				usb_ctl_val = UsbRead(ctl_reg);
				if(usb_ctl_val & no_device) break;
			}
			if(!(usb_ctl_val & no_device))
 80042f4:	d0a7048b 	ldhu	r2,-25582(gp)
 80042f8:	e0fffb0b 	ldhu	r3,-20(fp)
 80042fc:	1884703a 	and	r2,r3,r2
 8004300:	10bfffcc 	andi	r2,r2,65535
 8004304:	1000061e 	bne	r2,zero,8004320 <main+0xd0c>
			{
				printf("\n[INFO]: the keyboard has been removed!!! \n");
 8004308:	010200b4 	movhi	r4,2050
 800430c:	213ffe04 	addi	r4,r4,-8
 8004310:	800d0e00 	call	800d0e0 <puts>
				printf("[INFO]: please insert again!!! \n");
 8004314:	010200b4 	movhi	r4,2050
 8004318:	21000904 	addi	r4,r4,36
 800431c:	800d0e00 	call	800d0e0 <puts>
			}
		}

		while (!(usb_ctl_val & no_device))
 8004320:	00001d06 	br	8004398 <main+0xd84>
		{

			usb_ctl_val = UsbRead(ctl_reg);
 8004324:	d0a7040b 	ldhu	r2,-25584(gp)
 8004328:	10bfffcc 	andi	r2,r2,65535
 800432c:	1009883a 	mov	r4,r2
 8004330:	80044040 	call	8004404 <UsbRead>
 8004334:	e0bffb0d 	sth	r2,-20(fp)
			usleep(5*1000);
 8004338:	0104e204 	movi	r4,5000
 800433c:	801d63c0 	call	801d63c <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
 8004340:	d0a7040b 	ldhu	r2,-25584(gp)
 8004344:	10bfffcc 	andi	r2,r2,65535
 8004348:	1009883a 	mov	r4,r2
 800434c:	80044040 	call	8004404 <UsbRead>
 8004350:	e0bffb0d 	sth	r2,-20(fp)
			usleep(5*1000);
 8004354:	0104e204 	movi	r4,5000
 8004358:	801d63c0 	call	801d63c <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
 800435c:	d0a7040b 	ldhu	r2,-25584(gp)
 8004360:	10bfffcc 	andi	r2,r2,65535
 8004364:	1009883a 	mov	r4,r2
 8004368:	80044040 	call	8004404 <UsbRead>
 800436c:	e0bffb0d 	sth	r2,-20(fp)
			usleep(5*1000);
 8004370:	0104e204 	movi	r4,5000
 8004374:	801d63c0 	call	801d63c <usleep>

			if(usb_ctl_val & no_device)
 8004378:	d0a7048b 	ldhu	r2,-25582(gp)
 800437c:	e0fffb0b 	ldhu	r3,-20(fp)
 8004380:	1884703a 	and	r2,r3,r2
 8004384:	10bfffcc 	andi	r2,r2,65535
 8004388:	10000126 	beq	r2,zero,8004390 <main+0xd7c>
				goto USB_HOT_PLUG;
 800438c:	003caf06 	br	800364c <__alt_data_end+0xfc00364c>

			usleep(200);
 8004390:	01003204 	movi	r4,200
 8004394:	801d63c0 	call	801d63c <usleep>
				printf("\n[INFO]: the keyboard has been removed!!! \n");
				printf("[INFO]: please insert again!!! \n");
			}
		}

		while (!(usb_ctl_val & no_device))
 8004398:	d0a7048b 	ldhu	r2,-25582(gp)
 800439c:	e0fffb0b 	ldhu	r3,-20(fp)
 80043a0:	1884703a 	and	r2,r3,r2
 80043a4:	10bfffcc 	andi	r2,r2,65535
 80043a8:	103fde26 	beq	r2,zero,8004324 <__alt_data_end+0xfc004324>
				goto USB_HOT_PLUG;

			usleep(200);
		}

	}//end while
 80043ac:	003f4506 	br	80040c4 <__alt_data_end+0xfc0040c4>

080043b0 <UsbWrite>:
 * @return   None
 *
 * @note     None
 *
 ******************************************************************************/
void UsbWrite(alt_u16 Address, alt_u16 Data) {
 80043b0:	defffc04 	addi	sp,sp,-16
 80043b4:	dfc00315 	stw	ra,12(sp)
 80043b8:	df000215 	stw	fp,8(sp)
 80043bc:	df000204 	addi	fp,sp,8
 80043c0:	2007883a 	mov	r3,r4
 80043c4:	2805883a 	mov	r2,r5
 80043c8:	e0fffe0d 	sth	r3,-8(fp)
 80043cc:	e0bfff0d 	sth	r2,-4(fp)
	IO_write(HPI_ADDR, Address);
 80043d0:	e0bffe0b 	ldhu	r2,-8(fp)
 80043d4:	01000084 	movi	r4,2
 80043d8:	100b883a 	mov	r5,r2
 80043dc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA, Data);
 80043e0:	e0bfff0b 	ldhu	r2,-4(fp)
 80043e4:	0009883a 	mov	r4,zero
 80043e8:	100b883a 	mov	r5,r2
 80043ec:	80035680 	call	8003568 <IO_write>
}
 80043f0:	e037883a 	mov	sp,fp
 80043f4:	dfc00117 	ldw	ra,4(sp)
 80043f8:	df000017 	ldw	fp,0(sp)
 80043fc:	dec00204 	addi	sp,sp,8
 8004400:	f800283a 	ret

08004404 <UsbRead>:
 * @return   The data read from the specified address
 *
 * @note     None
 *
 ******************************************************************************/
alt_u16 UsbRead(alt_u16 Address) {
 8004404:	defffc04 	addi	sp,sp,-16
 8004408:	dfc00315 	stw	ra,12(sp)
 800440c:	df000215 	stw	fp,8(sp)
 8004410:	df000204 	addi	fp,sp,8
 8004414:	2005883a 	mov	r2,r4
 8004418:	e0bfff0d 	sth	r2,-4(fp)
	IO_write(HPI_ADDR, Address);
 800441c:	e0bfff0b 	ldhu	r2,-4(fp)
 8004420:	01000084 	movi	r4,2
 8004424:	100b883a 	mov	r5,r2
 8004428:	80035680 	call	8003568 <IO_write>
	alt_u16 temp;
	temp = IO_read(HPI_DATA);
 800442c:	0009883a 	mov	r4,zero
 8004430:	80035c00 	call	80035c0 <IO_read>
 8004434:	e0bffe0d 	sth	r2,-8(fp)
	return temp;
 8004438:	e0bffe0b 	ldhu	r2,-8(fp)
}
 800443c:	e037883a 	mov	sp,fp
 8004440:	dfc00117 	ldw	ra,4(sp)
 8004444:	df000017 	ldw	fp,0(sp)
 8004448:	dec00204 	addi	sp,sp,8
 800444c:	f800283a 	ret

08004450 <UsbSoftReset>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbSoftReset()
{
 8004450:	defffe04 	addi	sp,sp,-8
 8004454:	dfc00115 	stw	ra,4(sp)
 8004458:	df000015 	stw	fp,0(sp)
 800445c:	d839883a 	mov	fp,sp
	//XIo_Out16(USB_MAILBOX, COMM_RESET);
	IO_write(HPI_MAILBOX,COMM_RESET); //COMM_JUMP2CODE
 8004460:	01000044 	movi	r4,1
 8004464:	017e9414 	movui	r5,64080
 8004468:	80035680 	call	8003568 <IO_write>
	usleep(100000);
 800446c:	010000b4 	movhi	r4,2
 8004470:	2121a804 	addi	r4,r4,-31072
 8004474:	801d63c0 	call	801d63c <usleep>
	printf("[USB INIT]:reset finished!\n");
 8004478:	010200b4 	movhi	r4,2050
 800447c:	21001104 	addi	r4,r4,68
 8004480:	800d0e00 	call	800d0e0 <puts>

	usleep(500000);
 8004484:	01000234 	movhi	r4,8
 8004488:	21284804 	addi	r4,r4,-24288
 800448c:	801d63c0 	call	801d63c <usleep>
	printf("[USB INIT]:Clear up the interrupt\r\n");
 8004490:	010200b4 	movhi	r4,2050
 8004494:	21001804 	addi	r4,r4,96
 8004498:	800d0e00 	call	800d0e0 <puts>
	IO_read(HPI_MAILBOX);
 800449c:	01000044 	movi	r4,1
 80044a0:	80035c00 	call	80035c0 <IO_read>
	IO_read(HPI_STATUS);
 80044a4:	010000c4 	movi	r4,3
 80044a8:	80035c00 	call	80035c0 <IO_read>

	// Had to add the write due to a bug in BIOS where they overwrite
	// the mailbox after initialization with garbage.  The read clears
	// any pending interrupts.
	UsbRead (HPI_SIE1_MSG_ADR);
 80044ac:	01005104 	movi	r4,324
 80044b0:	80044040 	call	8004404 <UsbRead>
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
 80044b4:	01005104 	movi	r4,324
 80044b8:	000b883a 	mov	r5,zero
 80044bc:	80043b00 	call	80043b0 <UsbWrite>
	UsbRead (HPI_SIE2_MSG_ADR);
 80044c0:	01005204 	movi	r4,328
 80044c4:	80044040 	call	8004404 <UsbRead>
	UsbWrite (HPI_SIE2_MSG_ADR, 0);
 80044c8:	01005204 	movi	r4,328
 80044cc:	000b883a 	mov	r5,zero
 80044d0:	80043b00 	call	80043b0 <UsbWrite>


	UsbWrite (HOST1_STAT_REG, 0xFFFF);
 80044d4:	01302414 	movui	r4,49296
 80044d8:	017fffd4 	movui	r5,65535
 80044dc:	80043b00 	call	80043b0 <UsbWrite>
	UsbWrite (HOST2_STAT_REG, 0xFFFF);
 80044e0:	01302c14 	movui	r4,49328
 80044e4:	017fffd4 	movui	r5,65535
 80044e8:	80043b00 	call	80043b0 <UsbWrite>
}
 80044ec:	e037883a 	mov	sp,fp
 80044f0:	dfc00117 	ldw	ra,4(sp)
 80044f4:	df000017 	ldw	fp,0(sp)
 80044f8:	dec00204 	addi	sp,sp,8
 80044fc:	f800283a 	ret

08004500 <UsbSetAddress>:


void UsbSetAddress()
{
 8004500:	defffe04 	addi	sp,sp,-8
 8004504:	dfc00115 	stw	ra,4(sp)
 8004508:	df000015 	stw	fp,0(sp)
 800450c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004510:	01000084 	movi	r4,2
 8004514:	01414004 	movi	r5,1280
 8004518:	80035680 	call	8003568 <IO_write>
	// TD #1: 6 writes
	IO_write(HPI_DATA,0x050C);
 800451c:	0009883a 	mov	r4,zero
 8004520:	01414304 	movi	r5,1292
 8004524:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004528:	0009883a 	mov	r4,zero
 800452c:	01400204 	movi	r5,8
 8004530:	80035680 	call	8003568 <IO_write>
	// TASK: Complete with 4 more IOWR functions
	IO_write(HPI_DATA,0x00D0);
 8004534:	0009883a 	mov	r4,zero
 8004538:	01403404 	movi	r5,208
 800453c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004540:	0009883a 	mov	r4,zero
 8004544:	01400044 	movi	r5,1
 8004548:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 800454c:	0009883a 	mov	r4,zero
 8004550:	014004c4 	movi	r5,19
 8004554:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004558:	0009883a 	mov	r4,zero
 800455c:	01414504 	movi	r5,1300
 8004560:	80035680 	call	8003568 <IO_write>
	// TD #2: 4 writes
	// TASK: Complete with 4 IOWR functions
	IO_write(HPI_DATA,0x0500);
 8004564:	0009883a 	mov	r4,zero
 8004568:	01414004 	movi	r5,1280
 800456c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0002);
 8004570:	0009883a 	mov	r4,zero
 8004574:	01400084 	movi	r5,2
 8004578:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 800457c:	0009883a 	mov	r4,zero
 8004580:	000b883a 	mov	r5,zero
 8004584:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004588:	0009883a 	mov	r4,zero
 800458c:	000b883a 	mov	r5,zero
 8004590:	80035680 	call	8003568 <IO_write>
	// TD #3: 6 writes
	// TASK: Complete with 6 IOWR functions
	IO_write(HPI_DATA,0x0000); //
 8004594:	0009883a 	mov	r4,zero
 8004598:	000b883a 	mov	r5,zero
 800459c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//
 80045a0:	0009883a 	mov	r4,zero
 80045a4:	000b883a 	mov	r5,zero
 80045a8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0090);//
 80045ac:	0009883a 	mov	r4,zero
 80045b0:	01402404 	movi	r5,144
 80045b4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);
 80045b8:	0009883a 	mov	r4,zero
 80045bc:	01401044 	movi	r5,65
 80045c0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 80045c4:	0009883a 	mov	r4,zero
 80045c8:	014004c4 	movi	r5,19
 80045cc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 80045d0:	0009883a 	mov	r4,zero
 80045d4:	000b883a 	mov	r5,zero
 80045d8:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 80045dc:	01006c04 	movi	r4,432
 80045e0:	01414004 	movi	r5,1280
 80045e4:	80043b00 	call	80043b0 <UsbWrite>
}
 80045e8:	e037883a 	mov	sp,fp
 80045ec:	dfc00117 	ldw	ra,4(sp)
 80045f0:	df000017 	ldw	fp,0(sp)
 80045f4:	dec00204 	addi	sp,sp,8
 80045f8:	f800283a 	ret

080045fc <UsbGetDeviceDesc1>:


void UsbGetDeviceDesc1()
{
 80045fc:	defffe04 	addi	sp,sp,-8
 8004600:	dfc00115 	stw	ra,4(sp)
 8004604:	df000015 	stw	fp,0(sp)
 8004608:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 800460c:	01000084 	movi	r4,2
 8004610:	01414004 	movi	r5,1280
 8004614:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 8004618:	0009883a 	mov	r4,zero
 800461c:	01414304 	movi	r5,1292
 8004620:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004624:	0009883a 	mov	r4,zero
 8004628:	01400204 	movi	r5,8
 800462c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
 8004630:	0009883a 	mov	r4,zero
 8004634:	0140b404 	movi	r5,720
 8004638:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 800463c:	0009883a 	mov	r4,zero
 8004640:	01400044 	movi	r5,1
 8004644:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004648:	0009883a 	mov	r4,zero
 800464c:	014004c4 	movi	r5,19
 8004650:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004654:	0009883a 	mov	r4,zero
 8004658:	01414504 	movi	r5,1300
 800465c:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
 8004660:	0009883a 	mov	r4,zero
 8004664:	0141a004 	movi	r5,1664
 8004668:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0100); //device 0x01
 800466c:	0009883a 	mov	r4,zero
 8004670:	01404004 	movi	r5,256
 8004674:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004678:	0009883a 	mov	r4,zero
 800467c:	000b883a 	mov	r5,zero
 8004680:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);
 8004684:	0009883a 	mov	r4,zero
 8004688:	01400204 	movi	r5,8
 800468c:	80035680 	call	8003568 <IO_write>

	//data phase IN
	IO_write(HPI_DATA,0x052C); //
 8004690:	0009883a 	mov	r4,zero
 8004694:	01414b04 	movi	r5,1324
 8004698:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//
 800469c:	0009883a 	mov	r4,zero
 80046a0:	01400204 	movi	r5,8
 80046a4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//
 80046a8:	0009883a 	mov	r4,zero
 80046ac:	0140a404 	movi	r5,656
 80046b0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);
 80046b4:	0009883a 	mov	r4,zero
 80046b8:	01401044 	movi	r5,65
 80046bc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 80046c0:	0009883a 	mov	r4,zero
 80046c4:	014004c4 	movi	r5,19
 80046c8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0520);
 80046cc:	0009883a 	mov	r4,zero
 80046d0:	01414804 	movi	r5,1312
 80046d4:	80035680 	call	8003568 <IO_write>

	//    //status phase
	IO_write(HPI_DATA,0x0000); //don't care
 80046d8:	0009883a 	mov	r4,zero
 80046dc:	000b883a 	mov	r5,zero
 80046e0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
 80046e4:	0009883a 	mov	r4,zero
 80046e8:	000b883a 	mov	r5,zero
 80046ec:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0210);//device address
 80046f0:	0009883a 	mov	r4,zero
 80046f4:	01408404 	movi	r5,528
 80046f8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);
 80046fc:	0009883a 	mov	r4,zero
 8004700:	01401044 	movi	r5,65
 8004704:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004708:	0009883a 	mov	r4,zero
 800470c:	014004c4 	movi	r5,19
 8004710:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004714:	0009883a 	mov	r4,zero
 8004718:	000b883a 	mov	r5,zero
 800471c:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 8004720:	01006c04 	movi	r4,432
 8004724:	01414004 	movi	r5,1280
 8004728:	80043b00 	call	80043b0 <UsbWrite>
}
 800472c:	e037883a 	mov	sp,fp
 8004730:	dfc00117 	ldw	ra,4(sp)
 8004734:	df000017 	ldw	fp,0(sp)
 8004738:	dec00204 	addi	sp,sp,8
 800473c:	f800283a 	ret

08004740 <UsbGetDeviceDesc2>:

void UsbGetDeviceDesc2()
{
 8004740:	defffe04 	addi	sp,sp,-8
 8004744:	dfc00115 	stw	ra,4(sp)
 8004748:	df000015 	stw	fp,0(sp)
 800474c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004750:	01000084 	movi	r4,2
 8004754:	01414004 	movi	r5,1280
 8004758:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 800475c:	0009883a 	mov	r4,zero
 8004760:	01414304 	movi	r5,1292
 8004764:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004768:	0009883a 	mov	r4,zero
 800476c:	01400204 	movi	r5,8
 8004770:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
 8004774:	0009883a 	mov	r4,zero
 8004778:	0140b404 	movi	r5,720
 800477c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004780:	0009883a 	mov	r4,zero
 8004784:	01400044 	movi	r5,1
 8004788:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 800478c:	0009883a 	mov	r4,zero
 8004790:	014004c4 	movi	r5,19
 8004794:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004798:	0009883a 	mov	r4,zero
 800479c:	01414504 	movi	r5,1300
 80047a0:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
 80047a4:	0009883a 	mov	r4,zero
 80047a8:	0141a004 	movi	r5,1664
 80047ac:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0100);//e //device 0x01
 80047b0:	0009883a 	mov	r4,zero
 80047b4:	01404004 	movi	r5,256
 80047b8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
 80047bc:	0009883a 	mov	r4,zero
 80047c0:	000b883a 	mov	r5,zero
 80047c4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0012);//2
 80047c8:	0009883a 	mov	r4,zero
 80047cc:	01400484 	movi	r5,18
 80047d0:	80035680 	call	8003568 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
 80047d4:	0009883a 	mov	r4,zero
 80047d8:	01415104 	movi	r5,1348
 80047dc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
 80047e0:	0009883a 	mov	r4,zero
 80047e4:	01400204 	movi	r5,8
 80047e8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 80047ec:	0009883a 	mov	r4,zero
 80047f0:	0140a404 	movi	r5,656
 80047f4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
 80047f8:	0009883a 	mov	r4,zero
 80047fc:	01401044 	movi	r5,65
 8004800:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8004804:	0009883a 	mov	r4,zero
 8004808:	014004c4 	movi	r5,19
 800480c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
 8004810:	0009883a 	mov	r4,zero
 8004814:	01414804 	movi	r5,1312
 8004818:	80035680 	call	8003568 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
 800481c:	0009883a 	mov	r4,zero
 8004820:	01415304 	movi	r5,1356
 8004824:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
 8004828:	0009883a 	mov	r4,zero
 800482c:	01400204 	movi	r5,8
 8004830:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
 8004834:	0009883a 	mov	r4,zero
 8004838:	0140a404 	movi	r5,656
 800483c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//6
 8004840:	0009883a 	mov	r4,zero
 8004844:	01400044 	movi	r5,1
 8004848:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
 800484c:	0009883a 	mov	r4,zero
 8004850:	014004c4 	movi	r5,19
 8004854:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
 8004858:	0009883a 	mov	r4,zero
 800485c:	01414b04 	movi	r5,1324
 8004860:	80035680 	call	8003568 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0554); //c
 8004864:	0009883a 	mov	r4,zero
 8004868:	01415504 	movi	r5,1364
 800486c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0002);//e
 8004870:	0009883a 	mov	r4,zero
 8004874:	01400084 	movi	r5,2
 8004878:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
 800487c:	0009883a 	mov	r4,zero
 8004880:	0140a404 	movi	r5,656
 8004884:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
 8004888:	0009883a 	mov	r4,zero
 800488c:	01401044 	movi	r5,65
 8004890:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
 8004894:	0009883a 	mov	r4,zero
 8004898:	014004c4 	movi	r5,19
 800489c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
 80048a0:	0009883a 	mov	r4,zero
 80048a4:	01414e04 	movi	r5,1336
 80048a8:	80035680 	call	8003568 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //538
 80048ac:	0009883a 	mov	r4,zero
 80048b0:	000b883a 	mov	r5,zero
 80048b4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
 80048b8:	0009883a 	mov	r4,zero
 80048bc:	000b883a 	mov	r5,zero
 80048c0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0210);//c
 80048c4:	0009883a 	mov	r4,zero
 80048c8:	01408404 	movi	r5,528
 80048cc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//e
 80048d0:	0009883a 	mov	r4,zero
 80048d4:	01401044 	movi	r5,65
 80048d8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
 80048dc:	0009883a 	mov	r4,zero
 80048e0:	014004c4 	movi	r5,19
 80048e4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
 80048e8:	0009883a 	mov	r4,zero
 80048ec:	000b883a 	mov	r5,zero
 80048f0:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 80048f4:	01006c04 	movi	r4,432
 80048f8:	01414004 	movi	r5,1280
 80048fc:	80043b00 	call	80043b0 <UsbWrite>
}
 8004900:	e037883a 	mov	sp,fp
 8004904:	dfc00117 	ldw	ra,4(sp)
 8004908:	df000017 	ldw	fp,0(sp)
 800490c:	dec00204 	addi	sp,sp,8
 8004910:	f800283a 	ret

08004914 <UsbGetConfigDesc1>:


void UsbGetConfigDesc1()
{
 8004914:	defffe04 	addi	sp,sp,-8
 8004918:	dfc00115 	stw	ra,4(sp)
 800491c:	df000015 	stw	fp,0(sp)
 8004920:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004924:	01000084 	movi	r4,2
 8004928:	01414004 	movi	r5,1280
 800492c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 8004930:	0009883a 	mov	r4,zero
 8004934:	01414304 	movi	r5,1292
 8004938:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 800493c:	0009883a 	mov	r4,zero
 8004940:	01400204 	movi	r5,8
 8004944:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
 8004948:	0009883a 	mov	r4,zero
 800494c:	0140b404 	movi	r5,720
 8004950:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004954:	0009883a 	mov	r4,zero
 8004958:	01400044 	movi	r5,1
 800495c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004960:	0009883a 	mov	r4,zero
 8004964:	014004c4 	movi	r5,19
 8004968:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 800496c:	0009883a 	mov	r4,zero
 8004970:	01414504 	movi	r5,1300
 8004974:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
 8004978:	0009883a 	mov	r4,zero
 800497c:	0141a004 	movi	r5,1664
 8004980:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
 8004984:	0009883a 	mov	r4,zero
 8004988:	01408004 	movi	r5,512
 800498c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
 8004990:	0009883a 	mov	r4,zero
 8004994:	000b883a 	mov	r5,zero
 8004998:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0009);//2
 800499c:	0009883a 	mov	r4,zero
 80049a0:	01400244 	movi	r5,9
 80049a4:	80035680 	call	8003568 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
 80049a8:	0009883a 	mov	r4,zero
 80049ac:	01415104 	movi	r5,1348
 80049b0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
 80049b4:	0009883a 	mov	r4,zero
 80049b8:	01400204 	movi	r5,8
 80049bc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 80049c0:	0009883a 	mov	r4,zero
 80049c4:	0140a404 	movi	r5,656
 80049c8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
 80049cc:	0009883a 	mov	r4,zero
 80049d0:	01401044 	movi	r5,65
 80049d4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 80049d8:	0009883a 	mov	r4,zero
 80049dc:	014004c4 	movi	r5,19
 80049e0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
 80049e4:	0009883a 	mov	r4,zero
 80049e8:	01414804 	movi	r5,1312
 80049ec:	80035680 	call	8003568 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
 80049f0:	0009883a 	mov	r4,zero
 80049f4:	01415304 	movi	r5,1356
 80049f8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//2
 80049fc:	0009883a 	mov	r4,zero
 8004a00:	01400044 	movi	r5,1
 8004a04:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
 8004a08:	0009883a 	mov	r4,zero
 8004a0c:	0140a404 	movi	r5,656
 8004a10:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
 8004a14:	0009883a 	mov	r4,zero
 8004a18:	01400044 	movi	r5,1
 8004a1c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
 8004a20:	0009883a 	mov	r4,zero
 8004a24:	014004c4 	movi	r5,19
 8004a28:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
 8004a2c:	0009883a 	mov	r4,zero
 8004a30:	01414b04 	movi	r5,1324
 8004a34:	80035680 	call	8003568 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
 8004a38:	0009883a 	mov	r4,zero
 8004a3c:	000b883a 	mov	r5,zero
 8004a40:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
 8004a44:	0009883a 	mov	r4,zero
 8004a48:	000b883a 	mov	r5,zero
 8004a4c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
 8004a50:	0009883a 	mov	r4,zero
 8004a54:	01408404 	movi	r5,528
 8004a58:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
 8004a5c:	0009883a 	mov	r4,zero
 8004a60:	01401044 	movi	r5,65
 8004a64:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
 8004a68:	0009883a 	mov	r4,zero
 8004a6c:	014004c4 	movi	r5,19
 8004a70:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
 8004a74:	0009883a 	mov	r4,zero
 8004a78:	000b883a 	mov	r5,zero
 8004a7c:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 8004a80:	01006c04 	movi	r4,432
 8004a84:	01414004 	movi	r5,1280
 8004a88:	80043b00 	call	80043b0 <UsbWrite>
}
 8004a8c:	e037883a 	mov	sp,fp
 8004a90:	dfc00117 	ldw	ra,4(sp)
 8004a94:	df000017 	ldw	fp,0(sp)
 8004a98:	dec00204 	addi	sp,sp,8
 8004a9c:	f800283a 	ret

08004aa0 <UsbGetConfigDesc2>:


void UsbGetConfigDesc2()
{
 8004aa0:	defffe04 	addi	sp,sp,-8
 8004aa4:	dfc00115 	stw	ra,4(sp)
 8004aa8:	df000015 	stw	fp,0(sp)
 8004aac:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004ab0:	01000084 	movi	r4,2
 8004ab4:	01414004 	movi	r5,1280
 8004ab8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 8004abc:	0009883a 	mov	r4,zero
 8004ac0:	01414304 	movi	r5,1292
 8004ac4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004ac8:	0009883a 	mov	r4,zero
 8004acc:	01400204 	movi	r5,8
 8004ad0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
 8004ad4:	0009883a 	mov	r4,zero
 8004ad8:	0140b404 	movi	r5,720
 8004adc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004ae0:	0009883a 	mov	r4,zero
 8004ae4:	01400044 	movi	r5,1
 8004ae8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004aec:	0009883a 	mov	r4,zero
 8004af0:	014004c4 	movi	r5,19
 8004af4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004af8:	0009883a 	mov	r4,zero
 8004afc:	01414504 	movi	r5,1300
 8004b00:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
 8004b04:	0009883a 	mov	r4,zero
 8004b08:	0141a004 	movi	r5,1664
 8004b0c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
 8004b10:	0009883a 	mov	r4,zero
 8004b14:	01408004 	movi	r5,512
 8004b18:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
 8004b1c:	0009883a 	mov	r4,zero
 8004b20:	000b883a 	mov	r5,zero
 8004b24:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x00FF);//2
 8004b28:	0009883a 	mov	r4,zero
 8004b2c:	01403fc4 	movi	r5,255
 8004b30:	80035680 	call	8003568 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x055c); //514
 8004b34:	0009883a 	mov	r4,zero
 8004b38:	01415704 	movi	r5,1372
 8004b3c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
 8004b40:	0009883a 	mov	r4,zero
 8004b44:	01400204 	movi	r5,8
 8004b48:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 8004b4c:	0009883a 	mov	r4,zero
 8004b50:	0140a404 	movi	r5,656
 8004b54:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
 8004b58:	0009883a 	mov	r4,zero
 8004b5c:	01401044 	movi	r5,65
 8004b60:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8004b64:	0009883a 	mov	r4,zero
 8004b68:	014004c4 	movi	r5,19
 8004b6c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
 8004b70:	0009883a 	mov	r4,zero
 8004b74:	01414804 	movi	r5,1312
 8004b78:	80035680 	call	8003568 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0564); //520
 8004b7c:	0009883a 	mov	r4,zero
 8004b80:	01415904 	movi	r5,1380
 8004b84:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
 8004b88:	0009883a 	mov	r4,zero
 8004b8c:	01400204 	movi	r5,8
 8004b90:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
 8004b94:	0009883a 	mov	r4,zero
 8004b98:	0140a404 	movi	r5,656
 8004b9c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
 8004ba0:	0009883a 	mov	r4,zero
 8004ba4:	01400044 	movi	r5,1
 8004ba8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
 8004bac:	0009883a 	mov	r4,zero
 8004bb0:	014004c4 	movi	r5,19
 8004bb4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
 8004bb8:	0009883a 	mov	r4,zero
 8004bbc:	01414b04 	movi	r5,1324
 8004bc0:	80035680 	call	8003568 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x056c); //52c
 8004bc4:	0009883a 	mov	r4,zero
 8004bc8:	01415b04 	movi	r5,1388
 8004bcc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
 8004bd0:	0009883a 	mov	r4,zero
 8004bd4:	01400204 	movi	r5,8
 8004bd8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
 8004bdc:	0009883a 	mov	r4,zero
 8004be0:	0140a404 	movi	r5,656
 8004be4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
 8004be8:	0009883a 	mov	r4,zero
 8004bec:	01401044 	movi	r5,65
 8004bf0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
 8004bf4:	0009883a 	mov	r4,zero
 8004bf8:	014004c4 	movi	r5,19
 8004bfc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
 8004c00:	0009883a 	mov	r4,zero
 8004c04:	01414e04 	movi	r5,1336
 8004c08:	80035680 	call	8003568 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0574); //538
 8004c0c:	0009883a 	mov	r4,zero
 8004c10:	01415d04 	movi	r5,1396
 8004c14:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
 8004c18:	0009883a 	mov	r4,zero
 8004c1c:	01400204 	movi	r5,8
 8004c20:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
 8004c24:	0009883a 	mov	r4,zero
 8004c28:	0140a404 	movi	r5,656
 8004c2c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
 8004c30:	0009883a 	mov	r4,zero
 8004c34:	01400044 	movi	r5,1
 8004c38:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
 8004c3c:	0009883a 	mov	r4,zero
 8004c40:	014004c4 	movi	r5,19
 8004c44:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
 8004c48:	0009883a 	mov	r4,zero
 8004c4c:	01415104 	movi	r5,1348
 8004c50:	80035680 	call	8003568 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x057c); //544
 8004c54:	0009883a 	mov	r4,zero
 8004c58:	01415f04 	movi	r5,1404
 8004c5c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0002);//6
 8004c60:	0009883a 	mov	r4,zero
 8004c64:	01400084 	movi	r5,2
 8004c68:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 8004c6c:	0009883a 	mov	r4,zero
 8004c70:	0140a404 	movi	r5,656
 8004c74:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
 8004c78:	0009883a 	mov	r4,zero
 8004c7c:	01401044 	movi	r5,65
 8004c80:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8004c84:	0009883a 	mov	r4,zero
 8004c88:	014004c4 	movi	r5,19
 8004c8c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
 8004c90:	0009883a 	mov	r4,zero
 8004c94:	01415404 	movi	r5,1360
 8004c98:	80035680 	call	8003568 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //550
 8004c9c:	0009883a 	mov	r4,zero
 8004ca0:	000b883a 	mov	r5,zero
 8004ca4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
 8004ca8:	0009883a 	mov	r4,zero
 8004cac:	000b883a 	mov	r5,zero
 8004cb0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0210);//4
 8004cb4:	0009883a 	mov	r4,zero
 8004cb8:	01408404 	movi	r5,528
 8004cbc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//6
 8004cc0:	0009883a 	mov	r4,zero
 8004cc4:	01401044 	movi	r5,65
 8004cc8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
 8004ccc:	0009883a 	mov	r4,zero
 8004cd0:	014004c4 	movi	r5,19
 8004cd4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
 8004cd8:	0009883a 	mov	r4,zero
 8004cdc:	000b883a 	mov	r5,zero
 8004ce0:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 8004ce4:	01006c04 	movi	r4,432
 8004ce8:	01414004 	movi	r5,1280
 8004cec:	80043b00 	call	80043b0 <UsbWrite>
}
 8004cf0:	e037883a 	mov	sp,fp
 8004cf4:	dfc00117 	ldw	ra,4(sp)
 8004cf8:	df000017 	ldw	fp,0(sp)
 8004cfc:	dec00204 	addi	sp,sp,8
 8004d00:	f800283a 	ret

08004d04 <UsbSetConfig>:

void UsbSetConfig()
{
 8004d04:	defffe04 	addi	sp,sp,-8
 8004d08:	dfc00115 	stw	ra,4(sp)
 8004d0c:	df000015 	stw	fp,0(sp)
 8004d10:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004d14:	01000084 	movi	r4,2
 8004d18:	01414004 	movi	r5,1280
 8004d1c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 8004d20:	0009883a 	mov	r4,zero
 8004d24:	01414304 	movi	r5,1292
 8004d28:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004d2c:	0009883a 	mov	r4,zero
 8004d30:	01400204 	movi	r5,8
 8004d34:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
 8004d38:	0009883a 	mov	r4,zero
 8004d3c:	0140b404 	movi	r5,720
 8004d40:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004d44:	0009883a 	mov	r4,zero
 8004d48:	01400044 	movi	r5,1
 8004d4c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004d50:	0009883a 	mov	r4,zero
 8004d54:	014004c4 	movi	r5,19
 8004d58:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004d5c:	0009883a 	mov	r4,zero
 8004d60:	01414504 	movi	r5,1300
 8004d64:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0900);
 8004d68:	0009883a 	mov	r4,zero
 8004d6c:	01424004 	movi	r5,2304
 8004d70:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//device address
 8004d74:	0009883a 	mov	r4,zero
 8004d78:	01400044 	movi	r5,1
 8004d7c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004d80:	0009883a 	mov	r4,zero
 8004d84:	000b883a 	mov	r5,zero
 8004d88:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004d8c:	0009883a 	mov	r4,zero
 8004d90:	000b883a 	mov	r5,zero
 8004d94:	80035680 	call	8003568 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
 8004d98:	0009883a 	mov	r4,zero
 8004d9c:	000b883a 	mov	r5,zero
 8004da0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
 8004da4:	0009883a 	mov	r4,zero
 8004da8:	000b883a 	mov	r5,zero
 8004dac:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
 8004db0:	0009883a 	mov	r4,zero
 8004db4:	0140a404 	movi	r5,656
 8004db8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
 8004dbc:	0009883a 	mov	r4,zero
 8004dc0:	01401044 	movi	r5,65
 8004dc4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004dc8:	0009883a 	mov	r4,zero
 8004dcc:	014004c4 	movi	r5,19
 8004dd0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004dd4:	0009883a 	mov	r4,zero
 8004dd8:	000b883a 	mov	r5,zero
 8004ddc:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 8004de0:	01006c04 	movi	r4,432
 8004de4:	01414004 	movi	r5,1280
 8004de8:	80043b00 	call	80043b0 <UsbWrite>

}
 8004dec:	e037883a 	mov	sp,fp
 8004df0:	dfc00117 	ldw	ra,4(sp)
 8004df4:	df000017 	ldw	fp,0(sp)
 8004df8:	dec00204 	addi	sp,sp,8
 8004dfc:	f800283a 	ret

08004e00 <UsbClassRequest>:

void UsbClassRequest()
{
 8004e00:	defffe04 	addi	sp,sp,-8
 8004e04:	dfc00115 	stw	ra,4(sp)
 8004e08:	df000015 	stw	fp,0(sp)
 8004e0c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004e10:	01000084 	movi	r4,2
 8004e14:	01414004 	movi	r5,1280
 8004e18:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 8004e1c:	0009883a 	mov	r4,zero
 8004e20:	01414304 	movi	r5,1292
 8004e24:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004e28:	0009883a 	mov	r4,zero
 8004e2c:	01400204 	movi	r5,8
 8004e30:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
 8004e34:	0009883a 	mov	r4,zero
 8004e38:	0140b404 	movi	r5,720
 8004e3c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004e40:	0009883a 	mov	r4,zero
 8004e44:	01400044 	movi	r5,1
 8004e48:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004e4c:	0009883a 	mov	r4,zero
 8004e50:	014004c4 	movi	r5,19
 8004e54:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004e58:	0009883a 	mov	r4,zero
 8004e5c:	01414504 	movi	r5,1300
 8004e60:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0A21);
 8004e64:	0009883a 	mov	r4,zero
 8004e68:	01428844 	movi	r5,2593
 8004e6c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//device address
 8004e70:	0009883a 	mov	r4,zero
 8004e74:	000b883a 	mov	r5,zero
 8004e78:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004e7c:	0009883a 	mov	r4,zero
 8004e80:	000b883a 	mov	r5,zero
 8004e84:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004e88:	0009883a 	mov	r4,zero
 8004e8c:	000b883a 	mov	r5,zero
 8004e90:	80035680 	call	8003568 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
 8004e94:	0009883a 	mov	r4,zero
 8004e98:	000b883a 	mov	r5,zero
 8004e9c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number /data length
 8004ea0:	0009883a 	mov	r4,zero
 8004ea4:	000b883a 	mov	r5,zero
 8004ea8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
 8004eac:	0009883a 	mov	r4,zero
 8004eb0:	0140a404 	movi	r5,656
 8004eb4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
 8004eb8:	0009883a 	mov	r4,zero
 8004ebc:	01401044 	movi	r5,65
 8004ec0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004ec4:	0009883a 	mov	r4,zero
 8004ec8:	014004c4 	movi	r5,19
 8004ecc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);
 8004ed0:	0009883a 	mov	r4,zero
 8004ed4:	000b883a 	mov	r5,zero
 8004ed8:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 8004edc:	01006c04 	movi	r4,432
 8004ee0:	01414004 	movi	r5,1280
 8004ee4:	80043b00 	call	80043b0 <UsbWrite>
}
 8004ee8:	e037883a 	mov	sp,fp
 8004eec:	dfc00117 	ldw	ra,4(sp)
 8004ef0:	df000017 	ldw	fp,0(sp)
 8004ef4:	dec00204 	addi	sp,sp,8
 8004ef8:	f800283a 	ret

08004efc <UsbGetHidDesc>:


void UsbGetHidDesc()
{
 8004efc:	defffe04 	addi	sp,sp,-8
 8004f00:	dfc00115 	stw	ra,4(sp)
 8004f04:	df000015 	stw	fp,0(sp)
 8004f08:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8004f0c:	01000084 	movi	r4,2
 8004f10:	01414004 	movi	r5,1280
 8004f14:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 8004f18:	0009883a 	mov	r4,zero
 8004f1c:	01414304 	movi	r5,1292
 8004f20:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8004f24:	0009883a 	mov	r4,zero
 8004f28:	01400204 	movi	r5,8
 8004f2c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
 8004f30:	0009883a 	mov	r4,zero
 8004f34:	0140b404 	movi	r5,720
 8004f38:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8004f3c:	0009883a 	mov	r4,zero
 8004f40:	01400044 	movi	r5,1
 8004f44:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 8004f48:	0009883a 	mov	r4,zero
 8004f4c:	014004c4 	movi	r5,19
 8004f50:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8004f54:	0009883a 	mov	r4,zero
 8004f58:	01414504 	movi	r5,1300
 8004f5c:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
 8004f60:	0009883a 	mov	r4,zero
 8004f64:	0141a044 	movi	r5,1665
 8004f68:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x2100);//e //HID 0x21
 8004f6c:	0009883a 	mov	r4,zero
 8004f70:	01484004 	movi	r5,8448
 8004f74:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
 8004f78:	0009883a 	mov	r4,zero
 8004f7c:	000b883a 	mov	r5,zero
 8004f80:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
 8004f84:	0009883a 	mov	r4,zero
 8004f88:	01401ec4 	movi	r5,123
 8004f8c:	80035680 	call	8003568 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
 8004f90:	0009883a 	mov	r4,zero
 8004f94:	01415104 	movi	r5,1348
 8004f98:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
 8004f9c:	0009883a 	mov	r4,zero
 8004fa0:	01400204 	movi	r5,8
 8004fa4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 8004fa8:	0009883a 	mov	r4,zero
 8004fac:	0140a404 	movi	r5,656
 8004fb0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
 8004fb4:	0009883a 	mov	r4,zero
 8004fb8:	01401044 	movi	r5,65
 8004fbc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8004fc0:	0009883a 	mov	r4,zero
 8004fc4:	014004c4 	movi	r5,19
 8004fc8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
 8004fcc:	0009883a 	mov	r4,zero
 8004fd0:	01414804 	movi	r5,1312
 8004fd4:	80035680 	call	8003568 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
 8004fd8:	0009883a 	mov	r4,zero
 8004fdc:	000b883a 	mov	r5,zero
 8004fe0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
 8004fe4:	0009883a 	mov	r4,zero
 8004fe8:	000b883a 	mov	r5,zero
 8004fec:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
 8004ff0:	0009883a 	mov	r4,zero
 8004ff4:	01408404 	movi	r5,528
 8004ff8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
 8004ffc:	0009883a 	mov	r4,zero
 8005000:	01401044 	movi	r5,65
 8005004:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
 8005008:	0009883a 	mov	r4,zero
 800500c:	014004c4 	movi	r5,19
 8005010:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
 8005014:	0009883a 	mov	r4,zero
 8005018:	000b883a 	mov	r5,zero
 800501c:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 8005020:	01006c04 	movi	r4,432
 8005024:	01414004 	movi	r5,1280
 8005028:	80043b00 	call	80043b0 <UsbWrite>

}
 800502c:	e037883a 	mov	sp,fp
 8005030:	dfc00117 	ldw	ra,4(sp)
 8005034:	df000017 	ldw	fp,0(sp)
 8005038:	dec00204 	addi	sp,sp,8
 800503c:	f800283a 	ret

08005040 <UsbGetReportDesc>:


void UsbGetReportDesc()
{
 8005040:	defffe04 	addi	sp,sp,-8
 8005044:	dfc00115 	stw	ra,4(sp)
 8005048:	df000015 	stw	fp,0(sp)
 800504c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
 8005050:	01000084 	movi	r4,2
 8005054:	01414004 	movi	r5,1280
 8005058:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x050C);
 800505c:	0009883a 	mov	r4,zero
 8005060:	01414304 	movi	r5,1292
 8005064:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
 8005068:	0009883a 	mov	r4,zero
 800506c:	01400204 	movi	r5,8
 8005070:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
 8005074:	0009883a 	mov	r4,zero
 8005078:	0140b404 	movi	r5,720
 800507c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);
 8005080:	0009883a 	mov	r4,zero
 8005084:	01400044 	movi	r5,1
 8005088:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);
 800508c:	0009883a 	mov	r4,zero
 8005090:	014004c4 	movi	r5,19
 8005094:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0514);
 8005098:	0009883a 	mov	r4,zero
 800509c:	01414504 	movi	r5,1300
 80050a0:	80035680 	call	8003568 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
 80050a4:	0009883a 	mov	r4,zero
 80050a8:	0141a044 	movi	r5,1665
 80050ac:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x2200);//e //report 0x22
 80050b0:	0009883a 	mov	r4,zero
 80050b4:	01488004 	movi	r5,8704
 80050b8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
 80050bc:	0009883a 	mov	r4,zero
 80050c0:	000b883a 	mov	r5,zero
 80050c4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
 80050c8:	0009883a 	mov	r4,zero
 80050cc:	01401ec4 	movi	r5,123
 80050d0:	80035680 	call	8003568 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0580); //514
 80050d4:	0009883a 	mov	r4,zero
 80050d8:	01416004 	movi	r5,1408
 80050dc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
 80050e0:	0009883a 	mov	r4,zero
 80050e4:	01400204 	movi	r5,8
 80050e8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 80050ec:	0009883a 	mov	r4,zero
 80050f0:	0140a404 	movi	r5,656
 80050f4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
 80050f8:	0009883a 	mov	r4,zero
 80050fc:	01401044 	movi	r5,65
 8005100:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8005104:	0009883a 	mov	r4,zero
 8005108:	014004c4 	movi	r5,19
 800510c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
 8005110:	0009883a 	mov	r4,zero
 8005114:	01414804 	movi	r5,1312
 8005118:	80035680 	call	8003568 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0588); //520
 800511c:	0009883a 	mov	r4,zero
 8005120:	01416204 	movi	r5,1416
 8005124:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
 8005128:	0009883a 	mov	r4,zero
 800512c:	01400204 	movi	r5,8
 8005130:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
 8005134:	0009883a 	mov	r4,zero
 8005138:	0140a404 	movi	r5,656
 800513c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
 8005140:	0009883a 	mov	r4,zero
 8005144:	01400044 	movi	r5,1
 8005148:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
 800514c:	0009883a 	mov	r4,zero
 8005150:	014004c4 	movi	r5,19
 8005154:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
 8005158:	0009883a 	mov	r4,zero
 800515c:	01414b04 	movi	r5,1324
 8005160:	80035680 	call	8003568 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0590); //52c
 8005164:	0009883a 	mov	r4,zero
 8005168:	01416404 	movi	r5,1424
 800516c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
 8005170:	0009883a 	mov	r4,zero
 8005174:	01400204 	movi	r5,8
 8005178:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
 800517c:	0009883a 	mov	r4,zero
 8005180:	0140a404 	movi	r5,656
 8005184:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
 8005188:	0009883a 	mov	r4,zero
 800518c:	01401044 	movi	r5,65
 8005190:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
 8005194:	0009883a 	mov	r4,zero
 8005198:	014004c4 	movi	r5,19
 800519c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
 80051a0:	0009883a 	mov	r4,zero
 80051a4:	01414e04 	movi	r5,1336
 80051a8:	80035680 	call	8003568 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0598); //538
 80051ac:	0009883a 	mov	r4,zero
 80051b0:	01416604 	movi	r5,1432
 80051b4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
 80051b8:	0009883a 	mov	r4,zero
 80051bc:	01400204 	movi	r5,8
 80051c0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
 80051c4:	0009883a 	mov	r4,zero
 80051c8:	0140a404 	movi	r5,656
 80051cc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
 80051d0:	0009883a 	mov	r4,zero
 80051d4:	01400044 	movi	r5,1
 80051d8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
 80051dc:	0009883a 	mov	r4,zero
 80051e0:	014004c4 	movi	r5,19
 80051e4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
 80051e8:	0009883a 	mov	r4,zero
 80051ec:	01415104 	movi	r5,1348
 80051f0:	80035680 	call	8003568 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x05a0); //544
 80051f4:	0009883a 	mov	r4,zero
 80051f8:	01416804 	movi	r5,1440
 80051fc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
 8005200:	0009883a 	mov	r4,zero
 8005204:	01400204 	movi	r5,8
 8005208:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
 800520c:	0009883a 	mov	r4,zero
 8005210:	0140a404 	movi	r5,656
 8005214:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
 8005218:	0009883a 	mov	r4,zero
 800521c:	01401044 	movi	r5,65
 8005220:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8005224:	0009883a 	mov	r4,zero
 8005228:	014004c4 	movi	r5,19
 800522c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
 8005230:	0009883a 	mov	r4,zero
 8005234:	01415404 	movi	r5,1360
 8005238:	80035680 	call	8003568 <IO_write>

	//data phase IN-6
	IO_write(HPI_DATA,0x05a8); //550
 800523c:	0009883a 	mov	r4,zero
 8005240:	01416a04 	movi	r5,1448
 8005244:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
 8005248:	0009883a 	mov	r4,zero
 800524c:	01400204 	movi	r5,8
 8005250:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
 8005254:	0009883a 	mov	r4,zero
 8005258:	0140a404 	movi	r5,656
 800525c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
 8005260:	0009883a 	mov	r4,zero
 8005264:	01400044 	movi	r5,1
 8005268:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
 800526c:	0009883a 	mov	r4,zero
 8005270:	014004c4 	movi	r5,19
 8005274:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x055c);//a
 8005278:	0009883a 	mov	r4,zero
 800527c:	01415704 	movi	r5,1372
 8005280:	80035680 	call	8003568 <IO_write>

	//data phase IN-7
	IO_write(HPI_DATA,0x05b0); //c
 8005284:	0009883a 	mov	r4,zero
 8005288:	01416c04 	movi	r5,1456
 800528c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
 8005290:	0009883a 	mov	r4,zero
 8005294:	01400204 	movi	r5,8
 8005298:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//560
 800529c:	0009883a 	mov	r4,zero
 80052a0:	0140a404 	movi	r5,656
 80052a4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//2 //data1
 80052a8:	0009883a 	mov	r4,zero
 80052ac:	01401044 	movi	r5,65
 80052b0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
 80052b4:	0009883a 	mov	r4,zero
 80052b8:	014004c4 	movi	r5,19
 80052bc:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0568);//6
 80052c0:	0009883a 	mov	r4,zero
 80052c4:	01415a04 	movi	r5,1384
 80052c8:	80035680 	call	8003568 <IO_write>

	//data phase IN-8
	IO_write(HPI_DATA,0x05b8); //8
 80052cc:	0009883a 	mov	r4,zero
 80052d0:	01416e04 	movi	r5,1464
 80052d4:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0003);//a
 80052d8:	0009883a 	mov	r4,zero
 80052dc:	014000c4 	movi	r5,3
 80052e0:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
 80052e4:	0009883a 	mov	r4,zero
 80052e8:	0140a404 	movi	r5,656
 80052ec:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
 80052f0:	0009883a 	mov	r4,zero
 80052f4:	01400044 	movi	r5,1
 80052f8:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//570
 80052fc:	0009883a 	mov	r4,zero
 8005300:	014004c4 	movi	r5,19
 8005304:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0574);//2
 8005308:	0009883a 	mov	r4,zero
 800530c:	01415d04 	movi	r5,1396
 8005310:	80035680 	call	8003568 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //574
 8005314:	0009883a 	mov	r4,zero
 8005318:	000b883a 	mov	r5,zero
 800531c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
 8005320:	0009883a 	mov	r4,zero
 8005324:	000b883a 	mov	r5,zero
 8005328:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0210);//8
 800532c:	0009883a 	mov	r4,zero
 8005330:	01408404 	movi	r5,528
 8005334:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
 8005338:	0009883a 	mov	r4,zero
 800533c:	01401044 	movi	r5,65
 8005340:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
 8005344:	0009883a 	mov	r4,zero
 8005348:	014004c4 	movi	r5,19
 800534c:	80035680 	call	8003568 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
 8005350:	0009883a 	mov	r4,zero
 8005354:	000b883a 	mov	r5,zero
 8005358:	80035680 	call	8003568 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
 800535c:	01006c04 	movi	r4,432
 8005360:	01414004 	movi	r5,1280
 8005364:	80043b00 	call	80043b0 <UsbWrite>

}
 8005368:	e037883a 	mov	sp,fp
 800536c:	dfc00117 	ldw	ra,4(sp)
 8005370:	df000017 	ldw	fp,0(sp)
 8005374:	dec00204 	addi	sp,sp,8
 8005378:	f800283a 	ret

0800537c <UsbWaitTDListDone>:


alt_u16 UsbWaitTDListDone()
{
 800537c:	defffd04 	addi	sp,sp,-12
 8005380:	dfc00215 	stw	ra,8(sp)
 8005384:	df000115 	stw	fp,4(sp)
 8005388:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
 800538c:	01005104 	movi	r4,324
 8005390:	80044040 	call	8004404 <UsbRead>
 8005394:	e0bfff0d 	sth	r2,-4(fp)
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
 8005398:	01005104 	movi	r4,324
 800539c:	000b883a 	mov	r5,zero
 80053a0:	80043b00 	call	80043b0 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
 80053a4:	00000d06 	br	80053dc <UsbWaitTDListDone+0x60>
	{
		if(usb_ctl_val == 0x0000)
 80053a8:	e0bfff0b 	ldhu	r2,-4(fp)
 80053ac:	10000526 	beq	r2,zero,80053c4 <UsbWaitTDListDone+0x48>
		{
		}
		else
		{
			printf("[SIE1 MSG]:SIE1 msg reg is %x\n",usb_ctl_val);
 80053b0:	e0bfff0b 	ldhu	r2,-4(fp)
 80053b4:	010200b4 	movhi	r4,2050
 80053b8:	21002104 	addi	r4,r4,132
 80053bc:	100b883a 	mov	r5,r2
 80053c0:	800cfec0 	call	800cfec <printf>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
 80053c4:	01005104 	movi	r4,324
 80053c8:	80044040 	call	8004404 <UsbRead>
 80053cc:	e0bfff0d 	sth	r2,-4(fp)
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
 80053d0:	01005104 	movi	r4,324
 80053d4:	000b883a 	mov	r5,zero
 80053d8:	80043b00 	call	80043b0 <UsbWrite>
{
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
 80053dc:	e0bfff0b 	ldhu	r2,-4(fp)
 80053e0:	10840018 	cmpnei	r2,r2,4096
 80053e4:	103ff01e 	bne	r2,zero,80053a8 <__alt_data_end+0xfc0053a8>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
	}

	return usb_ctl_val;
 80053e8:	e0bfff0b 	ldhu	r2,-4(fp)
}
 80053ec:	e037883a 	mov	sp,fp
 80053f0:	dfc00117 	ldw	ra,4(sp)
 80053f4:	df000017 	ldw	fp,0(sp)
 80053f8:	dec00204 	addi	sp,sp,8
 80053fc:	f800283a 	ret

08005400 <UsbGetRetryCnt>:


alt_u16 UsbGetRetryCnt()
{
 8005400:	defffd04 	addi	sp,sp,-12
 8005404:	dfc00215 	stw	ra,8(sp)
 8005408:	df000115 	stw	fp,4(sp)
 800540c:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	IO_read(HPI_STATUS);
 8005410:	010000c4 	movi	r4,3
 8005414:	80035c00 	call	80035c0 <IO_read>
	if(UsbRead(HPI_SIE1_MSG_ADR) == HUSB_TDListDone)
 8005418:	01005104 	movi	r4,324
 800541c:	80044040 	call	8004404 <UsbRead>
 8005420:	10bfffcc 	andi	r2,r2,65535
 8005424:	10840018 	cmpnei	r2,r2,4096
 8005428:	1000091e 	bne	r2,zero,8005450 <UsbGetRetryCnt+0x50>
	{
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
 800542c:	01005104 	movi	r4,324
 8005430:	000b883a 	mov	r5,zero
 8005434:	80043b00 	call	80043b0 <UsbWrite>

		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
 8005438:	0001883a 	nop
 800543c:	010000c4 	movi	r4,3
 8005440:	80035c00 	call	80035c0 <IO_read>
 8005444:	10bfffcc 	andi	r2,r2,65535
 8005448:	1080040c 	andi	r2,r2,16
 800544c:	103ffb26 	beq	r2,zero,800543c <__alt_data_end+0xfc00543c>
		{
		}
	}
	//usleep(1000);
	IO_write(HPI_ADDR,0x0508);
 8005450:	01000084 	movi	r4,2
 8005454:	01414204 	movi	r5,1288
 8005458:	80035680 	call	8003568 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
 800545c:	0009883a 	mov	r4,zero
 8005460:	80035c00 	call	80035c0 <IO_read>
 8005464:	e0bfff0d 	sth	r2,-4(fp)

	return usb_ctl_val;
 8005468:	e0bfff0b 	ldhu	r2,-4(fp)
}
 800546c:	e037883a 	mov	sp,fp
 8005470:	dfc00117 	ldw	ra,4(sp)
 8005474:	df000017 	ldw	fp,0(sp)
 8005478:	dec00204 	addi	sp,sp,8
 800547c:	f800283a 	ret

08005480 <UsbPrintMem>:


void UsbPrintMem()
{
 8005480:	defffc04 	addi	sp,sp,-16
 8005484:	dfc00315 	stw	ra,12(sp)
 8005488:	df000215 	stw	fp,8(sp)
 800548c:	df000204 	addi	fp,sp,8
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
 8005490:	01000084 	movi	r4,2
 8005494:	01414004 	movi	r5,1280
 8005498:	80035680 	call	8003568 <IO_write>
	for (i = 0; i <= 200; i += 2)
 800549c:	e03ffe15 	stw	zero,-8(fp)
 80054a0:	00000e06 	br	80054dc <UsbPrintMem+0x5c>
	{
		code = IO_read(HPI_DATA);
 80054a4:	0009883a 	mov	r4,zero
 80054a8:	80035c00 	call	80035c0 <IO_read>
 80054ac:	10bfffcc 	andi	r2,r2,65535
 80054b0:	e0bfff15 	stw	r2,-4(fp)
		printf("\naddr %x = %04x\n", 0x0500+i, code);
 80054b4:	e0bffe17 	ldw	r2,-8(fp)
 80054b8:	10814004 	addi	r2,r2,1280
 80054bc:	010200b4 	movhi	r4,2050
 80054c0:	21002904 	addi	r4,r4,164
 80054c4:	100b883a 	mov	r5,r2
 80054c8:	e1bfff17 	ldw	r6,-4(fp)
 80054cc:	800cfec0 	call	800cfec <printf>

void UsbPrintMem()
{
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
	for (i = 0; i <= 200; i += 2)
 80054d0:	e0bffe17 	ldw	r2,-8(fp)
 80054d4:	10800084 	addi	r2,r2,2
 80054d8:	e0bffe15 	stw	r2,-8(fp)
 80054dc:	e0bffe17 	ldw	r2,-8(fp)
 80054e0:	10803250 	cmplti	r2,r2,201
 80054e4:	103fef1e 	bne	r2,zero,80054a4 <__alt_data_end+0xfc0054a4>
	{
		code = IO_read(HPI_DATA);
		printf("\naddr %x = %04x\n", 0x0500+i, code);
	}
}
 80054e8:	e037883a 	mov	sp,fp
 80054ec:	dfc00117 	ldw	ra,4(sp)
 80054f0:	df000017 	ldw	fp,0(sp)
 80054f4:	dec00204 	addi	sp,sp,8
 80054f8:	f800283a 	ret

080054fc <cos>:
 80054fc:	00a00034 	movhi	r2,32768
 8005500:	defffa04 	addi	sp,sp,-24
 8005504:	10bfffc4 	addi	r2,r2,-1
 8005508:	00cffa74 	movhi	r3,16361
 800550c:	dfc00515 	stw	ra,20(sp)
 8005510:	2884703a 	and	r2,r5,r2
 8005514:	18c87ec4 	addi	r3,r3,8699
 8005518:	280f883a 	mov	r7,r5
 800551c:	1880170e 	bge	r3,r2,800557c <cos+0x80>
 8005520:	00dffc34 	movhi	r3,32752
 8005524:	18ffffc4 	addi	r3,r3,-1
 8005528:	1880050e 	bge	r3,r2,8005540 <cos+0x44>
 800552c:	200d883a 	mov	r6,r4
 8005530:	800c25c0 	call	800c25c <__subdf3>
 8005534:	dfc00517 	ldw	ra,20(sp)
 8005538:	dec00604 	addi	sp,sp,24
 800553c:	f800283a 	ret
 8005540:	d9800104 	addi	r6,sp,4
 8005544:	80071e80 	call	80071e8 <__ieee754_rem_pio2>
 8005548:	108000cc 	andi	r2,r2,3
 800554c:	00c00044 	movi	r3,1
 8005550:	10c01726 	beq	r2,r3,80055b0 <cos+0xb4>
 8005554:	01000084 	movi	r4,2
 8005558:	11000e26 	beq	r2,r4,8005594 <cos+0x98>
 800555c:	10001c26 	beq	r2,zero,80055d0 <cos+0xd4>
 8005560:	d9000117 	ldw	r4,4(sp)
 8005564:	d9400217 	ldw	r5,8(sp)
 8005568:	d9800317 	ldw	r6,12(sp)
 800556c:	d9c00417 	ldw	r7,16(sp)
 8005570:	d8c00015 	stw	r3,0(sp)
 8005574:	8008dec0 	call	8008dec <__kernel_sin>
 8005578:	003fee06 	br	8005534 <__alt_data_end+0xfc005534>
 800557c:	000d883a 	mov	r6,zero
 8005580:	000f883a 	mov	r7,zero
 8005584:	8007c180 	call	8007c18 <__kernel_cos>
 8005588:	dfc00517 	ldw	ra,20(sp)
 800558c:	dec00604 	addi	sp,sp,24
 8005590:	f800283a 	ret
 8005594:	d9000117 	ldw	r4,4(sp)
 8005598:	d9400217 	ldw	r5,8(sp)
 800559c:	d9800317 	ldw	r6,12(sp)
 80055a0:	d9c00417 	ldw	r7,16(sp)
 80055a4:	8007c180 	call	8007c18 <__kernel_cos>
 80055a8:	18e0003c 	xorhi	r3,r3,32768
 80055ac:	003fe106 	br	8005534 <__alt_data_end+0xfc005534>
 80055b0:	d9000117 	ldw	r4,4(sp)
 80055b4:	d9400217 	ldw	r5,8(sp)
 80055b8:	d9800317 	ldw	r6,12(sp)
 80055bc:	d9c00417 	ldw	r7,16(sp)
 80055c0:	d8800015 	stw	r2,0(sp)
 80055c4:	8008dec0 	call	8008dec <__kernel_sin>
 80055c8:	18e0003c 	xorhi	r3,r3,32768
 80055cc:	003fd906 	br	8005534 <__alt_data_end+0xfc005534>
 80055d0:	d9000117 	ldw	r4,4(sp)
 80055d4:	d9400217 	ldw	r5,8(sp)
 80055d8:	d9800317 	ldw	r6,12(sp)
 80055dc:	d9c00417 	ldw	r7,16(sp)
 80055e0:	8007c180 	call	8007c18 <__kernel_cos>
 80055e4:	003fd306 	br	8005534 <__alt_data_end+0xfc005534>

080055e8 <round>:
 80055e8:	2a1ffc2c 	andhi	r8,r5,32752
 80055ec:	4011d53a 	srai	r8,r8,20
 80055f0:	024004c4 	movi	r9,19
 80055f4:	2807883a 	mov	r3,r5
 80055f8:	40bf0044 	addi	r2,r8,-1023
 80055fc:	200d883a 	mov	r6,r4
 8005600:	280f883a 	mov	r7,r5
 8005604:	48800916 	blt	r9,r2,800562c <round+0x44>
 8005608:	10002616 	blt	r2,zero,80056a4 <round+0xbc>
 800560c:	01000434 	movhi	r4,16
 8005610:	213fffc4 	addi	r4,r4,-1
 8005614:	2089d83a 	sra	r4,r4,r2
 8005618:	214a703a 	and	r5,r4,r5
 800561c:	2800191e 	bne	r5,zero,8005684 <round+0x9c>
 8005620:	3000181e 	bne	r6,zero,8005684 <round+0x9c>
 8005624:	0005883a 	mov	r2,zero
 8005628:	f800283a 	ret
 800562c:	02400cc4 	movi	r9,51
 8005630:	4880040e 	bge	r9,r2,8005644 <round+0x5c>
 8005634:	01c10004 	movi	r7,1024
 8005638:	11c02226 	beq	r2,r7,80056c4 <round+0xdc>
 800563c:	3005883a 	mov	r2,r6
 8005640:	f800283a 	ret
 8005644:	00bfffc4 	movi	r2,-1
 8005648:	413efb44 	addi	r4,r8,-1043
 800564c:	1108d83a 	srl	r4,r2,r4
 8005650:	2184703a 	and	r2,r4,r6
 8005654:	10001826 	beq	r2,zero,80056b8 <round+0xd0>
 8005658:	00810c84 	movi	r2,1074
 800565c:	1211c83a 	sub	r8,r2,r8
 8005660:	00800044 	movi	r2,1
 8005664:	1204983a 	sll	r2,r2,r8
 8005668:	1185883a 	add	r2,r2,r6
 800566c:	1180012e 	bgeu	r2,r6,8005674 <round+0x8c>
 8005670:	28c00044 	addi	r3,r5,1
 8005674:	0108303a 	nor	r4,zero,r4
 8005678:	110c703a 	and	r6,r2,r4
 800567c:	3005883a 	mov	r2,r6
 8005680:	f800283a 	ret
 8005684:	00c00234 	movhi	r3,8
 8005688:	1887d83a 	sra	r3,r3,r2
 800568c:	0108303a 	nor	r4,zero,r4
 8005690:	000d883a 	mov	r6,zero
 8005694:	19c7883a 	add	r3,r3,r7
 8005698:	1906703a 	and	r3,r3,r4
 800569c:	3005883a 	mov	r2,r6
 80056a0:	f800283a 	ret
 80056a4:	013fffc4 	movi	r4,-1
 80056a8:	28e0002c 	andhi	r3,r5,32768
 80056ac:	11000c26 	beq	r2,r4,80056e0 <round+0xf8>
 80056b0:	000d883a 	mov	r6,zero
 80056b4:	003fe106 	br	800563c <__alt_data_end+0xfc00563c>
 80056b8:	3005883a 	mov	r2,r6
 80056bc:	2807883a 	mov	r3,r5
 80056c0:	f800283a 	ret
 80056c4:	deffff04 	addi	sp,sp,-4
 80056c8:	280f883a 	mov	r7,r5
 80056cc:	dfc00015 	stw	ra,0(sp)
 80056d0:	800a5900 	call	800a590 <__adddf3>
 80056d4:	dfc00017 	ldw	ra,0(sp)
 80056d8:	dec00104 	addi	sp,sp,4
 80056dc:	f800283a 	ret
 80056e0:	18cffc34 	orhi	r3,r3,16368
 80056e4:	000d883a 	mov	r6,zero
 80056e8:	003fd406 	br	800563c <__alt_data_end+0xfc00563c>

080056ec <sin>:
 80056ec:	00a00034 	movhi	r2,32768
 80056f0:	defffa04 	addi	sp,sp,-24
 80056f4:	10bfffc4 	addi	r2,r2,-1
 80056f8:	00cffa74 	movhi	r3,16361
 80056fc:	dfc00515 	stw	ra,20(sp)
 8005700:	2884703a 	and	r2,r5,r2
 8005704:	18c87ec4 	addi	r3,r3,8699
 8005708:	280f883a 	mov	r7,r5
 800570c:	1880170e 	bge	r3,r2,800576c <sin+0x80>
 8005710:	00dffc34 	movhi	r3,32752
 8005714:	18ffffc4 	addi	r3,r3,-1
 8005718:	1880050e 	bge	r3,r2,8005730 <sin+0x44>
 800571c:	200d883a 	mov	r6,r4
 8005720:	800c25c0 	call	800c25c <__subdf3>
 8005724:	dfc00517 	ldw	ra,20(sp)
 8005728:	dec00604 	addi	sp,sp,24
 800572c:	f800283a 	ret
 8005730:	d9800104 	addi	r6,sp,4
 8005734:	80071e80 	call	80071e8 <__ieee754_rem_pio2>
 8005738:	108000cc 	andi	r2,r2,3
 800573c:	00c00044 	movi	r3,1
 8005740:	10c01926 	beq	r2,r3,80057a8 <sin+0xbc>
 8005744:	01000084 	movi	r4,2
 8005748:	11000f26 	beq	r2,r4,8005788 <sin+0x9c>
 800574c:	10001c26 	beq	r2,zero,80057c0 <sin+0xd4>
 8005750:	d9000117 	ldw	r4,4(sp)
 8005754:	d9400217 	ldw	r5,8(sp)
 8005758:	d9800317 	ldw	r6,12(sp)
 800575c:	d9c00417 	ldw	r7,16(sp)
 8005760:	8007c180 	call	8007c18 <__kernel_cos>
 8005764:	18e0003c 	xorhi	r3,r3,32768
 8005768:	003fee06 	br	8005724 <__alt_data_end+0xfc005724>
 800576c:	d8000015 	stw	zero,0(sp)
 8005770:	000d883a 	mov	r6,zero
 8005774:	000f883a 	mov	r7,zero
 8005778:	8008dec0 	call	8008dec <__kernel_sin>
 800577c:	dfc00517 	ldw	ra,20(sp)
 8005780:	dec00604 	addi	sp,sp,24
 8005784:	f800283a 	ret
 8005788:	d9000117 	ldw	r4,4(sp)
 800578c:	d9400217 	ldw	r5,8(sp)
 8005790:	d9800317 	ldw	r6,12(sp)
 8005794:	d9c00417 	ldw	r7,16(sp)
 8005798:	d8c00015 	stw	r3,0(sp)
 800579c:	8008dec0 	call	8008dec <__kernel_sin>
 80057a0:	18e0003c 	xorhi	r3,r3,32768
 80057a4:	003fdf06 	br	8005724 <__alt_data_end+0xfc005724>
 80057a8:	d9000117 	ldw	r4,4(sp)
 80057ac:	d9400217 	ldw	r5,8(sp)
 80057b0:	d9800317 	ldw	r6,12(sp)
 80057b4:	d9c00417 	ldw	r7,16(sp)
 80057b8:	8007c180 	call	8007c18 <__kernel_cos>
 80057bc:	003fd906 	br	8005724 <__alt_data_end+0xfc005724>
 80057c0:	d9000117 	ldw	r4,4(sp)
 80057c4:	d9400217 	ldw	r5,8(sp)
 80057c8:	d9800317 	ldw	r6,12(sp)
 80057cc:	d9c00417 	ldw	r7,16(sp)
 80057d0:	d8c00015 	stw	r3,0(sp)
 80057d4:	8008dec0 	call	8008dec <__kernel_sin>
 80057d8:	003fd206 	br	8005724 <__alt_data_end+0xfc005724>

080057dc <log10>:
 80057dc:	defff104 	addi	sp,sp,-60
 80057e0:	dd000d15 	stw	r20,52(sp)
 80057e4:	050200b4 	movhi	r20,2050
 80057e8:	dcc00c15 	stw	r19,48(sp)
 80057ec:	dc800b15 	stw	r18,44(sp)
 80057f0:	dc400a15 	stw	r17,40(sp)
 80057f4:	dc000915 	stw	r16,36(sp)
 80057f8:	dfc00e15 	stw	ra,56(sp)
 80057fc:	a508f604 	addi	r20,r20,9176
 8005800:	2027883a 	mov	r19,r4
 8005804:	2825883a 	mov	r18,r5
 8005808:	8005f4c0 	call	8005f4c <__ieee754_log10>
 800580c:	1821883a 	mov	r16,r3
 8005810:	a0c00017 	ldw	r3,0(r20)
 8005814:	1023883a 	mov	r17,r2
 8005818:	00bfffc4 	movi	r2,-1
 800581c:	18800a26 	beq	r3,r2,8005848 <log10+0x6c>
 8005820:	9809883a 	mov	r4,r19
 8005824:	900b883a 	mov	r5,r18
 8005828:	80092d80 	call	80092d8 <__fpclassifyd>
 800582c:	10000626 	beq	r2,zero,8005848 <log10+0x6c>
 8005830:	9809883a 	mov	r4,r19
 8005834:	900b883a 	mov	r5,r18
 8005838:	000d883a 	mov	r6,zero
 800583c:	000f883a 	mov	r7,zero
 8005840:	800b9100 	call	800b910 <__ledf2>
 8005844:	00800a0e 	bge	zero,r2,8005870 <log10+0x94>
 8005848:	8805883a 	mov	r2,r17
 800584c:	8007883a 	mov	r3,r16
 8005850:	dfc00e17 	ldw	ra,56(sp)
 8005854:	dd000d17 	ldw	r20,52(sp)
 8005858:	dcc00c17 	ldw	r19,48(sp)
 800585c:	dc800b17 	ldw	r18,44(sp)
 8005860:	dc400a17 	ldw	r17,40(sp)
 8005864:	dc000917 	ldw	r16,36(sp)
 8005868:	dec00f04 	addi	sp,sp,60
 800586c:	f800283a 	ret
 8005870:	008200b4 	movhi	r2,2050
 8005874:	a4000017 	ldw	r16,0(r20)
 8005878:	10802e04 	addi	r2,r2,184
 800587c:	d8000815 	stw	zero,32(sp)
 8005880:	d8800115 	stw	r2,4(sp)
 8005884:	dcc00215 	stw	r19,8(sp)
 8005888:	dc800315 	stw	r18,12(sp)
 800588c:	dcc00415 	stw	r19,16(sp)
 8005890:	dc800515 	stw	r18,20(sp)
 8005894:	9809883a 	mov	r4,r19
 8005898:	900b883a 	mov	r5,r18
 800589c:	000d883a 	mov	r6,zero
 80058a0:	000f883a 	mov	r7,zero
 80058a4:	80000d1e 	bne	r16,zero,80058dc <log10+0x100>
 80058a8:	00b80034 	movhi	r2,57344
 80058ac:	d8800615 	stw	r2,24(sp)
 80058b0:	00b1fc34 	movhi	r2,51184
 80058b4:	10bfffc4 	addi	r2,r2,-1
 80058b8:	d8800715 	stw	r2,28(sp)
 80058bc:	800b7ac0 	call	800b7ac <__eqdf2>
 80058c0:	10002626 	beq	r2,zero,800595c <log10+0x180>
 80058c4:	00800044 	movi	r2,1
 80058c8:	d8800015 	stw	r2,0(sp)
 80058cc:	d809883a 	mov	r4,sp
 80058d0:	800934c0 	call	800934c <matherr>
 80058d4:	10000d1e 	bne	r2,zero,800590c <log10+0x130>
 80058d8:	00000906 	br	8005900 <log10+0x124>
 80058dc:	00bffc34 	movhi	r2,65520
 80058e0:	d8000615 	stw	zero,24(sp)
 80058e4:	d8800715 	stw	r2,28(sp)
 80058e8:	800b7ac0 	call	800b7ac <__eqdf2>
 80058ec:	10001126 	beq	r2,zero,8005934 <log10+0x158>
 80058f0:	00800044 	movi	r2,1
 80058f4:	d8800015 	stw	r2,0(sp)
 80058f8:	00800084 	movi	r2,2
 80058fc:	80bff31e 	bne	r16,r2,80058cc <__alt_data_end+0xfc0058cc>
 8005900:	800cfb00 	call	800cfb0 <__errno>
 8005904:	00c00844 	movi	r3,33
 8005908:	10c00015 	stw	r3,0(r2)
 800590c:	010200b4 	movhi	r4,2050
 8005910:	21011104 	addi	r4,r4,1092
 8005914:	80093540 	call	8009354 <nan>
 8005918:	d8800615 	stw	r2,24(sp)
 800591c:	d8c00715 	stw	r3,28(sp)
 8005920:	d8800817 	ldw	r2,32(sp)
 8005924:	1000101e 	bne	r2,zero,8005968 <log10+0x18c>
 8005928:	d8800617 	ldw	r2,24(sp)
 800592c:	d8c00717 	ldw	r3,28(sp)
 8005930:	003fc706 	br	8005850 <__alt_data_end+0xfc005850>
 8005934:	00800084 	movi	r2,2
 8005938:	d8800015 	stw	r2,0(sp)
 800593c:	80800326 	beq	r16,r2,800594c <log10+0x170>
 8005940:	d809883a 	mov	r4,sp
 8005944:	800934c0 	call	800934c <matherr>
 8005948:	103ff51e 	bne	r2,zero,8005920 <__alt_data_end+0xfc005920>
 800594c:	800cfb00 	call	800cfb0 <__errno>
 8005950:	00c00884 	movi	r3,34
 8005954:	10c00015 	stw	r3,0(r2)
 8005958:	003ff106 	br	8005920 <__alt_data_end+0xfc005920>
 800595c:	00800084 	movi	r2,2
 8005960:	d8800015 	stw	r2,0(sp)
 8005964:	003ff606 	br	8005940 <__alt_data_end+0xfc005940>
 8005968:	800cfb00 	call	800cfb0 <__errno>
 800596c:	d8c00817 	ldw	r3,32(sp)
 8005970:	10c00015 	stw	r3,0(r2)
 8005974:	003fec06 	br	8005928 <__alt_data_end+0xfc005928>

08005978 <pow>:
 8005978:	deffee04 	addi	sp,sp,-72
 800597c:	dc800b15 	stw	r18,44(sp)
 8005980:	048200b4 	movhi	r18,2050
 8005984:	ddc01015 	stw	r23,64(sp)
 8005988:	dd800f15 	stw	r22,60(sp)
 800598c:	dd400e15 	stw	r21,56(sp)
 8005990:	dd000d15 	stw	r20,52(sp)
 8005994:	dcc00c15 	stw	r19,48(sp)
 8005998:	dc400a15 	stw	r17,40(sp)
 800599c:	dc000915 	stw	r16,36(sp)
 80059a0:	dfc01115 	stw	ra,68(sp)
 80059a4:	9488f604 	addi	r18,r18,9176
 80059a8:	202f883a 	mov	r23,r4
 80059ac:	282d883a 	mov	r22,r5
 80059b0:	302b883a 	mov	r21,r6
 80059b4:	3829883a 	mov	r20,r7
 80059b8:	800611c0 	call	800611c <__ieee754_pow>
 80059bc:	1023883a 	mov	r17,r2
 80059c0:	90800017 	ldw	r2,0(r18)
 80059c4:	04ffffc4 	movi	r19,-1
 80059c8:	1821883a 	mov	r16,r3
 80059cc:	14c00426 	beq	r2,r19,80059e0 <pow+0x68>
 80059d0:	a809883a 	mov	r4,r21
 80059d4:	a00b883a 	mov	r5,r20
 80059d8:	80092d80 	call	80092d8 <__fpclassifyd>
 80059dc:	10000d1e 	bne	r2,zero,8005a14 <pow+0x9c>
 80059e0:	8805883a 	mov	r2,r17
 80059e4:	8007883a 	mov	r3,r16
 80059e8:	dfc01117 	ldw	ra,68(sp)
 80059ec:	ddc01017 	ldw	r23,64(sp)
 80059f0:	dd800f17 	ldw	r22,60(sp)
 80059f4:	dd400e17 	ldw	r21,56(sp)
 80059f8:	dd000d17 	ldw	r20,52(sp)
 80059fc:	dcc00c17 	ldw	r19,48(sp)
 8005a00:	dc800b17 	ldw	r18,44(sp)
 8005a04:	dc400a17 	ldw	r17,40(sp)
 8005a08:	dc000917 	ldw	r16,36(sp)
 8005a0c:	dec01204 	addi	sp,sp,72
 8005a10:	f800283a 	ret
 8005a14:	b809883a 	mov	r4,r23
 8005a18:	b00b883a 	mov	r5,r22
 8005a1c:	80092d80 	call	80092d8 <__fpclassifyd>
 8005a20:	1000221e 	bne	r2,zero,8005aac <pow+0x134>
 8005a24:	a809883a 	mov	r4,r21
 8005a28:	a00b883a 	mov	r5,r20
 8005a2c:	000d883a 	mov	r6,zero
 8005a30:	000f883a 	mov	r7,zero
 8005a34:	800b7ac0 	call	800b7ac <__eqdf2>
 8005a38:	103fe91e 	bne	r2,zero,80059e0 <__alt_data_end+0xfc0059e0>
 8005a3c:	00c00044 	movi	r3,1
 8005a40:	d8c00015 	stw	r3,0(sp)
 8005a44:	00c200b4 	movhi	r3,2050
 8005a48:	18c03004 	addi	r3,r3,192
 8005a4c:	90800017 	ldw	r2,0(r18)
 8005a50:	d8c00115 	stw	r3,4(sp)
 8005a54:	00cffc34 	movhi	r3,16368
 8005a58:	d8000815 	stw	zero,32(sp)
 8005a5c:	ddc00215 	stw	r23,8(sp)
 8005a60:	dd800315 	stw	r22,12(sp)
 8005a64:	dd400415 	stw	r21,16(sp)
 8005a68:	dd000515 	stw	r20,20(sp)
 8005a6c:	d8000615 	stw	zero,24(sp)
 8005a70:	d8c00715 	stw	r3,28(sp)
 8005a74:	14c00a26 	beq	r2,r19,8005aa0 <pow+0x128>
 8005a78:	00c00084 	movi	r3,2
 8005a7c:	10c00826 	beq	r2,r3,8005aa0 <pow+0x128>
 8005a80:	d809883a 	mov	r4,sp
 8005a84:	800934c0 	call	800934c <matherr>
 8005a88:	10006b26 	beq	r2,zero,8005c38 <pow+0x2c0>
 8005a8c:	d8800817 	ldw	r2,32(sp)
 8005a90:	10000326 	beq	r2,zero,8005aa0 <pow+0x128>
 8005a94:	800cfb00 	call	800cfb0 <__errno>
 8005a98:	d8c00817 	ldw	r3,32(sp)
 8005a9c:	10c00015 	stw	r3,0(r2)
 8005aa0:	d8800617 	ldw	r2,24(sp)
 8005aa4:	d8c00717 	ldw	r3,28(sp)
 8005aa8:	003fcf06 	br	80059e8 <__alt_data_end+0xfc0059e8>
 8005aac:	b809883a 	mov	r4,r23
 8005ab0:	b00b883a 	mov	r5,r22
 8005ab4:	000d883a 	mov	r6,zero
 8005ab8:	000f883a 	mov	r7,zero
 8005abc:	800b7ac0 	call	800b7ac <__eqdf2>
 8005ac0:	1000171e 	bne	r2,zero,8005b20 <pow+0x1a8>
 8005ac4:	a809883a 	mov	r4,r21
 8005ac8:	a00b883a 	mov	r5,r20
 8005acc:	000d883a 	mov	r6,zero
 8005ad0:	000f883a 	mov	r7,zero
 8005ad4:	800b7ac0 	call	800b7ac <__eqdf2>
 8005ad8:	1000381e 	bne	r2,zero,8005bbc <pow+0x244>
 8005adc:	00c00044 	movi	r3,1
 8005ae0:	d8c00015 	stw	r3,0(sp)
 8005ae4:	90800017 	ldw	r2,0(r18)
 8005ae8:	00c200b4 	movhi	r3,2050
 8005aec:	18c03004 	addi	r3,r3,192
 8005af0:	d8c00115 	stw	r3,4(sp)
 8005af4:	d8000815 	stw	zero,32(sp)
 8005af8:	ddc00215 	stw	r23,8(sp)
 8005afc:	dd800315 	stw	r22,12(sp)
 8005b00:	dd400415 	stw	r21,16(sp)
 8005b04:	dd000515 	stw	r20,20(sp)
 8005b08:	d8000615 	stw	zero,24(sp)
 8005b0c:	d8000715 	stw	zero,28(sp)
 8005b10:	103fdb26 	beq	r2,zero,8005a80 <__alt_data_end+0xfc005a80>
 8005b14:	008ffc34 	movhi	r2,16368
 8005b18:	d8800715 	stw	r2,28(sp)
 8005b1c:	003fe006 	br	8005aa0 <__alt_data_end+0xfc005aa0>
 8005b20:	8809883a 	mov	r4,r17
 8005b24:	800b883a 	mov	r5,r16
 8005b28:	80090c80 	call	80090c8 <finite>
 8005b2c:	10004626 	beq	r2,zero,8005c48 <pow+0x2d0>
 8005b30:	8809883a 	mov	r4,r17
 8005b34:	800b883a 	mov	r5,r16
 8005b38:	000d883a 	mov	r6,zero
 8005b3c:	000f883a 	mov	r7,zero
 8005b40:	800b7ac0 	call	800b7ac <__eqdf2>
 8005b44:	103fa61e 	bne	r2,zero,80059e0 <__alt_data_end+0xfc0059e0>
 8005b48:	b809883a 	mov	r4,r23
 8005b4c:	b00b883a 	mov	r5,r22
 8005b50:	80090c80 	call	80090c8 <finite>
 8005b54:	103fa226 	beq	r2,zero,80059e0 <__alt_data_end+0xfc0059e0>
 8005b58:	a809883a 	mov	r4,r21
 8005b5c:	a00b883a 	mov	r5,r20
 8005b60:	80090c80 	call	80090c8 <finite>
 8005b64:	103f9e26 	beq	r2,zero,80059e0 <__alt_data_end+0xfc0059e0>
 8005b68:	00800104 	movi	r2,4
 8005b6c:	d8800015 	stw	r2,0(sp)
 8005b70:	90c00017 	ldw	r3,0(r18)
 8005b74:	008200b4 	movhi	r2,2050
 8005b78:	10803004 	addi	r2,r2,192
 8005b7c:	d8800115 	stw	r2,4(sp)
 8005b80:	d8000815 	stw	zero,32(sp)
 8005b84:	ddc00215 	stw	r23,8(sp)
 8005b88:	dd800315 	stw	r22,12(sp)
 8005b8c:	dd400415 	stw	r21,16(sp)
 8005b90:	dd000515 	stw	r20,20(sp)
 8005b94:	d8000615 	stw	zero,24(sp)
 8005b98:	d8000715 	stw	zero,28(sp)
 8005b9c:	00800084 	movi	r2,2
 8005ba0:	18806126 	beq	r3,r2,8005d28 <pow+0x3b0>
 8005ba4:	d809883a 	mov	r4,sp
 8005ba8:	800934c0 	call	800934c <matherr>
 8005bac:	10005e26 	beq	r2,zero,8005d28 <pow+0x3b0>
 8005bb0:	d8800817 	ldw	r2,32(sp)
 8005bb4:	103fba26 	beq	r2,zero,8005aa0 <__alt_data_end+0xfc005aa0>
 8005bb8:	003fb606 	br	8005a94 <__alt_data_end+0xfc005a94>
 8005bbc:	a809883a 	mov	r4,r21
 8005bc0:	a00b883a 	mov	r5,r20
 8005bc4:	80090c80 	call	80090c8 <finite>
 8005bc8:	103f8526 	beq	r2,zero,80059e0 <__alt_data_end+0xfc0059e0>
 8005bcc:	a809883a 	mov	r4,r21
 8005bd0:	a00b883a 	mov	r5,r20
 8005bd4:	000d883a 	mov	r6,zero
 8005bd8:	000f883a 	mov	r7,zero
 8005bdc:	800b9100 	call	800b910 <__ledf2>
 8005be0:	103f7f0e 	bge	r2,zero,80059e0 <__alt_data_end+0xfc0059e0>
 8005be4:	00c00044 	movi	r3,1
 8005be8:	d8c00015 	stw	r3,0(sp)
 8005bec:	90800017 	ldw	r2,0(r18)
 8005bf0:	00c200b4 	movhi	r3,2050
 8005bf4:	18c03004 	addi	r3,r3,192
 8005bf8:	d8c00115 	stw	r3,4(sp)
 8005bfc:	d8000815 	stw	zero,32(sp)
 8005c00:	ddc00215 	stw	r23,8(sp)
 8005c04:	dd800315 	stw	r22,12(sp)
 8005c08:	dd400415 	stw	r21,16(sp)
 8005c0c:	dd000515 	stw	r20,20(sp)
 8005c10:	d8000615 	stw	zero,24(sp)
 8005c14:	10002526 	beq	r2,zero,8005cac <pow+0x334>
 8005c18:	00fffc34 	movhi	r3,65520
 8005c1c:	d8c00715 	stw	r3,28(sp)
 8005c20:	00c00084 	movi	r3,2
 8005c24:	10c0221e 	bne	r2,r3,8005cb0 <pow+0x338>
 8005c28:	800cfb00 	call	800cfb0 <__errno>
 8005c2c:	00c00844 	movi	r3,33
 8005c30:	10c00015 	stw	r3,0(r2)
 8005c34:	003fde06 	br	8005bb0 <__alt_data_end+0xfc005bb0>
 8005c38:	800cfb00 	call	800cfb0 <__errno>
 8005c3c:	00c00844 	movi	r3,33
 8005c40:	10c00015 	stw	r3,0(r2)
 8005c44:	003f9106 	br	8005a8c <__alt_data_end+0xfc005a8c>
 8005c48:	b809883a 	mov	r4,r23
 8005c4c:	b00b883a 	mov	r5,r22
 8005c50:	80090c80 	call	80090c8 <finite>
 8005c54:	103fb626 	beq	r2,zero,8005b30 <__alt_data_end+0xfc005b30>
 8005c58:	a809883a 	mov	r4,r21
 8005c5c:	a00b883a 	mov	r5,r20
 8005c60:	80090c80 	call	80090c8 <finite>
 8005c64:	103fb226 	beq	r2,zero,8005b30 <__alt_data_end+0xfc005b30>
 8005c68:	8809883a 	mov	r4,r17
 8005c6c:	800b883a 	mov	r5,r16
 8005c70:	80092d80 	call	80092d8 <__fpclassifyd>
 8005c74:	1000121e 	bne	r2,zero,8005cc0 <pow+0x348>
 8005c78:	00800044 	movi	r2,1
 8005c7c:	d8800015 	stw	r2,0(sp)
 8005c80:	94000017 	ldw	r16,0(r18)
 8005c84:	008200b4 	movhi	r2,2050
 8005c88:	10803004 	addi	r2,r2,192
 8005c8c:	d8800115 	stw	r2,4(sp)
 8005c90:	d8000815 	stw	zero,32(sp)
 8005c94:	ddc00215 	stw	r23,8(sp)
 8005c98:	dd800315 	stw	r22,12(sp)
 8005c9c:	dd400415 	stw	r21,16(sp)
 8005ca0:	dd000515 	stw	r20,20(sp)
 8005ca4:	8000241e 	bne	r16,zero,8005d38 <pow+0x3c0>
 8005ca8:	d8000615 	stw	zero,24(sp)
 8005cac:	d8000715 	stw	zero,28(sp)
 8005cb0:	d809883a 	mov	r4,sp
 8005cb4:	800934c0 	call	800934c <matherr>
 8005cb8:	103fbd1e 	bne	r2,zero,8005bb0 <__alt_data_end+0xfc005bb0>
 8005cbc:	003fda06 	br	8005c28 <__alt_data_end+0xfc005c28>
 8005cc0:	00c000c4 	movi	r3,3
 8005cc4:	d8c00015 	stw	r3,0(sp)
 8005cc8:	90800017 	ldw	r2,0(r18)
 8005ccc:	00c200b4 	movhi	r3,2050
 8005cd0:	18c03004 	addi	r3,r3,192
 8005cd4:	d8c00115 	stw	r3,4(sp)
 8005cd8:	d8000815 	stw	zero,32(sp)
 8005cdc:	ddc00215 	stw	r23,8(sp)
 8005ce0:	dd800315 	stw	r22,12(sp)
 8005ce4:	dd400415 	stw	r21,16(sp)
 8005ce8:	dd000515 	stw	r20,20(sp)
 8005cec:	b809883a 	mov	r4,r23
 8005cf0:	b00b883a 	mov	r5,r22
 8005cf4:	000d883a 	mov	r6,zero
 8005cf8:	000f883a 	mov	r7,zero
 8005cfc:	1000181e 	bne	r2,zero,8005d60 <pow+0x3e8>
 8005d00:	00b80034 	movhi	r2,57344
 8005d04:	d8800615 	stw	r2,24(sp)
 8005d08:	0091fc34 	movhi	r2,18416
 8005d0c:	10bfffc4 	addi	r2,r2,-1
 8005d10:	d8800715 	stw	r2,28(sp)
 8005d14:	800b9100 	call	800b910 <__ledf2>
 8005d18:	10002a16 	blt	r2,zero,8005dc4 <pow+0x44c>
 8005d1c:	90c00017 	ldw	r3,0(r18)
 8005d20:	00800084 	movi	r2,2
 8005d24:	18bf9f1e 	bne	r3,r2,8005ba4 <__alt_data_end+0xfc005ba4>
 8005d28:	800cfb00 	call	800cfb0 <__errno>
 8005d2c:	00c00884 	movi	r3,34
 8005d30:	10c00015 	stw	r3,0(r2)
 8005d34:	003f9e06 	br	8005bb0 <__alt_data_end+0xfc005bb0>
 8005d38:	0009883a 	mov	r4,zero
 8005d3c:	000b883a 	mov	r5,zero
 8005d40:	000d883a 	mov	r6,zero
 8005d44:	000f883a 	mov	r7,zero
 8005d48:	800ae2c0 	call	800ae2c <__divdf3>
 8005d4c:	d8800615 	stw	r2,24(sp)
 8005d50:	d8c00715 	stw	r3,28(sp)
 8005d54:	00800084 	movi	r2,2
 8005d58:	80bfb326 	beq	r16,r2,8005c28 <__alt_data_end+0xfc005c28>
 8005d5c:	003fd406 	br	8005cb0 <__alt_data_end+0xfc005cb0>
 8005d60:	009ffc34 	movhi	r2,32752
 8005d64:	d8000615 	stw	zero,24(sp)
 8005d68:	d8800715 	stw	r2,28(sp)
 8005d6c:	800b9100 	call	800b910 <__ledf2>
 8005d70:	103fea0e 	bge	r2,zero,8005d1c <__alt_data_end+0xfc005d1c>
 8005d74:	000d883a 	mov	r6,zero
 8005d78:	01cff834 	movhi	r7,16352
 8005d7c:	a809883a 	mov	r4,r21
 8005d80:	a00b883a 	mov	r5,r20
 8005d84:	800b9f00 	call	800b9f0 <__muldf3>
 8005d88:	1009883a 	mov	r4,r2
 8005d8c:	180b883a 	mov	r5,r3
 8005d90:	1023883a 	mov	r17,r2
 8005d94:	1821883a 	mov	r16,r3
 8005d98:	80093600 	call	8009360 <rint>
 8005d9c:	1009883a 	mov	r4,r2
 8005da0:	180b883a 	mov	r5,r3
 8005da4:	880d883a 	mov	r6,r17
 8005da8:	800f883a 	mov	r7,r16
 8005dac:	800b7ac0 	call	800b7ac <__eqdf2>
 8005db0:	103fda26 	beq	r2,zero,8005d1c <__alt_data_end+0xfc005d1c>
 8005db4:	00bffc34 	movhi	r2,65520
 8005db8:	d8000615 	stw	zero,24(sp)
 8005dbc:	d8800715 	stw	r2,28(sp)
 8005dc0:	003fd606 	br	8005d1c <__alt_data_end+0xfc005d1c>
 8005dc4:	000d883a 	mov	r6,zero
 8005dc8:	01cff834 	movhi	r7,16352
 8005dcc:	a809883a 	mov	r4,r21
 8005dd0:	a00b883a 	mov	r5,r20
 8005dd4:	800b9f00 	call	800b9f0 <__muldf3>
 8005dd8:	1009883a 	mov	r4,r2
 8005ddc:	180b883a 	mov	r5,r3
 8005de0:	1023883a 	mov	r17,r2
 8005de4:	1821883a 	mov	r16,r3
 8005de8:	80093600 	call	8009360 <rint>
 8005dec:	1009883a 	mov	r4,r2
 8005df0:	180b883a 	mov	r5,r3
 8005df4:	880d883a 	mov	r6,r17
 8005df8:	800f883a 	mov	r7,r16
 8005dfc:	800b7ac0 	call	800b7ac <__eqdf2>
 8005e00:	103fc626 	beq	r2,zero,8005d1c <__alt_data_end+0xfc005d1c>
 8005e04:	00b80034 	movhi	r2,57344
 8005e08:	d8800615 	stw	r2,24(sp)
 8005e0c:	00b1fc34 	movhi	r2,51184
 8005e10:	10bfffc4 	addi	r2,r2,-1
 8005e14:	d8800715 	stw	r2,28(sp)
 8005e18:	003fc006 	br	8005d1c <__alt_data_end+0xfc005d1c>

08005e1c <sqrt>:
 8005e1c:	defff104 	addi	sp,sp,-60
 8005e20:	dd000d15 	stw	r20,52(sp)
 8005e24:	050200b4 	movhi	r20,2050
 8005e28:	dcc00c15 	stw	r19,48(sp)
 8005e2c:	dc800b15 	stw	r18,44(sp)
 8005e30:	dc400a15 	stw	r17,40(sp)
 8005e34:	dc000915 	stw	r16,36(sp)
 8005e38:	dfc00e15 	stw	ra,56(sp)
 8005e3c:	a508f604 	addi	r20,r20,9176
 8005e40:	2027883a 	mov	r19,r4
 8005e44:	2825883a 	mov	r18,r5
 8005e48:	80079840 	call	8007984 <__ieee754_sqrt>
 8005e4c:	1821883a 	mov	r16,r3
 8005e50:	a0c00017 	ldw	r3,0(r20)
 8005e54:	1023883a 	mov	r17,r2
 8005e58:	00bfffc4 	movi	r2,-1
 8005e5c:	18800a26 	beq	r3,r2,8005e88 <sqrt+0x6c>
 8005e60:	9809883a 	mov	r4,r19
 8005e64:	900b883a 	mov	r5,r18
 8005e68:	80092d80 	call	80092d8 <__fpclassifyd>
 8005e6c:	10000626 	beq	r2,zero,8005e88 <sqrt+0x6c>
 8005e70:	9809883a 	mov	r4,r19
 8005e74:	900b883a 	mov	r5,r18
 8005e78:	000d883a 	mov	r6,zero
 8005e7c:	000f883a 	mov	r7,zero
 8005e80:	800b9100 	call	800b910 <__ledf2>
 8005e84:	10000a16 	blt	r2,zero,8005eb0 <sqrt+0x94>
 8005e88:	8805883a 	mov	r2,r17
 8005e8c:	8007883a 	mov	r3,r16
 8005e90:	dfc00e17 	ldw	ra,56(sp)
 8005e94:	dd000d17 	ldw	r20,52(sp)
 8005e98:	dcc00c17 	ldw	r19,48(sp)
 8005e9c:	dc800b17 	ldw	r18,44(sp)
 8005ea0:	dc400a17 	ldw	r17,40(sp)
 8005ea4:	dc000917 	ldw	r16,36(sp)
 8005ea8:	dec00f04 	addi	sp,sp,60
 8005eac:	f800283a 	ret
 8005eb0:	00800044 	movi	r2,1
 8005eb4:	d8800015 	stw	r2,0(sp)
 8005eb8:	a4000017 	ldw	r16,0(r20)
 8005ebc:	008200b4 	movhi	r2,2050
 8005ec0:	10803104 	addi	r2,r2,196
 8005ec4:	d8800115 	stw	r2,4(sp)
 8005ec8:	d8000815 	stw	zero,32(sp)
 8005ecc:	dcc00415 	stw	r19,16(sp)
 8005ed0:	dc800515 	stw	r18,20(sp)
 8005ed4:	dcc00215 	stw	r19,8(sp)
 8005ed8:	dc800315 	stw	r18,12(sp)
 8005edc:	80000a1e 	bne	r16,zero,8005f08 <sqrt+0xec>
 8005ee0:	d8000615 	stw	zero,24(sp)
 8005ee4:	d8000715 	stw	zero,28(sp)
 8005ee8:	d809883a 	mov	r4,sp
 8005eec:	800934c0 	call	800934c <matherr>
 8005ef0:	10000e26 	beq	r2,zero,8005f2c <sqrt+0x110>
 8005ef4:	d8800817 	ldw	r2,32(sp)
 8005ef8:	1000101e 	bne	r2,zero,8005f3c <sqrt+0x120>
 8005efc:	d8800617 	ldw	r2,24(sp)
 8005f00:	d8c00717 	ldw	r3,28(sp)
 8005f04:	003fe206 	br	8005e90 <__alt_data_end+0xfc005e90>
 8005f08:	0009883a 	mov	r4,zero
 8005f0c:	000b883a 	mov	r5,zero
 8005f10:	000d883a 	mov	r6,zero
 8005f14:	000f883a 	mov	r7,zero
 8005f18:	800ae2c0 	call	800ae2c <__divdf3>
 8005f1c:	d8800615 	stw	r2,24(sp)
 8005f20:	d8c00715 	stw	r3,28(sp)
 8005f24:	00800084 	movi	r2,2
 8005f28:	80bfef1e 	bne	r16,r2,8005ee8 <__alt_data_end+0xfc005ee8>
 8005f2c:	800cfb00 	call	800cfb0 <__errno>
 8005f30:	00c00844 	movi	r3,33
 8005f34:	10c00015 	stw	r3,0(r2)
 8005f38:	003fee06 	br	8005ef4 <__alt_data_end+0xfc005ef4>
 8005f3c:	800cfb00 	call	800cfb0 <__errno>
 8005f40:	d8c00817 	ldw	r3,32(sp)
 8005f44:	10c00015 	stw	r3,0(r2)
 8005f48:	003fec06 	br	8005efc <__alt_data_end+0xfc005efc>

08005f4c <__ieee754_log10>:
 8005f4c:	defff904 	addi	sp,sp,-28
 8005f50:	00800434 	movhi	r2,16
 8005f54:	dc000015 	stw	r16,0(sp)
 8005f58:	dfc00615 	stw	ra,24(sp)
 8005f5c:	dd400515 	stw	r21,20(sp)
 8005f60:	dd000415 	stw	r20,16(sp)
 8005f64:	dcc00315 	stw	r19,12(sp)
 8005f68:	dc800215 	stw	r18,8(sp)
 8005f6c:	dc400115 	stw	r17,4(sp)
 8005f70:	10bfffc4 	addi	r2,r2,-1
 8005f74:	2807883a 	mov	r3,r5
 8005f78:	2021883a 	mov	r16,r4
 8005f7c:	11401d16 	blt	r2,r5,8005ff4 <__ieee754_log10+0xa8>
 8005f80:	01e00034 	movhi	r7,32768
 8005f84:	39ffffc4 	addi	r7,r7,-1
 8005f88:	29ce703a 	and	r7,r5,r7
 8005f8c:	390eb03a 	or	r7,r7,r4
 8005f90:	38005426 	beq	r7,zero,80060e4 <__ieee754_log10+0x198>
 8005f94:	28005816 	blt	r5,zero,80060f8 <__ieee754_log10+0x1ac>
 8005f98:	01d0d434 	movhi	r7,17232
 8005f9c:	000d883a 	mov	r6,zero
 8005fa0:	800b9f00 	call	800b9f0 <__muldf3>
 8005fa4:	011ffc34 	movhi	r4,32752
 8005fa8:	180f883a 	mov	r7,r3
 8005fac:	213fffc4 	addi	r4,r4,-1
 8005fb0:	1021883a 	mov	r16,r2
 8005fb4:	00bff284 	movi	r2,-54
 8005fb8:	21c0130e 	bge	r4,r7,8006008 <__ieee754_log10+0xbc>
 8005fbc:	8009883a 	mov	r4,r16
 8005fc0:	180b883a 	mov	r5,r3
 8005fc4:	800d883a 	mov	r6,r16
 8005fc8:	180f883a 	mov	r7,r3
 8005fcc:	800a5900 	call	800a590 <__adddf3>
 8005fd0:	dfc00617 	ldw	ra,24(sp)
 8005fd4:	dd400517 	ldw	r21,20(sp)
 8005fd8:	dd000417 	ldw	r20,16(sp)
 8005fdc:	dcc00317 	ldw	r19,12(sp)
 8005fe0:	dc800217 	ldw	r18,8(sp)
 8005fe4:	dc400117 	ldw	r17,4(sp)
 8005fe8:	dc000017 	ldw	r16,0(sp)
 8005fec:	dec00704 	addi	sp,sp,28
 8005ff0:	f800283a 	ret
 8005ff4:	011ffc34 	movhi	r4,32752
 8005ff8:	280f883a 	mov	r7,r5
 8005ffc:	213fffc4 	addi	r4,r4,-1
 8006000:	0005883a 	mov	r2,zero
 8006004:	21ffed16 	blt	r4,r7,8005fbc <__alt_data_end+0xfc005fbc>
 8006008:	3809d53a 	srai	r4,r7,20
 800600c:	04400434 	movhi	r17,16
 8006010:	8c7fffc4 	addi	r17,r17,-1
 8006014:	213f0044 	addi	r4,r4,-1023
 8006018:	2089883a 	add	r4,r4,r2
 800601c:	2028d7fa 	srli	r20,r4,31
 8006020:	3c62703a 	and	r17,r7,r17
 8006024:	2509883a 	add	r4,r4,r20
 8006028:	800cbb40 	call	800cbb4 <__floatsidf>
 800602c:	0180ffc4 	movi	r6,1023
 8006030:	350dc83a 	sub	r6,r6,r20
 8006034:	300a953a 	slli	r5,r6,20
 8006038:	8009883a 	mov	r4,r16
 800603c:	1027883a 	mov	r19,r2
 8006040:	2c4ab03a 	or	r5,r5,r17
 8006044:	1825883a 	mov	r18,r3
 8006048:	80097100 	call	8009710 <__ieee754_log>
 800604c:	019427f4 	movhi	r6,20639
 8006050:	01cff4f4 	movhi	r7,16339
 8006054:	9809883a 	mov	r4,r19
 8006058:	900b883a 	mov	r5,r18
 800605c:	31980004 	addi	r6,r6,24576
 8006060:	39d104c4 	addi	r7,r7,17427
 8006064:	102b883a 	mov	r21,r2
 8006068:	1829883a 	mov	r20,r3
 800606c:	800b9f00 	call	800b9f0 <__muldf3>
 8006070:	01847c74 	movhi	r6,4593
 8006074:	01cf56b4 	movhi	r7,15706
 8006078:	9809883a 	mov	r4,r19
 800607c:	900b883a 	mov	r5,r18
 8006080:	318acd84 	addi	r6,r6,11062
 8006084:	39ffbcc4 	addi	r7,r7,-269
 8006088:	1023883a 	mov	r17,r2
 800608c:	1821883a 	mov	r16,r3
 8006090:	800b9f00 	call	800b9f0 <__muldf3>
 8006094:	018549f4 	movhi	r6,5415
 8006098:	01cff734 	movhi	r7,16348
 800609c:	a809883a 	mov	r4,r21
 80060a0:	a00b883a 	mov	r5,r20
 80060a4:	31b94384 	addi	r6,r6,-6898
 80060a8:	39f2dec4 	addi	r7,r7,-13445
 80060ac:	1027883a 	mov	r19,r2
 80060b0:	1825883a 	mov	r18,r3
 80060b4:	800b9f00 	call	800b9f0 <__muldf3>
 80060b8:	9809883a 	mov	r4,r19
 80060bc:	900b883a 	mov	r5,r18
 80060c0:	100d883a 	mov	r6,r2
 80060c4:	180f883a 	mov	r7,r3
 80060c8:	800a5900 	call	800a590 <__adddf3>
 80060cc:	8809883a 	mov	r4,r17
 80060d0:	800b883a 	mov	r5,r16
 80060d4:	100d883a 	mov	r6,r2
 80060d8:	180f883a 	mov	r7,r3
 80060dc:	800a5900 	call	800a590 <__adddf3>
 80060e0:	003fbb06 	br	8005fd0 <__alt_data_end+0xfc005fd0>
 80060e4:	0009883a 	mov	r4,zero
 80060e8:	0170d434 	movhi	r5,50000
 80060ec:	000d883a 	mov	r6,zero
 80060f0:	800ae2c0 	call	800ae2c <__divdf3>
 80060f4:	003fb606 	br	8005fd0 <__alt_data_end+0xfc005fd0>
 80060f8:	200d883a 	mov	r6,r4
 80060fc:	280f883a 	mov	r7,r5
 8006100:	800c25c0 	call	800c25c <__subdf3>
 8006104:	1009883a 	mov	r4,r2
 8006108:	180b883a 	mov	r5,r3
 800610c:	000d883a 	mov	r6,zero
 8006110:	000f883a 	mov	r7,zero
 8006114:	800ae2c0 	call	800ae2c <__divdf3>
 8006118:	003fad06 	br	8005fd0 <__alt_data_end+0xfc005fd0>

0800611c <__ieee754_pow>:
 800611c:	00a00034 	movhi	r2,32768
 8006120:	deffec04 	addi	sp,sp,-80
 8006124:	10bfffc4 	addi	r2,r2,-1
 8006128:	dc400b15 	stw	r17,44(sp)
 800612c:	38a2703a 	and	r17,r7,r2
 8006130:	dfc01315 	stw	ra,76(sp)
 8006134:	df001215 	stw	fp,72(sp)
 8006138:	ddc01115 	stw	r23,68(sp)
 800613c:	dd801015 	stw	r22,64(sp)
 8006140:	dd400f15 	stw	r21,60(sp)
 8006144:	dd000e15 	stw	r20,56(sp)
 8006148:	dcc00d15 	stw	r19,52(sp)
 800614c:	dc800c15 	stw	r18,48(sp)
 8006150:	dc000a15 	stw	r16,40(sp)
 8006154:	8986b03a 	or	r3,r17,r6
 8006158:	18002a26 	beq	r3,zero,8006204 <__ieee754_pow+0xe8>
 800615c:	28a4703a 	and	r18,r5,r2
 8006160:	009ffc34 	movhi	r2,32752
 8006164:	14802316 	blt	r2,r18,80061f4 <__ieee754_pow+0xd8>
 8006168:	90802126 	beq	r18,r2,80061f0 <__ieee754_pow+0xd4>
 800616c:	14402116 	blt	r2,r17,80061f4 <__ieee754_pow+0xd8>
 8006170:	009ffc34 	movhi	r2,32752
 8006174:	88807326 	beq	r17,r2,8006344 <__ieee754_pow+0x228>
 8006178:	2827883a 	mov	r19,r5
 800617c:	2021883a 	mov	r16,r4
 8006180:	302b883a 	mov	r21,r6
 8006184:	382f883a 	mov	r23,r7
 8006188:	28007016 	blt	r5,zero,800634c <__ieee754_pow+0x230>
 800618c:	0039883a 	mov	fp,zero
 8006190:	a8003a1e 	bne	r21,zero,800627c <__ieee754_pow+0x160>
 8006194:	009ffc34 	movhi	r2,32752
 8006198:	88807e26 	beq	r17,r2,8006394 <__ieee754_pow+0x278>
 800619c:	008ffc34 	movhi	r2,16368
 80061a0:	88805426 	beq	r17,r2,80062f4 <__ieee754_pow+0x1d8>
 80061a4:	00900034 	movhi	r2,16384
 80061a8:	b8834926 	beq	r23,r2,8006ed0 <__ieee754_pow+0xdb4>
 80061ac:	008ff834 	movhi	r2,16352
 80061b0:	b880321e 	bne	r23,r2,800627c <__ieee754_pow+0x160>
 80061b4:	98003116 	blt	r19,zero,800627c <__ieee754_pow+0x160>
 80061b8:	8009883a 	mov	r4,r16
 80061bc:	980b883a 	mov	r5,r19
 80061c0:	dfc01317 	ldw	ra,76(sp)
 80061c4:	df001217 	ldw	fp,72(sp)
 80061c8:	ddc01117 	ldw	r23,68(sp)
 80061cc:	dd801017 	ldw	r22,64(sp)
 80061d0:	dd400f17 	ldw	r21,60(sp)
 80061d4:	dd000e17 	ldw	r20,56(sp)
 80061d8:	dcc00d17 	ldw	r19,52(sp)
 80061dc:	dc800c17 	ldw	r18,48(sp)
 80061e0:	dc400b17 	ldw	r17,44(sp)
 80061e4:	dc000a17 	ldw	r16,40(sp)
 80061e8:	dec01404 	addi	sp,sp,80
 80061ec:	80079841 	jmpi	8007984 <__ieee754_sqrt>
 80061f0:	20001226 	beq	r4,zero,800623c <__ieee754_pow+0x120>
 80061f4:	00b00434 	movhi	r2,49168
 80061f8:	9085883a 	add	r2,r18,r2
 80061fc:	1108b03a 	or	r4,r2,r4
 8006200:	20000f1e 	bne	r4,zero,8006240 <__ieee754_pow+0x124>
 8006204:	0005883a 	mov	r2,zero
 8006208:	00cffc34 	movhi	r3,16368
 800620c:	dfc01317 	ldw	ra,76(sp)
 8006210:	df001217 	ldw	fp,72(sp)
 8006214:	ddc01117 	ldw	r23,68(sp)
 8006218:	dd801017 	ldw	r22,64(sp)
 800621c:	dd400f17 	ldw	r21,60(sp)
 8006220:	dd000e17 	ldw	r20,56(sp)
 8006224:	dcc00d17 	ldw	r19,52(sp)
 8006228:	dc800c17 	ldw	r18,48(sp)
 800622c:	dc400b17 	ldw	r17,44(sp)
 8006230:	dc000a17 	ldw	r16,40(sp)
 8006234:	dec01404 	addi	sp,sp,80
 8006238:	f800283a 	ret
 800623c:	947fcc0e 	bge	r18,r17,8006170 <__alt_data_end+0xfc006170>
 8006240:	010200b4 	movhi	r4,2050
 8006244:	21011104 	addi	r4,r4,1092
 8006248:	dfc01317 	ldw	ra,76(sp)
 800624c:	df001217 	ldw	fp,72(sp)
 8006250:	ddc01117 	ldw	r23,68(sp)
 8006254:	dd801017 	ldw	r22,64(sp)
 8006258:	dd400f17 	ldw	r21,60(sp)
 800625c:	dd000e17 	ldw	r20,56(sp)
 8006260:	dcc00d17 	ldw	r19,52(sp)
 8006264:	dc800c17 	ldw	r18,48(sp)
 8006268:	dc400b17 	ldw	r17,44(sp)
 800626c:	dc000a17 	ldw	r16,40(sp)
 8006270:	dec01404 	addi	sp,sp,80
 8006274:	80093541 	jmpi	8009354 <nan>
 8006278:	0039883a 	mov	fp,zero
 800627c:	8009883a 	mov	r4,r16
 8006280:	980b883a 	mov	r5,r19
 8006284:	80090b40 	call	80090b4 <fabs>
 8006288:	102d883a 	mov	r22,r2
 800628c:	80000f26 	beq	r16,zero,80062cc <__ieee754_pow+0x1b0>
 8006290:	9816d7fa 	srli	r11,r19,31
 8006294:	5affffc4 	addi	r11,r11,-1
 8006298:	e2c4b03a 	or	r2,fp,r11
 800629c:	10004a26 	beq	r2,zero,80063c8 <__ieee754_pow+0x2ac>
 80062a0:	00907834 	movhi	r2,16864
 80062a4:	1440530e 	bge	r2,r17,80063f4 <__ieee754_pow+0x2d8>
 80062a8:	0090fc34 	movhi	r2,17392
 80062ac:	14433e0e 	bge	r2,r17,8006fa8 <__ieee754_pow+0xe8c>
 80062b0:	008ffc34 	movhi	r2,16368
 80062b4:	10bfffc4 	addi	r2,r2,-1
 80062b8:	14801916 	blt	r2,r18,8006320 <__ieee754_pow+0x204>
 80062bc:	b8001916 	blt	r23,zero,8006324 <__ieee754_pow+0x208>
 80062c0:	0005883a 	mov	r2,zero
 80062c4:	0007883a 	mov	r3,zero
 80062c8:	003fd006 	br	800620c <__alt_data_end+0xfc00620c>
 80062cc:	90000526 	beq	r18,zero,80062e4 <__ieee754_pow+0x1c8>
 80062d0:	00900034 	movhi	r2,16384
 80062d4:	10bfffc4 	addi	r2,r2,-1
 80062d8:	9884703a 	and	r2,r19,r2
 80062dc:	010ffc34 	movhi	r4,16368
 80062e0:	113feb1e 	bne	r2,r4,8006290 <__alt_data_end+0xfc006290>
 80062e4:	b8000716 	blt	r23,zero,8006304 <__ieee754_pow+0x1e8>
 80062e8:	9802f216 	blt	r19,zero,8006eb4 <__ieee754_pow+0xd98>
 80062ec:	b005883a 	mov	r2,r22
 80062f0:	003fc606 	br	800620c <__alt_data_end+0xfc00620c>
 80062f4:	b8038816 	blt	r23,zero,8007118 <__ieee754_pow+0xffc>
 80062f8:	8005883a 	mov	r2,r16
 80062fc:	9807883a 	mov	r3,r19
 8006300:	003fc206 	br	800620c <__alt_data_end+0xfc00620c>
 8006304:	b00d883a 	mov	r6,r22
 8006308:	0009883a 	mov	r4,zero
 800630c:	014ffc34 	movhi	r5,16368
 8006310:	180f883a 	mov	r7,r3
 8006314:	800ae2c0 	call	800ae2c <__divdf3>
 8006318:	102d883a 	mov	r22,r2
 800631c:	003ff206 	br	80062e8 <__alt_data_end+0xfc0062e8>
 8006320:	05ffe70e 	bge	zero,r23,80062c0 <__alt_data_end+0xfc0062c0>
 8006324:	01220034 	movhi	r4,34816
 8006328:	015f8e34 	movhi	r5,32312
 800632c:	211d6704 	addi	r4,r4,30108
 8006330:	29790f04 	addi	r5,r5,-7108
 8006334:	200d883a 	mov	r6,r4
 8006338:	280f883a 	mov	r7,r5
 800633c:	800b9f00 	call	800b9f0 <__muldf3>
 8006340:	003fb206 	br	800620c <__alt_data_end+0xfc00620c>
 8006344:	303f8c26 	beq	r6,zero,8006178 <__alt_data_end+0xfc006178>
 8006348:	003faa06 	br	80061f4 <__alt_data_end+0xfc0061f4>
 800634c:	0090d034 	movhi	r2,17216
 8006350:	10bfffc4 	addi	r2,r2,-1
 8006354:	14401a16 	blt	r2,r17,80063c0 <__ieee754_pow+0x2a4>
 8006358:	008ffc34 	movhi	r2,16368
 800635c:	10bfffc4 	addi	r2,r2,-1
 8006360:	147f8a0e 	bge	r2,r17,800618c <__alt_data_end+0xfc00618c>
 8006364:	8809d53a 	srai	r4,r17,20
 8006368:	00c104c4 	movi	r3,1043
 800636c:	1903840e 	bge	r3,r4,8007180 <__ieee754_pow+0x1064>
 8006370:	00810cc4 	movi	r2,1075
 8006374:	1105c83a 	sub	r2,r2,r4
 8006378:	3086d83a 	srl	r3,r6,r2
 800637c:	1884983a 	sll	r2,r3,r2
 8006380:	11bf821e 	bne	r2,r6,800618c <__alt_data_end+0xfc00618c>
 8006384:	18c0004c 	andi	r3,r3,1
 8006388:	02800084 	movi	r10,2
 800638c:	50f9c83a 	sub	fp,r10,r3
 8006390:	003f7f06 	br	8006190 <__alt_data_end+0xfc006190>
 8006394:	01300434 	movhi	r4,49168
 8006398:	9109883a 	add	r4,r18,r4
 800639c:	2408b03a 	or	r4,r4,r16
 80063a0:	203f9826 	beq	r4,zero,8006204 <__alt_data_end+0xfc006204>
 80063a4:	008ffc34 	movhi	r2,16368
 80063a8:	10bfffc4 	addi	r2,r2,-1
 80063ac:	1482f50e 	bge	r2,r18,8006f84 <__ieee754_pow+0xe68>
 80063b0:	b83fc316 	blt	r23,zero,80062c0 <__alt_data_end+0xfc0062c0>
 80063b4:	0005883a 	mov	r2,zero
 80063b8:	b807883a 	mov	r3,r23
 80063bc:	003f9306 	br	800620c <__alt_data_end+0xfc00620c>
 80063c0:	07000084 	movi	fp,2
 80063c4:	003f7206 	br	8006190 <__alt_data_end+0xfc006190>
 80063c8:	8009883a 	mov	r4,r16
 80063cc:	980b883a 	mov	r5,r19
 80063d0:	200d883a 	mov	r6,r4
 80063d4:	280f883a 	mov	r7,r5
 80063d8:	800c25c0 	call	800c25c <__subdf3>
 80063dc:	1009883a 	mov	r4,r2
 80063e0:	180b883a 	mov	r5,r3
 80063e4:	100d883a 	mov	r6,r2
 80063e8:	180f883a 	mov	r7,r3
 80063ec:	800ae2c0 	call	800ae2c <__divdf3>
 80063f0:	003f8606 	br	800620c <__alt_data_end+0xfc00620c>
 80063f4:	00800434 	movhi	r2,16
 80063f8:	10bfffc4 	addi	r2,r2,-1
 80063fc:	1482e816 	blt	r2,r18,8006fa0 <__ieee754_pow+0xe84>
 8006400:	b009883a 	mov	r4,r22
 8006404:	180b883a 	mov	r5,r3
 8006408:	000d883a 	mov	r6,zero
 800640c:	01d0d034 	movhi	r7,17216
 8006410:	dac00915 	stw	r11,36(sp)
 8006414:	800b9f00 	call	800b9f0 <__muldf3>
 8006418:	dac00917 	ldw	r11,36(sp)
 800641c:	102d883a 	mov	r22,r2
 8006420:	1825883a 	mov	r18,r3
 8006424:	013ff2c4 	movi	r4,-53
 8006428:	9007d53a 	srai	r3,r18,20
 800642c:	00800434 	movhi	r2,16
 8006430:	10bfffc4 	addi	r2,r2,-1
 8006434:	18ff0044 	addi	r3,r3,-1023
 8006438:	1911883a 	add	r8,r3,r4
 800643c:	00c00134 	movhi	r3,4
 8006440:	9084703a 	and	r2,r18,r2
 8006444:	18e62384 	addi	r3,r3,-26482
 8006448:	14cffc34 	orhi	r19,r2,16368
 800644c:	1882d10e 	bge	r3,r2,8006f94 <__ieee754_pow+0xe78>
 8006450:	00c00334 	movhi	r3,12
 8006454:	18ed9e44 	addi	r3,r3,-18823
 8006458:	1883550e 	bge	r3,r2,80071b0 <__ieee754_pow+0x1094>
 800645c:	00bffc34 	movhi	r2,65520
 8006460:	42000044 	addi	r8,r8,1
 8006464:	98a7883a 	add	r19,r19,r2
 8006468:	0021883a 	mov	r16,zero
 800646c:	0019883a 	mov	r12,zero
 8006470:	601890fa 	slli	r12,r12,3
 8006474:	008200b4 	movhi	r2,2050
 8006478:	10803b04 	addi	r2,r2,236
 800647c:	1305883a 	add	r2,r2,r12
 8006480:	13400017 	ldw	r13,0(r2)
 8006484:	12800117 	ldw	r10,4(r2)
 8006488:	b009883a 	mov	r4,r22
 800648c:	980b883a 	mov	r5,r19
 8006490:	680d883a 	mov	r6,r13
 8006494:	500f883a 	mov	r7,r10
 8006498:	da000815 	stw	r8,32(sp)
 800649c:	dac00915 	stw	r11,36(sp)
 80064a0:	db000715 	stw	r12,28(sp)
 80064a4:	da800315 	stw	r10,12(sp)
 80064a8:	db400415 	stw	r13,16(sp)
 80064ac:	800c25c0 	call	800c25c <__subdf3>
 80064b0:	da800317 	ldw	r10,12(sp)
 80064b4:	db400417 	ldw	r13,16(sp)
 80064b8:	b009883a 	mov	r4,r22
 80064bc:	500f883a 	mov	r7,r10
 80064c0:	680d883a 	mov	r6,r13
 80064c4:	980b883a 	mov	r5,r19
 80064c8:	1829883a 	mov	r20,r3
 80064cc:	d8800015 	stw	r2,0(sp)
 80064d0:	800a5900 	call	800a590 <__adddf3>
 80064d4:	0009883a 	mov	r4,zero
 80064d8:	014ffc34 	movhi	r5,16368
 80064dc:	100d883a 	mov	r6,r2
 80064e0:	180f883a 	mov	r7,r3
 80064e4:	800ae2c0 	call	800ae2c <__divdf3>
 80064e8:	d9000017 	ldw	r4,0(sp)
 80064ec:	a00b883a 	mov	r5,r20
 80064f0:	100d883a 	mov	r6,r2
 80064f4:	180f883a 	mov	r7,r3
 80064f8:	d8c00615 	stw	r3,24(sp)
 80064fc:	d8800515 	stw	r2,20(sp)
 8006500:	800b9f00 	call	800b9f0 <__muldf3>
 8006504:	1025883a 	mov	r18,r2
 8006508:	9805d07a 	srai	r2,r19,1
 800650c:	1823883a 	mov	r17,r3
 8006510:	880b883a 	mov	r5,r17
 8006514:	10c80034 	orhi	r3,r2,8192
 8006518:	00800234 	movhi	r2,8
 800651c:	1885883a 	add	r2,r3,r2
 8006520:	1421883a 	add	r16,r2,r16
 8006524:	800f883a 	mov	r7,r16
 8006528:	0009883a 	mov	r4,zero
 800652c:	000d883a 	mov	r6,zero
 8006530:	800b9f00 	call	800b9f0 <__muldf3>
 8006534:	d9000017 	ldw	r4,0(sp)
 8006538:	a00b883a 	mov	r5,r20
 800653c:	100d883a 	mov	r6,r2
 8006540:	180f883a 	mov	r7,r3
 8006544:	800c25c0 	call	800c25c <__subdf3>
 8006548:	da800317 	ldw	r10,12(sp)
 800654c:	db400417 	ldw	r13,16(sp)
 8006550:	800b883a 	mov	r5,r16
 8006554:	500f883a 	mov	r7,r10
 8006558:	680d883a 	mov	r6,r13
 800655c:	0009883a 	mov	r4,zero
 8006560:	1829883a 	mov	r20,r3
 8006564:	d8800315 	stw	r2,12(sp)
 8006568:	800c25c0 	call	800c25c <__subdf3>
 800656c:	b009883a 	mov	r4,r22
 8006570:	980b883a 	mov	r5,r19
 8006574:	100d883a 	mov	r6,r2
 8006578:	180f883a 	mov	r7,r3
 800657c:	800c25c0 	call	800c25c <__subdf3>
 8006580:	880b883a 	mov	r5,r17
 8006584:	0009883a 	mov	r4,zero
 8006588:	100d883a 	mov	r6,r2
 800658c:	180f883a 	mov	r7,r3
 8006590:	800b9f00 	call	800b9f0 <__muldf3>
 8006594:	da400317 	ldw	r9,12(sp)
 8006598:	a00b883a 	mov	r5,r20
 800659c:	100d883a 	mov	r6,r2
 80065a0:	4809883a 	mov	r4,r9
 80065a4:	180f883a 	mov	r7,r3
 80065a8:	800c25c0 	call	800c25c <__subdf3>
 80065ac:	dbc00517 	ldw	r15,20(sp)
 80065b0:	db800617 	ldw	r14,24(sp)
 80065b4:	1009883a 	mov	r4,r2
 80065b8:	780d883a 	mov	r6,r15
 80065bc:	700f883a 	mov	r7,r14
 80065c0:	180b883a 	mov	r5,r3
 80065c4:	800b9f00 	call	800b9f0 <__muldf3>
 80065c8:	9009883a 	mov	r4,r18
 80065cc:	880b883a 	mov	r5,r17
 80065d0:	900d883a 	mov	r6,r18
 80065d4:	880f883a 	mov	r7,r17
 80065d8:	182d883a 	mov	r22,r3
 80065dc:	d8800015 	stw	r2,0(sp)
 80065e0:	800b9f00 	call	800b9f0 <__muldf3>
 80065e4:	1009883a 	mov	r4,r2
 80065e8:	180b883a 	mov	r5,r3
 80065ec:	100d883a 	mov	r6,r2
 80065f0:	180f883a 	mov	r7,r3
 80065f4:	1027883a 	mov	r19,r2
 80065f8:	1821883a 	mov	r16,r3
 80065fc:	800b9f00 	call	800b9f0 <__muldf3>
 8006600:	01929174 	movhi	r6,19013
 8006604:	01cff2b4 	movhi	r7,16330
 8006608:	9809883a 	mov	r4,r19
 800660c:	800b883a 	mov	r5,r16
 8006610:	3193bbc4 	addi	r6,r6,20207
 8006614:	39df8a04 	addi	r7,r7,32296
 8006618:	1829883a 	mov	r20,r3
 800661c:	d8800315 	stw	r2,12(sp)
 8006620:	800b9f00 	call	800b9f0 <__muldf3>
 8006624:	01a4f2b4 	movhi	r6,37834
 8006628:	01cff3b4 	movhi	r7,16334
 800662c:	1009883a 	mov	r4,r2
 8006630:	180b883a 	mov	r5,r3
 8006634:	31b6d944 	addi	r6,r6,-9371
 8006638:	39e19284 	addi	r7,r7,-31158
 800663c:	800a5900 	call	800a590 <__adddf3>
 8006640:	980d883a 	mov	r6,r19
 8006644:	800f883a 	mov	r7,r16
 8006648:	1009883a 	mov	r4,r2
 800664c:	180b883a 	mov	r5,r3
 8006650:	800b9f00 	call	800b9f0 <__muldf3>
 8006654:	01aa4774 	movhi	r6,43293
 8006658:	01cff474 	movhi	r7,16337
 800665c:	1009883a 	mov	r4,r2
 8006660:	180b883a 	mov	r5,r3
 8006664:	31904044 	addi	r6,r6,16641
 8006668:	39dd1804 	addi	r7,r7,29792
 800666c:	800a5900 	call	800a590 <__adddf3>
 8006670:	980d883a 	mov	r6,r19
 8006674:	800f883a 	mov	r7,r16
 8006678:	1009883a 	mov	r4,r2
 800667c:	180b883a 	mov	r5,r3
 8006680:	800b9f00 	call	800b9f0 <__muldf3>
 8006684:	019463f4 	movhi	r6,20879
 8006688:	01cff574 	movhi	r7,16341
 800668c:	1009883a 	mov	r4,r2
 8006690:	180b883a 	mov	r5,r3
 8006694:	31899344 	addi	r6,r6,9805
 8006698:	39d55544 	addi	r7,r7,21845
 800669c:	800a5900 	call	800a590 <__adddf3>
 80066a0:	980d883a 	mov	r6,r19
 80066a4:	800f883a 	mov	r7,r16
 80066a8:	1009883a 	mov	r4,r2
 80066ac:	180b883a 	mov	r5,r3
 80066b0:	800b9f00 	call	800b9f0 <__muldf3>
 80066b4:	01b6dc34 	movhi	r6,56176
 80066b8:	01cff6f4 	movhi	r7,16347
 80066bc:	1009883a 	mov	r4,r2
 80066c0:	180b883a 	mov	r5,r3
 80066c4:	31aaffc4 	addi	r6,r6,-21505
 80066c8:	39db6d84 	addi	r7,r7,28086
 80066cc:	800a5900 	call	800a590 <__adddf3>
 80066d0:	980d883a 	mov	r6,r19
 80066d4:	800f883a 	mov	r7,r16
 80066d8:	1009883a 	mov	r4,r2
 80066dc:	180b883a 	mov	r5,r3
 80066e0:	800b9f00 	call	800b9f0 <__muldf3>
 80066e4:	018cccf4 	movhi	r6,13107
 80066e8:	01cff8f4 	movhi	r7,16355
 80066ec:	1009883a 	mov	r4,r2
 80066f0:	180b883a 	mov	r5,r3
 80066f4:	318cc0c4 	addi	r6,r6,13059
 80066f8:	39ccccc4 	addi	r7,r7,13107
 80066fc:	800a5900 	call	800a590 <__adddf3>
 8006700:	da400317 	ldw	r9,12(sp)
 8006704:	a00b883a 	mov	r5,r20
 8006708:	100d883a 	mov	r6,r2
 800670c:	4809883a 	mov	r4,r9
 8006710:	180f883a 	mov	r7,r3
 8006714:	800b9f00 	call	800b9f0 <__muldf3>
 8006718:	880b883a 	mov	r5,r17
 800671c:	900d883a 	mov	r6,r18
 8006720:	880f883a 	mov	r7,r17
 8006724:	0009883a 	mov	r4,zero
 8006728:	1027883a 	mov	r19,r2
 800672c:	1821883a 	mov	r16,r3
 8006730:	800a5900 	call	800a590 <__adddf3>
 8006734:	d9800017 	ldw	r6,0(sp)
 8006738:	b00f883a 	mov	r7,r22
 800673c:	1009883a 	mov	r4,r2
 8006740:	180b883a 	mov	r5,r3
 8006744:	800b9f00 	call	800b9f0 <__muldf3>
 8006748:	980d883a 	mov	r6,r19
 800674c:	800f883a 	mov	r7,r16
 8006750:	1009883a 	mov	r4,r2
 8006754:	180b883a 	mov	r5,r3
 8006758:	800a5900 	call	800a590 <__adddf3>
 800675c:	880f883a 	mov	r7,r17
 8006760:	880b883a 	mov	r5,r17
 8006764:	000d883a 	mov	r6,zero
 8006768:	0009883a 	mov	r4,zero
 800676c:	1029883a 	mov	r20,r2
 8006770:	1827883a 	mov	r19,r3
 8006774:	800b9f00 	call	800b9f0 <__muldf3>
 8006778:	1009883a 	mov	r4,r2
 800677c:	180b883a 	mov	r5,r3
 8006780:	000d883a 	mov	r6,zero
 8006784:	01d00234 	movhi	r7,16392
 8006788:	d8c00615 	stw	r3,24(sp)
 800678c:	d8800515 	stw	r2,20(sp)
 8006790:	800a5900 	call	800a590 <__adddf3>
 8006794:	a00d883a 	mov	r6,r20
 8006798:	980f883a 	mov	r7,r19
 800679c:	1009883a 	mov	r4,r2
 80067a0:	180b883a 	mov	r5,r3
 80067a4:	800a5900 	call	800a590 <__adddf3>
 80067a8:	880b883a 	mov	r5,r17
 80067ac:	000d883a 	mov	r6,zero
 80067b0:	180f883a 	mov	r7,r3
 80067b4:	0009883a 	mov	r4,zero
 80067b8:	1821883a 	mov	r16,r3
 80067bc:	800b9f00 	call	800b9f0 <__muldf3>
 80067c0:	d9000017 	ldw	r4,0(sp)
 80067c4:	b00b883a 	mov	r5,r22
 80067c8:	800f883a 	mov	r7,r16
 80067cc:	000d883a 	mov	r6,zero
 80067d0:	d8800115 	stw	r2,4(sp)
 80067d4:	d8c00215 	stw	r3,8(sp)
 80067d8:	800b9f00 	call	800b9f0 <__muldf3>
 80067dc:	800b883a 	mov	r5,r16
 80067e0:	0009883a 	mov	r4,zero
 80067e4:	000d883a 	mov	r6,zero
 80067e8:	01d00234 	movhi	r7,16392
 80067ec:	182d883a 	mov	r22,r3
 80067f0:	d8800315 	stw	r2,12(sp)
 80067f4:	800c25c0 	call	800c25c <__subdf3>
 80067f8:	dbc00517 	ldw	r15,20(sp)
 80067fc:	db800617 	ldw	r14,24(sp)
 8006800:	1009883a 	mov	r4,r2
 8006804:	780d883a 	mov	r6,r15
 8006808:	700f883a 	mov	r7,r14
 800680c:	180b883a 	mov	r5,r3
 8006810:	800c25c0 	call	800c25c <__subdf3>
 8006814:	a009883a 	mov	r4,r20
 8006818:	980b883a 	mov	r5,r19
 800681c:	100d883a 	mov	r6,r2
 8006820:	180f883a 	mov	r7,r3
 8006824:	800c25c0 	call	800c25c <__subdf3>
 8006828:	900d883a 	mov	r6,r18
 800682c:	880f883a 	mov	r7,r17
 8006830:	1009883a 	mov	r4,r2
 8006834:	180b883a 	mov	r5,r3
 8006838:	800b9f00 	call	800b9f0 <__muldf3>
 800683c:	da400317 	ldw	r9,12(sp)
 8006840:	b00b883a 	mov	r5,r22
 8006844:	100d883a 	mov	r6,r2
 8006848:	4809883a 	mov	r4,r9
 800684c:	180f883a 	mov	r7,r3
 8006850:	800a5900 	call	800a590 <__adddf3>
 8006854:	d9000117 	ldw	r4,4(sp)
 8006858:	d9400217 	ldw	r5,8(sp)
 800685c:	100d883a 	mov	r6,r2
 8006860:	180f883a 	mov	r7,r3
 8006864:	102d883a 	mov	r22,r2
 8006868:	1825883a 	mov	r18,r3
 800686c:	800a5900 	call	800a590 <__adddf3>
 8006870:	01cffbf4 	movhi	r7,16367
 8006874:	39f1c244 	addi	r7,r7,-14583
 8006878:	0009883a 	mov	r4,zero
 800687c:	180b883a 	mov	r5,r3
 8006880:	01b80034 	movhi	r6,57344
 8006884:	1823883a 	mov	r17,r3
 8006888:	800b9f00 	call	800b9f0 <__muldf3>
 800688c:	018516f4 	movhi	r6,5211
 8006890:	01ef8fb4 	movhi	r7,48702
 8006894:	880b883a 	mov	r5,r17
 8006898:	31807d44 	addi	r6,r6,501
 800689c:	39cbf804 	addi	r7,r7,12256
 80068a0:	0009883a 	mov	r4,zero
 80068a4:	1029883a 	mov	r20,r2
 80068a8:	1827883a 	mov	r19,r3
 80068ac:	800b9f00 	call	800b9f0 <__muldf3>
 80068b0:	d9800117 	ldw	r6,4(sp)
 80068b4:	d9c00217 	ldw	r7,8(sp)
 80068b8:	880b883a 	mov	r5,r17
 80068bc:	0009883a 	mov	r4,zero
 80068c0:	1821883a 	mov	r16,r3
 80068c4:	d8800415 	stw	r2,16(sp)
 80068c8:	800c25c0 	call	800c25c <__subdf3>
 80068cc:	b009883a 	mov	r4,r22
 80068d0:	900b883a 	mov	r5,r18
 80068d4:	100d883a 	mov	r6,r2
 80068d8:	180f883a 	mov	r7,r3
 80068dc:	800c25c0 	call	800c25c <__subdf3>
 80068e0:	01b70eb4 	movhi	r6,56378
 80068e4:	01cffbf4 	movhi	r7,16367
 80068e8:	1009883a 	mov	r4,r2
 80068ec:	180b883a 	mov	r5,r3
 80068f0:	3180ff44 	addi	r6,r6,1021
 80068f4:	39f1c244 	addi	r7,r7,-14583
 80068f8:	800b9f00 	call	800b9f0 <__muldf3>
 80068fc:	db400417 	ldw	r13,16(sp)
 8006900:	800b883a 	mov	r5,r16
 8006904:	100d883a 	mov	r6,r2
 8006908:	6809883a 	mov	r4,r13
 800690c:	180f883a 	mov	r7,r3
 8006910:	800a5900 	call	800a590 <__adddf3>
 8006914:	db000717 	ldw	r12,28(sp)
 8006918:	1009883a 	mov	r4,r2
 800691c:	008200b4 	movhi	r2,2050
 8006920:	10803304 	addi	r2,r2,204
 8006924:	1305883a 	add	r2,r2,r12
 8006928:	11800017 	ldw	r6,0(r2)
 800692c:	11c00117 	ldw	r7,4(r2)
 8006930:	180b883a 	mov	r5,r3
 8006934:	800a5900 	call	800a590 <__adddf3>
 8006938:	da000817 	ldw	r8,32(sp)
 800693c:	1025883a 	mov	r18,r2
 8006940:	1823883a 	mov	r17,r3
 8006944:	4009883a 	mov	r4,r8
 8006948:	800cbb40 	call	800cbb4 <__floatsidf>
 800694c:	db000717 	ldw	r12,28(sp)
 8006950:	d8800115 	stw	r2,4(sp)
 8006954:	008200b4 	movhi	r2,2050
 8006958:	10803704 	addi	r2,r2,220
 800695c:	1319883a 	add	r12,r2,r12
 8006960:	65800017 	ldw	r22,0(r12)
 8006964:	63000117 	ldw	r12,4(r12)
 8006968:	a009883a 	mov	r4,r20
 800696c:	980b883a 	mov	r5,r19
 8006970:	900d883a 	mov	r6,r18
 8006974:	880f883a 	mov	r7,r17
 8006978:	db000015 	stw	r12,0(sp)
 800697c:	d8c00215 	stw	r3,8(sp)
 8006980:	800a5900 	call	800a590 <__adddf3>
 8006984:	d9c00017 	ldw	r7,0(sp)
 8006988:	1009883a 	mov	r4,r2
 800698c:	180b883a 	mov	r5,r3
 8006990:	b00d883a 	mov	r6,r22
 8006994:	800a5900 	call	800a590 <__adddf3>
 8006998:	d9800117 	ldw	r6,4(sp)
 800699c:	d9c00217 	ldw	r7,8(sp)
 80069a0:	1009883a 	mov	r4,r2
 80069a4:	180b883a 	mov	r5,r3
 80069a8:	800a5900 	call	800a590 <__adddf3>
 80069ac:	d9800117 	ldw	r6,4(sp)
 80069b0:	d9c00217 	ldw	r7,8(sp)
 80069b4:	0009883a 	mov	r4,zero
 80069b8:	180b883a 	mov	r5,r3
 80069bc:	1821883a 	mov	r16,r3
 80069c0:	800c25c0 	call	800c25c <__subdf3>
 80069c4:	d9c00017 	ldw	r7,0(sp)
 80069c8:	1009883a 	mov	r4,r2
 80069cc:	180b883a 	mov	r5,r3
 80069d0:	b00d883a 	mov	r6,r22
 80069d4:	800c25c0 	call	800c25c <__subdf3>
 80069d8:	1009883a 	mov	r4,r2
 80069dc:	180b883a 	mov	r5,r3
 80069e0:	a00d883a 	mov	r6,r20
 80069e4:	980f883a 	mov	r7,r19
 80069e8:	800c25c0 	call	800c25c <__subdf3>
 80069ec:	9009883a 	mov	r4,r18
 80069f0:	880b883a 	mov	r5,r17
 80069f4:	100d883a 	mov	r6,r2
 80069f8:	180f883a 	mov	r7,r3
 80069fc:	800c25c0 	call	800c25c <__subdf3>
 8006a00:	dac00917 	ldw	r11,36(sp)
 8006a04:	e2bfffc4 	addi	r10,fp,-1
 8006a08:	1027883a 	mov	r19,r2
 8006a0c:	52d6b03a 	or	r11,r10,r11
 8006a10:	1823883a 	mov	r17,r3
 8006a14:	5801591e 	bne	r11,zero,8006f7c <__ieee754_pow+0xe60>
 8006a18:	04affc34 	movhi	r18,49136
 8006a1c:	b80f883a 	mov	r7,r23
 8006a20:	a809883a 	mov	r4,r21
 8006a24:	b80b883a 	mov	r5,r23
 8006a28:	000d883a 	mov	r6,zero
 8006a2c:	800c25c0 	call	800c25c <__subdf3>
 8006a30:	1009883a 	mov	r4,r2
 8006a34:	180b883a 	mov	r5,r3
 8006a38:	000d883a 	mov	r6,zero
 8006a3c:	800f883a 	mov	r7,r16
 8006a40:	800b9f00 	call	800b9f0 <__muldf3>
 8006a44:	a809883a 	mov	r4,r21
 8006a48:	b80b883a 	mov	r5,r23
 8006a4c:	980d883a 	mov	r6,r19
 8006a50:	880f883a 	mov	r7,r17
 8006a54:	102d883a 	mov	r22,r2
 8006a58:	1829883a 	mov	r20,r3
 8006a5c:	800b9f00 	call	800b9f0 <__muldf3>
 8006a60:	b009883a 	mov	r4,r22
 8006a64:	a00b883a 	mov	r5,r20
 8006a68:	100d883a 	mov	r6,r2
 8006a6c:	180f883a 	mov	r7,r3
 8006a70:	800a5900 	call	800a590 <__adddf3>
 8006a74:	b80b883a 	mov	r5,r23
 8006a78:	0009883a 	mov	r4,zero
 8006a7c:	000d883a 	mov	r6,zero
 8006a80:	800f883a 	mov	r7,r16
 8006a84:	1027883a 	mov	r19,r2
 8006a88:	1823883a 	mov	r17,r3
 8006a8c:	800b9f00 	call	800b9f0 <__muldf3>
 8006a90:	9809883a 	mov	r4,r19
 8006a94:	880b883a 	mov	r5,r17
 8006a98:	100d883a 	mov	r6,r2
 8006a9c:	180f883a 	mov	r7,r3
 8006aa0:	102d883a 	mov	r22,r2
 8006aa4:	182b883a 	mov	r21,r3
 8006aa8:	800a5900 	call	800a590 <__adddf3>
 8006aac:	102f883a 	mov	r23,r2
 8006ab0:	00902434 	movhi	r2,16528
 8006ab4:	10bfffc4 	addi	r2,r2,-1
 8006ab8:	1829883a 	mov	r20,r3
 8006abc:	b013883a 	mov	r9,r22
 8006ac0:	a811883a 	mov	r8,r21
 8006ac4:	10c1080e 	bge	r2,r3,8006ee8 <__ieee754_pow+0xdcc>
 8006ac8:	00efdc34 	movhi	r3,49008
 8006acc:	a0c7883a 	add	r3,r20,r3
 8006ad0:	1dc6b03a 	or	r3,r3,r23
 8006ad4:	1801961e 	bne	r3,zero,8007130 <__ieee754_pow+0x1014>
 8006ad8:	01994b34 	movhi	r6,25900
 8006adc:	01cf25f4 	movhi	r7,15511
 8006ae0:	31a0bf84 	addi	r6,r6,-32002
 8006ae4:	39c551c4 	addi	r7,r7,5447
 8006ae8:	9809883a 	mov	r4,r19
 8006aec:	880b883a 	mov	r5,r17
 8006af0:	800a5900 	call	800a590 <__adddf3>
 8006af4:	b809883a 	mov	r4,r23
 8006af8:	a00b883a 	mov	r5,r20
 8006afc:	b00d883a 	mov	r6,r22
 8006b00:	a80f883a 	mov	r7,r21
 8006b04:	1039883a 	mov	fp,r2
 8006b08:	1821883a 	mov	r16,r3
 8006b0c:	800c25c0 	call	800c25c <__subdf3>
 8006b10:	e009883a 	mov	r4,fp
 8006b14:	800b883a 	mov	r5,r16
 8006b18:	100d883a 	mov	r6,r2
 8006b1c:	180f883a 	mov	r7,r3
 8006b20:	800b8300 	call	800b830 <__gedf2>
 8006b24:	00818216 	blt	zero,r2,8007130 <__ieee754_pow+0x1014>
 8006b28:	a021883a 	mov	r16,r20
 8006b2c:	8011d53a 	srai	r8,r16,20
 8006b30:	00800434 	movhi	r2,16
 8006b34:	a02ed7fa 	srli	r23,r20,31
 8006b38:	423f0084 	addi	r8,r8,-1022
 8006b3c:	1211d83a 	sra	r8,r2,r8
 8006b40:	00c00434 	movhi	r3,16
 8006b44:	18ffffc4 	addi	r3,r3,-1
 8006b48:	4529883a 	add	r20,r8,r20
 8006b4c:	a00a907a 	slli	r5,r20,1
 8006b50:	a0c4703a 	and	r2,r20,r3
 8006b54:	10800434 	orhi	r2,r2,16
 8006b58:	280ad57a 	srli	r5,r5,21
 8006b5c:	05cdc83a 	sub	r6,zero,r23
 8006b60:	b009883a 	mov	r4,r22
 8006b64:	29ff0044 	addi	r7,r5,-1023
 8006b68:	19c7d83a 	sra	r3,r3,r7
 8006b6c:	01c104c4 	movi	r7,1043
 8006b70:	394bc83a 	sub	r5,r7,r5
 8006b74:	1145d83a 	sra	r2,r2,r5
 8006b78:	00ce303a 	nor	r7,zero,r3
 8006b7c:	3d0e703a 	and	r7,r7,r20
 8006b80:	1184f03a 	xor	r2,r2,r6
 8006b84:	a80b883a 	mov	r5,r21
 8006b88:	000d883a 	mov	r6,zero
 8006b8c:	15ef883a 	add	r23,r2,r23
 8006b90:	ddc00115 	stw	r23,4(sp)
 8006b94:	800c25c0 	call	800c25c <__subdf3>
 8006b98:	9809883a 	mov	r4,r19
 8006b9c:	880b883a 	mov	r5,r17
 8006ba0:	100d883a 	mov	r6,r2
 8006ba4:	180f883a 	mov	r7,r3
 8006ba8:	d8c00815 	stw	r3,32(sp)
 8006bac:	d8800315 	stw	r2,12(sp)
 8006bb0:	800a5900 	call	800a590 <__adddf3>
 8006bb4:	d8800117 	ldw	r2,4(sp)
 8006bb8:	da000817 	ldw	r8,32(sp)
 8006bbc:	da400317 	ldw	r9,12(sp)
 8006bc0:	1004953a 	slli	r2,r2,20
 8006bc4:	1829883a 	mov	r20,r3
 8006bc8:	d8800015 	stw	r2,0(sp)
 8006bcc:	01cff9b4 	movhi	r7,16358
 8006bd0:	a00b883a 	mov	r5,r20
 8006bd4:	39cb90c4 	addi	r7,r7,11843
 8006bd8:	0009883a 	mov	r4,zero
 8006bdc:	000d883a 	mov	r6,zero
 8006be0:	da000815 	stw	r8,32(sp)
 8006be4:	da400315 	stw	r9,12(sp)
 8006be8:	800b9f00 	call	800b9f0 <__muldf3>
 8006bec:	da400317 	ldw	r9,12(sp)
 8006bf0:	da000817 	ldw	r8,32(sp)
 8006bf4:	a00b883a 	mov	r5,r20
 8006bf8:	480d883a 	mov	r6,r9
 8006bfc:	400f883a 	mov	r7,r8
 8006c00:	0009883a 	mov	r4,zero
 8006c04:	1039883a 	mov	fp,r2
 8006c08:	182d883a 	mov	r22,r3
 8006c0c:	800c25c0 	call	800c25c <__subdf3>
 8006c10:	9809883a 	mov	r4,r19
 8006c14:	880b883a 	mov	r5,r17
 8006c18:	100d883a 	mov	r6,r2
 8006c1c:	180f883a 	mov	r7,r3
 8006c20:	800c25c0 	call	800c25c <__subdf3>
 8006c24:	01bfbeb4 	movhi	r6,65274
 8006c28:	01cff9b4 	movhi	r7,16358
 8006c2c:	1009883a 	mov	r4,r2
 8006c30:	180b883a 	mov	r5,r3
 8006c34:	318e7bc4 	addi	r6,r6,14831
 8006c38:	39cb9084 	addi	r7,r7,11842
 8006c3c:	800b9f00 	call	800b9f0 <__muldf3>
 8006c40:	01832a34 	movhi	r6,3240
 8006c44:	01ef8834 	movhi	r7,48672
 8006c48:	a00b883a 	mov	r5,r20
 8006c4c:	319b0e44 	addi	r6,r6,27705
 8006c50:	39d71844 	addi	r7,r7,23649
 8006c54:	0009883a 	mov	r4,zero
 8006c58:	1023883a 	mov	r17,r2
 8006c5c:	1821883a 	mov	r16,r3
 8006c60:	800b9f00 	call	800b9f0 <__muldf3>
 8006c64:	8809883a 	mov	r4,r17
 8006c68:	800b883a 	mov	r5,r16
 8006c6c:	100d883a 	mov	r6,r2
 8006c70:	180f883a 	mov	r7,r3
 8006c74:	800a5900 	call	800a590 <__adddf3>
 8006c78:	e009883a 	mov	r4,fp
 8006c7c:	b00b883a 	mov	r5,r22
 8006c80:	100d883a 	mov	r6,r2
 8006c84:	180f883a 	mov	r7,r3
 8006c88:	1029883a 	mov	r20,r2
 8006c8c:	1827883a 	mov	r19,r3
 8006c90:	800a5900 	call	800a590 <__adddf3>
 8006c94:	e00d883a 	mov	r6,fp
 8006c98:	b00f883a 	mov	r7,r22
 8006c9c:	1009883a 	mov	r4,r2
 8006ca0:	180b883a 	mov	r5,r3
 8006ca4:	1023883a 	mov	r17,r2
 8006ca8:	1821883a 	mov	r16,r3
 8006cac:	800c25c0 	call	800c25c <__subdf3>
 8006cb0:	a009883a 	mov	r4,r20
 8006cb4:	980b883a 	mov	r5,r19
 8006cb8:	100d883a 	mov	r6,r2
 8006cbc:	180f883a 	mov	r7,r3
 8006cc0:	800c25c0 	call	800c25c <__subdf3>
 8006cc4:	8809883a 	mov	r4,r17
 8006cc8:	800b883a 	mov	r5,r16
 8006ccc:	880d883a 	mov	r6,r17
 8006cd0:	800f883a 	mov	r7,r16
 8006cd4:	1039883a 	mov	fp,r2
 8006cd8:	182d883a 	mov	r22,r3
 8006cdc:	800b9f00 	call	800b9f0 <__muldf3>
 8006ce0:	019caff4 	movhi	r6,29375
 8006ce4:	01cf99b4 	movhi	r7,15974
 8006ce8:	1009883a 	mov	r4,r2
 8006cec:	180b883a 	mov	r5,r3
 8006cf0:	31a93404 	addi	r6,r6,-23344
 8006cf4:	39cdda44 	addi	r7,r7,14185
 8006cf8:	1029883a 	mov	r20,r2
 8006cfc:	1827883a 	mov	r19,r3
 8006d00:	800b9f00 	call	800b9f0 <__muldf3>
 8006d04:	01b174b4 	movhi	r6,50642
 8006d08:	01cfaf34 	movhi	r7,16060
 8006d0c:	1009883a 	mov	r4,r2
 8006d10:	180b883a 	mov	r5,r3
 8006d14:	319afc44 	addi	r6,r6,27633
 8006d18:	39ef5044 	addi	r7,r7,-17087
 8006d1c:	800c25c0 	call	800c25c <__subdf3>
 8006d20:	a00d883a 	mov	r6,r20
 8006d24:	980f883a 	mov	r7,r19
 8006d28:	1009883a 	mov	r4,r2
 8006d2c:	180b883a 	mov	r5,r3
 8006d30:	800b9f00 	call	800b9f0 <__muldf3>
 8006d34:	01abc9b4 	movhi	r6,44838
 8006d38:	01cfc474 	movhi	r7,16145
 8006d3c:	1009883a 	mov	r4,r2
 8006d40:	180b883a 	mov	r5,r3
 8006d44:	31b78b04 	addi	r6,r6,-8660
 8006d48:	39d59a84 	addi	r7,r7,22122
 8006d4c:	800a5900 	call	800a590 <__adddf3>
 8006d50:	a00d883a 	mov	r6,r20
 8006d54:	980f883a 	mov	r7,r19
 8006d58:	1009883a 	mov	r4,r2
 8006d5c:	180b883a 	mov	r5,r3
 8006d60:	800b9f00 	call	800b9f0 <__muldf3>
 8006d64:	0185aff4 	movhi	r6,5823
 8006d68:	01cfd9f4 	movhi	r7,16231
 8006d6c:	1009883a 	mov	r4,r2
 8006d70:	180b883a 	mov	r5,r3
 8006d74:	31af64c4 	addi	r6,r6,-17005
 8006d78:	39f05b04 	addi	r7,r7,-16020
 8006d7c:	800c25c0 	call	800c25c <__subdf3>
 8006d80:	a00d883a 	mov	r6,r20
 8006d84:	980f883a 	mov	r7,r19
 8006d88:	1009883a 	mov	r4,r2
 8006d8c:	180b883a 	mov	r5,r3
 8006d90:	800b9f00 	call	800b9f0 <__muldf3>
 8006d94:	01955574 	movhi	r6,21845
 8006d98:	01cff174 	movhi	r7,16325
 8006d9c:	1009883a 	mov	r4,r2
 8006da0:	180b883a 	mov	r5,r3
 8006da4:	31954f84 	addi	r6,r6,21822
 8006da8:	39d55544 	addi	r7,r7,21845
 8006dac:	800a5900 	call	800a590 <__adddf3>
 8006db0:	a00d883a 	mov	r6,r20
 8006db4:	980f883a 	mov	r7,r19
 8006db8:	1009883a 	mov	r4,r2
 8006dbc:	180b883a 	mov	r5,r3
 8006dc0:	800b9f00 	call	800b9f0 <__muldf3>
 8006dc4:	8809883a 	mov	r4,r17
 8006dc8:	800b883a 	mov	r5,r16
 8006dcc:	100d883a 	mov	r6,r2
 8006dd0:	180f883a 	mov	r7,r3
 8006dd4:	800c25c0 	call	800c25c <__subdf3>
 8006dd8:	8809883a 	mov	r4,r17
 8006ddc:	800b883a 	mov	r5,r16
 8006de0:	100d883a 	mov	r6,r2
 8006de4:	180f883a 	mov	r7,r3
 8006de8:	1029883a 	mov	r20,r2
 8006dec:	1827883a 	mov	r19,r3
 8006df0:	800b9f00 	call	800b9f0 <__muldf3>
 8006df4:	a009883a 	mov	r4,r20
 8006df8:	980b883a 	mov	r5,r19
 8006dfc:	000d883a 	mov	r6,zero
 8006e00:	01d00034 	movhi	r7,16384
 8006e04:	102b883a 	mov	r21,r2
 8006e08:	182f883a 	mov	r23,r3
 8006e0c:	800c25c0 	call	800c25c <__subdf3>
 8006e10:	a809883a 	mov	r4,r21
 8006e14:	b80b883a 	mov	r5,r23
 8006e18:	100d883a 	mov	r6,r2
 8006e1c:	180f883a 	mov	r7,r3
 8006e20:	800ae2c0 	call	800ae2c <__divdf3>
 8006e24:	8809883a 	mov	r4,r17
 8006e28:	800b883a 	mov	r5,r16
 8006e2c:	e00d883a 	mov	r6,fp
 8006e30:	b00f883a 	mov	r7,r22
 8006e34:	1029883a 	mov	r20,r2
 8006e38:	1827883a 	mov	r19,r3
 8006e3c:	800b9f00 	call	800b9f0 <__muldf3>
 8006e40:	1009883a 	mov	r4,r2
 8006e44:	180b883a 	mov	r5,r3
 8006e48:	e00d883a 	mov	r6,fp
 8006e4c:	b00f883a 	mov	r7,r22
 8006e50:	800a5900 	call	800a590 <__adddf3>
 8006e54:	a009883a 	mov	r4,r20
 8006e58:	980b883a 	mov	r5,r19
 8006e5c:	100d883a 	mov	r6,r2
 8006e60:	180f883a 	mov	r7,r3
 8006e64:	800c25c0 	call	800c25c <__subdf3>
 8006e68:	1009883a 	mov	r4,r2
 8006e6c:	180b883a 	mov	r5,r3
 8006e70:	880d883a 	mov	r6,r17
 8006e74:	800f883a 	mov	r7,r16
 8006e78:	800c25c0 	call	800c25c <__subdf3>
 8006e7c:	0009883a 	mov	r4,zero
 8006e80:	180f883a 	mov	r7,r3
 8006e84:	014ffc34 	movhi	r5,16368
 8006e88:	100d883a 	mov	r6,r2
 8006e8c:	800c25c0 	call	800c25c <__subdf3>
 8006e90:	d9000017 	ldw	r4,0(sp)
 8006e94:	190f883a 	add	r7,r3,r4
 8006e98:	3809d53a 	srai	r4,r7,20
 8006e9c:	0100c70e 	bge	zero,r4,80071bc <__ieee754_pow+0x10a0>
 8006ea0:	100d883a 	mov	r6,r2
 8006ea4:	0009883a 	mov	r4,zero
 8006ea8:	900b883a 	mov	r5,r18
 8006eac:	800b9f00 	call	800b9f0 <__muldf3>
 8006eb0:	003cd606 	br	800620c <__alt_data_end+0xfc00620c>
 8006eb4:	00b00434 	movhi	r2,49168
 8006eb8:	9085883a 	add	r2,r18,r2
 8006ebc:	e084b03a 	or	r2,fp,r2
 8006ec0:	1000aa1e 	bne	r2,zero,800716c <__ieee754_pow+0x1050>
 8006ec4:	b009883a 	mov	r4,r22
 8006ec8:	180b883a 	mov	r5,r3
 8006ecc:	003d4006 	br	80063d0 <__alt_data_end+0xfc0063d0>
 8006ed0:	8009883a 	mov	r4,r16
 8006ed4:	980b883a 	mov	r5,r19
 8006ed8:	800d883a 	mov	r6,r16
 8006edc:	980f883a 	mov	r7,r19
 8006ee0:	800b9f00 	call	800b9f0 <__muldf3>
 8006ee4:	003cc906 	br	800620c <__alt_data_end+0xfc00620c>
 8006ee8:	04200034 	movhi	r16,32768
 8006eec:	843fffc4 	addi	r16,r16,-1
 8006ef0:	00902474 	movhi	r2,16529
 8006ef4:	1c20703a 	and	r16,r3,r16
 8006ef8:	10b2ffc4 	addi	r2,r2,-13313
 8006efc:	1400a70e 	bge	r2,r16,800719c <__ieee754_pow+0x1080>
 8006f00:	008fdbf4 	movhi	r2,16239
 8006f04:	108d0004 	addi	r2,r2,13312
 8006f08:	1885883a 	add	r2,r3,r2
 8006f0c:	15c4b03a 	or	r2,r2,r23
 8006f10:	10000b1e 	bne	r2,zero,8006f40 <__ieee754_pow+0xe24>
 8006f14:	b809883a 	mov	r4,r23
 8006f18:	180b883a 	mov	r5,r3
 8006f1c:	b00d883a 	mov	r6,r22
 8006f20:	a80f883a 	mov	r7,r21
 8006f24:	800c25c0 	call	800c25c <__subdf3>
 8006f28:	9809883a 	mov	r4,r19
 8006f2c:	880b883a 	mov	r5,r17
 8006f30:	100d883a 	mov	r6,r2
 8006f34:	180f883a 	mov	r7,r3
 8006f38:	800b9100 	call	800b910 <__ledf2>
 8006f3c:	00befb16 	blt	zero,r2,8006b2c <__alt_data_end+0xfc006b2c>
 8006f40:	01b0be74 	movhi	r6,49913
 8006f44:	01c06974 	movhi	r7,421
 8006f48:	900b883a 	mov	r5,r18
 8006f4c:	31bcd644 	addi	r6,r6,-3239
 8006f50:	39db87c4 	addi	r7,r7,28191
 8006f54:	0009883a 	mov	r4,zero
 8006f58:	800b9f00 	call	800b9f0 <__muldf3>
 8006f5c:	01b0be74 	movhi	r6,49913
 8006f60:	01c06974 	movhi	r7,421
 8006f64:	1009883a 	mov	r4,r2
 8006f68:	180b883a 	mov	r5,r3
 8006f6c:	31bcd644 	addi	r6,r6,-3239
 8006f70:	39db87c4 	addi	r7,r7,28191
 8006f74:	800b9f00 	call	800b9f0 <__muldf3>
 8006f78:	003ca406 	br	800620c <__alt_data_end+0xfc00620c>
 8006f7c:	048ffc34 	movhi	r18,16368
 8006f80:	003ea606 	br	8006a1c <__alt_data_end+0xfc006a1c>
 8006f84:	b83cce0e 	bge	r23,zero,80062c0 <__alt_data_end+0xfc0062c0>
 8006f88:	0005883a 	mov	r2,zero
 8006f8c:	b8e0003c 	xorhi	r3,r23,32768
 8006f90:	003c9e06 	br	800620c <__alt_data_end+0xfc00620c>
 8006f94:	0021883a 	mov	r16,zero
 8006f98:	0019883a 	mov	r12,zero
 8006f9c:	003d3406 	br	8006470 <__alt_data_end+0xfc006470>
 8006fa0:	0009883a 	mov	r4,zero
 8006fa4:	003d2006 	br	8006428 <__alt_data_end+0xfc006428>
 8006fa8:	008ffc34 	movhi	r2,16368
 8006fac:	10bfff84 	addi	r2,r2,-2
 8006fb0:	14bcc20e 	bge	r2,r18,80062bc <__alt_data_end+0xfc0062bc>
 8006fb4:	01cffc34 	movhi	r7,16368
 8006fb8:	3cbcd916 	blt	r7,r18,8006320 <__alt_data_end+0xfc006320>
 8006fbc:	b009883a 	mov	r4,r22
 8006fc0:	000d883a 	mov	r6,zero
 8006fc4:	180b883a 	mov	r5,r3
 8006fc8:	dac00915 	stw	r11,36(sp)
 8006fcc:	800c25c0 	call	800c25c <__subdf3>
 8006fd0:	01cffdf4 	movhi	r7,16375
 8006fd4:	1009883a 	mov	r4,r2
 8006fd8:	180b883a 	mov	r5,r3
 8006fdc:	39c551c4 	addi	r7,r7,5447
 8006fe0:	01980034 	movhi	r6,24576
 8006fe4:	1023883a 	mov	r17,r2
 8006fe8:	1821883a 	mov	r16,r3
 8006fec:	800b9f00 	call	800b9f0 <__muldf3>
 8006ff0:	01be17b4 	movhi	r6,63582
 8006ff4:	01cf9574 	movhi	r7,15957
 8006ff8:	8809883a 	mov	r4,r17
 8006ffc:	800b883a 	mov	r5,r16
 8007000:	31b7d104 	addi	r6,r6,-8380
 8007004:	39eb82c4 	addi	r7,r7,-20981
 8007008:	1027883a 	mov	r19,r2
 800700c:	1825883a 	mov	r18,r3
 8007010:	800b9f00 	call	800b9f0 <__muldf3>
 8007014:	8809883a 	mov	r4,r17
 8007018:	800b883a 	mov	r5,r16
 800701c:	880d883a 	mov	r6,r17
 8007020:	800f883a 	mov	r7,r16
 8007024:	1829883a 	mov	r20,r3
 8007028:	d8800815 	stw	r2,32(sp)
 800702c:	800b9f00 	call	800b9f0 <__muldf3>
 8007030:	8809883a 	mov	r4,r17
 8007034:	800b883a 	mov	r5,r16
 8007038:	000d883a 	mov	r6,zero
 800703c:	01cff434 	movhi	r7,16336
 8007040:	182d883a 	mov	r22,r3
 8007044:	d8800315 	stw	r2,12(sp)
 8007048:	800b9f00 	call	800b9f0 <__muldf3>
 800704c:	01155574 	movhi	r4,21845
 8007050:	014ff574 	movhi	r5,16341
 8007054:	21155544 	addi	r4,r4,21845
 8007058:	29555544 	addi	r5,r5,21845
 800705c:	100d883a 	mov	r6,r2
 8007060:	180f883a 	mov	r7,r3
 8007064:	800c25c0 	call	800c25c <__subdf3>
 8007068:	880d883a 	mov	r6,r17
 800706c:	800f883a 	mov	r7,r16
 8007070:	1009883a 	mov	r4,r2
 8007074:	180b883a 	mov	r5,r3
 8007078:	800b9f00 	call	800b9f0 <__muldf3>
 800707c:	0009883a 	mov	r4,zero
 8007080:	014ff834 	movhi	r5,16352
 8007084:	100d883a 	mov	r6,r2
 8007088:	180f883a 	mov	r7,r3
 800708c:	800c25c0 	call	800c25c <__subdf3>
 8007090:	da400317 	ldw	r9,12(sp)
 8007094:	b00b883a 	mov	r5,r22
 8007098:	100d883a 	mov	r6,r2
 800709c:	4809883a 	mov	r4,r9
 80070a0:	180f883a 	mov	r7,r3
 80070a4:	800b9f00 	call	800b9f0 <__muldf3>
 80070a8:	01994b34 	movhi	r6,25900
 80070ac:	01cffdf4 	movhi	r7,16375
 80070b0:	1009883a 	mov	r4,r2
 80070b4:	180b883a 	mov	r5,r3
 80070b8:	31a0bf84 	addi	r6,r6,-32002
 80070bc:	39c551c4 	addi	r7,r7,5447
 80070c0:	800b9f00 	call	800b9f0 <__muldf3>
 80070c4:	da000817 	ldw	r8,32(sp)
 80070c8:	a00b883a 	mov	r5,r20
 80070cc:	100d883a 	mov	r6,r2
 80070d0:	4009883a 	mov	r4,r8
 80070d4:	180f883a 	mov	r7,r3
 80070d8:	800c25c0 	call	800c25c <__subdf3>
 80070dc:	9809883a 	mov	r4,r19
 80070e0:	900b883a 	mov	r5,r18
 80070e4:	100d883a 	mov	r6,r2
 80070e8:	180f883a 	mov	r7,r3
 80070ec:	1029883a 	mov	r20,r2
 80070f0:	1823883a 	mov	r17,r3
 80070f4:	800a5900 	call	800a590 <__adddf3>
 80070f8:	0009883a 	mov	r4,zero
 80070fc:	180b883a 	mov	r5,r3
 8007100:	980d883a 	mov	r6,r19
 8007104:	900f883a 	mov	r7,r18
 8007108:	1821883a 	mov	r16,r3
 800710c:	800c25c0 	call	800c25c <__subdf3>
 8007110:	a009883a 	mov	r4,r20
 8007114:	003e3606 	br	80069f0 <__alt_data_end+0xfc0069f0>
 8007118:	0009883a 	mov	r4,zero
 800711c:	880b883a 	mov	r5,r17
 8007120:	800d883a 	mov	r6,r16
 8007124:	980f883a 	mov	r7,r19
 8007128:	800ae2c0 	call	800ae2c <__divdf3>
 800712c:	003c3706 	br	800620c <__alt_data_end+0xfc00620c>
 8007130:	01a20034 	movhi	r6,34816
 8007134:	01df8e34 	movhi	r7,32312
 8007138:	900b883a 	mov	r5,r18
 800713c:	319d6704 	addi	r6,r6,30108
 8007140:	39f90f04 	addi	r7,r7,-7108
 8007144:	0009883a 	mov	r4,zero
 8007148:	800b9f00 	call	800b9f0 <__muldf3>
 800714c:	01a20034 	movhi	r6,34816
 8007150:	01df8e34 	movhi	r7,32312
 8007154:	1009883a 	mov	r4,r2
 8007158:	180b883a 	mov	r5,r3
 800715c:	319d6704 	addi	r6,r6,30108
 8007160:	39f90f04 	addi	r7,r7,-7108
 8007164:	800b9f00 	call	800b9f0 <__muldf3>
 8007168:	003c2806 	br	800620c <__alt_data_end+0xfc00620c>
 800716c:	00800044 	movi	r2,1
 8007170:	e0bc5e1e 	bne	fp,r2,80062ec <__alt_data_end+0xfc0062ec>
 8007174:	18e0003c 	xorhi	r3,r3,32768
 8007178:	b005883a 	mov	r2,r22
 800717c:	003c2306 	br	800620c <__alt_data_end+0xfc00620c>
 8007180:	303c3d1e 	bne	r6,zero,8006278 <__alt_data_end+0xfc006278>
 8007184:	1907c83a 	sub	r3,r3,r4
 8007188:	88c5d83a 	sra	r2,r17,r3
 800718c:	10c6983a 	sll	r3,r2,r3
 8007190:	1c401126 	beq	r3,r17,80071d8 <__ieee754_pow+0x10bc>
 8007194:	0039883a 	mov	fp,zero
 8007198:	003c0006 	br	800619c <__alt_data_end+0xfc00619c>
 800719c:	008ff834 	movhi	r2,16352
 80071a0:	143e6216 	blt	r2,r16,8006b2c <__alt_data_end+0xfc006b2c>
 80071a4:	d8000015 	stw	zero,0(sp)
 80071a8:	d8000115 	stw	zero,4(sp)
 80071ac:	003e8706 	br	8006bcc <__alt_data_end+0xfc006bcc>
 80071b0:	04000134 	movhi	r16,4
 80071b4:	03000044 	movi	r12,1
 80071b8:	003cad06 	br	8006470 <__alt_data_end+0xfc006470>
 80071bc:	d9800117 	ldw	r6,4(sp)
 80071c0:	1009883a 	mov	r4,r2
 80071c4:	180b883a 	mov	r5,r3
 80071c8:	80095440 	call	8009544 <scalbn>
 80071cc:	100d883a 	mov	r6,r2
 80071d0:	180f883a 	mov	r7,r3
 80071d4:	003f3306 	br	8006ea4 <__alt_data_end+0xfc006ea4>
 80071d8:	1080004c 	andi	r2,r2,1
 80071dc:	02800084 	movi	r10,2
 80071e0:	50b9c83a 	sub	fp,r10,r2
 80071e4:	003bed06 	br	800619c <__alt_data_end+0xfc00619c>

080071e8 <__ieee754_rem_pio2>:
 80071e8:	02200034 	movhi	r8,32768
 80071ec:	deffea04 	addi	sp,sp,-88
 80071f0:	423fffc4 	addi	r8,r8,-1
 80071f4:	00cffa74 	movhi	r3,16361
 80071f8:	ddc01315 	stw	r23,76(sp)
 80071fc:	dc400d15 	stw	r17,52(sp)
 8007200:	dfc01515 	stw	ra,84(sp)
 8007204:	df001415 	stw	fp,80(sp)
 8007208:	dd801215 	stw	r22,72(sp)
 800720c:	dd401115 	stw	r21,68(sp)
 8007210:	dd001015 	stw	r20,64(sp)
 8007214:	dcc00f15 	stw	r19,60(sp)
 8007218:	dc800e15 	stw	r18,56(sp)
 800721c:	dc000c15 	stw	r16,48(sp)
 8007220:	2a2e703a 	and	r23,r5,r8
 8007224:	18c87ec4 	addi	r3,r3,8699
 8007228:	2823883a 	mov	r17,r5
 800722c:	1dc0790e 	bge	r3,r23,8007414 <__ieee754_rem_pio2+0x22c>
 8007230:	009000f4 	movhi	r2,16387
 8007234:	10b65ec4 	addi	r2,r2,-9861
 8007238:	3021883a 	mov	r16,r6
 800723c:	2027883a 	mov	r19,r4
 8007240:	15c02316 	blt	r2,r23,80072d0 <__ieee754_rem_pio2+0xe8>
 8007244:	01cffe74 	movhi	r7,16377
 8007248:	39c87ec4 	addi	r7,r7,8699
 800724c:	01951034 	movhi	r6,21568
 8007250:	0141800e 	bge	zero,r5,8007854 <__ieee754_rem_pio2+0x66c>
 8007254:	800c25c0 	call	800c25c <__subdf3>
 8007258:	1025883a 	mov	r18,r2
 800725c:	008ffe74 	movhi	r2,16377
 8007260:	10887ec4 	addi	r2,r2,8699
 8007264:	1823883a 	mov	r17,r3
 8007268:	b8808426 	beq	r23,r2,800747c <__ieee754_rem_pio2+0x294>
 800726c:	018698b4 	movhi	r6,6754
 8007270:	01cf7474 	movhi	r7,15825
 8007274:	3198cc44 	addi	r6,r6,25393
 8007278:	39ed1844 	addi	r7,r7,-19359
 800727c:	9009883a 	mov	r4,r18
 8007280:	180b883a 	mov	r5,r3
 8007284:	800c25c0 	call	800c25c <__subdf3>
 8007288:	100d883a 	mov	r6,r2
 800728c:	180f883a 	mov	r7,r3
 8007290:	9009883a 	mov	r4,r18
 8007294:	880b883a 	mov	r5,r17
 8007298:	80800015 	stw	r2,0(r16)
 800729c:	80c00115 	stw	r3,4(r16)
 80072a0:	800c25c0 	call	800c25c <__subdf3>
 80072a4:	018698b4 	movhi	r6,6754
 80072a8:	01cf7474 	movhi	r7,15825
 80072ac:	1009883a 	mov	r4,r2
 80072b0:	180b883a 	mov	r5,r3
 80072b4:	3198cc44 	addi	r6,r6,25393
 80072b8:	39ed1844 	addi	r7,r7,-19359
 80072bc:	800c25c0 	call	800c25c <__subdf3>
 80072c0:	80800215 	stw	r2,8(r16)
 80072c4:	80c00315 	stw	r3,12(r16)
 80072c8:	00800044 	movi	r2,1
 80072cc:	00005606 	br	8007428 <__ieee754_rem_pio2+0x240>
 80072d0:	00904e74 	movhi	r2,16697
 80072d4:	10887ec4 	addi	r2,r2,8699
 80072d8:	15c0890e 	bge	r2,r23,8007500 <__ieee754_rem_pio2+0x318>
 80072dc:	009ffc34 	movhi	r2,32752
 80072e0:	10bfffc4 	addi	r2,r2,-1
 80072e4:	15c05c16 	blt	r2,r23,8007458 <__ieee754_rem_pio2+0x270>
 80072e8:	b829d53a 	srai	r20,r23,20
 80072ec:	a53efa84 	addi	r20,r20,-1046
 80072f0:	a024953a 	slli	r18,r20,20
 80072f4:	bca5c83a 	sub	r18,r23,r18
 80072f8:	900b883a 	mov	r5,r18
 80072fc:	800cb2c0 	call	800cb2c <__fixdfsi>
 8007300:	1009883a 	mov	r4,r2
 8007304:	800cbb40 	call	800cbb4 <__floatsidf>
 8007308:	9809883a 	mov	r4,r19
 800730c:	900b883a 	mov	r5,r18
 8007310:	100d883a 	mov	r6,r2
 8007314:	180f883a 	mov	r7,r3
 8007318:	d8800215 	stw	r2,8(sp)
 800731c:	d8c00315 	stw	r3,12(sp)
 8007320:	800c25c0 	call	800c25c <__subdf3>
 8007324:	000d883a 	mov	r6,zero
 8007328:	01d05c34 	movhi	r7,16752
 800732c:	1009883a 	mov	r4,r2
 8007330:	180b883a 	mov	r5,r3
 8007334:	800b9f00 	call	800b9f0 <__muldf3>
 8007338:	180b883a 	mov	r5,r3
 800733c:	1009883a 	mov	r4,r2
 8007340:	182b883a 	mov	r21,r3
 8007344:	102d883a 	mov	r22,r2
 8007348:	800cb2c0 	call	800cb2c <__fixdfsi>
 800734c:	1009883a 	mov	r4,r2
 8007350:	800cbb40 	call	800cbb4 <__floatsidf>
 8007354:	100d883a 	mov	r6,r2
 8007358:	180f883a 	mov	r7,r3
 800735c:	b009883a 	mov	r4,r22
 8007360:	a80b883a 	mov	r5,r21
 8007364:	1027883a 	mov	r19,r2
 8007368:	1825883a 	mov	r18,r3
 800736c:	d8800415 	stw	r2,16(sp)
 8007370:	d8c00515 	stw	r3,20(sp)
 8007374:	800c25c0 	call	800c25c <__subdf3>
 8007378:	1009883a 	mov	r4,r2
 800737c:	180b883a 	mov	r5,r3
 8007380:	000d883a 	mov	r6,zero
 8007384:	01d05c34 	movhi	r7,16752
 8007388:	800b9f00 	call	800b9f0 <__muldf3>
 800738c:	1009883a 	mov	r4,r2
 8007390:	180b883a 	mov	r5,r3
 8007394:	000d883a 	mov	r6,zero
 8007398:	000f883a 	mov	r7,zero
 800739c:	d8800615 	stw	r2,24(sp)
 80073a0:	d8c00715 	stw	r3,28(sp)
 80073a4:	800b7ac0 	call	800b7ac <__eqdf2>
 80073a8:	1001491e 	bne	r2,zero,80078d0 <__ieee754_rem_pio2+0x6e8>
 80073ac:	000f883a 	mov	r7,zero
 80073b0:	9809883a 	mov	r4,r19
 80073b4:	900b883a 	mov	r5,r18
 80073b8:	000d883a 	mov	r6,zero
 80073bc:	800b7ac0 	call	800b7ac <__eqdf2>
 80073c0:	100f003a 	cmpeq	r7,r2,zero
 80073c4:	00800084 	movi	r2,2
 80073c8:	11cfc83a 	sub	r7,r2,r7
 80073cc:	00800084 	movi	r2,2
 80073d0:	d8800015 	stw	r2,0(sp)
 80073d4:	008200b4 	movhi	r2,2050
 80073d8:	10805f04 	addi	r2,r2,380
 80073dc:	d8800115 	stw	r2,4(sp)
 80073e0:	d9000204 	addi	r4,sp,8
 80073e4:	800b883a 	mov	r5,r16
 80073e8:	a00d883a 	mov	r6,r20
 80073ec:	80080bc0 	call	80080bc <__kernel_rem_pio2>
 80073f0:	88000d0e 	bge	r17,zero,8007428 <__ieee754_rem_pio2+0x240>
 80073f4:	81000117 	ldw	r4,4(r16)
 80073f8:	80c00317 	ldw	r3,12(r16)
 80073fc:	0085c83a 	sub	r2,zero,r2
 8007400:	2120003c 	xorhi	r4,r4,32768
 8007404:	18e0003c 	xorhi	r3,r3,32768
 8007408:	81000115 	stw	r4,4(r16)
 800740c:	80c00315 	stw	r3,12(r16)
 8007410:	00000506 	br	8007428 <__ieee754_rem_pio2+0x240>
 8007414:	31000015 	stw	r4,0(r6)
 8007418:	31400115 	stw	r5,4(r6)
 800741c:	30000215 	stw	zero,8(r6)
 8007420:	30000315 	stw	zero,12(r6)
 8007424:	0005883a 	mov	r2,zero
 8007428:	dfc01517 	ldw	ra,84(sp)
 800742c:	df001417 	ldw	fp,80(sp)
 8007430:	ddc01317 	ldw	r23,76(sp)
 8007434:	dd801217 	ldw	r22,72(sp)
 8007438:	dd401117 	ldw	r21,68(sp)
 800743c:	dd001017 	ldw	r20,64(sp)
 8007440:	dcc00f17 	ldw	r19,60(sp)
 8007444:	dc800e17 	ldw	r18,56(sp)
 8007448:	dc400d17 	ldw	r17,52(sp)
 800744c:	dc000c17 	ldw	r16,48(sp)
 8007450:	dec01604 	addi	sp,sp,88
 8007454:	f800283a 	ret
 8007458:	200d883a 	mov	r6,r4
 800745c:	280f883a 	mov	r7,r5
 8007460:	800c25c0 	call	800c25c <__subdf3>
 8007464:	80800215 	stw	r2,8(r16)
 8007468:	80800015 	stw	r2,0(r16)
 800746c:	80c00315 	stw	r3,12(r16)
 8007470:	80c00115 	stw	r3,4(r16)
 8007474:	0005883a 	mov	r2,zero
 8007478:	003feb06 	br	8007428 <__alt_data_end+0xfc007428>
 800747c:	01cf7474 	movhi	r7,15825
 8007480:	9009883a 	mov	r4,r18
 8007484:	39ed1844 	addi	r7,r7,-19359
 8007488:	01869834 	movhi	r6,6752
 800748c:	180b883a 	mov	r5,r3
 8007490:	800c25c0 	call	800c25c <__subdf3>
 8007494:	018b80f4 	movhi	r6,11779
 8007498:	01cee8f4 	movhi	r7,15267
 800749c:	1009883a 	mov	r4,r2
 80074a0:	180b883a 	mov	r5,r3
 80074a4:	319c1cc4 	addi	r6,r6,28787
 80074a8:	39c66284 	addi	r7,r7,6538
 80074ac:	1025883a 	mov	r18,r2
 80074b0:	1823883a 	mov	r17,r3
 80074b4:	800c25c0 	call	800c25c <__subdf3>
 80074b8:	100d883a 	mov	r6,r2
 80074bc:	180f883a 	mov	r7,r3
 80074c0:	9009883a 	mov	r4,r18
 80074c4:	880b883a 	mov	r5,r17
 80074c8:	80800015 	stw	r2,0(r16)
 80074cc:	80c00115 	stw	r3,4(r16)
 80074d0:	800c25c0 	call	800c25c <__subdf3>
 80074d4:	018b80f4 	movhi	r6,11779
 80074d8:	01cee8f4 	movhi	r7,15267
 80074dc:	1009883a 	mov	r4,r2
 80074e0:	180b883a 	mov	r5,r3
 80074e4:	319c1cc4 	addi	r6,r6,28787
 80074e8:	39c66284 	addi	r7,r7,6538
 80074ec:	800c25c0 	call	800c25c <__subdf3>
 80074f0:	80800215 	stw	r2,8(r16)
 80074f4:	80c00315 	stw	r3,12(r16)
 80074f8:	00800044 	movi	r2,1
 80074fc:	003fca06 	br	8007428 <__alt_data_end+0xfc007428>
 8007500:	80090b40 	call	80090b4 <fabs>
 8007504:	019b72b4 	movhi	r6,28106
 8007508:	01cff934 	movhi	r7,16356
 800750c:	1009883a 	mov	r4,r2
 8007510:	180b883a 	mov	r5,r3
 8007514:	31b220c4 	addi	r6,r6,-14205
 8007518:	39d7cc04 	addi	r7,r7,24368
 800751c:	102d883a 	mov	r22,r2
 8007520:	182b883a 	mov	r21,r3
 8007524:	800b9f00 	call	800b9f0 <__muldf3>
 8007528:	000d883a 	mov	r6,zero
 800752c:	01cff834 	movhi	r7,16352
 8007530:	1009883a 	mov	r4,r2
 8007534:	180b883a 	mov	r5,r3
 8007538:	800a5900 	call	800a590 <__adddf3>
 800753c:	180b883a 	mov	r5,r3
 8007540:	1009883a 	mov	r4,r2
 8007544:	800cb2c0 	call	800cb2c <__fixdfsi>
 8007548:	1009883a 	mov	r4,r2
 800754c:	1025883a 	mov	r18,r2
 8007550:	800cbb40 	call	800cbb4 <__floatsidf>
 8007554:	01cffe74 	movhi	r7,16377
 8007558:	1009883a 	mov	r4,r2
 800755c:	180b883a 	mov	r5,r3
 8007560:	39c87ec4 	addi	r7,r7,8699
 8007564:	01951034 	movhi	r6,21568
 8007568:	1029883a 	mov	r20,r2
 800756c:	1827883a 	mov	r19,r3
 8007570:	800b9f00 	call	800b9f0 <__muldf3>
 8007574:	b009883a 	mov	r4,r22
 8007578:	a80b883a 	mov	r5,r21
 800757c:	100d883a 	mov	r6,r2
 8007580:	180f883a 	mov	r7,r3
 8007584:	800c25c0 	call	800c25c <__subdf3>
 8007588:	018698b4 	movhi	r6,6754
 800758c:	01cf7474 	movhi	r7,15825
 8007590:	a009883a 	mov	r4,r20
 8007594:	3198cc44 	addi	r6,r6,25393
 8007598:	39ed1844 	addi	r7,r7,-19359
 800759c:	980b883a 	mov	r5,r19
 80075a0:	1039883a 	mov	fp,r2
 80075a4:	d8c00815 	stw	r3,32(sp)
 80075a8:	800b9f00 	call	800b9f0 <__muldf3>
 80075ac:	010007c4 	movi	r4,31
 80075b0:	e017883a 	mov	r11,fp
 80075b4:	da800817 	ldw	r10,32(sp)
 80075b8:	102d883a 	mov	r22,r2
 80075bc:	182b883a 	mov	r21,r3
 80075c0:	24802816 	blt	r4,r18,8007664 <__ieee754_rem_pio2+0x47c>
 80075c4:	927fffc4 	addi	r9,r18,-1
 80075c8:	4a53883a 	add	r9,r9,r9
 80075cc:	010200b4 	movhi	r4,2050
 80075d0:	21003f04 	addi	r4,r4,252
 80075d4:	4a53883a 	add	r9,r9,r9
 80075d8:	2253883a 	add	r9,r4,r9
 80075dc:	49000017 	ldw	r4,0(r9)
 80075e0:	25c02026 	beq	r4,r23,8007664 <__ieee754_rem_pio2+0x47c>
 80075e4:	e009883a 	mov	r4,fp
 80075e8:	500b883a 	mov	r5,r10
 80075ec:	100d883a 	mov	r6,r2
 80075f0:	180f883a 	mov	r7,r3
 80075f4:	da800b15 	stw	r10,44(sp)
 80075f8:	df000a15 	stw	fp,40(sp)
 80075fc:	800c25c0 	call	800c25c <__subdf3>
 8007600:	da800b17 	ldw	r10,44(sp)
 8007604:	dac00a17 	ldw	r11,40(sp)
 8007608:	1019883a 	mov	r12,r2
 800760c:	1813883a 	mov	r9,r3
 8007610:	80800015 	stw	r2,0(r16)
 8007614:	80c00115 	stw	r3,4(r16)
 8007618:	600d883a 	mov	r6,r12
 800761c:	480f883a 	mov	r7,r9
 8007620:	5809883a 	mov	r4,r11
 8007624:	500b883a 	mov	r5,r10
 8007628:	da400b15 	stw	r9,44(sp)
 800762c:	db000a15 	stw	r12,40(sp)
 8007630:	800c25c0 	call	800c25c <__subdf3>
 8007634:	1009883a 	mov	r4,r2
 8007638:	180b883a 	mov	r5,r3
 800763c:	b00d883a 	mov	r6,r22
 8007640:	a80f883a 	mov	r7,r21
 8007644:	800c25c0 	call	800c25c <__subdf3>
 8007648:	80800215 	stw	r2,8(r16)
 800764c:	80c00315 	stw	r3,12(r16)
 8007650:	da400b17 	ldw	r9,44(sp)
 8007654:	db000a17 	ldw	r12,40(sp)
 8007658:	88009f16 	blt	r17,zero,80078d8 <__ieee754_rem_pio2+0x6f0>
 800765c:	9005883a 	mov	r2,r18
 8007660:	003f7106 	br	8007428 <__alt_data_end+0xfc007428>
 8007664:	d9400817 	ldw	r5,32(sp)
 8007668:	e009883a 	mov	r4,fp
 800766c:	100d883a 	mov	r6,r2
 8007670:	180f883a 	mov	r7,r3
 8007674:	da800b15 	stw	r10,44(sp)
 8007678:	dac00a15 	stw	r11,40(sp)
 800767c:	800c25c0 	call	800c25c <__subdf3>
 8007680:	1019883a 	mov	r12,r2
 8007684:	1804d53a 	srli	r2,r3,20
 8007688:	b811d53a 	srai	r8,r23,20
 800768c:	1813883a 	mov	r9,r3
 8007690:	1081ffcc 	andi	r2,r2,2047
 8007694:	80c00115 	stw	r3,4(r16)
 8007698:	83000015 	stw	r12,0(r16)
 800769c:	4085c83a 	sub	r2,r8,r2
 80076a0:	00c00404 	movi	r3,16
 80076a4:	da800b17 	ldw	r10,44(sp)
 80076a8:	dac00a17 	ldw	r11,40(sp)
 80076ac:	18bfda0e 	bge	r3,r2,8007618 <__alt_data_end+0xfc007618>
 80076b0:	01cf7474 	movhi	r7,15825
 80076b4:	39ed1844 	addi	r7,r7,-19359
 80076b8:	a009883a 	mov	r4,r20
 80076bc:	980b883a 	mov	r5,r19
 80076c0:	01869834 	movhi	r6,6752
 80076c4:	da000a15 	stw	r8,40(sp)
 80076c8:	800b9f00 	call	800b9f0 <__muldf3>
 80076cc:	d9400817 	ldw	r5,32(sp)
 80076d0:	e009883a 	mov	r4,fp
 80076d4:	100d883a 	mov	r6,r2
 80076d8:	180f883a 	mov	r7,r3
 80076dc:	102d883a 	mov	r22,r2
 80076e0:	182b883a 	mov	r21,r3
 80076e4:	800c25c0 	call	800c25c <__subdf3>
 80076e8:	d9400817 	ldw	r5,32(sp)
 80076ec:	e009883a 	mov	r4,fp
 80076f0:	100d883a 	mov	r6,r2
 80076f4:	180f883a 	mov	r7,r3
 80076f8:	182f883a 	mov	r23,r3
 80076fc:	d8800915 	stw	r2,36(sp)
 8007700:	800c25c0 	call	800c25c <__subdf3>
 8007704:	b00d883a 	mov	r6,r22
 8007708:	a80f883a 	mov	r7,r21
 800770c:	1009883a 	mov	r4,r2
 8007710:	180b883a 	mov	r5,r3
 8007714:	800c25c0 	call	800c25c <__subdf3>
 8007718:	018b80f4 	movhi	r6,11779
 800771c:	01cee8f4 	movhi	r7,15267
 8007720:	a009883a 	mov	r4,r20
 8007724:	980b883a 	mov	r5,r19
 8007728:	319c1cc4 	addi	r6,r6,28787
 800772c:	39c66284 	addi	r7,r7,6538
 8007730:	102d883a 	mov	r22,r2
 8007734:	182b883a 	mov	r21,r3
 8007738:	800b9f00 	call	800b9f0 <__muldf3>
 800773c:	b00d883a 	mov	r6,r22
 8007740:	a80f883a 	mov	r7,r21
 8007744:	1009883a 	mov	r4,r2
 8007748:	180b883a 	mov	r5,r3
 800774c:	800c25c0 	call	800c25c <__subdf3>
 8007750:	d9000917 	ldw	r4,36(sp)
 8007754:	b80b883a 	mov	r5,r23
 8007758:	100d883a 	mov	r6,r2
 800775c:	180f883a 	mov	r7,r3
 8007760:	102d883a 	mov	r22,r2
 8007764:	182b883a 	mov	r21,r3
 8007768:	800c25c0 	call	800c25c <__subdf3>
 800776c:	1019883a 	mov	r12,r2
 8007770:	1804d53a 	srli	r2,r3,20
 8007774:	da000a17 	ldw	r8,40(sp)
 8007778:	83000015 	stw	r12,0(r16)
 800777c:	1081ffcc 	andi	r2,r2,2047
 8007780:	4091c83a 	sub	r8,r8,r2
 8007784:	80c00115 	stw	r3,4(r16)
 8007788:	00800c44 	movi	r2,49
 800778c:	1813883a 	mov	r9,r3
 8007790:	1200790e 	bge	r2,r8,8007978 <__ieee754_rem_pio2+0x790>
 8007794:	01cee8f4 	movhi	r7,15267
 8007798:	39c66284 	addi	r7,r7,6538
 800779c:	a009883a 	mov	r4,r20
 80077a0:	980b883a 	mov	r5,r19
 80077a4:	018b8034 	movhi	r6,11776
 80077a8:	800b9f00 	call	800b9f0 <__muldf3>
 80077ac:	d9000917 	ldw	r4,36(sp)
 80077b0:	b80b883a 	mov	r5,r23
 80077b4:	100d883a 	mov	r6,r2
 80077b8:	180f883a 	mov	r7,r3
 80077bc:	102d883a 	mov	r22,r2
 80077c0:	182b883a 	mov	r21,r3
 80077c4:	800c25c0 	call	800c25c <__subdf3>
 80077c8:	d9000917 	ldw	r4,36(sp)
 80077cc:	b80b883a 	mov	r5,r23
 80077d0:	100d883a 	mov	r6,r2
 80077d4:	180f883a 	mov	r7,r3
 80077d8:	d8c00b15 	stw	r3,44(sp)
 80077dc:	d8800a15 	stw	r2,40(sp)
 80077e0:	800c25c0 	call	800c25c <__subdf3>
 80077e4:	b00d883a 	mov	r6,r22
 80077e8:	a80f883a 	mov	r7,r21
 80077ec:	1009883a 	mov	r4,r2
 80077f0:	180b883a 	mov	r5,r3
 80077f4:	800c25c0 	call	800c25c <__subdf3>
 80077f8:	01894834 	movhi	r6,9504
 80077fc:	01ce5f34 	movhi	r7,14716
 8007800:	a009883a 	mov	r4,r20
 8007804:	980b883a 	mov	r5,r19
 8007808:	31927044 	addi	r6,r6,18881
 800780c:	39e0e684 	addi	r7,r7,-31846
 8007810:	102d883a 	mov	r22,r2
 8007814:	182b883a 	mov	r21,r3
 8007818:	800b9f00 	call	800b9f0 <__muldf3>
 800781c:	b00d883a 	mov	r6,r22
 8007820:	a80f883a 	mov	r7,r21
 8007824:	1009883a 	mov	r4,r2
 8007828:	180b883a 	mov	r5,r3
 800782c:	800c25c0 	call	800c25c <__subdf3>
 8007830:	dac00a17 	ldw	r11,40(sp)
 8007834:	da800b17 	ldw	r10,44(sp)
 8007838:	102d883a 	mov	r22,r2
 800783c:	182b883a 	mov	r21,r3
 8007840:	5809883a 	mov	r4,r11
 8007844:	500b883a 	mov	r5,r10
 8007848:	100d883a 	mov	r6,r2
 800784c:	180f883a 	mov	r7,r3
 8007850:	003f6a06 	br	80075fc <__alt_data_end+0xfc0075fc>
 8007854:	800a5900 	call	800a590 <__adddf3>
 8007858:	1025883a 	mov	r18,r2
 800785c:	008ffe74 	movhi	r2,16377
 8007860:	10887ec4 	addi	r2,r2,8699
 8007864:	1823883a 	mov	r17,r3
 8007868:	b8802226 	beq	r23,r2,80078f4 <__ieee754_rem_pio2+0x70c>
 800786c:	018698b4 	movhi	r6,6754
 8007870:	01cf7474 	movhi	r7,15825
 8007874:	3198cc44 	addi	r6,r6,25393
 8007878:	39ed1844 	addi	r7,r7,-19359
 800787c:	9009883a 	mov	r4,r18
 8007880:	180b883a 	mov	r5,r3
 8007884:	800a5900 	call	800a590 <__adddf3>
 8007888:	100d883a 	mov	r6,r2
 800788c:	180f883a 	mov	r7,r3
 8007890:	9009883a 	mov	r4,r18
 8007894:	880b883a 	mov	r5,r17
 8007898:	80800015 	stw	r2,0(r16)
 800789c:	80c00115 	stw	r3,4(r16)
 80078a0:	800c25c0 	call	800c25c <__subdf3>
 80078a4:	018698b4 	movhi	r6,6754
 80078a8:	01cf7474 	movhi	r7,15825
 80078ac:	1009883a 	mov	r4,r2
 80078b0:	180b883a 	mov	r5,r3
 80078b4:	3198cc44 	addi	r6,r6,25393
 80078b8:	39ed1844 	addi	r7,r7,-19359
 80078bc:	800a5900 	call	800a590 <__adddf3>
 80078c0:	80800215 	stw	r2,8(r16)
 80078c4:	80c00315 	stw	r3,12(r16)
 80078c8:	00bfffc4 	movi	r2,-1
 80078cc:	003ed606 	br	8007428 <__alt_data_end+0xfc007428>
 80078d0:	01c000c4 	movi	r7,3
 80078d4:	003ebd06 	br	80073cc <__alt_data_end+0xfc0073cc>
 80078d8:	4a60003c 	xorhi	r9,r9,32768
 80078dc:	18e0003c 	xorhi	r3,r3,32768
 80078e0:	83000015 	stw	r12,0(r16)
 80078e4:	82400115 	stw	r9,4(r16)
 80078e8:	80c00315 	stw	r3,12(r16)
 80078ec:	0485c83a 	sub	r2,zero,r18
 80078f0:	003ecd06 	br	8007428 <__alt_data_end+0xfc007428>
 80078f4:	01cf7474 	movhi	r7,15825
 80078f8:	9009883a 	mov	r4,r18
 80078fc:	39ed1844 	addi	r7,r7,-19359
 8007900:	01869834 	movhi	r6,6752
 8007904:	180b883a 	mov	r5,r3
 8007908:	800a5900 	call	800a590 <__adddf3>
 800790c:	018b80f4 	movhi	r6,11779
 8007910:	01cee8f4 	movhi	r7,15267
 8007914:	1009883a 	mov	r4,r2
 8007918:	180b883a 	mov	r5,r3
 800791c:	319c1cc4 	addi	r6,r6,28787
 8007920:	39c66284 	addi	r7,r7,6538
 8007924:	1025883a 	mov	r18,r2
 8007928:	1823883a 	mov	r17,r3
 800792c:	800a5900 	call	800a590 <__adddf3>
 8007930:	100d883a 	mov	r6,r2
 8007934:	180f883a 	mov	r7,r3
 8007938:	9009883a 	mov	r4,r18
 800793c:	880b883a 	mov	r5,r17
 8007940:	80800015 	stw	r2,0(r16)
 8007944:	80c00115 	stw	r3,4(r16)
 8007948:	800c25c0 	call	800c25c <__subdf3>
 800794c:	018b80f4 	movhi	r6,11779
 8007950:	01cee8f4 	movhi	r7,15267
 8007954:	1009883a 	mov	r4,r2
 8007958:	180b883a 	mov	r5,r3
 800795c:	319c1cc4 	addi	r6,r6,28787
 8007960:	39c66284 	addi	r7,r7,6538
 8007964:	800a5900 	call	800a590 <__adddf3>
 8007968:	80800215 	stw	r2,8(r16)
 800796c:	80c00315 	stw	r3,12(r16)
 8007970:	00bfffc4 	movi	r2,-1
 8007974:	003eac06 	br	8007428 <__alt_data_end+0xfc007428>
 8007978:	dac00917 	ldw	r11,36(sp)
 800797c:	b815883a 	mov	r10,r23
 8007980:	003f2506 	br	8007618 <__alt_data_end+0xfc007618>

08007984 <__ieee754_sqrt>:
 8007984:	defffd04 	addi	sp,sp,-12
 8007988:	dc400115 	stw	r17,4(sp)
 800798c:	dc000015 	stw	r16,0(sp)
 8007990:	dfc00215 	stw	ra,8(sp)
 8007994:	28dffc2c 	andhi	r3,r5,32752
 8007998:	009ffc34 	movhi	r2,32752
 800799c:	2821883a 	mov	r16,r5
 80079a0:	2023883a 	mov	r17,r4
 80079a4:	18807c26 	beq	r3,r2,8007b98 <__ieee754_sqrt+0x214>
 80079a8:	2011883a 	mov	r8,r4
 80079ac:	01405f0e 	bge	zero,r5,8007b2c <__ieee754_sqrt+0x1a8>
 80079b0:	2815d53a 	srai	r10,r5,20
 80079b4:	50006a26 	beq	r10,zero,8007b60 <__ieee754_sqrt+0x1dc>
 80079b8:	00800434 	movhi	r2,16
 80079bc:	52bf0044 	addi	r10,r10,-1023
 80079c0:	10bfffc4 	addi	r2,r2,-1
 80079c4:	8084703a 	and	r2,r16,r2
 80079c8:	50c0004c 	andi	r3,r10,1
 80079cc:	10800434 	orhi	r2,r2,16
 80079d0:	18004f1e 	bne	r3,zero,8007b10 <__ieee754_sqrt+0x18c>
 80079d4:	4006d7fa 	srli	r3,r8,31
 80079d8:	5015d07a 	srai	r10,r10,1
 80079dc:	1085883a 	add	r2,r2,r2
 80079e0:	10c5883a 	add	r2,r2,r3
 80079e4:	01800584 	movi	r6,22
 80079e8:	4207883a 	add	r3,r8,r8
 80079ec:	0013883a 	mov	r9,zero
 80079f0:	000b883a 	mov	r5,zero
 80079f4:	01000834 	movhi	r4,32
 80079f8:	290f883a 	add	r7,r5,r4
 80079fc:	1810d7fa 	srli	r8,r3,31
 8007a00:	31bfffc4 	addi	r6,r6,-1
 8007a04:	11c00316 	blt	r2,r7,8007a14 <__ieee754_sqrt+0x90>
 8007a08:	11c5c83a 	sub	r2,r2,r7
 8007a0c:	390b883a 	add	r5,r7,r4
 8007a10:	4913883a 	add	r9,r9,r4
 8007a14:	1085883a 	add	r2,r2,r2
 8007a18:	1205883a 	add	r2,r2,r8
 8007a1c:	18c7883a 	add	r3,r3,r3
 8007a20:	2008d07a 	srli	r4,r4,1
 8007a24:	303ff41e 	bne	r6,zero,80079f8 <__alt_data_end+0xfc0079f8>
 8007a28:	01200034 	movhi	r4,32768
 8007a2c:	01c00804 	movi	r7,32
 8007a30:	0011883a 	mov	r8,zero
 8007a34:	0017883a 	mov	r11,zero
 8007a38:	201b883a 	mov	r13,r4
 8007a3c:	00000806 	br	8007a60 <__ieee754_sqrt+0xdc>
 8007a40:	11401726 	beq	r2,r5,8007aa0 <__ieee754_sqrt+0x11c>
 8007a44:	180cd7fa 	srli	r6,r3,31
 8007a48:	1085883a 	add	r2,r2,r2
 8007a4c:	39ffffc4 	addi	r7,r7,-1
 8007a50:	1185883a 	add	r2,r2,r6
 8007a54:	18c7883a 	add	r3,r3,r3
 8007a58:	2008d07a 	srli	r4,r4,1
 8007a5c:	38001726 	beq	r7,zero,8007abc <__ieee754_sqrt+0x138>
 8007a60:	590d883a 	add	r6,r11,r4
 8007a64:	28bff60e 	bge	r5,r2,8007a40 <__alt_data_end+0xfc007a40>
 8007a68:	3320002c 	andhi	r12,r6,32768
 8007a6c:	3117883a 	add	r11,r6,r4
 8007a70:	63400826 	beq	r12,r13,8007a94 <__ieee754_sqrt+0x110>
 8007a74:	2819883a 	mov	r12,r5
 8007a78:	1145c83a 	sub	r2,r2,r5
 8007a7c:	1980012e 	bgeu	r3,r6,8007a84 <__ieee754_sqrt+0x100>
 8007a80:	10bfffc4 	addi	r2,r2,-1
 8007a84:	1987c83a 	sub	r3,r3,r6
 8007a88:	4111883a 	add	r8,r8,r4
 8007a8c:	600b883a 	mov	r5,r12
 8007a90:	003fec06 	br	8007a44 <__alt_data_end+0xfc007a44>
 8007a94:	583ff716 	blt	r11,zero,8007a74 <__alt_data_end+0xfc007a74>
 8007a98:	2b000044 	addi	r12,r5,1
 8007a9c:	003ff606 	br	8007a78 <__alt_data_end+0xfc007a78>
 8007aa0:	19801936 	bltu	r3,r6,8007b08 <__ieee754_sqrt+0x184>
 8007aa4:	3320002c 	andhi	r12,r6,32768
 8007aa8:	3117883a 	add	r11,r6,r4
 8007aac:	63404626 	beq	r12,r13,8007bc8 <__ieee754_sqrt+0x244>
 8007ab0:	1019883a 	mov	r12,r2
 8007ab4:	0005883a 	mov	r2,zero
 8007ab8:	003ff206 	br	8007a84 <__alt_data_end+0xfc007a84>
 8007abc:	10c4b03a 	or	r2,r2,r3
 8007ac0:	10000426 	beq	r2,zero,8007ad4 <__ieee754_sqrt+0x150>
 8007ac4:	00bfffc4 	movi	r2,-1
 8007ac8:	40804326 	beq	r8,r2,8007bd8 <__ieee754_sqrt+0x254>
 8007acc:	4080004c 	andi	r2,r8,1
 8007ad0:	1211883a 	add	r8,r2,r8
 8007ad4:	4004d07a 	srli	r2,r8,1
 8007ad8:	4807d07a 	srai	r3,r9,1
 8007adc:	010ff834 	movhi	r4,16352
 8007ae0:	4a40004c 	andi	r9,r9,1
 8007ae4:	1909883a 	add	r4,r3,r4
 8007ae8:	48000e1e 	bne	r9,zero,8007b24 <__ieee754_sqrt+0x1a0>
 8007aec:	5006953a 	slli	r3,r10,20
 8007af0:	1907883a 	add	r3,r3,r4
 8007af4:	dfc00217 	ldw	ra,8(sp)
 8007af8:	dc400117 	ldw	r17,4(sp)
 8007afc:	dc000017 	ldw	r16,0(sp)
 8007b00:	dec00304 	addi	sp,sp,12
 8007b04:	f800283a 	ret
 8007b08:	100b883a 	mov	r5,r2
 8007b0c:	003fcd06 	br	8007a44 <__alt_data_end+0xfc007a44>
 8007b10:	4006d7fa 	srli	r3,r8,31
 8007b14:	1085883a 	add	r2,r2,r2
 8007b18:	4211883a 	add	r8,r8,r8
 8007b1c:	10c5883a 	add	r2,r2,r3
 8007b20:	003fac06 	br	80079d4 <__alt_data_end+0xfc0079d4>
 8007b24:	10a00034 	orhi	r2,r2,32768
 8007b28:	003ff006 	br	8007aec <__alt_data_end+0xfc007aec>
 8007b2c:	00a00034 	movhi	r2,32768
 8007b30:	10bfffc4 	addi	r2,r2,-1
 8007b34:	2884703a 	and	r2,r5,r2
 8007b38:	1104b03a 	or	r2,r2,r4
 8007b3c:	10001f26 	beq	r2,zero,8007bbc <__ieee754_sqrt+0x238>
 8007b40:	28002c1e 	bne	r5,zero,8007bf4 <__ieee754_sqrt+0x270>
 8007b44:	0015883a 	mov	r10,zero
 8007b48:	4020d2fa 	srli	r16,r8,11
 8007b4c:	52bffac4 	addi	r10,r10,-21
 8007b50:	4010957a 	slli	r8,r8,21
 8007b54:	803ffc26 	beq	r16,zero,8007b48 <__alt_data_end+0xfc007b48>
 8007b58:	8080042c 	andhi	r2,r16,16
 8007b5c:	1000211e 	bne	r2,zero,8007be4 <__ieee754_sqrt+0x260>
 8007b60:	0005883a 	mov	r2,zero
 8007b64:	8421883a 	add	r16,r16,r16
 8007b68:	80c0042c 	andhi	r3,r16,16
 8007b6c:	10800044 	addi	r2,r2,1
 8007b70:	183ffc26 	beq	r3,zero,8007b64 <__alt_data_end+0xfc007b64>
 8007b74:	01000044 	movi	r4,1
 8007b78:	00c00804 	movi	r3,32
 8007b7c:	2089c83a 	sub	r4,r4,r2
 8007b80:	1887c83a 	sub	r3,r3,r2
 8007b84:	40c6d83a 	srl	r3,r8,r3
 8007b88:	5115883a 	add	r10,r10,r4
 8007b8c:	4090983a 	sll	r8,r8,r2
 8007b90:	80e0b03a 	or	r16,r16,r3
 8007b94:	003f8806 	br	80079b8 <__alt_data_end+0xfc0079b8>
 8007b98:	200d883a 	mov	r6,r4
 8007b9c:	280f883a 	mov	r7,r5
 8007ba0:	800b9f00 	call	800b9f0 <__muldf3>
 8007ba4:	1009883a 	mov	r4,r2
 8007ba8:	180b883a 	mov	r5,r3
 8007bac:	880d883a 	mov	r6,r17
 8007bb0:	800f883a 	mov	r7,r16
 8007bb4:	800a5900 	call	800a590 <__adddf3>
 8007bb8:	003fce06 	br	8007af4 <__alt_data_end+0xfc007af4>
 8007bbc:	2005883a 	mov	r2,r4
 8007bc0:	2807883a 	mov	r3,r5
 8007bc4:	003fcb06 	br	8007af4 <__alt_data_end+0xfc007af4>
 8007bc8:	583fb30e 	bge	r11,zero,8007a98 <__alt_data_end+0xfc007a98>
 8007bcc:	0005883a 	mov	r2,zero
 8007bd0:	2819883a 	mov	r12,r5
 8007bd4:	003fab06 	br	8007a84 <__alt_data_end+0xfc007a84>
 8007bd8:	4a400044 	addi	r9,r9,1
 8007bdc:	0005883a 	mov	r2,zero
 8007be0:	003fbd06 	br	8007ad8 <__alt_data_end+0xfc007ad8>
 8007be4:	00c00804 	movi	r3,32
 8007be8:	01000044 	movi	r4,1
 8007bec:	0005883a 	mov	r2,zero
 8007bf0:	003fe406 	br	8007b84 <__alt_data_end+0xfc007b84>
 8007bf4:	200d883a 	mov	r6,r4
 8007bf8:	280f883a 	mov	r7,r5
 8007bfc:	800c25c0 	call	800c25c <__subdf3>
 8007c00:	1009883a 	mov	r4,r2
 8007c04:	180b883a 	mov	r5,r3
 8007c08:	100d883a 	mov	r6,r2
 8007c0c:	180f883a 	mov	r7,r3
 8007c10:	800ae2c0 	call	800ae2c <__divdf3>
 8007c14:	003fb706 	br	8007af4 <__alt_data_end+0xfc007af4>

08007c18 <__kernel_cos>:
 8007c18:	defff304 	addi	sp,sp,-52
 8007c1c:	dc000315 	stw	r16,12(sp)
 8007c20:	04200034 	movhi	r16,32768
 8007c24:	843fffc4 	addi	r16,r16,-1
 8007c28:	008f9034 	movhi	r2,15936
 8007c2c:	df000b15 	stw	fp,44(sp)
 8007c30:	ddc00a15 	stw	r23,40(sp)
 8007c34:	dd800915 	stw	r22,36(sp)
 8007c38:	dcc00615 	stw	r19,24(sp)
 8007c3c:	dfc00c15 	stw	ra,48(sp)
 8007c40:	dd400815 	stw	r21,32(sp)
 8007c44:	dd000715 	stw	r20,28(sp)
 8007c48:	dc800515 	stw	r18,20(sp)
 8007c4c:	dc400415 	stw	r17,16(sp)
 8007c50:	2c20703a 	and	r16,r5,r16
 8007c54:	10bfffc4 	addi	r2,r2,-1
 8007c58:	2827883a 	mov	r19,r5
 8007c5c:	202d883a 	mov	r22,r4
 8007c60:	302f883a 	mov	r23,r6
 8007c64:	3839883a 	mov	fp,r7
 8007c68:	14007516 	blt	r2,r16,8007e40 <__kernel_cos+0x228>
 8007c6c:	800cb2c0 	call	800cb2c <__fixdfsi>
 8007c70:	10010f26 	beq	r2,zero,80080b0 <__kernel_cos+0x498>
 8007c74:	b00d883a 	mov	r6,r22
 8007c78:	980f883a 	mov	r7,r19
 8007c7c:	b009883a 	mov	r4,r22
 8007c80:	980b883a 	mov	r5,r19
 8007c84:	800b9f00 	call	800b9f0 <__muldf3>
 8007c88:	01afa234 	movhi	r6,48776
 8007c8c:	01ef6a74 	movhi	r7,48553
 8007c90:	1009883a 	mov	r4,r2
 8007c94:	180b883a 	mov	r5,r3
 8007c98:	318e3504 	addi	r6,r6,14548
 8007c9c:	39feba44 	addi	r7,r7,-1303
 8007ca0:	102b883a 	mov	r21,r2
 8007ca4:	1829883a 	mov	r20,r3
 8007ca8:	800b9f00 	call	800b9f0 <__muldf3>
 8007cac:	01af6d74 	movhi	r6,48565
 8007cb0:	01cf88b4 	movhi	r7,15906
 8007cb4:	1009883a 	mov	r4,r2
 8007cb8:	180b883a 	mov	r5,r3
 8007cbc:	31ac7104 	addi	r6,r6,-20028
 8007cc0:	39fba784 	addi	r7,r7,-4450
 8007cc4:	800a5900 	call	800a590 <__adddf3>
 8007cc8:	1009883a 	mov	r4,r2
 8007ccc:	180b883a 	mov	r5,r3
 8007cd0:	a80d883a 	mov	r6,r21
 8007cd4:	a00f883a 	mov	r7,r20
 8007cd8:	800b9f00 	call	800b9f0 <__muldf3>
 8007cdc:	01a02734 	movhi	r6,32924
 8007ce0:	01cfa4b4 	movhi	r7,16018
 8007ce4:	1009883a 	mov	r4,r2
 8007ce8:	180b883a 	mov	r5,r3
 8007cec:	3194ab44 	addi	r6,r6,21165
 8007cf0:	39df93c4 	addi	r7,r7,32335
 8007cf4:	800c25c0 	call	800c25c <__subdf3>
 8007cf8:	1009883a 	mov	r4,r2
 8007cfc:	180b883a 	mov	r5,r3
 8007d00:	a80d883a 	mov	r6,r21
 8007d04:	a00f883a 	mov	r7,r20
 8007d08:	800b9f00 	call	800b9f0 <__muldf3>
 8007d0c:	018672f4 	movhi	r6,6603
 8007d10:	01cfbeb4 	movhi	r7,16122
 8007d14:	1009883a 	mov	r4,r2
 8007d18:	180b883a 	mov	r5,r3
 8007d1c:	31856404 	addi	r6,r6,5520
 8007d20:	39c06804 	addi	r7,r7,416
 8007d24:	800a5900 	call	800a590 <__adddf3>
 8007d28:	1009883a 	mov	r4,r2
 8007d2c:	180b883a 	mov	r5,r3
 8007d30:	a80d883a 	mov	r6,r21
 8007d34:	a00f883a 	mov	r7,r20
 8007d38:	800b9f00 	call	800b9f0 <__muldf3>
 8007d3c:	0185b074 	movhi	r6,5825
 8007d40:	01cfd5f4 	movhi	r7,16215
 8007d44:	1009883a 	mov	r4,r2
 8007d48:	180b883a 	mov	r5,r3
 8007d4c:	31945dc4 	addi	r6,r6,20855
 8007d50:	39f05b04 	addi	r7,r7,-16020
 8007d54:	800c25c0 	call	800c25c <__subdf3>
 8007d58:	1009883a 	mov	r4,r2
 8007d5c:	180b883a 	mov	r5,r3
 8007d60:	a80d883a 	mov	r6,r21
 8007d64:	a00f883a 	mov	r7,r20
 8007d68:	800b9f00 	call	800b9f0 <__muldf3>
 8007d6c:	01955574 	movhi	r6,21845
 8007d70:	01cfe974 	movhi	r7,16293
 8007d74:	1009883a 	mov	r4,r2
 8007d78:	180b883a 	mov	r5,r3
 8007d7c:	31955304 	addi	r6,r6,21836
 8007d80:	39d55544 	addi	r7,r7,21845
 8007d84:	800a5900 	call	800a590 <__adddf3>
 8007d88:	1009883a 	mov	r4,r2
 8007d8c:	180b883a 	mov	r5,r3
 8007d90:	a80d883a 	mov	r6,r21
 8007d94:	a00f883a 	mov	r7,r20
 8007d98:	800b9f00 	call	800b9f0 <__muldf3>
 8007d9c:	1017883a 	mov	r11,r2
 8007da0:	1815883a 	mov	r10,r3
 8007da4:	a809883a 	mov	r4,r21
 8007da8:	a00b883a 	mov	r5,r20
 8007dac:	000d883a 	mov	r6,zero
 8007db0:	01cff834 	movhi	r7,16352
 8007db4:	da800215 	stw	r10,8(sp)
 8007db8:	dac00115 	stw	r11,4(sp)
 8007dbc:	800b9f00 	call	800b9f0 <__muldf3>
 8007dc0:	dac00117 	ldw	r11,4(sp)
 8007dc4:	da800217 	ldw	r10,8(sp)
 8007dc8:	a809883a 	mov	r4,r21
 8007dcc:	580d883a 	mov	r6,r11
 8007dd0:	500f883a 	mov	r7,r10
 8007dd4:	a00b883a 	mov	r5,r20
 8007dd8:	1023883a 	mov	r17,r2
 8007ddc:	1821883a 	mov	r16,r3
 8007de0:	800b9f00 	call	800b9f0 <__muldf3>
 8007de4:	b009883a 	mov	r4,r22
 8007de8:	980b883a 	mov	r5,r19
 8007dec:	b80d883a 	mov	r6,r23
 8007df0:	e00f883a 	mov	r7,fp
 8007df4:	1029883a 	mov	r20,r2
 8007df8:	1825883a 	mov	r18,r3
 8007dfc:	800b9f00 	call	800b9f0 <__muldf3>
 8007e00:	a009883a 	mov	r4,r20
 8007e04:	900b883a 	mov	r5,r18
 8007e08:	100d883a 	mov	r6,r2
 8007e0c:	180f883a 	mov	r7,r3
 8007e10:	800c25c0 	call	800c25c <__subdf3>
 8007e14:	8809883a 	mov	r4,r17
 8007e18:	800b883a 	mov	r5,r16
 8007e1c:	100d883a 	mov	r6,r2
 8007e20:	180f883a 	mov	r7,r3
 8007e24:	800c25c0 	call	800c25c <__subdf3>
 8007e28:	0009883a 	mov	r4,zero
 8007e2c:	014ffc34 	movhi	r5,16368
 8007e30:	100d883a 	mov	r6,r2
 8007e34:	180f883a 	mov	r7,r3
 8007e38:	800c25c0 	call	800c25c <__subdf3>
 8007e3c:	00008b06 	br	800806c <__kernel_cos+0x454>
 8007e40:	200d883a 	mov	r6,r4
 8007e44:	280f883a 	mov	r7,r5
 8007e48:	800b9f00 	call	800b9f0 <__muldf3>
 8007e4c:	01afa234 	movhi	r6,48776
 8007e50:	01ef6a74 	movhi	r7,48553
 8007e54:	318e3504 	addi	r6,r6,14548
 8007e58:	39feba44 	addi	r7,r7,-1303
 8007e5c:	1009883a 	mov	r4,r2
 8007e60:	180b883a 	mov	r5,r3
 8007e64:	1025883a 	mov	r18,r2
 8007e68:	1823883a 	mov	r17,r3
 8007e6c:	800b9f00 	call	800b9f0 <__muldf3>
 8007e70:	01af6d74 	movhi	r6,48565
 8007e74:	01cf88b4 	movhi	r7,15906
 8007e78:	1009883a 	mov	r4,r2
 8007e7c:	180b883a 	mov	r5,r3
 8007e80:	31ac7104 	addi	r6,r6,-20028
 8007e84:	39fba784 	addi	r7,r7,-4450
 8007e88:	800a5900 	call	800a590 <__adddf3>
 8007e8c:	1009883a 	mov	r4,r2
 8007e90:	180b883a 	mov	r5,r3
 8007e94:	900d883a 	mov	r6,r18
 8007e98:	880f883a 	mov	r7,r17
 8007e9c:	800b9f00 	call	800b9f0 <__muldf3>
 8007ea0:	01a02734 	movhi	r6,32924
 8007ea4:	01cfa4b4 	movhi	r7,16018
 8007ea8:	1009883a 	mov	r4,r2
 8007eac:	180b883a 	mov	r5,r3
 8007eb0:	3194ab44 	addi	r6,r6,21165
 8007eb4:	39df93c4 	addi	r7,r7,32335
 8007eb8:	800c25c0 	call	800c25c <__subdf3>
 8007ebc:	1009883a 	mov	r4,r2
 8007ec0:	180b883a 	mov	r5,r3
 8007ec4:	900d883a 	mov	r6,r18
 8007ec8:	880f883a 	mov	r7,r17
 8007ecc:	800b9f00 	call	800b9f0 <__muldf3>
 8007ed0:	018672f4 	movhi	r6,6603
 8007ed4:	01cfbeb4 	movhi	r7,16122
 8007ed8:	1009883a 	mov	r4,r2
 8007edc:	180b883a 	mov	r5,r3
 8007ee0:	31856404 	addi	r6,r6,5520
 8007ee4:	39c06804 	addi	r7,r7,416
 8007ee8:	800a5900 	call	800a590 <__adddf3>
 8007eec:	1009883a 	mov	r4,r2
 8007ef0:	180b883a 	mov	r5,r3
 8007ef4:	900d883a 	mov	r6,r18
 8007ef8:	880f883a 	mov	r7,r17
 8007efc:	800b9f00 	call	800b9f0 <__muldf3>
 8007f00:	0185b074 	movhi	r6,5825
 8007f04:	01cfd5f4 	movhi	r7,16215
 8007f08:	1009883a 	mov	r4,r2
 8007f0c:	180b883a 	mov	r5,r3
 8007f10:	31945dc4 	addi	r6,r6,20855
 8007f14:	39f05b04 	addi	r7,r7,-16020
 8007f18:	800c25c0 	call	800c25c <__subdf3>
 8007f1c:	1009883a 	mov	r4,r2
 8007f20:	180b883a 	mov	r5,r3
 8007f24:	900d883a 	mov	r6,r18
 8007f28:	880f883a 	mov	r7,r17
 8007f2c:	800b9f00 	call	800b9f0 <__muldf3>
 8007f30:	01955574 	movhi	r6,21845
 8007f34:	01cfe974 	movhi	r7,16293
 8007f38:	1009883a 	mov	r4,r2
 8007f3c:	180b883a 	mov	r5,r3
 8007f40:	31955304 	addi	r6,r6,21836
 8007f44:	39d55544 	addi	r7,r7,21845
 8007f48:	800a5900 	call	800a590 <__adddf3>
 8007f4c:	1009883a 	mov	r4,r2
 8007f50:	180b883a 	mov	r5,r3
 8007f54:	900d883a 	mov	r6,r18
 8007f58:	880f883a 	mov	r7,r17
 8007f5c:	800b9f00 	call	800b9f0 <__muldf3>
 8007f60:	1013883a 	mov	r9,r2
 8007f64:	1017883a 	mov	r11,r2
 8007f68:	008ff4f4 	movhi	r2,16339
 8007f6c:	108ccc84 	addi	r2,r2,13106
 8007f70:	902b883a 	mov	r21,r18
 8007f74:	8829883a 	mov	r20,r17
 8007f78:	1811883a 	mov	r8,r3
 8007f7c:	1815883a 	mov	r10,r3
 8007f80:	143f880e 	bge	r2,r16,8007da4 <__alt_data_end+0xfc007da4>
 8007f84:	008ffa74 	movhi	r2,16361
 8007f88:	14004416 	blt	r2,r16,800809c <__kernel_cos+0x484>
 8007f8c:	00bff834 	movhi	r2,65504
 8007f90:	80a1883a 	add	r16,r16,r2
 8007f94:	0009883a 	mov	r4,zero
 8007f98:	014ffc34 	movhi	r5,16368
 8007f9c:	000d883a 	mov	r6,zero
 8007fa0:	800f883a 	mov	r7,r16
 8007fa4:	da400115 	stw	r9,4(sp)
 8007fa8:	d8c00215 	stw	r3,8(sp)
 8007fac:	800c25c0 	call	800c25c <__subdf3>
 8007fb0:	da000217 	ldw	r8,8(sp)
 8007fb4:	da400117 	ldw	r9,4(sp)
 8007fb8:	102b883a 	mov	r21,r2
 8007fbc:	d8c00015 	stw	r3,0(sp)
 8007fc0:	9009883a 	mov	r4,r18
 8007fc4:	880b883a 	mov	r5,r17
 8007fc8:	000d883a 	mov	r6,zero
 8007fcc:	01cff834 	movhi	r7,16352
 8007fd0:	da000215 	stw	r8,8(sp)
 8007fd4:	da400115 	stw	r9,4(sp)
 8007fd8:	800b9f00 	call	800b9f0 <__muldf3>
 8007fdc:	800f883a 	mov	r7,r16
 8007fe0:	1009883a 	mov	r4,r2
 8007fe4:	180b883a 	mov	r5,r3
 8007fe8:	000d883a 	mov	r6,zero
 8007fec:	800c25c0 	call	800c25c <__subdf3>
 8007ff0:	da400117 	ldw	r9,4(sp)
 8007ff4:	da000217 	ldw	r8,8(sp)
 8007ff8:	9009883a 	mov	r4,r18
 8007ffc:	480d883a 	mov	r6,r9
 8008000:	400f883a 	mov	r7,r8
 8008004:	880b883a 	mov	r5,r17
 8008008:	1029883a 	mov	r20,r2
 800800c:	1821883a 	mov	r16,r3
 8008010:	800b9f00 	call	800b9f0 <__muldf3>
 8008014:	b009883a 	mov	r4,r22
 8008018:	980b883a 	mov	r5,r19
 800801c:	b80d883a 	mov	r6,r23
 8008020:	e00f883a 	mov	r7,fp
 8008024:	1025883a 	mov	r18,r2
 8008028:	1823883a 	mov	r17,r3
 800802c:	800b9f00 	call	800b9f0 <__muldf3>
 8008030:	9009883a 	mov	r4,r18
 8008034:	880b883a 	mov	r5,r17
 8008038:	100d883a 	mov	r6,r2
 800803c:	180f883a 	mov	r7,r3
 8008040:	800c25c0 	call	800c25c <__subdf3>
 8008044:	a009883a 	mov	r4,r20
 8008048:	800b883a 	mov	r5,r16
 800804c:	100d883a 	mov	r6,r2
 8008050:	180f883a 	mov	r7,r3
 8008054:	800c25c0 	call	800c25c <__subdf3>
 8008058:	d9400017 	ldw	r5,0(sp)
 800805c:	a809883a 	mov	r4,r21
 8008060:	100d883a 	mov	r6,r2
 8008064:	180f883a 	mov	r7,r3
 8008068:	800c25c0 	call	800c25c <__subdf3>
 800806c:	dfc00c17 	ldw	ra,48(sp)
 8008070:	df000b17 	ldw	fp,44(sp)
 8008074:	ddc00a17 	ldw	r23,40(sp)
 8008078:	dd800917 	ldw	r22,36(sp)
 800807c:	dd400817 	ldw	r21,32(sp)
 8008080:	dd000717 	ldw	r20,28(sp)
 8008084:	dcc00617 	ldw	r19,24(sp)
 8008088:	dc800517 	ldw	r18,20(sp)
 800808c:	dc400417 	ldw	r17,16(sp)
 8008090:	dc000317 	ldw	r16,12(sp)
 8008094:	dec00d04 	addi	sp,sp,52
 8008098:	f800283a 	ret
 800809c:	008ff9f4 	movhi	r2,16359
 80080a0:	002b883a 	mov	r21,zero
 80080a4:	d8800015 	stw	r2,0(sp)
 80080a8:	040ff4b4 	movhi	r16,16338
 80080ac:	003fc406 	br	8007fc0 <__alt_data_end+0xfc007fc0>
 80080b0:	0005883a 	mov	r2,zero
 80080b4:	00cffc34 	movhi	r3,16368
 80080b8:	003fec06 	br	800806c <__alt_data_end+0xfc00806c>

080080bc <__kernel_rem_pio2>:
 80080bc:	deff5b04 	addi	sp,sp,-660
 80080c0:	da00a517 	ldw	r8,660(sp)
 80080c4:	00c200b4 	movhi	r3,2050
 80080c8:	18c0b104 	addi	r3,r3,708
 80080cc:	4205883a 	add	r2,r8,r8
 80080d0:	1085883a 	add	r2,r2,r2
 80080d4:	1885883a 	add	r2,r3,r2
 80080d8:	d9008d15 	stw	r4,564(sp)
 80080dc:	d9409015 	stw	r5,576(sp)
 80080e0:	313fff44 	addi	r4,r6,-3
 80080e4:	01400604 	movi	r5,24
 80080e8:	dd80a115 	stw	r22,644(sp)
 80080ec:	dc009b15 	stw	r16,620(sp)
 80080f0:	dfc0a415 	stw	ra,656(sp)
 80080f4:	df00a315 	stw	fp,652(sp)
 80080f8:	ddc0a215 	stw	r23,648(sp)
 80080fc:	dd40a015 	stw	r21,640(sp)
 8008100:	dd009f15 	stw	r20,636(sp)
 8008104:	dcc09e15 	stw	r19,632(sp)
 8008108:	dc809d15 	stw	r18,628(sp)
 800810c:	dc409c15 	stw	r17,624(sp)
 8008110:	3021883a 	mov	r16,r6
 8008114:	d9c09315 	stw	r7,588(sp)
 8008118:	15800017 	ldw	r22,0(r2)
 800811c:	8009f240 	call	8009f24 <__divsi3>
 8008120:	da009317 	ldw	r8,588(sp)
 8008124:	d8809215 	stw	r2,584(sp)
 8008128:	423fffc4 	addi	r8,r8,-1
 800812c:	da008c15 	stw	r8,560(sp)
 8008130:	10032c16 	blt	r2,zero,8008de4 <__kernel_rem_pio2+0xd28>
 8008134:	da009217 	ldw	r8,584(sp)
 8008138:	01400604 	movi	r5,24
 800813c:	0208303a 	nor	r4,zero,r8
 8008140:	8009fe40 	call	8009fe4 <__mulsi3>
 8008144:	da008c17 	ldw	r8,560(sp)
 8008148:	1421883a 	add	r16,r2,r16
 800814c:	d8809217 	ldw	r2,584(sp)
 8008150:	4587883a 	add	r3,r8,r22
 8008154:	dc008f15 	stw	r16,572(sp)
 8008158:	1223c83a 	sub	r17,r2,r8
 800815c:	18001016 	blt	r3,zero,80081a0 <__kernel_rem_pio2+0xe4>
 8008160:	da00a617 	ldw	r8,664(sp)
 8008164:	8c65883a 	add	r18,r17,r17
 8008168:	94a5883a 	add	r18,r18,r18
 800816c:	88c7883a 	add	r3,r17,r3
 8008170:	dcc05004 	addi	r19,sp,320
 8008174:	44a5883a 	add	r18,r8,r18
 8008178:	1c000044 	addi	r16,r3,1
 800817c:	88014616 	blt	r17,zero,8008698 <__kernel_rem_pio2+0x5dc>
 8008180:	91000017 	ldw	r4,0(r18)
 8008184:	800cbb40 	call	800cbb4 <__floatsidf>
 8008188:	98800015 	stw	r2,0(r19)
 800818c:	98c00115 	stw	r3,4(r19)
 8008190:	8c400044 	addi	r17,r17,1
 8008194:	9cc00204 	addi	r19,r19,8
 8008198:	94800104 	addi	r18,r18,4
 800819c:	8c3ff71e 	bne	r17,r16,800817c <__alt_data_end+0xfc00817c>
 80081a0:	b0002116 	blt	r22,zero,8008228 <__kernel_rem_pio2+0x16c>
 80081a4:	da009317 	ldw	r8,588(sp)
 80081a8:	b02490fa 	slli	r18,r22,3
 80081ac:	d8805004 	addi	r2,sp,320
 80081b0:	402e90fa 	slli	r23,r8,3
 80081b4:	d823883a 	mov	r17,sp
 80081b8:	dc004e04 	addi	r16,sp,312
 80081bc:	14b9883a 	add	fp,r2,r18
 80081c0:	da008c17 	ldw	r8,560(sp)
 80081c4:	40015916 	blt	r8,zero,800872c <__kernel_rem_pio2+0x670>
 80081c8:	dcc08d17 	ldw	r19,564(sp)
 80081cc:	85e5883a 	add	r18,r16,r23
 80081d0:	002b883a 	mov	r21,zero
 80081d4:	0029883a 	mov	r20,zero
 80081d8:	99000017 	ldw	r4,0(r19)
 80081dc:	99400117 	ldw	r5,4(r19)
 80081e0:	91800017 	ldw	r6,0(r18)
 80081e4:	91c00117 	ldw	r7,4(r18)
 80081e8:	94bffe04 	addi	r18,r18,-8
 80081ec:	9cc00204 	addi	r19,r19,8
 80081f0:	800b9f00 	call	800b9f0 <__muldf3>
 80081f4:	a809883a 	mov	r4,r21
 80081f8:	a00b883a 	mov	r5,r20
 80081fc:	100d883a 	mov	r6,r2
 8008200:	180f883a 	mov	r7,r3
 8008204:	800a5900 	call	800a590 <__adddf3>
 8008208:	102b883a 	mov	r21,r2
 800820c:	1829883a 	mov	r20,r3
 8008210:	84bff11e 	bne	r16,r18,80081d8 <__alt_data_end+0xfc0081d8>
 8008214:	8d400015 	stw	r21,0(r17)
 8008218:	8d000115 	stw	r20,4(r17)
 800821c:	84000204 	addi	r16,r16,8
 8008220:	8c400204 	addi	r17,r17,8
 8008224:	873fe61e 	bne	r16,fp,80081c0 <__alt_data_end+0xfc0081c0>
 8008228:	b02090ba 	slli	r16,r22,2
 800822c:	d9009317 	ldw	r4,588(sp)
 8008230:	017ffe04 	movi	r5,-8
 8008234:	8161883a 	add	r16,r16,r5
 8008238:	8009fe40 	call	8009fe4 <__mulsi3>
 800823c:	d8808e15 	stw	r2,568(sp)
 8008240:	b0bfffc4 	addi	r2,r22,-1
 8008244:	1085883a 	add	r2,r2,r2
 8008248:	da007804 	addi	r8,sp,480
 800824c:	4411883a 	add	r8,r8,r16
 8008250:	1085883a 	add	r2,r2,r2
 8008254:	80c00104 	addi	r3,r16,4
 8008258:	d885883a 	add	r2,sp,r2
 800825c:	da009515 	stw	r8,596(sp)
 8008260:	da007804 	addi	r8,sp,480
 8008264:	40d1883a 	add	r8,r8,r3
 8008268:	10807804 	addi	r2,r2,480
 800826c:	da009615 	stw	r8,600(sp)
 8008270:	b021883a 	mov	r16,r22
 8008274:	d8809715 	stw	r2,604(sp)
 8008278:	dd809415 	stw	r22,592(sp)
 800827c:	800490fa 	slli	r2,r16,3
 8008280:	d885883a 	add	r2,sp,r2
 8008284:	15c00017 	ldw	r23,0(r2)
 8008288:	15000117 	ldw	r20,4(r2)
 800828c:	04002d0e 	bge	zero,r16,8008344 <__kernel_rem_pio2+0x288>
 8008290:	00880034 	movhi	r2,8192
 8008294:	10bfffc4 	addi	r2,r2,-1
 8008298:	80a5883a 	add	r18,r16,r2
 800829c:	902490fa 	slli	r18,r18,3
 80082a0:	8423883a 	add	r17,r16,r16
 80082a4:	8c63883a 	add	r17,r17,r17
 80082a8:	dcc07804 	addi	r19,sp,480
 80082ac:	dca5883a 	add	r18,sp,r18
 80082b0:	9c63883a 	add	r17,r19,r17
 80082b4:	000d883a 	mov	r6,zero
 80082b8:	01cf9c34 	movhi	r7,15984
 80082bc:	b809883a 	mov	r4,r23
 80082c0:	a00b883a 	mov	r5,r20
 80082c4:	800b9f00 	call	800b9f0 <__muldf3>
 80082c8:	180b883a 	mov	r5,r3
 80082cc:	1009883a 	mov	r4,r2
 80082d0:	800cb2c0 	call	800cb2c <__fixdfsi>
 80082d4:	1009883a 	mov	r4,r2
 80082d8:	800cbb40 	call	800cbb4 <__floatsidf>
 80082dc:	1009883a 	mov	r4,r2
 80082e0:	180b883a 	mov	r5,r3
 80082e4:	000d883a 	mov	r6,zero
 80082e8:	01d05c34 	movhi	r7,16752
 80082ec:	102d883a 	mov	r22,r2
 80082f0:	182b883a 	mov	r21,r3
 80082f4:	800b9f00 	call	800b9f0 <__muldf3>
 80082f8:	b809883a 	mov	r4,r23
 80082fc:	a00b883a 	mov	r5,r20
 8008300:	100d883a 	mov	r6,r2
 8008304:	180f883a 	mov	r7,r3
 8008308:	800c25c0 	call	800c25c <__subdf3>
 800830c:	180b883a 	mov	r5,r3
 8008310:	1009883a 	mov	r4,r2
 8008314:	800cb2c0 	call	800cb2c <__fixdfsi>
 8008318:	91800017 	ldw	r6,0(r18)
 800831c:	91c00117 	ldw	r7,4(r18)
 8008320:	98800015 	stw	r2,0(r19)
 8008324:	b009883a 	mov	r4,r22
 8008328:	a80b883a 	mov	r5,r21
 800832c:	800a5900 	call	800a590 <__adddf3>
 8008330:	9cc00104 	addi	r19,r19,4
 8008334:	102f883a 	mov	r23,r2
 8008338:	1829883a 	mov	r20,r3
 800833c:	94bffe04 	addi	r18,r18,-8
 8008340:	9c7fdc1e 	bne	r19,r17,80082b4 <__alt_data_end+0xfc0082b4>
 8008344:	d9808f17 	ldw	r6,572(sp)
 8008348:	a00b883a 	mov	r5,r20
 800834c:	b809883a 	mov	r4,r23
 8008350:	80095440 	call	8009544 <scalbn>
 8008354:	000d883a 	mov	r6,zero
 8008358:	01cff034 	movhi	r7,16320
 800835c:	1009883a 	mov	r4,r2
 8008360:	180b883a 	mov	r5,r3
 8008364:	1025883a 	mov	r18,r2
 8008368:	1823883a 	mov	r17,r3
 800836c:	800b9f00 	call	800b9f0 <__muldf3>
 8008370:	1009883a 	mov	r4,r2
 8008374:	180b883a 	mov	r5,r3
 8008378:	80090e40 	call	80090e4 <floor>
 800837c:	1009883a 	mov	r4,r2
 8008380:	180b883a 	mov	r5,r3
 8008384:	000d883a 	mov	r6,zero
 8008388:	01d00834 	movhi	r7,16416
 800838c:	800b9f00 	call	800b9f0 <__muldf3>
 8008390:	100d883a 	mov	r6,r2
 8008394:	180f883a 	mov	r7,r3
 8008398:	9009883a 	mov	r4,r18
 800839c:	880b883a 	mov	r5,r17
 80083a0:	800c25c0 	call	800c25c <__subdf3>
 80083a4:	180b883a 	mov	r5,r3
 80083a8:	1009883a 	mov	r4,r2
 80083ac:	1825883a 	mov	r18,r3
 80083b0:	1027883a 	mov	r19,r2
 80083b4:	800cb2c0 	call	800cb2c <__fixdfsi>
 80083b8:	1009883a 	mov	r4,r2
 80083bc:	1023883a 	mov	r17,r2
 80083c0:	800cbb40 	call	800cbb4 <__floatsidf>
 80083c4:	9809883a 	mov	r4,r19
 80083c8:	900b883a 	mov	r5,r18
 80083cc:	100d883a 	mov	r6,r2
 80083d0:	180f883a 	mov	r7,r3
 80083d4:	800c25c0 	call	800c25c <__subdf3>
 80083d8:	da008f17 	ldw	r8,572(sp)
 80083dc:	1019883a 	mov	r12,r2
 80083e0:	1029883a 	mov	r20,r2
 80083e4:	1817883a 	mov	r11,r3
 80083e8:	0200ae0e 	bge	zero,r8,80086a4 <__kernel_rem_pio2+0x5e8>
 80083ec:	80bfffc4 	addi	r2,r16,-1
 80083f0:	1085883a 	add	r2,r2,r2
 80083f4:	1085883a 	add	r2,r2,r2
 80083f8:	d885883a 	add	r2,sp,r2
 80083fc:	10807804 	addi	r2,r2,480
 8008400:	11400017 	ldw	r5,0(r2)
 8008404:	01000604 	movi	r4,24
 8008408:	2209c83a 	sub	r4,r4,r8
 800840c:	290dd83a 	sra	r6,r5,r4
 8008410:	048005c4 	movi	r18,23
 8008414:	9225c83a 	sub	r18,r18,r8
 8008418:	3108983a 	sll	r4,r6,r4
 800841c:	89a3883a 	add	r17,r17,r6
 8008420:	2909c83a 	sub	r4,r5,r4
 8008424:	24a5d83a 	sra	r18,r4,r18
 8008428:	11000015 	stw	r4,0(r2)
 800842c:	04802a0e 	bge	zero,r18,80084d8 <__kernel_rem_pio2+0x41c>
 8008430:	8c400044 	addi	r17,r17,1
 8008434:	0400c40e 	bge	zero,r16,8008748 <__kernel_rem_pio2+0x68c>
 8008438:	01404034 	movhi	r5,256
 800843c:	297fffc4 	addi	r5,r5,-1
 8008440:	da007804 	addi	r8,sp,480
 8008444:	0015883a 	mov	r10,zero
 8008448:	0027883a 	mov	r19,zero
 800844c:	01004034 	movhi	r4,256
 8008450:	00000706 	br	8008470 <__kernel_rem_pio2+0x3b4>
 8008454:	208dc83a 	sub	r6,r4,r2
 8008458:	10000226 	beq	r2,zero,8008464 <__kernel_rem_pio2+0x3a8>
 800845c:	41800015 	stw	r6,0(r8)
 8008460:	04c00044 	movi	r19,1
 8008464:	52800044 	addi	r10,r10,1
 8008468:	42000104 	addi	r8,r8,4
 800846c:	5400080e 	bge	r10,r16,8008490 <__kernel_rem_pio2+0x3d4>
 8008470:	40800017 	ldw	r2,0(r8)
 8008474:	983ff726 	beq	r19,zero,8008454 <__alt_data_end+0xfc008454>
 8008478:	2885c83a 	sub	r2,r5,r2
 800847c:	40800015 	stw	r2,0(r8)
 8008480:	52800044 	addi	r10,r10,1
 8008484:	04c00044 	movi	r19,1
 8008488:	42000104 	addi	r8,r8,4
 800848c:	543ff816 	blt	r10,r16,8008470 <__alt_data_end+0xfc008470>
 8008490:	da008f17 	ldw	r8,572(sp)
 8008494:	02000e0e 	bge	zero,r8,80084d0 <__kernel_rem_pio2+0x414>
 8008498:	00800044 	movi	r2,1
 800849c:	40808a26 	beq	r8,r2,80086c8 <__kernel_rem_pio2+0x60c>
 80084a0:	00800084 	movi	r2,2
 80084a4:	40800a1e 	bne	r8,r2,80084d0 <__kernel_rem_pio2+0x414>
 80084a8:	80bfffc4 	addi	r2,r16,-1
 80084ac:	1085883a 	add	r2,r2,r2
 80084b0:	1085883a 	add	r2,r2,r2
 80084b4:	d885883a 	add	r2,sp,r2
 80084b8:	10807804 	addi	r2,r2,480
 80084bc:	11400017 	ldw	r5,0(r2)
 80084c0:	01001034 	movhi	r4,64
 80084c4:	213fffc4 	addi	r4,r4,-1
 80084c8:	2908703a 	and	r4,r5,r4
 80084cc:	11000015 	stw	r4,0(r2)
 80084d0:	00800084 	movi	r2,2
 80084d4:	90805a26 	beq	r18,r2,8008640 <__kernel_rem_pio2+0x584>
 80084d8:	580b883a 	mov	r5,r11
 80084dc:	a009883a 	mov	r4,r20
 80084e0:	000d883a 	mov	r6,zero
 80084e4:	000f883a 	mov	r7,zero
 80084e8:	dac09a15 	stw	r11,616(sp)
 80084ec:	800b7ac0 	call	800b7ac <__eqdf2>
 80084f0:	dac09a17 	ldw	r11,616(sp)
 80084f4:	1000961e 	bne	r2,zero,8008750 <__kernel_rem_pio2+0x694>
 80084f8:	da009417 	ldw	r8,592(sp)
 80084fc:	817fffc4 	addi	r5,r16,-1
 8008500:	2a000b16 	blt	r5,r8,8008530 <__kernel_rem_pio2+0x474>
 8008504:	800490ba 	slli	r2,r16,2
 8008508:	d9809617 	ldw	r6,600(sp)
 800850c:	d9007804 	addi	r4,sp,480
 8008510:	10bfff04 	addi	r2,r2,-4
 8008514:	0007883a 	mov	r3,zero
 8008518:	2085883a 	add	r2,r4,r2
 800851c:	11000017 	ldw	r4,0(r2)
 8008520:	10bfff04 	addi	r2,r2,-4
 8008524:	1906b03a 	or	r3,r3,r4
 8008528:	11bffc1e 	bne	r2,r6,800851c <__alt_data_end+0xfc00851c>
 800852c:	18013c1e 	bne	r3,zero,8008a20 <__kernel_rem_pio2+0x964>
 8008530:	da009717 	ldw	r8,604(sp)
 8008534:	40800017 	ldw	r2,0(r8)
 8008538:	1001371e 	bne	r2,zero,8008a18 <__kernel_rem_pio2+0x95c>
 800853c:	d8809517 	ldw	r2,596(sp)
 8008540:	00c00044 	movi	r3,1
 8008544:	10bfff04 	addi	r2,r2,-4
 8008548:	11000117 	ldw	r4,4(r2)
 800854c:	18c00044 	addi	r3,r3,1
 8008550:	203ffc26 	beq	r4,zero,8008544 <__alt_data_end+0xfc008544>
 8008554:	80c7883a 	add	r3,r16,r3
 8008558:	80800044 	addi	r2,r16,1
 800855c:	d8c09115 	stw	r3,580(sp)
 8008560:	18803216 	blt	r3,r2,800862c <__kernel_rem_pio2+0x570>
 8008564:	da009317 	ldw	r8,588(sp)
 8008568:	8223883a 	add	r17,r16,r8
 800856c:	da009117 	ldw	r8,580(sp)
 8008570:	882290fa 	slli	r17,r17,3
 8008574:	45000044 	addi	r20,r8,1
 8008578:	da009217 	ldw	r8,584(sp)
 800857c:	a02890fa 	slli	r20,r20,3
 8008580:	1227883a 	add	r19,r2,r8
 8008584:	100490fa 	slli	r2,r2,3
 8008588:	da00a617 	ldw	r8,664(sp)
 800858c:	9ce7883a 	add	r19,r19,r19
 8008590:	9ce7883a 	add	r19,r19,r19
 8008594:	d8a5883a 	add	r18,sp,r2
 8008598:	d8805004 	addi	r2,sp,320
 800859c:	44e7883a 	add	r19,r8,r19
 80085a0:	1463883a 	add	r17,r2,r17
 80085a4:	dd29883a 	add	r20,sp,r20
 80085a8:	99000017 	ldw	r4,0(r19)
 80085ac:	800cbb40 	call	800cbb4 <__floatsidf>
 80085b0:	da008c17 	ldw	r8,560(sp)
 80085b4:	88800015 	stw	r2,0(r17)
 80085b8:	88c00115 	stw	r3,4(r17)
 80085bc:	40001d16 	blt	r8,zero,8008634 <__kernel_rem_pio2+0x578>
 80085c0:	da008e17 	ldw	r8,568(sp)
 80085c4:	dd808d17 	ldw	r22,564(sp)
 80085c8:	8821883a 	mov	r16,r17
 80085cc:	8a2b883a 	add	r21,r17,r8
 80085d0:	0039883a 	mov	fp,zero
 80085d4:	002f883a 	mov	r23,zero
 80085d8:	b1000017 	ldw	r4,0(r22)
 80085dc:	b1400117 	ldw	r5,4(r22)
 80085e0:	81800017 	ldw	r6,0(r16)
 80085e4:	81c00117 	ldw	r7,4(r16)
 80085e8:	843ffe04 	addi	r16,r16,-8
 80085ec:	b5800204 	addi	r22,r22,8
 80085f0:	800b9f00 	call	800b9f0 <__muldf3>
 80085f4:	e009883a 	mov	r4,fp
 80085f8:	b80b883a 	mov	r5,r23
 80085fc:	100d883a 	mov	r6,r2
 8008600:	180f883a 	mov	r7,r3
 8008604:	800a5900 	call	800a590 <__adddf3>
 8008608:	1039883a 	mov	fp,r2
 800860c:	182f883a 	mov	r23,r3
 8008610:	857ff11e 	bne	r16,r21,80085d8 <__alt_data_end+0xfc0085d8>
 8008614:	97000015 	stw	fp,0(r18)
 8008618:	95c00115 	stw	r23,4(r18)
 800861c:	94800204 	addi	r18,r18,8
 8008620:	9cc00104 	addi	r19,r19,4
 8008624:	8c400204 	addi	r17,r17,8
 8008628:	953fdf1e 	bne	r18,r20,80085a8 <__alt_data_end+0xfc0085a8>
 800862c:	dc009117 	ldw	r16,580(sp)
 8008630:	003f1206 	br	800827c <__alt_data_end+0xfc00827c>
 8008634:	0039883a 	mov	fp,zero
 8008638:	002f883a 	mov	r23,zero
 800863c:	003ff506 	br	8008614 <__alt_data_end+0xfc008614>
 8008640:	0009883a 	mov	r4,zero
 8008644:	014ffc34 	movhi	r5,16368
 8008648:	600d883a 	mov	r6,r12
 800864c:	180f883a 	mov	r7,r3
 8008650:	800c25c0 	call	800c25c <__subdf3>
 8008654:	1029883a 	mov	r20,r2
 8008658:	1817883a 	mov	r11,r3
 800865c:	983f9e26 	beq	r19,zero,80084d8 <__alt_data_end+0xfc0084d8>
 8008660:	d9808f17 	ldw	r6,572(sp)
 8008664:	0009883a 	mov	r4,zero
 8008668:	014ffc34 	movhi	r5,16368
 800866c:	d8c09a15 	stw	r3,616(sp)
 8008670:	80095440 	call	8009544 <scalbn>
 8008674:	dac09a17 	ldw	r11,616(sp)
 8008678:	a009883a 	mov	r4,r20
 800867c:	100d883a 	mov	r6,r2
 8008680:	580b883a 	mov	r5,r11
 8008684:	180f883a 	mov	r7,r3
 8008688:	800c25c0 	call	800c25c <__subdf3>
 800868c:	1029883a 	mov	r20,r2
 8008690:	1817883a 	mov	r11,r3
 8008694:	003f9006 	br	80084d8 <__alt_data_end+0xfc0084d8>
 8008698:	0005883a 	mov	r2,zero
 800869c:	0007883a 	mov	r3,zero
 80086a0:	003eb906 	br	8008188 <__alt_data_end+0xfc008188>
 80086a4:	da008f17 	ldw	r8,572(sp)
 80086a8:	4000121e 	bne	r8,zero,80086f4 <__kernel_rem_pio2+0x638>
 80086ac:	80bfffc4 	addi	r2,r16,-1
 80086b0:	1085883a 	add	r2,r2,r2
 80086b4:	1085883a 	add	r2,r2,r2
 80086b8:	d885883a 	add	r2,sp,r2
 80086bc:	14807817 	ldw	r18,480(r2)
 80086c0:	9025d5fa 	srai	r18,r18,23
 80086c4:	003f5906 	br	800842c <__alt_data_end+0xfc00842c>
 80086c8:	80bfffc4 	addi	r2,r16,-1
 80086cc:	1085883a 	add	r2,r2,r2
 80086d0:	1085883a 	add	r2,r2,r2
 80086d4:	d885883a 	add	r2,sp,r2
 80086d8:	10807804 	addi	r2,r2,480
 80086dc:	11000017 	ldw	r4,0(r2)
 80086e0:	01402034 	movhi	r5,128
 80086e4:	297fffc4 	addi	r5,r5,-1
 80086e8:	2148703a 	and	r4,r4,r5
 80086ec:	11000015 	stw	r4,0(r2)
 80086f0:	003f7706 	br	80084d0 <__alt_data_end+0xfc0084d0>
 80086f4:	180b883a 	mov	r5,r3
 80086f8:	1009883a 	mov	r4,r2
 80086fc:	000d883a 	mov	r6,zero
 8008700:	01cff834 	movhi	r7,16352
 8008704:	d8c09915 	stw	r3,612(sp)
 8008708:	d8c09a15 	stw	r3,616(sp)
 800870c:	d8809815 	stw	r2,608(sp)
 8008710:	800b8300 	call	800b830 <__gedf2>
 8008714:	d8c09917 	ldw	r3,612(sp)
 8008718:	dac09a17 	ldw	r11,616(sp)
 800871c:	db009817 	ldw	r12,608(sp)
 8008720:	1000050e 	bge	r2,zero,8008738 <__kernel_rem_pio2+0x67c>
 8008724:	0025883a 	mov	r18,zero
 8008728:	003f6b06 	br	80084d8 <__alt_data_end+0xfc0084d8>
 800872c:	002b883a 	mov	r21,zero
 8008730:	0029883a 	mov	r20,zero
 8008734:	003eb706 	br	8008214 <__alt_data_end+0xfc008214>
 8008738:	8c400044 	addi	r17,r17,1
 800873c:	0401960e 	bge	zero,r16,8008d98 <__kernel_rem_pio2+0xcdc>
 8008740:	04800084 	movi	r18,2
 8008744:	003f3c06 	br	8008438 <__alt_data_end+0xfc008438>
 8008748:	0027883a 	mov	r19,zero
 800874c:	003f5006 	br	8008490 <__alt_data_end+0xfc008490>
 8008750:	da008f17 	ldw	r8,572(sp)
 8008754:	a009883a 	mov	r4,r20
 8008758:	580b883a 	mov	r5,r11
 800875c:	020dc83a 	sub	r6,zero,r8
 8008760:	dc808c15 	stw	r18,560(sp)
 8008764:	dd809417 	ldw	r22,592(sp)
 8008768:	dc408e15 	stw	r17,568(sp)
 800876c:	80095440 	call	8009544 <scalbn>
 8008770:	1009883a 	mov	r4,r2
 8008774:	180b883a 	mov	r5,r3
 8008778:	000d883a 	mov	r6,zero
 800877c:	01d05c34 	movhi	r7,16752
 8008780:	1029883a 	mov	r20,r2
 8008784:	182f883a 	mov	r23,r3
 8008788:	800b8300 	call	800b830 <__gedf2>
 800878c:	10018b16 	blt	r2,zero,8008dbc <__kernel_rem_pio2+0xd00>
 8008790:	01cf9c34 	movhi	r7,15984
 8008794:	000d883a 	mov	r6,zero
 8008798:	a009883a 	mov	r4,r20
 800879c:	b80b883a 	mov	r5,r23
 80087a0:	800b9f00 	call	800b9f0 <__muldf3>
 80087a4:	180b883a 	mov	r5,r3
 80087a8:	1009883a 	mov	r4,r2
 80087ac:	800cb2c0 	call	800cb2c <__fixdfsi>
 80087b0:	840d883a 	add	r6,r16,r16
 80087b4:	318d883a 	add	r6,r6,r6
 80087b8:	1009883a 	mov	r4,r2
 80087bc:	d9a7883a 	add	r19,sp,r6
 80087c0:	102b883a 	mov	r21,r2
 80087c4:	800cbb40 	call	800cbb4 <__floatsidf>
 80087c8:	1009883a 	mov	r4,r2
 80087cc:	180b883a 	mov	r5,r3
 80087d0:	000d883a 	mov	r6,zero
 80087d4:	01d05c34 	movhi	r7,16752
 80087d8:	800b9f00 	call	800b9f0 <__muldf3>
 80087dc:	a009883a 	mov	r4,r20
 80087e0:	b80b883a 	mov	r5,r23
 80087e4:	100d883a 	mov	r6,r2
 80087e8:	180f883a 	mov	r7,r3
 80087ec:	800c25c0 	call	800c25c <__subdf3>
 80087f0:	180b883a 	mov	r5,r3
 80087f4:	1009883a 	mov	r4,r2
 80087f8:	800cb2c0 	call	800cb2c <__fixdfsi>
 80087fc:	da008f17 	ldw	r8,572(sp)
 8008800:	84400044 	addi	r17,r16,1
 8008804:	8c47883a 	add	r3,r17,r17
 8008808:	9cc07804 	addi	r19,r19,480
 800880c:	18c7883a 	add	r3,r3,r3
 8008810:	98800015 	stw	r2,0(r19)
 8008814:	d8c7883a 	add	r3,sp,r3
 8008818:	42000604 	addi	r8,r8,24
 800881c:	da008f15 	stw	r8,572(sp)
 8008820:	1d407815 	stw	r21,480(r3)
 8008824:	d9808f17 	ldw	r6,572(sp)
 8008828:	0009883a 	mov	r4,zero
 800882c:	014ffc34 	movhi	r5,16368
 8008830:	80095440 	call	8009544 <scalbn>
 8008834:	1029883a 	mov	r20,r2
 8008838:	182b883a 	mov	r21,r3
 800883c:	88006e16 	blt	r17,zero,80089f8 <__kernel_rem_pio2+0x93c>
 8008840:	881090fa 	slli	r8,r17,3
 8008844:	d8c07804 	addi	r3,sp,480
 8008848:	dc3ffe04 	addi	r16,sp,-8
 800884c:	da008d15 	stw	r8,564(sp)
 8008850:	d8808d17 	ldw	r2,564(sp)
 8008854:	8c51883a 	add	r8,r17,r17
 8008858:	4211883a 	add	r8,r8,r8
 800885c:	d8a7883a 	add	r19,sp,r2
 8008860:	1a2f883a 	add	r23,r3,r8
 8008864:	9839883a 	mov	fp,r19
 8008868:	b9000017 	ldw	r4,0(r23)
 800886c:	e73ffe04 	addi	fp,fp,-8
 8008870:	bdffff04 	addi	r23,r23,-4
 8008874:	800cbb40 	call	800cbb4 <__floatsidf>
 8008878:	a00d883a 	mov	r6,r20
 800887c:	a80f883a 	mov	r7,r21
 8008880:	1009883a 	mov	r4,r2
 8008884:	180b883a 	mov	r5,r3
 8008888:	800b9f00 	call	800b9f0 <__muldf3>
 800888c:	a009883a 	mov	r4,r20
 8008890:	a80b883a 	mov	r5,r21
 8008894:	e0800215 	stw	r2,8(fp)
 8008898:	e0c00315 	stw	r3,12(fp)
 800889c:	000d883a 	mov	r6,zero
 80088a0:	01cf9c34 	movhi	r7,15984
 80088a4:	800b9f00 	call	800b9f0 <__muldf3>
 80088a8:	1029883a 	mov	r20,r2
 80088ac:	182b883a 	mov	r21,r3
 80088b0:	e43fed1e 	bne	fp,r16,8008868 <__alt_data_end+0xfc008868>
 80088b4:	8a000044 	addi	r8,r17,1
 80088b8:	0029883a 	mov	r20,zero
 80088bc:	4039883a 	mov	fp,r8
 80088c0:	dc408f15 	stw	r17,572(sp)
 80088c4:	b0004916 	blt	r22,zero,80089ec <__kernel_rem_pio2+0x930>
 80088c8:	a0004816 	blt	r20,zero,80089ec <__kernel_rem_pio2+0x930>
 80088cc:	040200b4 	movhi	r16,2050
 80088d0:	8400a104 	addi	r16,r16,644
 80088d4:	982b883a 	mov	r21,r19
 80088d8:	0023883a 	mov	r17,zero
 80088dc:	002f883a 	mov	r23,zero
 80088e0:	0025883a 	mov	r18,zero
 80088e4:	00000206 	br	80088f0 <__kernel_rem_pio2+0x834>
 80088e8:	ad400204 	addi	r21,r21,8
 80088ec:	a4800f16 	blt	r20,r18,800892c <__kernel_rem_pio2+0x870>
 80088f0:	81000017 	ldw	r4,0(r16)
 80088f4:	81400117 	ldw	r5,4(r16)
 80088f8:	a9800017 	ldw	r6,0(r21)
 80088fc:	a9c00117 	ldw	r7,4(r21)
 8008900:	94800044 	addi	r18,r18,1
 8008904:	84000204 	addi	r16,r16,8
 8008908:	800b9f00 	call	800b9f0 <__muldf3>
 800890c:	8809883a 	mov	r4,r17
 8008910:	b80b883a 	mov	r5,r23
 8008914:	100d883a 	mov	r6,r2
 8008918:	180f883a 	mov	r7,r3
 800891c:	800a5900 	call	800a590 <__adddf3>
 8008920:	1023883a 	mov	r17,r2
 8008924:	182f883a 	mov	r23,r3
 8008928:	b4bfef0e 	bge	r22,r18,80088e8 <__alt_data_end+0xfc0088e8>
 800892c:	a00490fa 	slli	r2,r20,3
 8008930:	a5000044 	addi	r20,r20,1
 8008934:	9cfffe04 	addi	r19,r19,-8
 8008938:	d885883a 	add	r2,sp,r2
 800893c:	10802804 	addi	r2,r2,160
 8008940:	14400015 	stw	r17,0(r2)
 8008944:	15c00115 	stw	r23,4(r2)
 8008948:	a73fde1e 	bne	r20,fp,80088c4 <__alt_data_end+0xfc0088c4>
 800894c:	da00a517 	ldw	r8,660(sp)
 8008950:	00800084 	movi	r2,2
 8008954:	dc408f17 	ldw	r17,572(sp)
 8008958:	12007316 	blt	r2,r8,8008b28 <__kernel_rem_pio2+0xa6c>
 800895c:	02004816 	blt	zero,r8,8008a80 <__kernel_rem_pio2+0x9c4>
 8008960:	4000141e 	bne	r8,zero,80089b4 <__kernel_rem_pio2+0x8f8>
 8008964:	da008d17 	ldw	r8,564(sp)
 8008968:	d8802804 	addi	r2,sp,160
 800896c:	0007883a 	mov	r3,zero
 8008970:	1221883a 	add	r16,r2,r8
 8008974:	04ffffc4 	movi	r19,-1
 8008978:	0005883a 	mov	r2,zero
 800897c:	81800017 	ldw	r6,0(r16)
 8008980:	81c00117 	ldw	r7,4(r16)
 8008984:	1009883a 	mov	r4,r2
 8008988:	180b883a 	mov	r5,r3
 800898c:	8c7fffc4 	addi	r17,r17,-1
 8008990:	800a5900 	call	800a590 <__adddf3>
 8008994:	843ffe04 	addi	r16,r16,-8
 8008998:	8cfff81e 	bne	r17,r19,800897c <__alt_data_end+0xfc00897c>
 800899c:	da008c17 	ldw	r8,560(sp)
 80089a0:	40000126 	beq	r8,zero,80089a8 <__kernel_rem_pio2+0x8ec>
 80089a4:	18e0003c 	xorhi	r3,r3,32768
 80089a8:	da009017 	ldw	r8,576(sp)
 80089ac:	40800015 	stw	r2,0(r8)
 80089b0:	40c00115 	stw	r3,4(r8)
 80089b4:	da008e17 	ldw	r8,568(sp)
 80089b8:	408001cc 	andi	r2,r8,7
 80089bc:	dfc0a417 	ldw	ra,656(sp)
 80089c0:	df00a317 	ldw	fp,652(sp)
 80089c4:	ddc0a217 	ldw	r23,648(sp)
 80089c8:	dd80a117 	ldw	r22,644(sp)
 80089cc:	dd40a017 	ldw	r21,640(sp)
 80089d0:	dd009f17 	ldw	r20,636(sp)
 80089d4:	dcc09e17 	ldw	r19,632(sp)
 80089d8:	dc809d17 	ldw	r18,628(sp)
 80089dc:	dc409c17 	ldw	r17,624(sp)
 80089e0:	dc009b17 	ldw	r16,620(sp)
 80089e4:	dec0a504 	addi	sp,sp,660
 80089e8:	f800283a 	ret
 80089ec:	0023883a 	mov	r17,zero
 80089f0:	002f883a 	mov	r23,zero
 80089f4:	003fcd06 	br	800892c <__alt_data_end+0xfc00892c>
 80089f8:	da00a517 	ldw	r8,660(sp)
 80089fc:	00800084 	movi	r2,2
 8008a00:	1200d216 	blt	r2,r8,8008d4c <__kernel_rem_pio2+0xc90>
 8008a04:	0200c016 	blt	zero,r8,8008d08 <__kernel_rem_pio2+0xc4c>
 8008a08:	403fea1e 	bne	r8,zero,80089b4 <__alt_data_end+0xfc0089b4>
 8008a0c:	0005883a 	mov	r2,zero
 8008a10:	0007883a 	mov	r3,zero
 8008a14:	003fe106 	br	800899c <__alt_data_end+0xfc00899c>
 8008a18:	00c00044 	movi	r3,1
 8008a1c:	003ecd06 	br	8008554 <__alt_data_end+0xfc008554>
 8008a20:	2945883a 	add	r2,r5,r5
 8008a24:	da008f17 	ldw	r8,572(sp)
 8008a28:	1085883a 	add	r2,r2,r2
 8008a2c:	d885883a 	add	r2,sp,r2
 8008a30:	10807817 	ldw	r2,480(r2)
 8008a34:	423ffa04 	addi	r8,r8,-24
 8008a38:	dc408e15 	stw	r17,568(sp)
 8008a3c:	dc808c15 	stw	r18,560(sp)
 8008a40:	da008f15 	stw	r8,572(sp)
 8008a44:	dd809417 	ldw	r22,592(sp)
 8008a48:	2823883a 	mov	r17,r5
 8008a4c:	103f751e 	bne	r2,zero,8008824 <__alt_data_end+0xfc008824>
 8008a50:	280490ba 	slli	r2,r5,2
 8008a54:	d8c07804 	addi	r3,sp,480
 8008a58:	10bfff04 	addi	r2,r2,-4
 8008a5c:	1885883a 	add	r2,r3,r2
 8008a60:	4007883a 	mov	r3,r8
 8008a64:	10bfff04 	addi	r2,r2,-4
 8008a68:	11000117 	ldw	r4,4(r2)
 8008a6c:	8c7fffc4 	addi	r17,r17,-1
 8008a70:	18fffa04 	addi	r3,r3,-24
 8008a74:	203ffb26 	beq	r4,zero,8008a64 <__alt_data_end+0xfc008a64>
 8008a78:	d8c08f15 	stw	r3,572(sp)
 8008a7c:	003f6906 	br	8008824 <__alt_data_end+0xfc008824>
 8008a80:	da008d17 	ldw	r8,564(sp)
 8008a84:	d8802804 	addi	r2,sp,160
 8008a88:	dcc02604 	addi	r19,sp,152
 8008a8c:	1221883a 	add	r16,r2,r8
 8008a90:	0007883a 	mov	r3,zero
 8008a94:	0005883a 	mov	r2,zero
 8008a98:	81800017 	ldw	r6,0(r16)
 8008a9c:	81c00117 	ldw	r7,4(r16)
 8008aa0:	1009883a 	mov	r4,r2
 8008aa4:	843ffe04 	addi	r16,r16,-8
 8008aa8:	180b883a 	mov	r5,r3
 8008aac:	800a5900 	call	800a590 <__adddf3>
 8008ab0:	84fff91e 	bne	r16,r19,8008a98 <__alt_data_end+0xfc008a98>
 8008ab4:	da008c17 	ldw	r8,560(sp)
 8008ab8:	d9002817 	ldw	r4,160(sp)
 8008abc:	d9402917 	ldw	r5,164(sp)
 8008ac0:	40009726 	beq	r8,zero,8008d20 <__kernel_rem_pio2+0xc64>
 8008ac4:	da009017 	ldw	r8,576(sp)
 8008ac8:	19a0003c 	xorhi	r6,r3,32768
 8008acc:	180f883a 	mov	r7,r3
 8008ad0:	41800115 	stw	r6,4(r8)
 8008ad4:	40800015 	stw	r2,0(r8)
 8008ad8:	100d883a 	mov	r6,r2
 8008adc:	800c25c0 	call	800c25c <__subdf3>
 8008ae0:	04400c0e 	bge	zero,r17,8008b14 <__kernel_rem_pio2+0xa58>
 8008ae4:	dc002a04 	addi	r16,sp,168
 8008ae8:	04c00044 	movi	r19,1
 8008aec:	81800017 	ldw	r6,0(r16)
 8008af0:	81c00117 	ldw	r7,4(r16)
 8008af4:	1009883a 	mov	r4,r2
 8008af8:	180b883a 	mov	r5,r3
 8008afc:	9cc00044 	addi	r19,r19,1
 8008b00:	800a5900 	call	800a590 <__adddf3>
 8008b04:	84000204 	addi	r16,r16,8
 8008b08:	8cfff80e 	bge	r17,r19,8008aec <__alt_data_end+0xfc008aec>
 8008b0c:	da008c17 	ldw	r8,560(sp)
 8008b10:	40000126 	beq	r8,zero,8008b18 <__kernel_rem_pio2+0xa5c>
 8008b14:	18e0003c 	xorhi	r3,r3,32768
 8008b18:	da009017 	ldw	r8,576(sp)
 8008b1c:	40800215 	stw	r2,8(r8)
 8008b20:	40c00315 	stw	r3,12(r8)
 8008b24:	003fa306 	br	80089b4 <__alt_data_end+0xfc0089b4>
 8008b28:	da00a517 	ldw	r8,660(sp)
 8008b2c:	008000c4 	movi	r2,3
 8008b30:	40bfa01e 	bne	r8,r2,80089b4 <__alt_data_end+0xfc0089b4>
 8008b34:	0440880e 	bge	zero,r17,8008d58 <__kernel_rem_pio2+0xc9c>
 8008b38:	da008d17 	ldw	r8,564(sp)
 8008b3c:	882690fa 	slli	r19,r17,3
 8008b40:	dd402804 	addi	r21,sp,160
 8008b44:	da05883a 	add	r2,sp,r8
 8008b48:	10802804 	addi	r2,r2,160
 8008b4c:	15c00017 	ldw	r23,0(r2)
 8008b50:	15800117 	ldw	r22,4(r2)
 8008b54:	9829883a 	mov	r20,r19
 8008b58:	9cfffe04 	addi	r19,r19,-8
 8008b5c:	ace7883a 	add	r19,r21,r19
 8008b60:	ad29883a 	add	r20,r21,r20
 8008b64:	dac02604 	addi	r11,sp,152
 8008b68:	8811883a 	mov	r8,r17
 8008b6c:	9c400017 	ldw	r17,0(r19)
 8008b70:	9f000117 	ldw	fp,4(r19)
 8008b74:	b809883a 	mov	r4,r23
 8008b78:	b00b883a 	mov	r5,r22
 8008b7c:	880d883a 	mov	r6,r17
 8008b80:	e00f883a 	mov	r7,fp
 8008b84:	da009815 	stw	r8,608(sp)
 8008b88:	dac09a15 	stw	r11,616(sp)
 8008b8c:	800a5900 	call	800a590 <__adddf3>
 8008b90:	8809883a 	mov	r4,r17
 8008b94:	e00b883a 	mov	r5,fp
 8008b98:	100d883a 	mov	r6,r2
 8008b9c:	180f883a 	mov	r7,r3
 8008ba0:	1025883a 	mov	r18,r2
 8008ba4:	1821883a 	mov	r16,r3
 8008ba8:	800c25c0 	call	800c25c <__subdf3>
 8008bac:	b809883a 	mov	r4,r23
 8008bb0:	b00b883a 	mov	r5,r22
 8008bb4:	100d883a 	mov	r6,r2
 8008bb8:	180f883a 	mov	r7,r3
 8008bbc:	800a5900 	call	800a590 <__adddf3>
 8008bc0:	dac09a17 	ldw	r11,616(sp)
 8008bc4:	a0800015 	stw	r2,0(r20)
 8008bc8:	a0c00115 	stw	r3,4(r20)
 8008bcc:	9c800015 	stw	r18,0(r19)
 8008bd0:	9c000115 	stw	r16,4(r19)
 8008bd4:	9cfffe04 	addi	r19,r19,-8
 8008bd8:	a53ffe04 	addi	r20,r20,-8
 8008bdc:	902f883a 	mov	r23,r18
 8008be0:	802d883a 	mov	r22,r16
 8008be4:	da009817 	ldw	r8,608(sp)
 8008be8:	9affe01e 	bne	r19,r11,8008b6c <__alt_data_end+0xfc008b6c>
 8008bec:	00800044 	movi	r2,1
 8008bf0:	1200590e 	bge	r2,r8,8008d58 <__kernel_rem_pio2+0xc9c>
 8008bf4:	402290fa 	slli	r17,r8,3
 8008bf8:	da008d17 	ldw	r8,564(sp)
 8008bfc:	8c3ffe04 	addi	r16,r17,-8
 8008c00:	da05883a 	add	r2,sp,r8
 8008c04:	10802804 	addi	r2,r2,160
 8008c08:	15800017 	ldw	r22,0(r2)
 8008c0c:	15000117 	ldw	r20,4(r2)
 8008c10:	ac63883a 	add	r17,r21,r17
 8008c14:	ac21883a 	add	r16,r21,r16
 8008c18:	8827883a 	mov	r19,r17
 8008c1c:	8811883a 	mov	r8,r17
 8008c20:	84400017 	ldw	r17,0(r16)
 8008c24:	87000117 	ldw	fp,4(r16)
 8008c28:	b00d883a 	mov	r6,r22
 8008c2c:	a00f883a 	mov	r7,r20
 8008c30:	8809883a 	mov	r4,r17
 8008c34:	e00b883a 	mov	r5,fp
 8008c38:	da009815 	stw	r8,608(sp)
 8008c3c:	800a5900 	call	800a590 <__adddf3>
 8008c40:	8809883a 	mov	r4,r17
 8008c44:	e00b883a 	mov	r5,fp
 8008c48:	100d883a 	mov	r6,r2
 8008c4c:	180f883a 	mov	r7,r3
 8008c50:	102f883a 	mov	r23,r2
 8008c54:	1825883a 	mov	r18,r3
 8008c58:	800c25c0 	call	800c25c <__subdf3>
 8008c5c:	b00d883a 	mov	r6,r22
 8008c60:	a00f883a 	mov	r7,r20
 8008c64:	1009883a 	mov	r4,r2
 8008c68:	180b883a 	mov	r5,r3
 8008c6c:	800a5900 	call	800a590 <__adddf3>
 8008c70:	98800015 	stw	r2,0(r19)
 8008c74:	98c00115 	stw	r3,4(r19)
 8008c78:	85c00015 	stw	r23,0(r16)
 8008c7c:	84800115 	stw	r18,4(r16)
 8008c80:	843ffe04 	addi	r16,r16,-8
 8008c84:	9cfffe04 	addi	r19,r19,-8
 8008c88:	b82d883a 	mov	r22,r23
 8008c8c:	9029883a 	mov	r20,r18
 8008c90:	da009817 	ldw	r8,608(sp)
 8008c94:	ac3fe21e 	bne	r21,r16,8008c20 <__alt_data_end+0xfc008c20>
 8008c98:	4023883a 	mov	r17,r8
 8008c9c:	dc002a04 	addi	r16,sp,168
 8008ca0:	0005883a 	mov	r2,zero
 8008ca4:	0007883a 	mov	r3,zero
 8008ca8:	89800017 	ldw	r6,0(r17)
 8008cac:	89c00117 	ldw	r7,4(r17)
 8008cb0:	1009883a 	mov	r4,r2
 8008cb4:	8c7ffe04 	addi	r17,r17,-8
 8008cb8:	180b883a 	mov	r5,r3
 8008cbc:	800a5900 	call	800a590 <__adddf3>
 8008cc0:	8c3ff91e 	bne	r17,r16,8008ca8 <__alt_data_end+0xfc008ca8>
 8008cc4:	da008c17 	ldw	r8,560(sp)
 8008cc8:	40002726 	beq	r8,zero,8008d68 <__kernel_rem_pio2+0xcac>
 8008ccc:	d9002b17 	ldw	r4,172(sp)
 8008cd0:	d9402917 	ldw	r5,164(sp)
 8008cd4:	d9802a17 	ldw	r6,168(sp)
 8008cd8:	da009017 	ldw	r8,576(sp)
 8008cdc:	d9c02817 	ldw	r7,160(sp)
 8008ce0:	2960003c 	xorhi	r5,r5,32768
 8008ce4:	2120003c 	xorhi	r4,r4,32768
 8008ce8:	18e0003c 	xorhi	r3,r3,32768
 8008cec:	41c00015 	stw	r7,0(r8)
 8008cf0:	41400115 	stw	r5,4(r8)
 8008cf4:	41800215 	stw	r6,8(r8)
 8008cf8:	41000315 	stw	r4,12(r8)
 8008cfc:	40800415 	stw	r2,16(r8)
 8008d00:	40c00515 	stw	r3,20(r8)
 8008d04:	003f2b06 	br	80089b4 <__alt_data_end+0xfc0089b4>
 8008d08:	da008c17 	ldw	r8,560(sp)
 8008d0c:	0005883a 	mov	r2,zero
 8008d10:	0007883a 	mov	r3,zero
 8008d14:	d9002817 	ldw	r4,160(sp)
 8008d18:	d9402917 	ldw	r5,164(sp)
 8008d1c:	403f691e 	bne	r8,zero,8008ac4 <__alt_data_end+0xfc008ac4>
 8008d20:	da009017 	ldw	r8,576(sp)
 8008d24:	100d883a 	mov	r6,r2
 8008d28:	180f883a 	mov	r7,r3
 8008d2c:	40800015 	stw	r2,0(r8)
 8008d30:	40c00115 	stw	r3,4(r8)
 8008d34:	800c25c0 	call	800c25c <__subdf3>
 8008d38:	047f6a16 	blt	zero,r17,8008ae4 <__alt_data_end+0xfc008ae4>
 8008d3c:	da009017 	ldw	r8,576(sp)
 8008d40:	40800215 	stw	r2,8(r8)
 8008d44:	40c00315 	stw	r3,12(r8)
 8008d48:	003f1a06 	br	80089b4 <__alt_data_end+0xfc0089b4>
 8008d4c:	da00a517 	ldw	r8,660(sp)
 8008d50:	008000c4 	movi	r2,3
 8008d54:	40bf171e 	bne	r8,r2,80089b4 <__alt_data_end+0xfc0089b4>
 8008d58:	da008c17 	ldw	r8,560(sp)
 8008d5c:	0005883a 	mov	r2,zero
 8008d60:	0007883a 	mov	r3,zero
 8008d64:	403fd91e 	bne	r8,zero,8008ccc <__alt_data_end+0xfc008ccc>
 8008d68:	da009017 	ldw	r8,576(sp)
 8008d6c:	d9802817 	ldw	r6,160(sp)
 8008d70:	d9402a17 	ldw	r5,168(sp)
 8008d74:	d9002b17 	ldw	r4,172(sp)
 8008d78:	41800015 	stw	r6,0(r8)
 8008d7c:	d9802917 	ldw	r6,164(sp)
 8008d80:	41400215 	stw	r5,8(r8)
 8008d84:	41000315 	stw	r4,12(r8)
 8008d88:	41800115 	stw	r6,4(r8)
 8008d8c:	40800415 	stw	r2,16(r8)
 8008d90:	40c00515 	stw	r3,20(r8)
 8008d94:	003f0706 	br	80089b4 <__alt_data_end+0xfc0089b4>
 8008d98:	a00d883a 	mov	r6,r20
 8008d9c:	580f883a 	mov	r7,r11
 8008da0:	0009883a 	mov	r4,zero
 8008da4:	014ffc34 	movhi	r5,16368
 8008da8:	800c25c0 	call	800c25c <__subdf3>
 8008dac:	1029883a 	mov	r20,r2
 8008db0:	1817883a 	mov	r11,r3
 8008db4:	04800084 	movi	r18,2
 8008db8:	003dc706 	br	80084d8 <__alt_data_end+0xfc0084d8>
 8008dbc:	840d883a 	add	r6,r16,r16
 8008dc0:	318d883a 	add	r6,r6,r6
 8008dc4:	d9a3883a 	add	r17,sp,r6
 8008dc8:	a009883a 	mov	r4,r20
 8008dcc:	b80b883a 	mov	r5,r23
 8008dd0:	8c407804 	addi	r17,r17,480
 8008dd4:	800cb2c0 	call	800cb2c <__fixdfsi>
 8008dd8:	88800015 	stw	r2,0(r17)
 8008ddc:	8023883a 	mov	r17,r16
 8008de0:	003e9006 	br	8008824 <__alt_data_end+0xfc008824>
 8008de4:	d8009215 	stw	zero,584(sp)
 8008de8:	003cd206 	br	8008134 <__alt_data_end+0xfc008134>

08008dec <__kernel_sin>:
 8008dec:	00a00034 	movhi	r2,32768
 8008df0:	defff404 	addi	sp,sp,-48
 8008df4:	10bfffc4 	addi	r2,r2,-1
 8008df8:	00cf9034 	movhi	r3,15936
 8008dfc:	ddc00915 	stw	r23,36(sp)
 8008e00:	dd800815 	stw	r22,32(sp)
 8008e04:	dc400315 	stw	r17,12(sp)
 8008e08:	dc000215 	stw	r16,8(sp)
 8008e0c:	dfc00b15 	stw	ra,44(sp)
 8008e10:	df000a15 	stw	fp,40(sp)
 8008e14:	dd400715 	stw	r21,28(sp)
 8008e18:	dd000615 	stw	r20,24(sp)
 8008e1c:	dcc00515 	stw	r19,20(sp)
 8008e20:	dc800415 	stw	r18,16(sp)
 8008e24:	2884703a 	and	r2,r5,r2
 8008e28:	18ffffc4 	addi	r3,r3,-1
 8008e2c:	2821883a 	mov	r16,r5
 8008e30:	2023883a 	mov	r17,r4
 8008e34:	302f883a 	mov	r23,r6
 8008e38:	382d883a 	mov	r22,r7
 8008e3c:	18800216 	blt	r3,r2,8008e48 <__kernel_sin+0x5c>
 8008e40:	800cb2c0 	call	800cb2c <__fixdfsi>
 8008e44:	10009826 	beq	r2,zero,80090a8 <__kernel_sin+0x2bc>
 8008e48:	8809883a 	mov	r4,r17
 8008e4c:	800b883a 	mov	r5,r16
 8008e50:	880d883a 	mov	r6,r17
 8008e54:	800f883a 	mov	r7,r16
 8008e58:	800b9f00 	call	800b9f0 <__muldf3>
 8008e5c:	1009883a 	mov	r4,r2
 8008e60:	180b883a 	mov	r5,r3
 8008e64:	880d883a 	mov	r6,r17
 8008e68:	800f883a 	mov	r7,r16
 8008e6c:	1027883a 	mov	r19,r2
 8008e70:	1825883a 	mov	r18,r3
 8008e74:	800b9f00 	call	800b9f0 <__muldf3>
 8008e78:	0196b434 	movhi	r6,23248
 8008e7c:	01cf79b4 	movhi	r7,15846
 8008e80:	9809883a 	mov	r4,r19
 8008e84:	900b883a 	mov	r5,r18
 8008e88:	31b55f04 	addi	r6,r6,-10884
 8008e8c:	39f64e84 	addi	r7,r7,-9926
 8008e90:	102b883a 	mov	r21,r2
 8008e94:	1829883a 	mov	r20,r3
 8008e98:	800b9f00 	call	800b9f0 <__muldf3>
 8008e9c:	01a28b34 	movhi	r6,35372
 8008ea0:	01cf96f4 	movhi	r7,15963
 8008ea4:	1009883a 	mov	r4,r2
 8008ea8:	180b883a 	mov	r5,r3
 8008eac:	31a73ac4 	addi	r6,r6,-25365
 8008eb0:	39f97984 	addi	r7,r7,-6682
 8008eb4:	800c25c0 	call	800c25c <__subdf3>
 8008eb8:	1009883a 	mov	r4,r2
 8008ebc:	180b883a 	mov	r5,r3
 8008ec0:	980d883a 	mov	r6,r19
 8008ec4:	900f883a 	mov	r7,r18
 8008ec8:	800b9f00 	call	800b9f0 <__muldf3>
 8008ecc:	0195ecb4 	movhi	r6,22450
 8008ed0:	01cfb1f4 	movhi	r7,16071
 8008ed4:	1009883a 	mov	r4,r2
 8008ed8:	180b883a 	mov	r5,r3
 8008edc:	31bf9f44 	addi	r6,r6,-387
 8008ee0:	39c778c4 	addi	r7,r7,7651
 8008ee4:	800a5900 	call	800a590 <__adddf3>
 8008ee8:	1009883a 	mov	r4,r2
 8008eec:	180b883a 	mov	r5,r3
 8008ef0:	980d883a 	mov	r6,r19
 8008ef4:	900f883a 	mov	r7,r18
 8008ef8:	800b9f00 	call	800b9f0 <__muldf3>
 8008efc:	01867074 	movhi	r6,6593
 8008f00:	01cfcab4 	movhi	r7,16170
 8008f04:	1009883a 	mov	r4,r2
 8008f08:	180b883a 	mov	r5,r3
 8008f0c:	31987544 	addi	r6,r6,25045
 8008f10:	39c06804 	addi	r7,r7,416
 8008f14:	800c25c0 	call	800c25c <__subdf3>
 8008f18:	1009883a 	mov	r4,r2
 8008f1c:	180b883a 	mov	r5,r3
 8008f20:	980d883a 	mov	r6,r19
 8008f24:	900f883a 	mov	r7,r18
 8008f28:	800b9f00 	call	800b9f0 <__muldf3>
 8008f2c:	01844474 	movhi	r6,4369
 8008f30:	01cfe074 	movhi	r7,16257
 8008f34:	1009883a 	mov	r4,r2
 8008f38:	180b883a 	mov	r5,r3
 8008f3c:	31be2984 	addi	r6,r6,-1882
 8008f40:	39c44444 	addi	r7,r7,4369
 8008f44:	800a5900 	call	800a590 <__adddf3>
 8008f48:	d9000c17 	ldw	r4,48(sp)
 8008f4c:	1839883a 	mov	fp,r3
 8008f50:	20003e26 	beq	r4,zero,800904c <__kernel_sin+0x260>
 8008f54:	b809883a 	mov	r4,r23
 8008f58:	b00b883a 	mov	r5,r22
 8008f5c:	000d883a 	mov	r6,zero
 8008f60:	01cff834 	movhi	r7,16352
 8008f64:	d8800015 	stw	r2,0(sp)
 8008f68:	800b9f00 	call	800b9f0 <__muldf3>
 8008f6c:	da000017 	ldw	r8,0(sp)
 8008f70:	a809883a 	mov	r4,r21
 8008f74:	a00b883a 	mov	r5,r20
 8008f78:	400d883a 	mov	r6,r8
 8008f7c:	e00f883a 	mov	r7,fp
 8008f80:	d8c00115 	stw	r3,4(sp)
 8008f84:	d8800015 	stw	r2,0(sp)
 8008f88:	800b9f00 	call	800b9f0 <__muldf3>
 8008f8c:	da800017 	ldw	r10,0(sp)
 8008f90:	da400117 	ldw	r9,4(sp)
 8008f94:	100d883a 	mov	r6,r2
 8008f98:	5009883a 	mov	r4,r10
 8008f9c:	480b883a 	mov	r5,r9
 8008fa0:	180f883a 	mov	r7,r3
 8008fa4:	800c25c0 	call	800c25c <__subdf3>
 8008fa8:	980d883a 	mov	r6,r19
 8008fac:	900f883a 	mov	r7,r18
 8008fb0:	1009883a 	mov	r4,r2
 8008fb4:	180b883a 	mov	r5,r3
 8008fb8:	800b9f00 	call	800b9f0 <__muldf3>
 8008fbc:	1009883a 	mov	r4,r2
 8008fc0:	180b883a 	mov	r5,r3
 8008fc4:	b80d883a 	mov	r6,r23
 8008fc8:	b00f883a 	mov	r7,r22
 8008fcc:	800c25c0 	call	800c25c <__subdf3>
 8008fd0:	01955574 	movhi	r6,21845
 8008fd4:	01cff174 	movhi	r7,16325
 8008fd8:	a809883a 	mov	r4,r21
 8008fdc:	a00b883a 	mov	r5,r20
 8008fe0:	31955244 	addi	r6,r6,21833
 8008fe4:	39d55544 	addi	r7,r7,21845
 8008fe8:	1027883a 	mov	r19,r2
 8008fec:	1825883a 	mov	r18,r3
 8008ff0:	800b9f00 	call	800b9f0 <__muldf3>
 8008ff4:	9809883a 	mov	r4,r19
 8008ff8:	900b883a 	mov	r5,r18
 8008ffc:	100d883a 	mov	r6,r2
 8009000:	180f883a 	mov	r7,r3
 8009004:	800a5900 	call	800a590 <__adddf3>
 8009008:	8809883a 	mov	r4,r17
 800900c:	800b883a 	mov	r5,r16
 8009010:	100d883a 	mov	r6,r2
 8009014:	180f883a 	mov	r7,r3
 8009018:	800c25c0 	call	800c25c <__subdf3>
 800901c:	dfc00b17 	ldw	ra,44(sp)
 8009020:	df000a17 	ldw	fp,40(sp)
 8009024:	ddc00917 	ldw	r23,36(sp)
 8009028:	dd800817 	ldw	r22,32(sp)
 800902c:	dd400717 	ldw	r21,28(sp)
 8009030:	dd000617 	ldw	r20,24(sp)
 8009034:	dcc00517 	ldw	r19,20(sp)
 8009038:	dc800417 	ldw	r18,16(sp)
 800903c:	dc400317 	ldw	r17,12(sp)
 8009040:	dc000217 	ldw	r16,8(sp)
 8009044:	dec00c04 	addi	sp,sp,48
 8009048:	f800283a 	ret
 800904c:	9809883a 	mov	r4,r19
 8009050:	900b883a 	mov	r5,r18
 8009054:	100d883a 	mov	r6,r2
 8009058:	180f883a 	mov	r7,r3
 800905c:	800b9f00 	call	800b9f0 <__muldf3>
 8009060:	01955574 	movhi	r6,21845
 8009064:	01cff174 	movhi	r7,16325
 8009068:	1009883a 	mov	r4,r2
 800906c:	180b883a 	mov	r5,r3
 8009070:	31955244 	addi	r6,r6,21833
 8009074:	39d55544 	addi	r7,r7,21845
 8009078:	800c25c0 	call	800c25c <__subdf3>
 800907c:	a80d883a 	mov	r6,r21
 8009080:	a00f883a 	mov	r7,r20
 8009084:	1009883a 	mov	r4,r2
 8009088:	180b883a 	mov	r5,r3
 800908c:	800b9f00 	call	800b9f0 <__muldf3>
 8009090:	1009883a 	mov	r4,r2
 8009094:	180b883a 	mov	r5,r3
 8009098:	880d883a 	mov	r6,r17
 800909c:	800f883a 	mov	r7,r16
 80090a0:	800a5900 	call	800a590 <__adddf3>
 80090a4:	003fdd06 	br	800901c <__alt_data_end+0xfc00901c>
 80090a8:	8805883a 	mov	r2,r17
 80090ac:	8007883a 	mov	r3,r16
 80090b0:	003fda06 	br	800901c <__alt_data_end+0xfc00901c>

080090b4 <fabs>:
 80090b4:	00e00034 	movhi	r3,32768
 80090b8:	18ffffc4 	addi	r3,r3,-1
 80090bc:	2005883a 	mov	r2,r4
 80090c0:	28c6703a 	and	r3,r5,r3
 80090c4:	f800283a 	ret

080090c8 <finite>:
 80090c8:	00a00034 	movhi	r2,32768
 80090cc:	10bfffc4 	addi	r2,r2,-1
 80090d0:	288a703a 	and	r5,r5,r2
 80090d4:	00e00434 	movhi	r3,32784
 80090d8:	28c5883a 	add	r2,r5,r3
 80090dc:	1004d7fa 	srli	r2,r2,31
 80090e0:	f800283a 	ret

080090e4 <floor>:
 80090e4:	defff904 	addi	sp,sp,-28
 80090e8:	dc800215 	stw	r18,8(sp)
 80090ec:	2825d53a 	srai	r18,r5,20
 80090f0:	dd000415 	stw	r20,16(sp)
 80090f4:	dcc00315 	stw	r19,12(sp)
 80090f8:	9481ffcc 	andi	r18,r18,2047
 80090fc:	dc400115 	stw	r17,4(sp)
 8009100:	dc000015 	stw	r16,0(sp)
 8009104:	dfc00615 	stw	ra,24(sp)
 8009108:	dd400515 	stw	r21,20(sp)
 800910c:	94ff0044 	addi	r19,r18,-1023
 8009110:	018004c4 	movi	r6,19
 8009114:	2821883a 	mov	r16,r5
 8009118:	2005883a 	mov	r2,r4
 800911c:	280f883a 	mov	r7,r5
 8009120:	2829883a 	mov	r20,r5
 8009124:	2023883a 	mov	r17,r4
 8009128:	34c01916 	blt	r6,r19,8009190 <floor+0xac>
 800912c:	98003d16 	blt	r19,zero,8009224 <floor+0x140>
 8009130:	04800434 	movhi	r18,16
 8009134:	94bfffc4 	addi	r18,r18,-1
 8009138:	94e5d83a 	sra	r18,r18,r19
 800913c:	914c703a 	and	r6,r18,r5
 8009140:	310cb03a 	or	r6,r6,r4
 8009144:	30001626 	beq	r6,zero,80091a0 <floor+0xbc>
 8009148:	01a20034 	movhi	r6,34816
 800914c:	01df8e34 	movhi	r7,32312
 8009150:	319d6704 	addi	r6,r6,30108
 8009154:	39f90f04 	addi	r7,r7,-7108
 8009158:	800a5900 	call	800a590 <__adddf3>
 800915c:	1009883a 	mov	r4,r2
 8009160:	180b883a 	mov	r5,r3
 8009164:	000d883a 	mov	r6,zero
 8009168:	000f883a 	mov	r7,zero
 800916c:	800b8300 	call	800b830 <__gedf2>
 8009170:	0080040e 	bge	zero,r2,8009184 <floor+0xa0>
 8009174:	80003d16 	blt	r16,zero,800926c <floor+0x188>
 8009178:	04a0303a 	nor	r16,zero,r18
 800917c:	a420703a 	and	r16,r20,r16
 8009180:	0023883a 	mov	r17,zero
 8009184:	8805883a 	mov	r2,r17
 8009188:	8007883a 	mov	r3,r16
 800918c:	00000506 	br	80091a4 <floor+0xc0>
 8009190:	01800cc4 	movi	r6,51
 8009194:	34c00c0e 	bge	r6,r19,80091c8 <floor+0xe4>
 8009198:	01810004 	movi	r6,1024
 800919c:	99803026 	beq	r19,r6,8009260 <floor+0x17c>
 80091a0:	3807883a 	mov	r3,r7
 80091a4:	dfc00617 	ldw	ra,24(sp)
 80091a8:	dd400517 	ldw	r21,20(sp)
 80091ac:	dd000417 	ldw	r20,16(sp)
 80091b0:	dcc00317 	ldw	r19,12(sp)
 80091b4:	dc800217 	ldw	r18,8(sp)
 80091b8:	dc400117 	ldw	r17,4(sp)
 80091bc:	dc000017 	ldw	r16,0(sp)
 80091c0:	dec00704 	addi	sp,sp,28
 80091c4:	f800283a 	ret
 80091c8:	01bfffc4 	movi	r6,-1
 80091cc:	957efb44 	addi	r21,r18,-1043
 80091d0:	356ad83a 	srl	r21,r6,r21
 80091d4:	a90c703a 	and	r6,r21,r4
 80091d8:	303ff126 	beq	r6,zero,80091a0 <__alt_data_end+0xfc0091a0>
 80091dc:	01a20034 	movhi	r6,34816
 80091e0:	01df8e34 	movhi	r7,32312
 80091e4:	319d6704 	addi	r6,r6,30108
 80091e8:	39f90f04 	addi	r7,r7,-7108
 80091ec:	800a5900 	call	800a590 <__adddf3>
 80091f0:	1009883a 	mov	r4,r2
 80091f4:	180b883a 	mov	r5,r3
 80091f8:	000d883a 	mov	r6,zero
 80091fc:	000f883a 	mov	r7,zero
 8009200:	800b8300 	call	800b830 <__gedf2>
 8009204:	00bfdf0e 	bge	zero,r2,8009184 <__alt_data_end+0xfc009184>
 8009208:	80001c16 	blt	r16,zero,800927c <floor+0x198>
 800920c:	056a303a 	nor	r21,zero,r21
 8009210:	a021883a 	mov	r16,r20
 8009214:	8d62703a 	and	r17,r17,r21
 8009218:	8805883a 	mov	r2,r17
 800921c:	8007883a 	mov	r3,r16
 8009220:	003fe006 	br	80091a4 <__alt_data_end+0xfc0091a4>
 8009224:	01a20034 	movhi	r6,34816
 8009228:	01df8e34 	movhi	r7,32312
 800922c:	319d6704 	addi	r6,r6,30108
 8009230:	39f90f04 	addi	r7,r7,-7108
 8009234:	800a5900 	call	800a590 <__adddf3>
 8009238:	1009883a 	mov	r4,r2
 800923c:	180b883a 	mov	r5,r3
 8009240:	000d883a 	mov	r6,zero
 8009244:	000f883a 	mov	r7,zero
 8009248:	800b8300 	call	800b830 <__gedf2>
 800924c:	00bfcd0e 	bge	zero,r2,8009184 <__alt_data_end+0xfc009184>
 8009250:	80001516 	blt	r16,zero,80092a8 <floor+0x1c4>
 8009254:	0023883a 	mov	r17,zero
 8009258:	0021883a 	mov	r16,zero
 800925c:	003fc906 	br	8009184 <__alt_data_end+0xfc009184>
 8009260:	200d883a 	mov	r6,r4
 8009264:	800a5900 	call	800a590 <__adddf3>
 8009268:	003fce06 	br	80091a4 <__alt_data_end+0xfc0091a4>
 800926c:	00800434 	movhi	r2,16
 8009270:	14e7d83a 	sra	r19,r2,r19
 8009274:	84e9883a 	add	r20,r16,r19
 8009278:	003fbf06 	br	8009178 <__alt_data_end+0xfc009178>
 800927c:	00800504 	movi	r2,20
 8009280:	98801326 	beq	r19,r2,80092d0 <floor+0x1ec>
 8009284:	00810cc4 	movi	r2,1075
 8009288:	14a5c83a 	sub	r18,r2,r18
 800928c:	00800044 	movi	r2,1
 8009290:	1484983a 	sll	r2,r2,r18
 8009294:	1445883a 	add	r2,r2,r17
 8009298:	14400b2e 	bgeu	r2,r17,80092c8 <floor+0x1e4>
 800929c:	85000044 	addi	r20,r16,1
 80092a0:	1023883a 	mov	r17,r2
 80092a4:	003fd906 	br	800920c <__alt_data_end+0xfc00920c>
 80092a8:	00a00034 	movhi	r2,32768
 80092ac:	10bfffc4 	addi	r2,r2,-1
 80092b0:	8084703a 	and	r2,r16,r2
 80092b4:	1462b03a 	or	r17,r2,r17
 80092b8:	883fb226 	beq	r17,zero,8009184 <__alt_data_end+0xfc009184>
 80092bc:	0023883a 	mov	r17,zero
 80092c0:	042ffc34 	movhi	r16,49136
 80092c4:	003faf06 	br	8009184 <__alt_data_end+0xfc009184>
 80092c8:	1023883a 	mov	r17,r2
 80092cc:	003fcf06 	br	800920c <__alt_data_end+0xfc00920c>
 80092d0:	85000044 	addi	r20,r16,1
 80092d4:	003fcd06 	br	800920c <__alt_data_end+0xfc00920c>

080092d8 <__fpclassifyd>:
 80092d8:	00a00034 	movhi	r2,32768
 80092dc:	10bfffc4 	addi	r2,r2,-1
 80092e0:	2884703a 	and	r2,r5,r2
 80092e4:	10000726 	beq	r2,zero,8009304 <__fpclassifyd+0x2c>
 80092e8:	00fffc34 	movhi	r3,65520
 80092ec:	019ff834 	movhi	r6,32736
 80092f0:	28c7883a 	add	r3,r5,r3
 80092f4:	31bfffc4 	addi	r6,r6,-1
 80092f8:	30c00536 	bltu	r6,r3,8009310 <__fpclassifyd+0x38>
 80092fc:	00800104 	movi	r2,4
 8009300:	f800283a 	ret
 8009304:	2000021e 	bne	r4,zero,8009310 <__fpclassifyd+0x38>
 8009308:	00800084 	movi	r2,2
 800930c:	f800283a 	ret
 8009310:	00dffc34 	movhi	r3,32752
 8009314:	019ff834 	movhi	r6,32736
 8009318:	28cb883a 	add	r5,r5,r3
 800931c:	31bfffc4 	addi	r6,r6,-1
 8009320:	317ff62e 	bgeu	r6,r5,80092fc <__alt_data_end+0xfc0092fc>
 8009324:	01400434 	movhi	r5,16
 8009328:	297fffc4 	addi	r5,r5,-1
 800932c:	28800236 	bltu	r5,r2,8009338 <__fpclassifyd+0x60>
 8009330:	008000c4 	movi	r2,3
 8009334:	f800283a 	ret
 8009338:	10c00226 	beq	r2,r3,8009344 <__fpclassifyd+0x6c>
 800933c:	0005883a 	mov	r2,zero
 8009340:	f800283a 	ret
 8009344:	2005003a 	cmpeq	r2,r4,zero
 8009348:	f800283a 	ret

0800934c <matherr>:
 800934c:	0005883a 	mov	r2,zero
 8009350:	f800283a 	ret

08009354 <nan>:
 8009354:	0005883a 	mov	r2,zero
 8009358:	00dffe34 	movhi	r3,32760
 800935c:	f800283a 	ret

08009360 <rint>:
 8009360:	2813d53a 	srai	r9,r5,20
 8009364:	defff904 	addi	sp,sp,-28
 8009368:	dc400315 	stw	r17,12(sp)
 800936c:	4a41ffcc 	andi	r9,r9,2047
 8009370:	dfc00615 	stw	ra,24(sp)
 8009374:	dcc00515 	stw	r19,20(sp)
 8009378:	dc800415 	stw	r18,16(sp)
 800937c:	dc000215 	stw	r16,8(sp)
 8009380:	02c004c4 	movi	r11,19
 8009384:	4abf0044 	addi	r10,r9,-1023
 8009388:	2811883a 	mov	r8,r5
 800938c:	2005883a 	mov	r2,r4
 8009390:	280f883a 	mov	r7,r5
 8009394:	200d883a 	mov	r6,r4
 8009398:	2822d7fa 	srli	r17,r5,31
 800939c:	5a801316 	blt	r11,r10,80093ec <rint+0x8c>
 80093a0:	50003c16 	blt	r10,zero,8009494 <rint+0x134>
 80093a4:	00c00434 	movhi	r3,16
 80093a8:	18ffffc4 	addi	r3,r3,-1
 80093ac:	1a87d83a 	sra	r3,r3,r10
 80093b0:	1948703a 	and	r4,r3,r5
 80093b4:	2088b03a 	or	r4,r4,r2
 80093b8:	20001026 	beq	r4,zero,80093fc <rint+0x9c>
 80093bc:	1804d07a 	srli	r2,r3,1
 80093c0:	1146703a 	and	r3,r2,r5
 80093c4:	198cb03a 	or	r6,r3,r6
 80093c8:	30005526 	beq	r6,zero,8009520 <rint+0x1c0>
 80093cc:	52c05b26 	beq	r10,r11,800953c <rint+0x1dc>
 80093d0:	000d883a 	mov	r6,zero
 80093d4:	00c00134 	movhi	r3,4
 80093d8:	1a87d83a 	sra	r3,r3,r10
 80093dc:	0084303a 	nor	r2,zero,r2
 80093e0:	1210703a 	and	r8,r2,r8
 80093e4:	40ceb03a 	or	r7,r8,r3
 80093e8:	00001906 	br	8009450 <rint+0xf0>
 80093ec:	00c00cc4 	movi	r3,51
 80093f0:	1a800a0e 	bge	r3,r10,800941c <rint+0xbc>
 80093f4:	00c10004 	movi	r3,1024
 80093f8:	50c04d26 	beq	r10,r3,8009530 <rint+0x1d0>
 80093fc:	3807883a 	mov	r3,r7
 8009400:	dfc00617 	ldw	ra,24(sp)
 8009404:	dcc00517 	ldw	r19,20(sp)
 8009408:	dc800417 	ldw	r18,16(sp)
 800940c:	dc400317 	ldw	r17,12(sp)
 8009410:	dc000217 	ldw	r16,8(sp)
 8009414:	dec00704 	addi	sp,sp,28
 8009418:	f800283a 	ret
 800941c:	4a7efb44 	addi	r9,r9,-1043
 8009420:	00ffffc4 	movi	r3,-1
 8009424:	1a46d83a 	srl	r3,r3,r9
 8009428:	1908703a 	and	r4,r3,r4
 800942c:	20003e26 	beq	r4,zero,8009528 <rint+0x1c8>
 8009430:	1806d07a 	srli	r3,r3,1
 8009434:	1884703a 	and	r2,r3,r2
 8009438:	10000526 	beq	r2,zero,8009450 <rint+0xf0>
 800943c:	00900034 	movhi	r2,16384
 8009440:	1253d83a 	sra	r9,r2,r9
 8009444:	00c6303a 	nor	r3,zero,r3
 8009448:	198c703a 	and	r6,r3,r6
 800944c:	324cb03a 	or	r6,r6,r9
 8009450:	882290fa 	slli	r17,r17,3
 8009454:	00c200b4 	movhi	r3,2050
 8009458:	18c0b504 	addi	r3,r3,724
 800945c:	1c63883a 	add	r17,r3,r17
 8009460:	8c800017 	ldw	r18,0(r17)
 8009464:	8c000117 	ldw	r16,4(r17)
 8009468:	9009883a 	mov	r4,r18
 800946c:	800b883a 	mov	r5,r16
 8009470:	800a5900 	call	800a590 <__adddf3>
 8009474:	d8800015 	stw	r2,0(sp)
 8009478:	d8c00115 	stw	r3,4(sp)
 800947c:	d9000017 	ldw	r4,0(sp)
 8009480:	d9400117 	ldw	r5,4(sp)
 8009484:	900d883a 	mov	r6,r18
 8009488:	800f883a 	mov	r7,r16
 800948c:	800c25c0 	call	800c25c <__subdf3>
 8009490:	003fdb06 	br	8009400 <__alt_data_end+0xfc009400>
 8009494:	04200034 	movhi	r16,32768
 8009498:	843fffc4 	addi	r16,r16,-1
 800949c:	2c06703a 	and	r3,r5,r16
 80094a0:	1906b03a 	or	r3,r3,r4
 80094a4:	18002026 	beq	r3,zero,8009528 <rint+0x1c8>
 80094a8:	00c00434 	movhi	r3,16
 80094ac:	18ffffc4 	addi	r3,r3,-1
 80094b0:	28c6703a 	and	r3,r5,r3
 80094b4:	1886b03a 	or	r3,r3,r2
 80094b8:	880890fa 	slli	r4,r17,3
 80094bc:	00d3c83a 	sub	r9,zero,r3
 80094c0:	48d2b03a 	or	r9,r9,r3
 80094c4:	00c200b4 	movhi	r3,2050
 80094c8:	18c0b504 	addi	r3,r3,724
 80094cc:	1907883a 	add	r3,r3,r4
 80094d0:	4812d33a 	srli	r9,r9,12
 80094d4:	1cc00017 	ldw	r19,0(r3)
 80094d8:	1c800117 	ldw	r18,4(r3)
 80094dc:	4a40022c 	andhi	r9,r9,8
 80094e0:	29ffffac 	andhi	r7,r5,65534
 80094e4:	49ceb03a 	or	r7,r9,r7
 80094e8:	9809883a 	mov	r4,r19
 80094ec:	900b883a 	mov	r5,r18
 80094f0:	800a5900 	call	800a590 <__adddf3>
 80094f4:	d8800015 	stw	r2,0(sp)
 80094f8:	d8c00115 	stw	r3,4(sp)
 80094fc:	d9000017 	ldw	r4,0(sp)
 8009500:	d9400117 	ldw	r5,4(sp)
 8009504:	980d883a 	mov	r6,r19
 8009508:	900f883a 	mov	r7,r18
 800950c:	800c25c0 	call	800c25c <__subdf3>
 8009510:	881097fa 	slli	r8,r17,31
 8009514:	1c06703a 	and	r3,r3,r16
 8009518:	40c6b03a 	or	r3,r8,r3
 800951c:	003fb806 	br	8009400 <__alt_data_end+0xfc009400>
 8009520:	000d883a 	mov	r6,zero
 8009524:	003fca06 	br	8009450 <__alt_data_end+0xfc009450>
 8009528:	4007883a 	mov	r3,r8
 800952c:	003fb406 	br	8009400 <__alt_data_end+0xfc009400>
 8009530:	200d883a 	mov	r6,r4
 8009534:	800a5900 	call	800a590 <__adddf3>
 8009538:	003fb106 	br	8009400 <__alt_data_end+0xfc009400>
 800953c:	01a00034 	movhi	r6,32768
 8009540:	003fa406 	br	80093d4 <__alt_data_end+0xfc0093d4>

08009544 <scalbn>:
 8009544:	2a1ffc2c 	andhi	r8,r5,32752
 8009548:	4011d53a 	srai	r8,r8,20
 800954c:	defffe04 	addi	sp,sp,-8
 8009550:	dc000015 	stw	r16,0(sp)
 8009554:	dfc00115 	stw	ra,4(sp)
 8009558:	280f883a 	mov	r7,r5
 800955c:	2015883a 	mov	r10,r4
 8009560:	3021883a 	mov	r16,r6
 8009564:	4000251e 	bne	r8,zero,80095fc <scalbn+0xb8>
 8009568:	00a00034 	movhi	r2,32768
 800956c:	10bfffc4 	addi	r2,r2,-1
 8009570:	2884703a 	and	r2,r5,r2
 8009574:	1104b03a 	or	r2,r2,r4
 8009578:	10003126 	beq	r2,zero,8009640 <scalbn+0xfc>
 800957c:	01d0d434 	movhi	r7,17232
 8009580:	000d883a 	mov	r6,zero
 8009584:	800b9f00 	call	800b9f0 <__muldf3>
 8009588:	013ffff4 	movhi	r4,65535
 800958c:	210f2c04 	addi	r4,r4,15536
 8009590:	1015883a 	mov	r10,r2
 8009594:	180f883a 	mov	r7,r3
 8009598:	81002f16 	blt	r16,r4,8009658 <scalbn+0x114>
 800959c:	1a5ffc2c 	andhi	r9,r3,32752
 80095a0:	4813d53a 	srai	r9,r9,20
 80095a4:	0081ff84 	movi	r2,2046
 80095a8:	180d883a 	mov	r6,r3
 80095ac:	4a3ff284 	addi	r8,r9,-54
 80095b0:	4411883a 	add	r8,r8,r16
 80095b4:	1200170e 	bge	r2,r8,8009614 <scalbn+0xd0>
 80095b8:	01220034 	movhi	r4,34816
 80095bc:	015f8e34 	movhi	r5,32312
 80095c0:	500d883a 	mov	r6,r10
 80095c4:	211d6704 	addi	r4,r4,30108
 80095c8:	29790f04 	addi	r5,r5,-7108
 80095cc:	8009e280 	call	8009e28 <copysign>
 80095d0:	01a20034 	movhi	r6,34816
 80095d4:	01df8e34 	movhi	r7,32312
 80095d8:	1009883a 	mov	r4,r2
 80095dc:	180b883a 	mov	r5,r3
 80095e0:	319d6704 	addi	r6,r6,30108
 80095e4:	39f90f04 	addi	r7,r7,-7108
 80095e8:	800b9f00 	call	800b9f0 <__muldf3>
 80095ec:	dfc00117 	ldw	ra,4(sp)
 80095f0:	dc000017 	ldw	r16,0(sp)
 80095f4:	dec00204 	addi	sp,sp,8
 80095f8:	f800283a 	ret
 80095fc:	0081ffc4 	movi	r2,2047
 8009600:	280d883a 	mov	r6,r5
 8009604:	40803126 	beq	r8,r2,80096cc <scalbn+0x188>
 8009608:	4411883a 	add	r8,r8,r16
 800960c:	0081ff84 	movi	r2,2046
 8009610:	123fe916 	blt	r2,r8,80095b8 <__alt_data_end+0xfc0095b8>
 8009614:	02001b0e 	bge	zero,r8,8009684 <scalbn+0x140>
 8009618:	4010953a 	slli	r8,r8,20
 800961c:	00e00434 	movhi	r3,32784
 8009620:	18ffffc4 	addi	r3,r3,-1
 8009624:	30ce703a 	and	r7,r6,r3
 8009628:	5005883a 	mov	r2,r10
 800962c:	41c6b03a 	or	r3,r8,r7
 8009630:	dfc00117 	ldw	ra,4(sp)
 8009634:	dc000017 	ldw	r16,0(sp)
 8009638:	dec00204 	addi	sp,sp,8
 800963c:	f800283a 	ret
 8009640:	2005883a 	mov	r2,r4
 8009644:	2807883a 	mov	r3,r5
 8009648:	dfc00117 	ldw	ra,4(sp)
 800964c:	dc000017 	ldw	r16,0(sp)
 8009650:	dec00204 	addi	sp,sp,8
 8009654:	f800283a 	ret
 8009658:	01b0be74 	movhi	r6,49913
 800965c:	01c06974 	movhi	r7,421
 8009660:	31bcd644 	addi	r6,r6,-3239
 8009664:	39db87c4 	addi	r7,r7,28191
 8009668:	1009883a 	mov	r4,r2
 800966c:	180b883a 	mov	r5,r3
 8009670:	800b9f00 	call	800b9f0 <__muldf3>
 8009674:	dfc00117 	ldw	ra,4(sp)
 8009678:	dc000017 	ldw	r16,0(sp)
 800967c:	dec00204 	addi	sp,sp,8
 8009680:	f800283a 	ret
 8009684:	00bff2c4 	movi	r2,-53
 8009688:	4080160e 	bge	r8,r2,80096e4 <scalbn+0x1a0>
 800968c:	00b0d414 	movui	r2,50000
 8009690:	143fc916 	blt	r2,r16,80095b8 <__alt_data_end+0xfc0095b8>
 8009694:	0130be74 	movhi	r4,49913
 8009698:	01406974 	movhi	r5,421
 800969c:	500d883a 	mov	r6,r10
 80096a0:	213cd644 	addi	r4,r4,-3239
 80096a4:	295b87c4 	addi	r5,r5,28191
 80096a8:	8009e280 	call	8009e28 <copysign>
 80096ac:	01b0be74 	movhi	r6,49913
 80096b0:	01c06974 	movhi	r7,421
 80096b4:	1009883a 	mov	r4,r2
 80096b8:	180b883a 	mov	r5,r3
 80096bc:	31bcd644 	addi	r6,r6,-3239
 80096c0:	39db87c4 	addi	r7,r7,28191
 80096c4:	800b9f00 	call	800b9f0 <__muldf3>
 80096c8:	003fd906 	br	8009630 <__alt_data_end+0xfc009630>
 80096cc:	200d883a 	mov	r6,r4
 80096d0:	800a5900 	call	800a590 <__adddf3>
 80096d4:	dfc00117 	ldw	ra,4(sp)
 80096d8:	dc000017 	ldw	r16,0(sp)
 80096dc:	dec00204 	addi	sp,sp,8
 80096e0:	f800283a 	ret
 80096e4:	42000d84 	addi	r8,r8,54
 80096e8:	4012953a 	slli	r9,r8,20
 80096ec:	01e00434 	movhi	r7,32784
 80096f0:	39ffffc4 	addi	r7,r7,-1
 80096f4:	31ca703a 	and	r5,r6,r7
 80096f8:	5009883a 	mov	r4,r10
 80096fc:	494ab03a 	or	r5,r9,r5
 8009700:	000d883a 	mov	r6,zero
 8009704:	01cf2434 	movhi	r7,15504
 8009708:	800b9f00 	call	800b9f0 <__muldf3>
 800970c:	003fc806 	br	8009630 <__alt_data_end+0xfc009630>

08009710 <__ieee754_log>:
 8009710:	defff204 	addi	sp,sp,-56
 8009714:	01800434 	movhi	r6,16
 8009718:	dfc00d15 	stw	ra,52(sp)
 800971c:	df000c15 	stw	fp,48(sp)
 8009720:	ddc00b15 	stw	r23,44(sp)
 8009724:	dd800a15 	stw	r22,40(sp)
 8009728:	dd400915 	stw	r21,36(sp)
 800972c:	dd000815 	stw	r20,32(sp)
 8009730:	dcc00715 	stw	r19,28(sp)
 8009734:	dc800615 	stw	r18,24(sp)
 8009738:	dc400515 	stw	r17,20(sp)
 800973c:	dc000415 	stw	r16,16(sp)
 8009740:	31bfffc4 	addi	r6,r6,-1
 8009744:	2807883a 	mov	r3,r5
 8009748:	2005883a 	mov	r2,r4
 800974c:	31404616 	blt	r6,r5,8009868 <__ieee754_log+0x158>
 8009750:	01e00034 	movhi	r7,32768
 8009754:	39ffffc4 	addi	r7,r7,-1
 8009758:	29ce703a 	and	r7,r5,r7
 800975c:	390eb03a 	or	r7,r7,r4
 8009760:	3800f326 	beq	r7,zero,8009b30 <__ieee754_log+0x420>
 8009764:	28017616 	blt	r5,zero,8009d40 <__ieee754_log+0x630>
 8009768:	01d0d434 	movhi	r7,17232
 800976c:	000d883a 	mov	r6,zero
 8009770:	800b9f00 	call	800b9f0 <__muldf3>
 8009774:	015ffc34 	movhi	r5,32752
 8009778:	180f883a 	mov	r7,r3
 800977c:	297fffc4 	addi	r5,r5,-1
 8009780:	013ff284 	movi	r4,-54
 8009784:	29c03d16 	blt	r5,r7,800987c <__ieee754_log+0x16c>
 8009788:	04c00434 	movhi	r19,16
 800978c:	9cffffc4 	addi	r19,r19,-1
 8009790:	01400274 	movhi	r5,9
 8009794:	3cf8703a 	and	fp,r7,r19
 8009798:	2957d904 	addi	r5,r5,24420
 800979c:	3821d53a 	srai	r16,r7,20
 80097a0:	e14b883a 	add	r5,fp,r5
 80097a4:	2940042c 	andhi	r5,r5,16
 80097a8:	2807d53a 	srai	r3,r5,20
 80097ac:	843f0044 	addi	r16,r16,-1023
 80097b0:	294ffc3c 	xorhi	r5,r5,16368
 80097b4:	8121883a 	add	r16,r16,r4
 80097b8:	2f0ab03a 	or	r5,r5,fp
 80097bc:	1009883a 	mov	r4,r2
 80097c0:	000d883a 	mov	r6,zero
 80097c4:	01cffc34 	movhi	r7,16368
 80097c8:	1c21883a 	add	r16,r3,r16
 80097cc:	800c25c0 	call	800c25c <__subdf3>
 80097d0:	1025883a 	mov	r18,r2
 80097d4:	e0800084 	addi	r2,fp,2
 80097d8:	14e6703a 	and	r19,r2,r19
 80097dc:	00800084 	movi	r2,2
 80097e0:	1823883a 	mov	r17,r3
 80097e4:	9009883a 	mov	r4,r18
 80097e8:	180b883a 	mov	r5,r3
 80097ec:	000d883a 	mov	r6,zero
 80097f0:	14c03316 	blt	r2,r19,80098c0 <__ieee754_log+0x1b0>
 80097f4:	000f883a 	mov	r7,zero
 80097f8:	800b7ac0 	call	800b7ac <__eqdf2>
 80097fc:	1000d11e 	bne	r2,zero,8009b44 <__ieee754_log+0x434>
 8009800:	80015826 	beq	r16,zero,8009d64 <__ieee754_log+0x654>
 8009804:	8009883a 	mov	r4,r16
 8009808:	800cbb40 	call	800cbb4 <__floatsidf>
 800980c:	01cff9b4 	movhi	r7,16358
 8009810:	1009883a 	mov	r4,r2
 8009814:	180b883a 	mov	r5,r3
 8009818:	39cb9084 	addi	r7,r7,11842
 800981c:	01bfb834 	movhi	r6,65248
 8009820:	1023883a 	mov	r17,r2
 8009824:	1821883a 	mov	r16,r3
 8009828:	800b9f00 	call	800b9f0 <__muldf3>
 800982c:	018d5e74 	movhi	r6,13689
 8009830:	01cf7ab4 	movhi	r7,15850
 8009834:	8809883a 	mov	r4,r17
 8009838:	800b883a 	mov	r5,r16
 800983c:	318f1d84 	addi	r6,r6,15478
 8009840:	39ce7bc4 	addi	r7,r7,14831
 8009844:	1027883a 	mov	r19,r2
 8009848:	1825883a 	mov	r18,r3
 800984c:	800b9f00 	call	800b9f0 <__muldf3>
 8009850:	9809883a 	mov	r4,r19
 8009854:	900b883a 	mov	r5,r18
 8009858:	100d883a 	mov	r6,r2
 800985c:	180f883a 	mov	r7,r3
 8009860:	800a5900 	call	800a590 <__adddf3>
 8009864:	00000a06 	br	8009890 <__ieee754_log+0x180>
 8009868:	280f883a 	mov	r7,r5
 800986c:	015ffc34 	movhi	r5,32752
 8009870:	297fffc4 	addi	r5,r5,-1
 8009874:	0009883a 	mov	r4,zero
 8009878:	29ffc30e 	bge	r5,r7,8009788 <__alt_data_end+0xfc009788>
 800987c:	1009883a 	mov	r4,r2
 8009880:	180b883a 	mov	r5,r3
 8009884:	100d883a 	mov	r6,r2
 8009888:	180f883a 	mov	r7,r3
 800988c:	800a5900 	call	800a590 <__adddf3>
 8009890:	dfc00d17 	ldw	ra,52(sp)
 8009894:	df000c17 	ldw	fp,48(sp)
 8009898:	ddc00b17 	ldw	r23,44(sp)
 800989c:	dd800a17 	ldw	r22,40(sp)
 80098a0:	dd400917 	ldw	r21,36(sp)
 80098a4:	dd000817 	ldw	r20,32(sp)
 80098a8:	dcc00717 	ldw	r19,28(sp)
 80098ac:	dc800617 	ldw	r18,24(sp)
 80098b0:	dc400517 	ldw	r17,20(sp)
 80098b4:	dc000417 	ldw	r16,16(sp)
 80098b8:	dec00e04 	addi	sp,sp,56
 80098bc:	f800283a 	ret
 80098c0:	01d00034 	movhi	r7,16384
 80098c4:	800a5900 	call	800a590 <__adddf3>
 80098c8:	880b883a 	mov	r5,r17
 80098cc:	100d883a 	mov	r6,r2
 80098d0:	180f883a 	mov	r7,r3
 80098d4:	9009883a 	mov	r4,r18
 80098d8:	800ae2c0 	call	800ae2c <__divdf3>
 80098dc:	8009883a 	mov	r4,r16
 80098e0:	102d883a 	mov	r22,r2
 80098e4:	182b883a 	mov	r21,r3
 80098e8:	800cbb40 	call	800cbb4 <__floatsidf>
 80098ec:	b009883a 	mov	r4,r22
 80098f0:	a80b883a 	mov	r5,r21
 80098f4:	b00d883a 	mov	r6,r22
 80098f8:	a80f883a 	mov	r7,r21
 80098fc:	d8800015 	stw	r2,0(sp)
 8009900:	d8c00115 	stw	r3,4(sp)
 8009904:	800b9f00 	call	800b9f0 <__muldf3>
 8009908:	027ffeb4 	movhi	r9,65530
 800990c:	4a7ae184 	addi	r9,r9,-5242
 8009910:	100d883a 	mov	r6,r2
 8009914:	180f883a 	mov	r7,r3
 8009918:	1009883a 	mov	r4,r2
 800991c:	180b883a 	mov	r5,r3
 8009920:	e26f883a 	add	r23,fp,r9
 8009924:	d8c00315 	stw	r3,12(sp)
 8009928:	d8800215 	stw	r2,8(sp)
 800992c:	800b9f00 	call	800b9f0 <__muldf3>
 8009930:	01b7cfb4 	movhi	r6,57150
 8009934:	01cff0f4 	movhi	r7,16323
 8009938:	1009883a 	mov	r4,r2
 800993c:	180b883a 	mov	r5,r3
 8009940:	31949104 	addi	r6,r6,21060
 8009944:	39fc4484 	addi	r7,r7,-3822
 8009948:	1029883a 	mov	r20,r2
 800994c:	1827883a 	mov	r19,r3
 8009950:	800b9f00 	call	800b9f0 <__muldf3>
 8009954:	01a5b2f4 	movhi	r6,38603
 8009958:	01cff1f4 	movhi	r7,16327
 800995c:	1009883a 	mov	r4,r2
 8009960:	180b883a 	mov	r5,r3
 8009964:	3180f784 	addi	r6,r6,990
 8009968:	39d19904 	addi	r7,r7,18020
 800996c:	800a5900 	call	800a590 <__adddf3>
 8009970:	a00d883a 	mov	r6,r20
 8009974:	980f883a 	mov	r7,r19
 8009978:	1009883a 	mov	r4,r2
 800997c:	180b883a 	mov	r5,r3
 8009980:	800b9f00 	call	800b9f0 <__muldf3>
 8009984:	01a508f4 	movhi	r6,37923
 8009988:	01cff4b4 	movhi	r7,16338
 800998c:	1009883a 	mov	r4,r2
 8009990:	180b883a 	mov	r5,r3
 8009994:	31a4d644 	addi	r6,r6,-27815
 8009998:	39d24904 	addi	r7,r7,18724
 800999c:	800a5900 	call	800a590 <__adddf3>
 80099a0:	a00d883a 	mov	r6,r20
 80099a4:	980f883a 	mov	r7,r19
 80099a8:	1009883a 	mov	r4,r2
 80099ac:	180b883a 	mov	r5,r3
 80099b0:	800b9f00 	call	800b9f0 <__muldf3>
 80099b4:	01955574 	movhi	r6,21845
 80099b8:	01cff974 	movhi	r7,16357
 80099bc:	1009883a 	mov	r4,r2
 80099c0:	180b883a 	mov	r5,r3
 80099c4:	319564c4 	addi	r6,r6,21907
 80099c8:	39d55544 	addi	r7,r7,21845
 80099cc:	800a5900 	call	800a590 <__adddf3>
 80099d0:	dac00217 	ldw	r11,8(sp)
 80099d4:	da800317 	ldw	r10,12(sp)
 80099d8:	1009883a 	mov	r4,r2
 80099dc:	580d883a 	mov	r6,r11
 80099e0:	500f883a 	mov	r7,r10
 80099e4:	180b883a 	mov	r5,r3
 80099e8:	800b9f00 	call	800b9f0 <__muldf3>
 80099ec:	01b41e74 	movhi	r6,53369
 80099f0:	01cff134 	movhi	r7,16324
 80099f4:	a009883a 	mov	r4,r20
 80099f8:	980b883a 	mov	r5,r19
 80099fc:	31b1a7c4 	addi	r6,r6,-14689
 8009a00:	39e68244 	addi	r7,r7,-26103
 8009a04:	d8c00315 	stw	r3,12(sp)
 8009a08:	d8800215 	stw	r2,8(sp)
 8009a0c:	800b9f00 	call	800b9f0 <__muldf3>
 8009a10:	018763b4 	movhi	r6,7566
 8009a14:	01cff334 	movhi	r7,16332
 8009a18:	1009883a 	mov	r4,r2
 8009a1c:	180b883a 	mov	r5,r3
 8009a20:	319e2bc4 	addi	r6,r6,30895
 8009a24:	39dc7144 	addi	r7,r7,29125
 8009a28:	800a5900 	call	800a590 <__adddf3>
 8009a2c:	a00d883a 	mov	r6,r20
 8009a30:	980f883a 	mov	r7,r19
 8009a34:	1009883a 	mov	r4,r2
 8009a38:	180b883a 	mov	r5,r3
 8009a3c:	800b9f00 	call	800b9f0 <__muldf3>
 8009a40:	01a66634 	movhi	r6,39320
 8009a44:	01cff6b4 	movhi	r7,16346
 8009a48:	1009883a 	mov	r4,r2
 8009a4c:	180b883a 	mov	r5,r3
 8009a50:	31be8104 	addi	r6,r6,-1532
 8009a54:	39e66644 	addi	r7,r7,-26215
 8009a58:	800a5900 	call	800a590 <__adddf3>
 8009a5c:	a00d883a 	mov	r6,r20
 8009a60:	980f883a 	mov	r7,r19
 8009a64:	1009883a 	mov	r4,r2
 8009a68:	180b883a 	mov	r5,r3
 8009a6c:	800b9f00 	call	800b9f0 <__muldf3>
 8009a70:	dac00217 	ldw	r11,8(sp)
 8009a74:	da800317 	ldw	r10,12(sp)
 8009a78:	180f883a 	mov	r7,r3
 8009a7c:	5809883a 	mov	r4,r11
 8009a80:	500b883a 	mov	r5,r10
 8009a84:	100d883a 	mov	r6,r2
 8009a88:	800a5900 	call	800a590 <__adddf3>
 8009a8c:	01c001f4 	movhi	r7,7
 8009a90:	39ee1444 	addi	r7,r7,-18351
 8009a94:	3f0fc83a 	sub	r7,r7,fp
 8009a98:	3dd2b03a 	or	r9,r7,r23
 8009a9c:	1029883a 	mov	r20,r2
 8009aa0:	1827883a 	mov	r19,r3
 8009aa4:	0240480e 	bge	zero,r9,8009bc8 <__ieee754_log+0x4b8>
 8009aa8:	9009883a 	mov	r4,r18
 8009aac:	880b883a 	mov	r5,r17
 8009ab0:	000d883a 	mov	r6,zero
 8009ab4:	01cff834 	movhi	r7,16352
 8009ab8:	800b9f00 	call	800b9f0 <__muldf3>
 8009abc:	1009883a 	mov	r4,r2
 8009ac0:	180b883a 	mov	r5,r3
 8009ac4:	900d883a 	mov	r6,r18
 8009ac8:	880f883a 	mov	r7,r17
 8009acc:	800b9f00 	call	800b9f0 <__muldf3>
 8009ad0:	1039883a 	mov	fp,r2
 8009ad4:	182f883a 	mov	r23,r3
 8009ad8:	8000681e 	bne	r16,zero,8009c7c <__ieee754_log+0x56c>
 8009adc:	1009883a 	mov	r4,r2
 8009ae0:	180b883a 	mov	r5,r3
 8009ae4:	a00d883a 	mov	r6,r20
 8009ae8:	980f883a 	mov	r7,r19
 8009aec:	800a5900 	call	800a590 <__adddf3>
 8009af0:	1009883a 	mov	r4,r2
 8009af4:	180b883a 	mov	r5,r3
 8009af8:	b00d883a 	mov	r6,r22
 8009afc:	a80f883a 	mov	r7,r21
 8009b00:	800b9f00 	call	800b9f0 <__muldf3>
 8009b04:	e009883a 	mov	r4,fp
 8009b08:	b80b883a 	mov	r5,r23
 8009b0c:	100d883a 	mov	r6,r2
 8009b10:	180f883a 	mov	r7,r3
 8009b14:	800c25c0 	call	800c25c <__subdf3>
 8009b18:	9009883a 	mov	r4,r18
 8009b1c:	880b883a 	mov	r5,r17
 8009b20:	100d883a 	mov	r6,r2
 8009b24:	180f883a 	mov	r7,r3
 8009b28:	800c25c0 	call	800c25c <__subdf3>
 8009b2c:	003f5806 	br	8009890 <__alt_data_end+0xfc009890>
 8009b30:	0009883a 	mov	r4,zero
 8009b34:	0170d434 	movhi	r5,50000
 8009b38:	000d883a 	mov	r6,zero
 8009b3c:	800ae2c0 	call	800ae2c <__divdf3>
 8009b40:	003f5306 	br	8009890 <__alt_data_end+0xfc009890>
 8009b44:	900d883a 	mov	r6,r18
 8009b48:	880f883a 	mov	r7,r17
 8009b4c:	9009883a 	mov	r4,r18
 8009b50:	880b883a 	mov	r5,r17
 8009b54:	800b9f00 	call	800b9f0 <__muldf3>
 8009b58:	01955574 	movhi	r6,21845
 8009b5c:	01cff574 	movhi	r7,16341
 8009b60:	9009883a 	mov	r4,r18
 8009b64:	880b883a 	mov	r5,r17
 8009b68:	31955544 	addi	r6,r6,21845
 8009b6c:	39d55544 	addi	r7,r7,21845
 8009b70:	1029883a 	mov	r20,r2
 8009b74:	1827883a 	mov	r19,r3
 8009b78:	800b9f00 	call	800b9f0 <__muldf3>
 8009b7c:	0009883a 	mov	r4,zero
 8009b80:	014ff834 	movhi	r5,16352
 8009b84:	100d883a 	mov	r6,r2
 8009b88:	180f883a 	mov	r7,r3
 8009b8c:	800c25c0 	call	800c25c <__subdf3>
 8009b90:	a009883a 	mov	r4,r20
 8009b94:	980b883a 	mov	r5,r19
 8009b98:	100d883a 	mov	r6,r2
 8009b9c:	180f883a 	mov	r7,r3
 8009ba0:	800b9f00 	call	800b9f0 <__muldf3>
 8009ba4:	1029883a 	mov	r20,r2
 8009ba8:	1827883a 	mov	r19,r3
 8009bac:	8000701e 	bne	r16,zero,8009d70 <__ieee754_log+0x660>
 8009bb0:	9009883a 	mov	r4,r18
 8009bb4:	880b883a 	mov	r5,r17
 8009bb8:	100d883a 	mov	r6,r2
 8009bbc:	180f883a 	mov	r7,r3
 8009bc0:	800c25c0 	call	800c25c <__subdf3>
 8009bc4:	003f3206 	br	8009890 <__alt_data_end+0xfc009890>
 8009bc8:	80008c26 	beq	r16,zero,8009dfc <__ieee754_log+0x6ec>
 8009bcc:	d9000017 	ldw	r4,0(sp)
 8009bd0:	d9400117 	ldw	r5,4(sp)
 8009bd4:	01cff9b4 	movhi	r7,16358
 8009bd8:	39cb9084 	addi	r7,r7,11842
 8009bdc:	01bfb834 	movhi	r6,65248
 8009be0:	800b9f00 	call	800b9f0 <__muldf3>
 8009be4:	9009883a 	mov	r4,r18
 8009be8:	880b883a 	mov	r5,r17
 8009bec:	a00d883a 	mov	r6,r20
 8009bf0:	980f883a 	mov	r7,r19
 8009bf4:	1821883a 	mov	r16,r3
 8009bf8:	d8800215 	stw	r2,8(sp)
 8009bfc:	800c25c0 	call	800c25c <__subdf3>
 8009c00:	b00d883a 	mov	r6,r22
 8009c04:	a80f883a 	mov	r7,r21
 8009c08:	1009883a 	mov	r4,r2
 8009c0c:	180b883a 	mov	r5,r3
 8009c10:	800b9f00 	call	800b9f0 <__muldf3>
 8009c14:	d9000017 	ldw	r4,0(sp)
 8009c18:	d9400117 	ldw	r5,4(sp)
 8009c1c:	018d5e74 	movhi	r6,13689
 8009c20:	01cf7ab4 	movhi	r7,15850
 8009c24:	318f1d84 	addi	r6,r6,15478
 8009c28:	39ce7bc4 	addi	r7,r7,14831
 8009c2c:	1029883a 	mov	r20,r2
 8009c30:	1827883a 	mov	r19,r3
 8009c34:	800b9f00 	call	800b9f0 <__muldf3>
 8009c38:	a009883a 	mov	r4,r20
 8009c3c:	980b883a 	mov	r5,r19
 8009c40:	100d883a 	mov	r6,r2
 8009c44:	180f883a 	mov	r7,r3
 8009c48:	800c25c0 	call	800c25c <__subdf3>
 8009c4c:	900d883a 	mov	r6,r18
 8009c50:	880f883a 	mov	r7,r17
 8009c54:	1009883a 	mov	r4,r2
 8009c58:	180b883a 	mov	r5,r3
 8009c5c:	800c25c0 	call	800c25c <__subdf3>
 8009c60:	da000217 	ldw	r8,8(sp)
 8009c64:	800b883a 	mov	r5,r16
 8009c68:	100d883a 	mov	r6,r2
 8009c6c:	4009883a 	mov	r4,r8
 8009c70:	180f883a 	mov	r7,r3
 8009c74:	800c25c0 	call	800c25c <__subdf3>
 8009c78:	003f0506 	br	8009890 <__alt_data_end+0xfc009890>
 8009c7c:	d9000017 	ldw	r4,0(sp)
 8009c80:	d9400117 	ldw	r5,4(sp)
 8009c84:	01cff9b4 	movhi	r7,16358
 8009c88:	39cb9084 	addi	r7,r7,11842
 8009c8c:	01bfb834 	movhi	r6,65248
 8009c90:	800b9f00 	call	800b9f0 <__muldf3>
 8009c94:	e009883a 	mov	r4,fp
 8009c98:	b80b883a 	mov	r5,r23
 8009c9c:	a00d883a 	mov	r6,r20
 8009ca0:	980f883a 	mov	r7,r19
 8009ca4:	1821883a 	mov	r16,r3
 8009ca8:	d8800315 	stw	r2,12(sp)
 8009cac:	800a5900 	call	800a590 <__adddf3>
 8009cb0:	b00d883a 	mov	r6,r22
 8009cb4:	a80f883a 	mov	r7,r21
 8009cb8:	1009883a 	mov	r4,r2
 8009cbc:	180b883a 	mov	r5,r3
 8009cc0:	800b9f00 	call	800b9f0 <__muldf3>
 8009cc4:	d9000017 	ldw	r4,0(sp)
 8009cc8:	d9400117 	ldw	r5,4(sp)
 8009ccc:	018d5e74 	movhi	r6,13689
 8009cd0:	01cf7ab4 	movhi	r7,15850
 8009cd4:	318f1d84 	addi	r6,r6,15478
 8009cd8:	39ce7bc4 	addi	r7,r7,14831
 8009cdc:	1029883a 	mov	r20,r2
 8009ce0:	1827883a 	mov	r19,r3
 8009ce4:	800b9f00 	call	800b9f0 <__muldf3>
 8009ce8:	a009883a 	mov	r4,r20
 8009cec:	980b883a 	mov	r5,r19
 8009cf0:	100d883a 	mov	r6,r2
 8009cf4:	180f883a 	mov	r7,r3
 8009cf8:	800a5900 	call	800a590 <__adddf3>
 8009cfc:	e009883a 	mov	r4,fp
 8009d00:	b80b883a 	mov	r5,r23
 8009d04:	100d883a 	mov	r6,r2
 8009d08:	180f883a 	mov	r7,r3
 8009d0c:	800c25c0 	call	800c25c <__subdf3>
 8009d10:	900d883a 	mov	r6,r18
 8009d14:	880f883a 	mov	r7,r17
 8009d18:	1009883a 	mov	r4,r2
 8009d1c:	180b883a 	mov	r5,r3
 8009d20:	800c25c0 	call	800c25c <__subdf3>
 8009d24:	da800317 	ldw	r10,12(sp)
 8009d28:	800b883a 	mov	r5,r16
 8009d2c:	100d883a 	mov	r6,r2
 8009d30:	5009883a 	mov	r4,r10
 8009d34:	180f883a 	mov	r7,r3
 8009d38:	800c25c0 	call	800c25c <__subdf3>
 8009d3c:	003ed406 	br	8009890 <__alt_data_end+0xfc009890>
 8009d40:	200d883a 	mov	r6,r4
 8009d44:	280f883a 	mov	r7,r5
 8009d48:	800c25c0 	call	800c25c <__subdf3>
 8009d4c:	1009883a 	mov	r4,r2
 8009d50:	180b883a 	mov	r5,r3
 8009d54:	000d883a 	mov	r6,zero
 8009d58:	000f883a 	mov	r7,zero
 8009d5c:	800ae2c0 	call	800ae2c <__divdf3>
 8009d60:	003ecb06 	br	8009890 <__alt_data_end+0xfc009890>
 8009d64:	0005883a 	mov	r2,zero
 8009d68:	0007883a 	mov	r3,zero
 8009d6c:	003ec806 	br	8009890 <__alt_data_end+0xfc009890>
 8009d70:	8009883a 	mov	r4,r16
 8009d74:	800cbb40 	call	800cbb4 <__floatsidf>
 8009d78:	01cff9b4 	movhi	r7,16358
 8009d7c:	1009883a 	mov	r4,r2
 8009d80:	180b883a 	mov	r5,r3
 8009d84:	39cb9084 	addi	r7,r7,11842
 8009d88:	01bfb834 	movhi	r6,65248
 8009d8c:	102b883a 	mov	r21,r2
 8009d90:	1821883a 	mov	r16,r3
 8009d94:	800b9f00 	call	800b9f0 <__muldf3>
 8009d98:	018d5e74 	movhi	r6,13689
 8009d9c:	01cf7ab4 	movhi	r7,15850
 8009da0:	a809883a 	mov	r4,r21
 8009da4:	800b883a 	mov	r5,r16
 8009da8:	318f1d84 	addi	r6,r6,15478
 8009dac:	39ce7bc4 	addi	r7,r7,14831
 8009db0:	102f883a 	mov	r23,r2
 8009db4:	182d883a 	mov	r22,r3
 8009db8:	800b9f00 	call	800b9f0 <__muldf3>
 8009dbc:	a009883a 	mov	r4,r20
 8009dc0:	980b883a 	mov	r5,r19
 8009dc4:	100d883a 	mov	r6,r2
 8009dc8:	180f883a 	mov	r7,r3
 8009dcc:	800c25c0 	call	800c25c <__subdf3>
 8009dd0:	900d883a 	mov	r6,r18
 8009dd4:	880f883a 	mov	r7,r17
 8009dd8:	1009883a 	mov	r4,r2
 8009ddc:	180b883a 	mov	r5,r3
 8009de0:	800c25c0 	call	800c25c <__subdf3>
 8009de4:	b809883a 	mov	r4,r23
 8009de8:	b00b883a 	mov	r5,r22
 8009dec:	100d883a 	mov	r6,r2
 8009df0:	180f883a 	mov	r7,r3
 8009df4:	800c25c0 	call	800c25c <__subdf3>
 8009df8:	003ea506 	br	8009890 <__alt_data_end+0xfc009890>
 8009dfc:	9009883a 	mov	r4,r18
 8009e00:	880b883a 	mov	r5,r17
 8009e04:	100d883a 	mov	r6,r2
 8009e08:	180f883a 	mov	r7,r3
 8009e0c:	800c25c0 	call	800c25c <__subdf3>
 8009e10:	1009883a 	mov	r4,r2
 8009e14:	180b883a 	mov	r5,r3
 8009e18:	b00d883a 	mov	r6,r22
 8009e1c:	a80f883a 	mov	r7,r21
 8009e20:	800b9f00 	call	800b9f0 <__muldf3>
 8009e24:	003f3c06 	br	8009b18 <__alt_data_end+0xfc009b18>

08009e28 <copysign>:
 8009e28:	2005883a 	mov	r2,r4
 8009e2c:	01200034 	movhi	r4,32768
 8009e30:	213fffc4 	addi	r4,r4,-1
 8009e34:	38e0002c 	andhi	r3,r7,32768
 8009e38:	290a703a 	and	r5,r5,r4
 8009e3c:	1946b03a 	or	r3,r3,r5
 8009e40:	f800283a 	ret

08009e44 <__fixunsdfsi>:
 8009e44:	defffd04 	addi	sp,sp,-12
 8009e48:	000d883a 	mov	r6,zero
 8009e4c:	01d07834 	movhi	r7,16864
 8009e50:	dc400115 	stw	r17,4(sp)
 8009e54:	dc000015 	stw	r16,0(sp)
 8009e58:	dfc00215 	stw	ra,8(sp)
 8009e5c:	2023883a 	mov	r17,r4
 8009e60:	2821883a 	mov	r16,r5
 8009e64:	800b8300 	call	800b830 <__gedf2>
 8009e68:	1000080e 	bge	r2,zero,8009e8c <__fixunsdfsi+0x48>
 8009e6c:	8809883a 	mov	r4,r17
 8009e70:	800b883a 	mov	r5,r16
 8009e74:	800cb2c0 	call	800cb2c <__fixdfsi>
 8009e78:	dfc00217 	ldw	ra,8(sp)
 8009e7c:	dc400117 	ldw	r17,4(sp)
 8009e80:	dc000017 	ldw	r16,0(sp)
 8009e84:	dec00304 	addi	sp,sp,12
 8009e88:	f800283a 	ret
 8009e8c:	000d883a 	mov	r6,zero
 8009e90:	01d07834 	movhi	r7,16864
 8009e94:	8809883a 	mov	r4,r17
 8009e98:	800b883a 	mov	r5,r16
 8009e9c:	800c25c0 	call	800c25c <__subdf3>
 8009ea0:	180b883a 	mov	r5,r3
 8009ea4:	1009883a 	mov	r4,r2
 8009ea8:	800cb2c0 	call	800cb2c <__fixdfsi>
 8009eac:	00e00034 	movhi	r3,32768
 8009eb0:	10c5883a 	add	r2,r2,r3
 8009eb4:	003ff006 	br	8009e78 <__alt_data_end+0xfc009e78>

08009eb8 <udivmodsi4>:
 8009eb8:	2900182e 	bgeu	r5,r4,8009f1c <udivmodsi4+0x64>
 8009ebc:	28001716 	blt	r5,zero,8009f1c <udivmodsi4+0x64>
 8009ec0:	00800804 	movi	r2,32
 8009ec4:	00c00044 	movi	r3,1
 8009ec8:	00000206 	br	8009ed4 <udivmodsi4+0x1c>
 8009ecc:	10001126 	beq	r2,zero,8009f14 <udivmodsi4+0x5c>
 8009ed0:	28000516 	blt	r5,zero,8009ee8 <udivmodsi4+0x30>
 8009ed4:	294b883a 	add	r5,r5,r5
 8009ed8:	10bfffc4 	addi	r2,r2,-1
 8009edc:	18c7883a 	add	r3,r3,r3
 8009ee0:	293ffa36 	bltu	r5,r4,8009ecc <__alt_data_end+0xfc009ecc>
 8009ee4:	18000b26 	beq	r3,zero,8009f14 <udivmodsi4+0x5c>
 8009ee8:	0005883a 	mov	r2,zero
 8009eec:	21400236 	bltu	r4,r5,8009ef8 <udivmodsi4+0x40>
 8009ef0:	2149c83a 	sub	r4,r4,r5
 8009ef4:	10c4b03a 	or	r2,r2,r3
 8009ef8:	1806d07a 	srli	r3,r3,1
 8009efc:	280ad07a 	srli	r5,r5,1
 8009f00:	183ffa1e 	bne	r3,zero,8009eec <__alt_data_end+0xfc009eec>
 8009f04:	3000011e 	bne	r6,zero,8009f0c <udivmodsi4+0x54>
 8009f08:	f800283a 	ret
 8009f0c:	2005883a 	mov	r2,r4
 8009f10:	f800283a 	ret
 8009f14:	0005883a 	mov	r2,zero
 8009f18:	003ffa06 	br	8009f04 <__alt_data_end+0xfc009f04>
 8009f1c:	00c00044 	movi	r3,1
 8009f20:	003ff106 	br	8009ee8 <__alt_data_end+0xfc009ee8>

08009f24 <__divsi3>:
 8009f24:	defffe04 	addi	sp,sp,-8
 8009f28:	dfc00115 	stw	ra,4(sp)
 8009f2c:	dc000015 	stw	r16,0(sp)
 8009f30:	20000b16 	blt	r4,zero,8009f60 <__divsi3+0x3c>
 8009f34:	0021883a 	mov	r16,zero
 8009f38:	28000c16 	blt	r5,zero,8009f6c <__divsi3+0x48>
 8009f3c:	000d883a 	mov	r6,zero
 8009f40:	8009eb80 	call	8009eb8 <udivmodsi4>
 8009f44:	0407c83a 	sub	r3,zero,r16
 8009f48:	1884f03a 	xor	r2,r3,r2
 8009f4c:	1405883a 	add	r2,r2,r16
 8009f50:	dfc00117 	ldw	ra,4(sp)
 8009f54:	dc000017 	ldw	r16,0(sp)
 8009f58:	dec00204 	addi	sp,sp,8
 8009f5c:	f800283a 	ret
 8009f60:	0109c83a 	sub	r4,zero,r4
 8009f64:	04000044 	movi	r16,1
 8009f68:	283ff40e 	bge	r5,zero,8009f3c <__alt_data_end+0xfc009f3c>
 8009f6c:	014bc83a 	sub	r5,zero,r5
 8009f70:	8400005c 	xori	r16,r16,1
 8009f74:	003ff106 	br	8009f3c <__alt_data_end+0xfc009f3c>

08009f78 <__modsi3>:
 8009f78:	defffd04 	addi	sp,sp,-12
 8009f7c:	dfc00215 	stw	ra,8(sp)
 8009f80:	dc400115 	stw	r17,4(sp)
 8009f84:	dc000015 	stw	r16,0(sp)
 8009f88:	20000c16 	blt	r4,zero,8009fbc <__modsi3+0x44>
 8009f8c:	0023883a 	mov	r17,zero
 8009f90:	0021883a 	mov	r16,zero
 8009f94:	28000d16 	blt	r5,zero,8009fcc <__modsi3+0x54>
 8009f98:	01800044 	movi	r6,1
 8009f9c:	8009eb80 	call	8009eb8 <udivmodsi4>
 8009fa0:	1404f03a 	xor	r2,r2,r16
 8009fa4:	8885883a 	add	r2,r17,r2
 8009fa8:	dfc00217 	ldw	ra,8(sp)
 8009fac:	dc400117 	ldw	r17,4(sp)
 8009fb0:	dc000017 	ldw	r16,0(sp)
 8009fb4:	dec00304 	addi	sp,sp,12
 8009fb8:	f800283a 	ret
 8009fbc:	0109c83a 	sub	r4,zero,r4
 8009fc0:	04400044 	movi	r17,1
 8009fc4:	043fffc4 	movi	r16,-1
 8009fc8:	283ff30e 	bge	r5,zero,8009f98 <__alt_data_end+0xfc009f98>
 8009fcc:	014bc83a 	sub	r5,zero,r5
 8009fd0:	003ff106 	br	8009f98 <__alt_data_end+0xfc009f98>

08009fd4 <__udivsi3>:
 8009fd4:	000d883a 	mov	r6,zero
 8009fd8:	8009eb81 	jmpi	8009eb8 <udivmodsi4>

08009fdc <__umodsi3>:
 8009fdc:	01800044 	movi	r6,1
 8009fe0:	8009eb81 	jmpi	8009eb8 <udivmodsi4>

08009fe4 <__mulsi3>:
 8009fe4:	0005883a 	mov	r2,zero
 8009fe8:	20000726 	beq	r4,zero,800a008 <__mulsi3+0x24>
 8009fec:	20c0004c 	andi	r3,r4,1
 8009ff0:	2008d07a 	srli	r4,r4,1
 8009ff4:	18000126 	beq	r3,zero,8009ffc <__mulsi3+0x18>
 8009ff8:	1145883a 	add	r2,r2,r5
 8009ffc:	294b883a 	add	r5,r5,r5
 800a000:	203ffa1e 	bne	r4,zero,8009fec <__alt_data_end+0xfc009fec>
 800a004:	f800283a 	ret
 800a008:	f800283a 	ret

0800a00c <__divsf3>:
 800a00c:	defff504 	addi	sp,sp,-44
 800a010:	dd000515 	stw	r20,20(sp)
 800a014:	2028d5fa 	srli	r20,r4,23
 800a018:	dd400615 	stw	r21,24(sp)
 800a01c:	202ad7fa 	srli	r21,r4,31
 800a020:	00c02034 	movhi	r3,128
 800a024:	dcc00415 	stw	r19,16(sp)
 800a028:	dc800315 	stw	r18,12(sp)
 800a02c:	18ffffc4 	addi	r3,r3,-1
 800a030:	dfc00a15 	stw	ra,40(sp)
 800a034:	df000915 	stw	fp,36(sp)
 800a038:	ddc00815 	stw	r23,32(sp)
 800a03c:	dd800715 	stw	r22,28(sp)
 800a040:	dc400215 	stw	r17,8(sp)
 800a044:	dc000115 	stw	r16,4(sp)
 800a048:	a5003fcc 	andi	r20,r20,255
 800a04c:	1924703a 	and	r18,r3,r4
 800a050:	acc03fcc 	andi	r19,r21,255
 800a054:	a0004d26 	beq	r20,zero,800a18c <__divsf3+0x180>
 800a058:	00803fc4 	movi	r2,255
 800a05c:	a0802e26 	beq	r20,r2,800a118 <__divsf3+0x10c>
 800a060:	91002034 	orhi	r4,r18,128
 800a064:	202490fa 	slli	r18,r4,3
 800a068:	a53fe044 	addi	r20,r20,-127
 800a06c:	0021883a 	mov	r16,zero
 800a070:	002f883a 	mov	r23,zero
 800a074:	2804d5fa 	srli	r2,r5,23
 800a078:	282cd7fa 	srli	r22,r5,31
 800a07c:	00c02034 	movhi	r3,128
 800a080:	18ffffc4 	addi	r3,r3,-1
 800a084:	10803fcc 	andi	r2,r2,255
 800a088:	1962703a 	and	r17,r3,r5
 800a08c:	b7003fcc 	andi	fp,r22,255
 800a090:	10004526 	beq	r2,zero,800a1a8 <__divsf3+0x19c>
 800a094:	00c03fc4 	movi	r3,255
 800a098:	10c04026 	beq	r2,r3,800a19c <__divsf3+0x190>
 800a09c:	88c02034 	orhi	r3,r17,128
 800a0a0:	182290fa 	slli	r17,r3,3
 800a0a4:	10bfe044 	addi	r2,r2,-127
 800a0a8:	0009883a 	mov	r4,zero
 800a0ac:	2420b03a 	or	r16,r4,r16
 800a0b0:	802090ba 	slli	r16,r16,2
 800a0b4:	01c20074 	movhi	r7,2049
 800a0b8:	39e83604 	addi	r7,r7,-24360
 800a0bc:	81e1883a 	add	r16,r16,r7
 800a0c0:	80c00017 	ldw	r3,0(r16)
 800a0c4:	ad8af03a 	xor	r5,r21,r22
 800a0c8:	280d883a 	mov	r6,r5
 800a0cc:	a085c83a 	sub	r2,r20,r2
 800a0d0:	29403fcc 	andi	r5,r5,255
 800a0d4:	1800683a 	jmp	r3
 800a0d8:	0800a2e4 	muli	zero,at,651
 800a0dc:	0800a28c 	andi	zero,at,650
 800a0e0:	0800a2b0 	cmpltui	zero,at,650
 800a0e4:	0800a278 	rdprs	zero,at,649
 800a0e8:	0800a2b0 	cmpltui	zero,at,650
 800a0ec:	0800a128 	cmpgeui	zero,at,644
 800a0f0:	0800a2b0 	cmpltui	zero,at,650
 800a0f4:	0800a278 	rdprs	zero,at,649
 800a0f8:	0800a28c 	andi	zero,at,650
 800a0fc:	0800a28c 	andi	zero,at,650
 800a100:	0800a128 	cmpgeui	zero,at,644
 800a104:	0800a278 	rdprs	zero,at,649
 800a108:	0800a37c 	xorhi	zero,at,653
 800a10c:	0800a37c 	xorhi	zero,at,653
 800a110:	0800a37c 	xorhi	zero,at,653
 800a114:	0800a2bc 	xorhi	zero,at,650
 800a118:	9000531e 	bne	r18,zero,800a268 <__divsf3+0x25c>
 800a11c:	04000204 	movi	r16,8
 800a120:	05c00084 	movi	r23,2
 800a124:	003fd306 	br	800a074 <__alt_data_end+0xfc00a074>
 800a128:	00c02034 	movhi	r3,128
 800a12c:	000d883a 	mov	r6,zero
 800a130:	18ffffc4 	addi	r3,r3,-1
 800a134:	013fffc4 	movi	r4,-1
 800a138:	21003fcc 	andi	r4,r4,255
 800a13c:	200895fa 	slli	r4,r4,23
 800a140:	30803fcc 	andi	r2,r6,255
 800a144:	01802034 	movhi	r6,128
 800a148:	31bfffc4 	addi	r6,r6,-1
 800a14c:	100497fa 	slli	r2,r2,31
 800a150:	1986703a 	and	r3,r3,r6
 800a154:	1906b03a 	or	r3,r3,r4
 800a158:	1884b03a 	or	r2,r3,r2
 800a15c:	dfc00a17 	ldw	ra,40(sp)
 800a160:	df000917 	ldw	fp,36(sp)
 800a164:	ddc00817 	ldw	r23,32(sp)
 800a168:	dd800717 	ldw	r22,28(sp)
 800a16c:	dd400617 	ldw	r21,24(sp)
 800a170:	dd000517 	ldw	r20,20(sp)
 800a174:	dcc00417 	ldw	r19,16(sp)
 800a178:	dc800317 	ldw	r18,12(sp)
 800a17c:	dc400217 	ldw	r17,8(sp)
 800a180:	dc000117 	ldw	r16,4(sp)
 800a184:	dec00b04 	addi	sp,sp,44
 800a188:	f800283a 	ret
 800a18c:	90002b1e 	bne	r18,zero,800a23c <__divsf3+0x230>
 800a190:	04000104 	movi	r16,4
 800a194:	05c00044 	movi	r23,1
 800a198:	003fb606 	br	800a074 <__alt_data_end+0xfc00a074>
 800a19c:	8800251e 	bne	r17,zero,800a234 <__divsf3+0x228>
 800a1a0:	01000084 	movi	r4,2
 800a1a4:	00000206 	br	800a1b0 <__divsf3+0x1a4>
 800a1a8:	88001a1e 	bne	r17,zero,800a214 <__divsf3+0x208>
 800a1ac:	01000044 	movi	r4,1
 800a1b0:	2420b03a 	or	r16,r4,r16
 800a1b4:	802090ba 	slli	r16,r16,2
 800a1b8:	00c20074 	movhi	r3,2049
 800a1bc:	18e87504 	addi	r3,r3,-24108
 800a1c0:	80e1883a 	add	r16,r16,r3
 800a1c4:	80c00017 	ldw	r3,0(r16)
 800a1c8:	ad8af03a 	xor	r5,r21,r22
 800a1cc:	a085c83a 	sub	r2,r20,r2
 800a1d0:	1800683a 	jmp	r3
 800a1d4:	0800a28c 	andi	zero,at,650
 800a1d8:	0800a28c 	andi	zero,at,650
 800a1dc:	0800a3dc 	xori	zero,at,655
 800a1e0:	0800a274 	orhi	zero,at,649
 800a1e4:	0800a3dc 	xori	zero,at,655
 800a1e8:	0800a128 	cmpgeui	zero,at,644
 800a1ec:	0800a3dc 	xori	zero,at,655
 800a1f0:	0800a274 	orhi	zero,at,649
 800a1f4:	0800a28c 	andi	zero,at,650
 800a1f8:	0800a28c 	andi	zero,at,650
 800a1fc:	0800a128 	cmpgeui	zero,at,644
 800a200:	0800a274 	orhi	zero,at,649
 800a204:	0800a37c 	xorhi	zero,at,653
 800a208:	0800a37c 	xorhi	zero,at,653
 800a20c:	0800a37c 	xorhi	zero,at,653
 800a210:	0800a3a8 	cmpgeui	zero,at,654
 800a214:	8809883a 	mov	r4,r17
 800a218:	800cf2c0 	call	800cf2c <__clzsi2>
 800a21c:	10fffec4 	addi	r3,r2,-5
 800a220:	88e2983a 	sll	r17,r17,r3
 800a224:	00ffe284 	movi	r3,-118
 800a228:	1885c83a 	sub	r2,r3,r2
 800a22c:	0009883a 	mov	r4,zero
 800a230:	003f9e06 	br	800a0ac <__alt_data_end+0xfc00a0ac>
 800a234:	010000c4 	movi	r4,3
 800a238:	003f9c06 	br	800a0ac <__alt_data_end+0xfc00a0ac>
 800a23c:	9009883a 	mov	r4,r18
 800a240:	d9400015 	stw	r5,0(sp)
 800a244:	800cf2c0 	call	800cf2c <__clzsi2>
 800a248:	10fffec4 	addi	r3,r2,-5
 800a24c:	053fe284 	movi	r20,-118
 800a250:	90e4983a 	sll	r18,r18,r3
 800a254:	a0a9c83a 	sub	r20,r20,r2
 800a258:	0021883a 	mov	r16,zero
 800a25c:	002f883a 	mov	r23,zero
 800a260:	d9400017 	ldw	r5,0(sp)
 800a264:	003f8306 	br	800a074 <__alt_data_end+0xfc00a074>
 800a268:	04000304 	movi	r16,12
 800a26c:	05c000c4 	movi	r23,3
 800a270:	003f8006 	br	800a074 <__alt_data_end+0xfc00a074>
 800a274:	0023883a 	mov	r17,zero
 800a278:	e027883a 	mov	r19,fp
 800a27c:	202f883a 	mov	r23,r4
 800a280:	00c00084 	movi	r3,2
 800a284:	980b883a 	mov	r5,r19
 800a288:	b8c0501e 	bne	r23,r3,800a3cc <__divsf3+0x3c0>
 800a28c:	2980004c 	andi	r6,r5,1
 800a290:	013fffc4 	movi	r4,-1
 800a294:	0007883a 	mov	r3,zero
 800a298:	003fa706 	br	800a138 <__alt_data_end+0xfc00a138>
 800a29c:	013fe084 	movi	r4,-126
 800a2a0:	2089c83a 	sub	r4,r4,r2
 800a2a4:	00c006c4 	movi	r3,27
 800a2a8:	1900500e 	bge	r3,r4,800a3ec <__divsf3+0x3e0>
 800a2ac:	9980004c 	andi	r6,r19,1
 800a2b0:	0009883a 	mov	r4,zero
 800a2b4:	0007883a 	mov	r3,zero
 800a2b8:	003f9f06 	br	800a138 <__alt_data_end+0xfc00a138>
 800a2bc:	9080102c 	andhi	r2,r18,64
 800a2c0:	10000226 	beq	r2,zero,800a2cc <__divsf3+0x2c0>
 800a2c4:	8880102c 	andhi	r2,r17,64
 800a2c8:	10003a26 	beq	r2,zero,800a3b4 <__divsf3+0x3a8>
 800a2cc:	00802034 	movhi	r2,128
 800a2d0:	90c01034 	orhi	r3,r18,64
 800a2d4:	10bfffc4 	addi	r2,r2,-1
 800a2d8:	a80d883a 	mov	r6,r21
 800a2dc:	1886703a 	and	r3,r3,r2
 800a2e0:	003f9406 	br	800a134 <__alt_data_end+0xfc00a134>
 800a2e4:	9006917a 	slli	r3,r18,5
 800a2e8:	8822917a 	slli	r17,r17,5
 800a2ec:	1c402936 	bltu	r3,r17,800a394 <__divsf3+0x388>
 800a2f0:	1c47c83a 	sub	r3,r3,r17
 800a2f4:	2827883a 	mov	r19,r5
 800a2f8:	01800684 	movi	r6,26
 800a2fc:	01000044 	movi	r4,1
 800a300:	180f883a 	mov	r7,r3
 800a304:	2109883a 	add	r4,r4,r4
 800a308:	18c7883a 	add	r3,r3,r3
 800a30c:	38000116 	blt	r7,zero,800a314 <__divsf3+0x308>
 800a310:	1c400236 	bltu	r3,r17,800a31c <__divsf3+0x310>
 800a314:	1c47c83a 	sub	r3,r3,r17
 800a318:	21000054 	ori	r4,r4,1
 800a31c:	31bfffc4 	addi	r6,r6,-1
 800a320:	303ff71e 	bne	r6,zero,800a300 <__alt_data_end+0xfc00a300>
 800a324:	1806c03a 	cmpne	r3,r3,zero
 800a328:	1922b03a 	or	r17,r3,r4
 800a32c:	11001fc4 	addi	r4,r2,127
 800a330:	013fda0e 	bge	zero,r4,800a29c <__alt_data_end+0xfc00a29c>
 800a334:	88c001cc 	andi	r3,r17,7
 800a338:	18000426 	beq	r3,zero,800a34c <__divsf3+0x340>
 800a33c:	894003cc 	andi	r5,r17,15
 800a340:	00c00104 	movi	r3,4
 800a344:	28c00126 	beq	r5,r3,800a34c <__divsf3+0x340>
 800a348:	88e3883a 	add	r17,r17,r3
 800a34c:	88c2002c 	andhi	r3,r17,2048
 800a350:	18000426 	beq	r3,zero,800a364 <__divsf3+0x358>
 800a354:	11002004 	addi	r4,r2,128
 800a358:	00be0034 	movhi	r2,63488
 800a35c:	10bfffc4 	addi	r2,r2,-1
 800a360:	88a2703a 	and	r17,r17,r2
 800a364:	00803f84 	movi	r2,254
 800a368:	1100060e 	bge	r2,r4,800a384 <__divsf3+0x378>
 800a36c:	9980004c 	andi	r6,r19,1
 800a370:	013fffc4 	movi	r4,-1
 800a374:	0007883a 	mov	r3,zero
 800a378:	003f6f06 	br	800a138 <__alt_data_end+0xfc00a138>
 800a37c:	9023883a 	mov	r17,r18
 800a380:	003fbf06 	br	800a280 <__alt_data_end+0xfc00a280>
 800a384:	880691ba 	slli	r3,r17,6
 800a388:	9980004c 	andi	r6,r19,1
 800a38c:	1806d27a 	srli	r3,r3,9
 800a390:	003f6906 	br	800a138 <__alt_data_end+0xfc00a138>
 800a394:	10bfffc4 	addi	r2,r2,-1
 800a398:	2827883a 	mov	r19,r5
 800a39c:	018006c4 	movi	r6,27
 800a3a0:	0009883a 	mov	r4,zero
 800a3a4:	003fd606 	br	800a300 <__alt_data_end+0xfc00a300>
 800a3a8:	9080102c 	andhi	r2,r18,64
 800a3ac:	0023883a 	mov	r17,zero
 800a3b0:	103fc626 	beq	r2,zero,800a2cc <__alt_data_end+0xfc00a2cc>
 800a3b4:	00802034 	movhi	r2,128
 800a3b8:	88c01034 	orhi	r3,r17,64
 800a3bc:	10bfffc4 	addi	r2,r2,-1
 800a3c0:	b00d883a 	mov	r6,r22
 800a3c4:	1886703a 	and	r3,r3,r2
 800a3c8:	003f5a06 	br	800a134 <__alt_data_end+0xfc00a134>
 800a3cc:	00c000c4 	movi	r3,3
 800a3d0:	b8c01c26 	beq	r23,r3,800a444 <__divsf3+0x438>
 800a3d4:	00c00044 	movi	r3,1
 800a3d8:	b8ffd41e 	bne	r23,r3,800a32c <__alt_data_end+0xfc00a32c>
 800a3dc:	2980004c 	andi	r6,r5,1
 800a3e0:	0009883a 	mov	r4,zero
 800a3e4:	0007883a 	mov	r3,zero
 800a3e8:	003f5306 	br	800a138 <__alt_data_end+0xfc00a138>
 800a3ec:	10802784 	addi	r2,r2,158
 800a3f0:	8884983a 	sll	r2,r17,r2
 800a3f4:	8908d83a 	srl	r4,r17,r4
 800a3f8:	1022c03a 	cmpne	r17,r2,zero
 800a3fc:	8908b03a 	or	r4,r17,r4
 800a400:	208001cc 	andi	r2,r4,7
 800a404:	10000426 	beq	r2,zero,800a418 <__divsf3+0x40c>
 800a408:	20c003cc 	andi	r3,r4,15
 800a40c:	00800104 	movi	r2,4
 800a410:	18800126 	beq	r3,r2,800a418 <__divsf3+0x40c>
 800a414:	2089883a 	add	r4,r4,r2
 800a418:	2081002c 	andhi	r2,r4,1024
 800a41c:	10000426 	beq	r2,zero,800a430 <__divsf3+0x424>
 800a420:	9980004c 	andi	r6,r19,1
 800a424:	01000044 	movi	r4,1
 800a428:	0007883a 	mov	r3,zero
 800a42c:	003f4206 	br	800a138 <__alt_data_end+0xfc00a138>
 800a430:	200691ba 	slli	r3,r4,6
 800a434:	9980004c 	andi	r6,r19,1
 800a438:	0009883a 	mov	r4,zero
 800a43c:	1806d27a 	srli	r3,r3,9
 800a440:	003f3d06 	br	800a138 <__alt_data_end+0xfc00a138>
 800a444:	00802034 	movhi	r2,128
 800a448:	88c01034 	orhi	r3,r17,64
 800a44c:	10bfffc4 	addi	r2,r2,-1
 800a450:	9980004c 	andi	r6,r19,1
 800a454:	1886703a 	and	r3,r3,r2
 800a458:	003f3606 	br	800a134 <__alt_data_end+0xfc00a134>

0800a45c <__floatsisf>:
 800a45c:	defffd04 	addi	sp,sp,-12
 800a460:	dc000015 	stw	r16,0(sp)
 800a464:	dfc00215 	stw	ra,8(sp)
 800a468:	dc400115 	stw	r17,4(sp)
 800a46c:	2021883a 	mov	r16,r4
 800a470:	20003a26 	beq	r4,zero,800a55c <__floatsisf+0x100>
 800a474:	2022d7fa 	srli	r17,r4,31
 800a478:	88000126 	beq	r17,zero,800a480 <__floatsisf+0x24>
 800a47c:	0121c83a 	sub	r16,zero,r4
 800a480:	8009883a 	mov	r4,r16
 800a484:	800cf2c0 	call	800cf2c <__clzsi2>
 800a488:	00c02784 	movi	r3,158
 800a48c:	1887c83a 	sub	r3,r3,r2
 800a490:	01802584 	movi	r6,150
 800a494:	800b883a 	mov	r5,r16
 800a498:	30c01616 	blt	r6,r3,800a4f4 <__floatsisf+0x98>
 800a49c:	01000204 	movi	r4,8
 800a4a0:	2080020e 	bge	r4,r2,800a4ac <__floatsisf+0x50>
 800a4a4:	10bffe04 	addi	r2,r2,-8
 800a4a8:	80a0983a 	sll	r16,r16,r2
 800a4ac:	00802034 	movhi	r2,128
 800a4b0:	10bfffc4 	addi	r2,r2,-1
 800a4b4:	8809883a 	mov	r4,r17
 800a4b8:	80a0703a 	and	r16,r16,r2
 800a4bc:	18803fcc 	andi	r2,r3,255
 800a4c0:	100695fa 	slli	r3,r2,23
 800a4c4:	20803fcc 	andi	r2,r4,255
 800a4c8:	100897fa 	slli	r4,r2,31
 800a4cc:	00802034 	movhi	r2,128
 800a4d0:	10bfffc4 	addi	r2,r2,-1
 800a4d4:	8084703a 	and	r2,r16,r2
 800a4d8:	10c4b03a 	or	r2,r2,r3
 800a4dc:	1104b03a 	or	r2,r2,r4
 800a4e0:	dfc00217 	ldw	ra,8(sp)
 800a4e4:	dc400117 	ldw	r17,4(sp)
 800a4e8:	dc000017 	ldw	r16,0(sp)
 800a4ec:	dec00304 	addi	sp,sp,12
 800a4f0:	f800283a 	ret
 800a4f4:	01002644 	movi	r4,153
 800a4f8:	20c01c16 	blt	r4,r3,800a56c <__floatsisf+0x110>
 800a4fc:	01000144 	movi	r4,5
 800a500:	2080020e 	bge	r4,r2,800a50c <__floatsisf+0xb0>
 800a504:	113ffec4 	addi	r4,r2,-5
 800a508:	290a983a 	sll	r5,r5,r4
 800a50c:	043f0034 	movhi	r16,64512
 800a510:	843fffc4 	addi	r16,r16,-1
 800a514:	298001cc 	andi	r6,r5,7
 800a518:	2c20703a 	and	r16,r5,r16
 800a51c:	30000426 	beq	r6,zero,800a530 <__floatsisf+0xd4>
 800a520:	294003cc 	andi	r5,r5,15
 800a524:	01000104 	movi	r4,4
 800a528:	29000126 	beq	r5,r4,800a530 <__floatsisf+0xd4>
 800a52c:	8121883a 	add	r16,r16,r4
 800a530:	8101002c 	andhi	r4,r16,1024
 800a534:	20000526 	beq	r4,zero,800a54c <__floatsisf+0xf0>
 800a538:	00c027c4 	movi	r3,159
 800a53c:	1887c83a 	sub	r3,r3,r2
 800a540:	00bf0034 	movhi	r2,64512
 800a544:	10bfffc4 	addi	r2,r2,-1
 800a548:	80a0703a 	and	r16,r16,r2
 800a54c:	802091ba 	slli	r16,r16,6
 800a550:	8809883a 	mov	r4,r17
 800a554:	8020d27a 	srli	r16,r16,9
 800a558:	003fd806 	br	800a4bc <__alt_data_end+0xfc00a4bc>
 800a55c:	0009883a 	mov	r4,zero
 800a560:	0007883a 	mov	r3,zero
 800a564:	0021883a 	mov	r16,zero
 800a568:	003fd406 	br	800a4bc <__alt_data_end+0xfc00a4bc>
 800a56c:	01800144 	movi	r6,5
 800a570:	110006c4 	addi	r4,r2,27
 800a574:	8108983a 	sll	r4,r16,r4
 800a578:	308fc83a 	sub	r7,r6,r2
 800a57c:	81cad83a 	srl	r5,r16,r7
 800a580:	2008c03a 	cmpne	r4,r4,zero
 800a584:	214ab03a 	or	r5,r4,r5
 800a588:	30bfe00e 	bge	r6,r2,800a50c <__alt_data_end+0xfc00a50c>
 800a58c:	003fdd06 	br	800a504 <__alt_data_end+0xfc00a504>

0800a590 <__adddf3>:
 800a590:	02000434 	movhi	r8,16
 800a594:	423fffc4 	addi	r8,r8,-1
 800a598:	defffb04 	addi	sp,sp,-20
 800a59c:	2a12703a 	and	r9,r5,r8
 800a5a0:	2806d7fa 	srli	r3,r5,31
 800a5a4:	3a10703a 	and	r8,r7,r8
 800a5a8:	3804d53a 	srli	r2,r7,20
 800a5ac:	3014d77a 	srli	r10,r6,29
 800a5b0:	dc000015 	stw	r16,0(sp)
 800a5b4:	481290fa 	slli	r9,r9,3
 800a5b8:	2820d53a 	srli	r16,r5,20
 800a5bc:	401090fa 	slli	r8,r8,3
 800a5c0:	200ad77a 	srli	r5,r4,29
 800a5c4:	380ed7fa 	srli	r7,r7,31
 800a5c8:	dc800215 	stw	r18,8(sp)
 800a5cc:	dc400115 	stw	r17,4(sp)
 800a5d0:	dfc00415 	stw	ra,16(sp)
 800a5d4:	dcc00315 	stw	r19,12(sp)
 800a5d8:	1c803fcc 	andi	r18,r3,255
 800a5dc:	8401ffcc 	andi	r16,r16,2047
 800a5e0:	494ab03a 	or	r5,r9,r5
 800a5e4:	202290fa 	slli	r17,r4,3
 800a5e8:	1081ffcc 	andi	r2,r2,2047
 800a5ec:	4290b03a 	or	r8,r8,r10
 800a5f0:	300c90fa 	slli	r6,r6,3
 800a5f4:	91c07026 	beq	r18,r7,800a7b8 <__adddf3+0x228>
 800a5f8:	8087c83a 	sub	r3,r16,r2
 800a5fc:	00c0b30e 	bge	zero,r3,800a8cc <__adddf3+0x33c>
 800a600:	10002a1e 	bne	r2,zero,800a6ac <__adddf3+0x11c>
 800a604:	4184b03a 	or	r2,r8,r6
 800a608:	1000991e 	bne	r2,zero,800a870 <__adddf3+0x2e0>
 800a60c:	888001cc 	andi	r2,r17,7
 800a610:	10005b26 	beq	r2,zero,800a780 <__adddf3+0x1f0>
 800a614:	88c003cc 	andi	r3,r17,15
 800a618:	00800104 	movi	r2,4
 800a61c:	18805826 	beq	r3,r2,800a780 <__adddf3+0x1f0>
 800a620:	89800104 	addi	r6,r17,4
 800a624:	3463803a 	cmpltu	r17,r6,r17
 800a628:	2c4b883a 	add	r5,r5,r17
 800a62c:	2880202c 	andhi	r2,r5,128
 800a630:	9007883a 	mov	r3,r18
 800a634:	3023883a 	mov	r17,r6
 800a638:	10005426 	beq	r2,zero,800a78c <__adddf3+0x1fc>
 800a63c:	84000044 	addi	r16,r16,1
 800a640:	0081ffc4 	movi	r2,2047
 800a644:	8080c126 	beq	r16,r2,800a94c <__adddf3+0x3bc>
 800a648:	013fe034 	movhi	r4,65408
 800a64c:	213fffc4 	addi	r4,r4,-1
 800a650:	290a703a 	and	r5,r5,r4
 800a654:	2804977a 	slli	r2,r5,29
 800a658:	280a927a 	slli	r5,r5,9
 800a65c:	8822d0fa 	srli	r17,r17,3
 800a660:	8401ffcc 	andi	r16,r16,2047
 800a664:	2808d33a 	srli	r4,r5,12
 800a668:	1444b03a 	or	r2,r2,r17
 800a66c:	8401ffcc 	andi	r16,r16,2047
 800a670:	800a953a 	slli	r5,r16,20
 800a674:	18c03fcc 	andi	r3,r3,255
 800a678:	04000434 	movhi	r16,16
 800a67c:	180697fa 	slli	r3,r3,31
 800a680:	843fffc4 	addi	r16,r16,-1
 800a684:	2420703a 	and	r16,r4,r16
 800a688:	8160b03a 	or	r16,r16,r5
 800a68c:	80c6b03a 	or	r3,r16,r3
 800a690:	dfc00417 	ldw	ra,16(sp)
 800a694:	dcc00317 	ldw	r19,12(sp)
 800a698:	dc800217 	ldw	r18,8(sp)
 800a69c:	dc400117 	ldw	r17,4(sp)
 800a6a0:	dc000017 	ldw	r16,0(sp)
 800a6a4:	dec00504 	addi	sp,sp,20
 800a6a8:	f800283a 	ret
 800a6ac:	0081ffc4 	movi	r2,2047
 800a6b0:	80bfd626 	beq	r16,r2,800a60c <__alt_data_end+0xfc00a60c>
 800a6b4:	42002034 	orhi	r8,r8,128
 800a6b8:	00800e04 	movi	r2,56
 800a6bc:	10c0a616 	blt	r2,r3,800a958 <__adddf3+0x3c8>
 800a6c0:	008007c4 	movi	r2,31
 800a6c4:	10c0c916 	blt	r2,r3,800a9ec <__adddf3+0x45c>
 800a6c8:	00800804 	movi	r2,32
 800a6cc:	10c5c83a 	sub	r2,r2,r3
 800a6d0:	408e983a 	sll	r7,r8,r2
 800a6d4:	30c8d83a 	srl	r4,r6,r3
 800a6d8:	3084983a 	sll	r2,r6,r2
 800a6dc:	40c6d83a 	srl	r3,r8,r3
 800a6e0:	390cb03a 	or	r6,r7,r4
 800a6e4:	1004c03a 	cmpne	r2,r2,zero
 800a6e8:	308cb03a 	or	r6,r6,r2
 800a6ec:	898dc83a 	sub	r6,r17,r6
 800a6f0:	89a3803a 	cmpltu	r17,r17,r6
 800a6f4:	28cbc83a 	sub	r5,r5,r3
 800a6f8:	2c4bc83a 	sub	r5,r5,r17
 800a6fc:	3023883a 	mov	r17,r6
 800a700:	2880202c 	andhi	r2,r5,128
 800a704:	10006d26 	beq	r2,zero,800a8bc <__adddf3+0x32c>
 800a708:	04c02034 	movhi	r19,128
 800a70c:	9cffffc4 	addi	r19,r19,-1
 800a710:	2ce6703a 	and	r19,r5,r19
 800a714:	98007e26 	beq	r19,zero,800a910 <__adddf3+0x380>
 800a718:	9809883a 	mov	r4,r19
 800a71c:	800cf2c0 	call	800cf2c <__clzsi2>
 800a720:	10fffe04 	addi	r3,r2,-8
 800a724:	010007c4 	movi	r4,31
 800a728:	20c07f16 	blt	r4,r3,800a928 <__adddf3+0x398>
 800a72c:	01400a04 	movi	r5,40
 800a730:	2885c83a 	sub	r2,r5,r2
 800a734:	888ad83a 	srl	r5,r17,r2
 800a738:	98e6983a 	sll	r19,r19,r3
 800a73c:	88e2983a 	sll	r17,r17,r3
 800a740:	2ce6b03a 	or	r19,r5,r19
 800a744:	1c007c16 	blt	r3,r16,800a938 <__adddf3+0x3a8>
 800a748:	1c21c83a 	sub	r16,r3,r16
 800a74c:	81400044 	addi	r5,r16,1
 800a750:	00c007c4 	movi	r3,31
 800a754:	19409816 	blt	r3,r5,800a9b8 <__adddf3+0x428>
 800a758:	1c21c83a 	sub	r16,r3,r16
 800a75c:	8c08983a 	sll	r4,r17,r16
 800a760:	8946d83a 	srl	r3,r17,r5
 800a764:	9c20983a 	sll	r16,r19,r16
 800a768:	2008c03a 	cmpne	r4,r4,zero
 800a76c:	994ad83a 	srl	r5,r19,r5
 800a770:	1c06b03a 	or	r3,r3,r16
 800a774:	1922b03a 	or	r17,r3,r4
 800a778:	0021883a 	mov	r16,zero
 800a77c:	003fa306 	br	800a60c <__alt_data_end+0xfc00a60c>
 800a780:	2880202c 	andhi	r2,r5,128
 800a784:	9007883a 	mov	r3,r18
 800a788:	103fac1e 	bne	r2,zero,800a63c <__alt_data_end+0xfc00a63c>
 800a78c:	2804977a 	slli	r2,r5,29
 800a790:	8822d0fa 	srli	r17,r17,3
 800a794:	0101ffc4 	movi	r4,2047
 800a798:	280ad0fa 	srli	r5,r5,3
 800a79c:	1444b03a 	or	r2,r2,r17
 800a7a0:	81002c26 	beq	r16,r4,800a854 <__adddf3+0x2c4>
 800a7a4:	8120703a 	and	r16,r16,r4
 800a7a8:	01000434 	movhi	r4,16
 800a7ac:	213fffc4 	addi	r4,r4,-1
 800a7b0:	2908703a 	and	r4,r5,r4
 800a7b4:	003fad06 	br	800a66c <__alt_data_end+0xfc00a66c>
 800a7b8:	8089c83a 	sub	r4,r16,r2
 800a7bc:	01006a0e 	bge	zero,r4,800a968 <__adddf3+0x3d8>
 800a7c0:	10003326 	beq	r2,zero,800a890 <__adddf3+0x300>
 800a7c4:	0081ffc4 	movi	r2,2047
 800a7c8:	80bf9026 	beq	r16,r2,800a60c <__alt_data_end+0xfc00a60c>
 800a7cc:	42002034 	orhi	r8,r8,128
 800a7d0:	00800e04 	movi	r2,56
 800a7d4:	1100b116 	blt	r2,r4,800aa9c <__adddf3+0x50c>
 800a7d8:	008007c4 	movi	r2,31
 800a7dc:	1100e216 	blt	r2,r4,800ab68 <__adddf3+0x5d8>
 800a7e0:	00800804 	movi	r2,32
 800a7e4:	1105c83a 	sub	r2,r2,r4
 800a7e8:	4092983a 	sll	r9,r8,r2
 800a7ec:	310ed83a 	srl	r7,r6,r4
 800a7f0:	3084983a 	sll	r2,r6,r2
 800a7f4:	4110d83a 	srl	r8,r8,r4
 800a7f8:	49ccb03a 	or	r6,r9,r7
 800a7fc:	1004c03a 	cmpne	r2,r2,zero
 800a800:	308cb03a 	or	r6,r6,r2
 800a804:	344d883a 	add	r6,r6,r17
 800a808:	3463803a 	cmpltu	r17,r6,r17
 800a80c:	414b883a 	add	r5,r8,r5
 800a810:	2c4b883a 	add	r5,r5,r17
 800a814:	3023883a 	mov	r17,r6
 800a818:	2880202c 	andhi	r2,r5,128
 800a81c:	10002726 	beq	r2,zero,800a8bc <__adddf3+0x32c>
 800a820:	84000044 	addi	r16,r16,1
 800a824:	0081ffc4 	movi	r2,2047
 800a828:	8080ae26 	beq	r16,r2,800aae4 <__adddf3+0x554>
 800a82c:	00bfe034 	movhi	r2,65408
 800a830:	10bfffc4 	addi	r2,r2,-1
 800a834:	288a703a 	and	r5,r5,r2
 800a838:	880cd07a 	srli	r6,r17,1
 800a83c:	280897fa 	slli	r4,r5,31
 800a840:	88c0004c 	andi	r3,r17,1
 800a844:	30e2b03a 	or	r17,r6,r3
 800a848:	280ad07a 	srli	r5,r5,1
 800a84c:	8922b03a 	or	r17,r17,r4
 800a850:	003f6e06 	br	800a60c <__alt_data_end+0xfc00a60c>
 800a854:	1148b03a 	or	r4,r2,r5
 800a858:	20003c26 	beq	r4,zero,800a94c <__adddf3+0x3bc>
 800a85c:	29000234 	orhi	r4,r5,8
 800a860:	01400434 	movhi	r5,16
 800a864:	297fffc4 	addi	r5,r5,-1
 800a868:	2148703a 	and	r4,r4,r5
 800a86c:	003f7f06 	br	800a66c <__alt_data_end+0xfc00a66c>
 800a870:	18ffffc4 	addi	r3,r3,-1
 800a874:	18004d1e 	bne	r3,zero,800a9ac <__adddf3+0x41c>
 800a878:	898dc83a 	sub	r6,r17,r6
 800a87c:	89a3803a 	cmpltu	r17,r17,r6
 800a880:	2a0bc83a 	sub	r5,r5,r8
 800a884:	2c4bc83a 	sub	r5,r5,r17
 800a888:	3023883a 	mov	r17,r6
 800a88c:	003f9c06 	br	800a700 <__alt_data_end+0xfc00a700>
 800a890:	4184b03a 	or	r2,r8,r6
 800a894:	103f5d26 	beq	r2,zero,800a60c <__alt_data_end+0xfc00a60c>
 800a898:	213fffc4 	addi	r4,r4,-1
 800a89c:	203fd926 	beq	r4,zero,800a804 <__alt_data_end+0xfc00a804>
 800a8a0:	0081ffc4 	movi	r2,2047
 800a8a4:	80bfca1e 	bne	r16,r2,800a7d0 <__alt_data_end+0xfc00a7d0>
 800a8a8:	003f5806 	br	800a60c <__alt_data_end+0xfc00a60c>
 800a8ac:	10c8b03a 	or	r4,r2,r3
 800a8b0:	20008b26 	beq	r4,zero,800aae0 <__adddf3+0x550>
 800a8b4:	100b883a 	mov	r5,r2
 800a8b8:	1823883a 	mov	r17,r3
 800a8bc:	888001cc 	andi	r2,r17,7
 800a8c0:	103f541e 	bne	r2,zero,800a614 <__alt_data_end+0xfc00a614>
 800a8c4:	9007883a 	mov	r3,r18
 800a8c8:	003fb006 	br	800a78c <__alt_data_end+0xfc00a78c>
 800a8cc:	1800531e 	bne	r3,zero,800aa1c <__adddf3+0x48c>
 800a8d0:	80800044 	addi	r2,r16,1
 800a8d4:	1081ffcc 	andi	r2,r2,2047
 800a8d8:	00c00044 	movi	r3,1
 800a8dc:	1880990e 	bge	r3,r2,800ab44 <__adddf3+0x5b4>
 800a8e0:	8985c83a 	sub	r2,r17,r6
 800a8e4:	8887803a 	cmpltu	r3,r17,r2
 800a8e8:	2a27c83a 	sub	r19,r5,r8
 800a8ec:	98e7c83a 	sub	r19,r19,r3
 800a8f0:	98c0202c 	andhi	r3,r19,128
 800a8f4:	18006226 	beq	r3,zero,800aa80 <__adddf3+0x4f0>
 800a8f8:	3463c83a 	sub	r17,r6,r17
 800a8fc:	4151c83a 	sub	r8,r8,r5
 800a900:	344d803a 	cmpltu	r6,r6,r17
 800a904:	41a7c83a 	sub	r19,r8,r6
 800a908:	3825883a 	mov	r18,r7
 800a90c:	983f821e 	bne	r19,zero,800a718 <__alt_data_end+0xfc00a718>
 800a910:	8809883a 	mov	r4,r17
 800a914:	800cf2c0 	call	800cf2c <__clzsi2>
 800a918:	10800804 	addi	r2,r2,32
 800a91c:	10fffe04 	addi	r3,r2,-8
 800a920:	010007c4 	movi	r4,31
 800a924:	20ff810e 	bge	r4,r3,800a72c <__alt_data_end+0xfc00a72c>
 800a928:	14fff604 	addi	r19,r2,-40
 800a92c:	8ce6983a 	sll	r19,r17,r19
 800a930:	0023883a 	mov	r17,zero
 800a934:	1c3f840e 	bge	r3,r16,800a748 <__alt_data_end+0xfc00a748>
 800a938:	017fe034 	movhi	r5,65408
 800a93c:	297fffc4 	addi	r5,r5,-1
 800a940:	80e1c83a 	sub	r16,r16,r3
 800a944:	994a703a 	and	r5,r19,r5
 800a948:	003f3006 	br	800a60c <__alt_data_end+0xfc00a60c>
 800a94c:	0009883a 	mov	r4,zero
 800a950:	0005883a 	mov	r2,zero
 800a954:	003f4506 	br	800a66c <__alt_data_end+0xfc00a66c>
 800a958:	418cb03a 	or	r6,r8,r6
 800a95c:	300cc03a 	cmpne	r6,r6,zero
 800a960:	0007883a 	mov	r3,zero
 800a964:	003f6106 	br	800a6ec <__alt_data_end+0xfc00a6ec>
 800a968:	2000921e 	bne	r4,zero,800abb4 <__adddf3+0x624>
 800a96c:	80800044 	addi	r2,r16,1
 800a970:	11c1ffcc 	andi	r7,r2,2047
 800a974:	01000044 	movi	r4,1
 800a978:	21c0610e 	bge	r4,r7,800ab00 <__adddf3+0x570>
 800a97c:	0101ffc4 	movi	r4,2047
 800a980:	1100a326 	beq	r2,r4,800ac10 <__adddf3+0x680>
 800a984:	344d883a 	add	r6,r6,r17
 800a988:	3463803a 	cmpltu	r17,r6,r17
 800a98c:	414b883a 	add	r5,r8,r5
 800a990:	2c4b883a 	add	r5,r5,r17
 800a994:	282297fa 	slli	r17,r5,31
 800a998:	300cd07a 	srli	r6,r6,1
 800a99c:	280ad07a 	srli	r5,r5,1
 800a9a0:	1021883a 	mov	r16,r2
 800a9a4:	89a2b03a 	or	r17,r17,r6
 800a9a8:	003f1806 	br	800a60c <__alt_data_end+0xfc00a60c>
 800a9ac:	0081ffc4 	movi	r2,2047
 800a9b0:	80bf411e 	bne	r16,r2,800a6b8 <__alt_data_end+0xfc00a6b8>
 800a9b4:	003f1506 	br	800a60c <__alt_data_end+0xfc00a60c>
 800a9b8:	80bff844 	addi	r2,r16,-31
 800a9bc:	00c00804 	movi	r3,32
 800a9c0:	9884d83a 	srl	r2,r19,r2
 800a9c4:	28c04a26 	beq	r5,r3,800aaf0 <__adddf3+0x560>
 800a9c8:	00c00fc4 	movi	r3,63
 800a9cc:	1c21c83a 	sub	r16,r3,r16
 800a9d0:	9c26983a 	sll	r19,r19,r16
 800a9d4:	9c62b03a 	or	r17,r19,r17
 800a9d8:	8822c03a 	cmpne	r17,r17,zero
 800a9dc:	88a2b03a 	or	r17,r17,r2
 800a9e0:	000b883a 	mov	r5,zero
 800a9e4:	0021883a 	mov	r16,zero
 800a9e8:	003fb406 	br	800a8bc <__alt_data_end+0xfc00a8bc>
 800a9ec:	18bff804 	addi	r2,r3,-32
 800a9f0:	01000804 	movi	r4,32
 800a9f4:	4084d83a 	srl	r2,r8,r2
 800a9f8:	19003f26 	beq	r3,r4,800aaf8 <__adddf3+0x568>
 800a9fc:	01001004 	movi	r4,64
 800aa00:	20c7c83a 	sub	r3,r4,r3
 800aa04:	40d0983a 	sll	r8,r8,r3
 800aa08:	418cb03a 	or	r6,r8,r6
 800aa0c:	300cc03a 	cmpne	r6,r6,zero
 800aa10:	308cb03a 	or	r6,r6,r2
 800aa14:	0007883a 	mov	r3,zero
 800aa18:	003f3406 	br	800a6ec <__alt_data_end+0xfc00a6ec>
 800aa1c:	80002326 	beq	r16,zero,800aaac <__adddf3+0x51c>
 800aa20:	0101ffc4 	movi	r4,2047
 800aa24:	11005e26 	beq	r2,r4,800aba0 <__adddf3+0x610>
 800aa28:	00c7c83a 	sub	r3,zero,r3
 800aa2c:	29402034 	orhi	r5,r5,128
 800aa30:	01000e04 	movi	r4,56
 800aa34:	20c07216 	blt	r4,r3,800ac00 <__adddf3+0x670>
 800aa38:	010007c4 	movi	r4,31
 800aa3c:	20c0ce16 	blt	r4,r3,800ad78 <__adddf3+0x7e8>
 800aa40:	01000804 	movi	r4,32
 800aa44:	20c9c83a 	sub	r4,r4,r3
 800aa48:	2914983a 	sll	r10,r5,r4
 800aa4c:	88d2d83a 	srl	r9,r17,r3
 800aa50:	8908983a 	sll	r4,r17,r4
 800aa54:	28c6d83a 	srl	r3,r5,r3
 800aa58:	5262b03a 	or	r17,r10,r9
 800aa5c:	2008c03a 	cmpne	r4,r4,zero
 800aa60:	8922b03a 	or	r17,r17,r4
 800aa64:	3463c83a 	sub	r17,r6,r17
 800aa68:	40c7c83a 	sub	r3,r8,r3
 800aa6c:	344d803a 	cmpltu	r6,r6,r17
 800aa70:	198bc83a 	sub	r5,r3,r6
 800aa74:	1021883a 	mov	r16,r2
 800aa78:	3825883a 	mov	r18,r7
 800aa7c:	003f2006 	br	800a700 <__alt_data_end+0xfc00a700>
 800aa80:	9886b03a 	or	r3,r19,r2
 800aa84:	1800141e 	bne	r3,zero,800aad8 <__adddf3+0x548>
 800aa88:	0007883a 	mov	r3,zero
 800aa8c:	000b883a 	mov	r5,zero
 800aa90:	0023883a 	mov	r17,zero
 800aa94:	0021883a 	mov	r16,zero
 800aa98:	003f3c06 	br	800a78c <__alt_data_end+0xfc00a78c>
 800aa9c:	418cb03a 	or	r6,r8,r6
 800aaa0:	300cc03a 	cmpne	r6,r6,zero
 800aaa4:	0011883a 	mov	r8,zero
 800aaa8:	003f5606 	br	800a804 <__alt_data_end+0xfc00a804>
 800aaac:	2c48b03a 	or	r4,r5,r17
 800aab0:	20003b26 	beq	r4,zero,800aba0 <__adddf3+0x610>
 800aab4:	00c6303a 	nor	r3,zero,r3
 800aab8:	1800371e 	bne	r3,zero,800ab98 <__adddf3+0x608>
 800aabc:	3463c83a 	sub	r17,r6,r17
 800aac0:	414bc83a 	sub	r5,r8,r5
 800aac4:	344d803a 	cmpltu	r6,r6,r17
 800aac8:	298bc83a 	sub	r5,r5,r6
 800aacc:	1021883a 	mov	r16,r2
 800aad0:	3825883a 	mov	r18,r7
 800aad4:	003f0a06 	br	800a700 <__alt_data_end+0xfc00a700>
 800aad8:	1023883a 	mov	r17,r2
 800aadc:	003f0d06 	br	800a714 <__alt_data_end+0xfc00a714>
 800aae0:	0007883a 	mov	r3,zero
 800aae4:	000b883a 	mov	r5,zero
 800aae8:	0023883a 	mov	r17,zero
 800aaec:	003f2706 	br	800a78c <__alt_data_end+0xfc00a78c>
 800aaf0:	0027883a 	mov	r19,zero
 800aaf4:	003fb706 	br	800a9d4 <__alt_data_end+0xfc00a9d4>
 800aaf8:	0011883a 	mov	r8,zero
 800aafc:	003fc206 	br	800aa08 <__alt_data_end+0xfc00aa08>
 800ab00:	2c44b03a 	or	r2,r5,r17
 800ab04:	8000871e 	bne	r16,zero,800ad24 <__adddf3+0x794>
 800ab08:	1000b126 	beq	r2,zero,800add0 <__adddf3+0x840>
 800ab0c:	4184b03a 	or	r2,r8,r6
 800ab10:	103ebe26 	beq	r2,zero,800a60c <__alt_data_end+0xfc00a60c>
 800ab14:	3445883a 	add	r2,r6,r17
 800ab18:	1463803a 	cmpltu	r17,r2,r17
 800ab1c:	414b883a 	add	r5,r8,r5
 800ab20:	2c4b883a 	add	r5,r5,r17
 800ab24:	28c0202c 	andhi	r3,r5,128
 800ab28:	1023883a 	mov	r17,r2
 800ab2c:	183f6326 	beq	r3,zero,800a8bc <__alt_data_end+0xfc00a8bc>
 800ab30:	00bfe034 	movhi	r2,65408
 800ab34:	10bfffc4 	addi	r2,r2,-1
 800ab38:	2021883a 	mov	r16,r4
 800ab3c:	288a703a 	and	r5,r5,r2
 800ab40:	003eb206 	br	800a60c <__alt_data_end+0xfc00a60c>
 800ab44:	2c44b03a 	or	r2,r5,r17
 800ab48:	8000251e 	bne	r16,zero,800abe0 <__adddf3+0x650>
 800ab4c:	10004b1e 	bne	r2,zero,800ac7c <__adddf3+0x6ec>
 800ab50:	4184b03a 	or	r2,r8,r6
 800ab54:	103fe226 	beq	r2,zero,800aae0 <__alt_data_end+0xfc00aae0>
 800ab58:	400b883a 	mov	r5,r8
 800ab5c:	3023883a 	mov	r17,r6
 800ab60:	3825883a 	mov	r18,r7
 800ab64:	003ea906 	br	800a60c <__alt_data_end+0xfc00a60c>
 800ab68:	20bff804 	addi	r2,r4,-32
 800ab6c:	01c00804 	movi	r7,32
 800ab70:	4084d83a 	srl	r2,r8,r2
 800ab74:	21c07e26 	beq	r4,r7,800ad70 <__adddf3+0x7e0>
 800ab78:	01c01004 	movi	r7,64
 800ab7c:	3909c83a 	sub	r4,r7,r4
 800ab80:	4110983a 	sll	r8,r8,r4
 800ab84:	418cb03a 	or	r6,r8,r6
 800ab88:	300cc03a 	cmpne	r6,r6,zero
 800ab8c:	308cb03a 	or	r6,r6,r2
 800ab90:	0011883a 	mov	r8,zero
 800ab94:	003f1b06 	br	800a804 <__alt_data_end+0xfc00a804>
 800ab98:	0101ffc4 	movi	r4,2047
 800ab9c:	113fa41e 	bne	r2,r4,800aa30 <__alt_data_end+0xfc00aa30>
 800aba0:	400b883a 	mov	r5,r8
 800aba4:	3023883a 	mov	r17,r6
 800aba8:	1021883a 	mov	r16,r2
 800abac:	3825883a 	mov	r18,r7
 800abb0:	003e9606 	br	800a60c <__alt_data_end+0xfc00a60c>
 800abb4:	80001a1e 	bne	r16,zero,800ac20 <__adddf3+0x690>
 800abb8:	2c4eb03a 	or	r7,r5,r17
 800abbc:	38005526 	beq	r7,zero,800ad14 <__adddf3+0x784>
 800abc0:	0108303a 	nor	r4,zero,r4
 800abc4:	2000511e 	bne	r4,zero,800ad0c <__adddf3+0x77c>
 800abc8:	89a3883a 	add	r17,r17,r6
 800abcc:	414b883a 	add	r5,r8,r5
 800abd0:	898d803a 	cmpltu	r6,r17,r6
 800abd4:	298b883a 	add	r5,r5,r6
 800abd8:	1021883a 	mov	r16,r2
 800abdc:	003f0e06 	br	800a818 <__alt_data_end+0xfc00a818>
 800abe0:	1000341e 	bne	r2,zero,800acb4 <__adddf3+0x724>
 800abe4:	4184b03a 	or	r2,r8,r6
 800abe8:	10006f26 	beq	r2,zero,800ada8 <__adddf3+0x818>
 800abec:	400b883a 	mov	r5,r8
 800abf0:	3023883a 	mov	r17,r6
 800abf4:	3825883a 	mov	r18,r7
 800abf8:	0401ffc4 	movi	r16,2047
 800abfc:	003e8306 	br	800a60c <__alt_data_end+0xfc00a60c>
 800ac00:	2c62b03a 	or	r17,r5,r17
 800ac04:	8822c03a 	cmpne	r17,r17,zero
 800ac08:	0007883a 	mov	r3,zero
 800ac0c:	003f9506 	br	800aa64 <__alt_data_end+0xfc00aa64>
 800ac10:	1021883a 	mov	r16,r2
 800ac14:	000b883a 	mov	r5,zero
 800ac18:	0023883a 	mov	r17,zero
 800ac1c:	003edb06 	br	800a78c <__alt_data_end+0xfc00a78c>
 800ac20:	01c1ffc4 	movi	r7,2047
 800ac24:	11c03b26 	beq	r2,r7,800ad14 <__adddf3+0x784>
 800ac28:	0109c83a 	sub	r4,zero,r4
 800ac2c:	29402034 	orhi	r5,r5,128
 800ac30:	01c00e04 	movi	r7,56
 800ac34:	39006216 	blt	r7,r4,800adc0 <__adddf3+0x830>
 800ac38:	01c007c4 	movi	r7,31
 800ac3c:	39006b16 	blt	r7,r4,800adec <__adddf3+0x85c>
 800ac40:	01c00804 	movi	r7,32
 800ac44:	390fc83a 	sub	r7,r7,r4
 800ac48:	29d4983a 	sll	r10,r5,r7
 800ac4c:	8912d83a 	srl	r9,r17,r4
 800ac50:	89ce983a 	sll	r7,r17,r7
 800ac54:	2908d83a 	srl	r4,r5,r4
 800ac58:	5262b03a 	or	r17,r10,r9
 800ac5c:	380ac03a 	cmpne	r5,r7,zero
 800ac60:	8962b03a 	or	r17,r17,r5
 800ac64:	89a3883a 	add	r17,r17,r6
 800ac68:	2211883a 	add	r8,r4,r8
 800ac6c:	898d803a 	cmpltu	r6,r17,r6
 800ac70:	418b883a 	add	r5,r8,r6
 800ac74:	1021883a 	mov	r16,r2
 800ac78:	003ee706 	br	800a818 <__alt_data_end+0xfc00a818>
 800ac7c:	4184b03a 	or	r2,r8,r6
 800ac80:	103e6226 	beq	r2,zero,800a60c <__alt_data_end+0xfc00a60c>
 800ac84:	8987c83a 	sub	r3,r17,r6
 800ac88:	88c9803a 	cmpltu	r4,r17,r3
 800ac8c:	2a05c83a 	sub	r2,r5,r8
 800ac90:	1105c83a 	sub	r2,r2,r4
 800ac94:	1100202c 	andhi	r4,r2,128
 800ac98:	203f0426 	beq	r4,zero,800a8ac <__alt_data_end+0xfc00a8ac>
 800ac9c:	3463c83a 	sub	r17,r6,r17
 800aca0:	414bc83a 	sub	r5,r8,r5
 800aca4:	344d803a 	cmpltu	r6,r6,r17
 800aca8:	298bc83a 	sub	r5,r5,r6
 800acac:	3825883a 	mov	r18,r7
 800acb0:	003e5606 	br	800a60c <__alt_data_end+0xfc00a60c>
 800acb4:	4184b03a 	or	r2,r8,r6
 800acb8:	10002b26 	beq	r2,zero,800ad68 <__adddf3+0x7d8>
 800acbc:	2804d0fa 	srli	r2,r5,3
 800acc0:	8822d0fa 	srli	r17,r17,3
 800acc4:	280a977a 	slli	r5,r5,29
 800acc8:	10c0022c 	andhi	r3,r2,8
 800accc:	2c62b03a 	or	r17,r5,r17
 800acd0:	18000826 	beq	r3,zero,800acf4 <__adddf3+0x764>
 800acd4:	4008d0fa 	srli	r4,r8,3
 800acd8:	20c0022c 	andhi	r3,r4,8
 800acdc:	1800051e 	bne	r3,zero,800acf4 <__adddf3+0x764>
 800ace0:	300cd0fa 	srli	r6,r6,3
 800ace4:	4010977a 	slli	r8,r8,29
 800ace8:	2005883a 	mov	r2,r4
 800acec:	3825883a 	mov	r18,r7
 800acf0:	41a2b03a 	or	r17,r8,r6
 800acf4:	880ad77a 	srli	r5,r17,29
 800acf8:	100490fa 	slli	r2,r2,3
 800acfc:	882290fa 	slli	r17,r17,3
 800ad00:	0401ffc4 	movi	r16,2047
 800ad04:	288ab03a 	or	r5,r5,r2
 800ad08:	003e4006 	br	800a60c <__alt_data_end+0xfc00a60c>
 800ad0c:	01c1ffc4 	movi	r7,2047
 800ad10:	11ffc71e 	bne	r2,r7,800ac30 <__alt_data_end+0xfc00ac30>
 800ad14:	400b883a 	mov	r5,r8
 800ad18:	3023883a 	mov	r17,r6
 800ad1c:	1021883a 	mov	r16,r2
 800ad20:	003e3a06 	br	800a60c <__alt_data_end+0xfc00a60c>
 800ad24:	10002d26 	beq	r2,zero,800addc <__adddf3+0x84c>
 800ad28:	4184b03a 	or	r2,r8,r6
 800ad2c:	10000e26 	beq	r2,zero,800ad68 <__adddf3+0x7d8>
 800ad30:	2804d0fa 	srli	r2,r5,3
 800ad34:	8822d0fa 	srli	r17,r17,3
 800ad38:	280a977a 	slli	r5,r5,29
 800ad3c:	10c0022c 	andhi	r3,r2,8
 800ad40:	2c62b03a 	or	r17,r5,r17
 800ad44:	183feb26 	beq	r3,zero,800acf4 <__alt_data_end+0xfc00acf4>
 800ad48:	4008d0fa 	srli	r4,r8,3
 800ad4c:	20c0022c 	andhi	r3,r4,8
 800ad50:	183fe81e 	bne	r3,zero,800acf4 <__alt_data_end+0xfc00acf4>
 800ad54:	300cd0fa 	srli	r6,r6,3
 800ad58:	4010977a 	slli	r8,r8,29
 800ad5c:	2005883a 	mov	r2,r4
 800ad60:	41a2b03a 	or	r17,r8,r6
 800ad64:	003fe306 	br	800acf4 <__alt_data_end+0xfc00acf4>
 800ad68:	0401ffc4 	movi	r16,2047
 800ad6c:	003e2706 	br	800a60c <__alt_data_end+0xfc00a60c>
 800ad70:	0011883a 	mov	r8,zero
 800ad74:	003f8306 	br	800ab84 <__alt_data_end+0xfc00ab84>
 800ad78:	193ff804 	addi	r4,r3,-32
 800ad7c:	02400804 	movi	r9,32
 800ad80:	2908d83a 	srl	r4,r5,r4
 800ad84:	1a402526 	beq	r3,r9,800ae1c <__adddf3+0x88c>
 800ad88:	02401004 	movi	r9,64
 800ad8c:	48c7c83a 	sub	r3,r9,r3
 800ad90:	28ca983a 	sll	r5,r5,r3
 800ad94:	2c62b03a 	or	r17,r5,r17
 800ad98:	8822c03a 	cmpne	r17,r17,zero
 800ad9c:	8922b03a 	or	r17,r17,r4
 800ada0:	0007883a 	mov	r3,zero
 800ada4:	003f2f06 	br	800aa64 <__alt_data_end+0xfc00aa64>
 800ada8:	01402034 	movhi	r5,128
 800adac:	0007883a 	mov	r3,zero
 800adb0:	297fffc4 	addi	r5,r5,-1
 800adb4:	047ffe04 	movi	r17,-8
 800adb8:	0401ffc4 	movi	r16,2047
 800adbc:	003e7306 	br	800a78c <__alt_data_end+0xfc00a78c>
 800adc0:	2c62b03a 	or	r17,r5,r17
 800adc4:	8822c03a 	cmpne	r17,r17,zero
 800adc8:	0009883a 	mov	r4,zero
 800adcc:	003fa506 	br	800ac64 <__alt_data_end+0xfc00ac64>
 800add0:	400b883a 	mov	r5,r8
 800add4:	3023883a 	mov	r17,r6
 800add8:	003e0c06 	br	800a60c <__alt_data_end+0xfc00a60c>
 800addc:	400b883a 	mov	r5,r8
 800ade0:	3023883a 	mov	r17,r6
 800ade4:	0401ffc4 	movi	r16,2047
 800ade8:	003e0806 	br	800a60c <__alt_data_end+0xfc00a60c>
 800adec:	21fff804 	addi	r7,r4,-32
 800adf0:	02400804 	movi	r9,32
 800adf4:	29ced83a 	srl	r7,r5,r7
 800adf8:	22400a26 	beq	r4,r9,800ae24 <__adddf3+0x894>
 800adfc:	02401004 	movi	r9,64
 800ae00:	4909c83a 	sub	r4,r9,r4
 800ae04:	290a983a 	sll	r5,r5,r4
 800ae08:	2c62b03a 	or	r17,r5,r17
 800ae0c:	8822c03a 	cmpne	r17,r17,zero
 800ae10:	89e2b03a 	or	r17,r17,r7
 800ae14:	0009883a 	mov	r4,zero
 800ae18:	003f9206 	br	800ac64 <__alt_data_end+0xfc00ac64>
 800ae1c:	000b883a 	mov	r5,zero
 800ae20:	003fdc06 	br	800ad94 <__alt_data_end+0xfc00ad94>
 800ae24:	000b883a 	mov	r5,zero
 800ae28:	003ff706 	br	800ae08 <__alt_data_end+0xfc00ae08>

0800ae2c <__divdf3>:
 800ae2c:	defff004 	addi	sp,sp,-64
 800ae30:	dc800815 	stw	r18,32(sp)
 800ae34:	2824d53a 	srli	r18,r5,20
 800ae38:	dd800c15 	stw	r22,48(sp)
 800ae3c:	282cd7fa 	srli	r22,r5,31
 800ae40:	dc000615 	stw	r16,24(sp)
 800ae44:	04000434 	movhi	r16,16
 800ae48:	df000e15 	stw	fp,56(sp)
 800ae4c:	dd000a15 	stw	r20,40(sp)
 800ae50:	dcc00915 	stw	r19,36(sp)
 800ae54:	dc400715 	stw	r17,28(sp)
 800ae58:	843fffc4 	addi	r16,r16,-1
 800ae5c:	dfc00f15 	stw	ra,60(sp)
 800ae60:	ddc00d15 	stw	r23,52(sp)
 800ae64:	dd400b15 	stw	r21,44(sp)
 800ae68:	9481ffcc 	andi	r18,r18,2047
 800ae6c:	2029883a 	mov	r20,r4
 800ae70:	2027883a 	mov	r19,r4
 800ae74:	2c22703a 	and	r17,r5,r16
 800ae78:	b7003fcc 	andi	fp,r22,255
 800ae7c:	90005e26 	beq	r18,zero,800aff8 <__divdf3+0x1cc>
 800ae80:	0081ffc4 	movi	r2,2047
 800ae84:	90803526 	beq	r18,r2,800af5c <__divdf3+0x130>
 800ae88:	8c000434 	orhi	r16,r17,16
 800ae8c:	2004d77a 	srli	r2,r4,29
 800ae90:	802090fa 	slli	r16,r16,3
 800ae94:	202690fa 	slli	r19,r4,3
 800ae98:	94bf0044 	addi	r18,r18,-1023
 800ae9c:	80a2b03a 	or	r17,r16,r2
 800aea0:	0029883a 	mov	r20,zero
 800aea4:	0011883a 	mov	r8,zero
 800aea8:	380ad53a 	srli	r5,r7,20
 800aeac:	382ed7fa 	srli	r23,r7,31
 800aeb0:	04000434 	movhi	r16,16
 800aeb4:	843fffc4 	addi	r16,r16,-1
 800aeb8:	2941ffcc 	andi	r5,r5,2047
 800aebc:	302b883a 	mov	r21,r6
 800aec0:	3c20703a 	and	r16,r7,r16
 800aec4:	ba403fcc 	andi	r9,r23,255
 800aec8:	28006726 	beq	r5,zero,800b068 <__divdf3+0x23c>
 800aecc:	0081ffc4 	movi	r2,2047
 800aed0:	28805f26 	beq	r5,r2,800b050 <__divdf3+0x224>
 800aed4:	84000434 	orhi	r16,r16,16
 800aed8:	3004d77a 	srli	r2,r6,29
 800aedc:	802090fa 	slli	r16,r16,3
 800aee0:	302a90fa 	slli	r21,r6,3
 800aee4:	297f0044 	addi	r5,r5,-1023
 800aee8:	80a0b03a 	or	r16,r16,r2
 800aeec:	000f883a 	mov	r7,zero
 800aef0:	3d06b03a 	or	r3,r7,r20
 800aef4:	180690ba 	slli	r3,r3,2
 800aef8:	00820074 	movhi	r2,2049
 800aefc:	10abc704 	addi	r2,r2,-20708
 800af00:	1885883a 	add	r2,r3,r2
 800af04:	10800017 	ldw	r2,0(r2)
 800af08:	b5c8f03a 	xor	r4,r22,r23
 800af0c:	200d883a 	mov	r6,r4
 800af10:	25003fcc 	andi	r20,r4,255
 800af14:	9165c83a 	sub	r18,r18,r5
 800af18:	1000683a 	jmp	r2
 800af1c:	0800b164 	muli	zero,at,709
 800af20:	0800af94 	ori	zero,at,702
 800af24:	0800b128 	cmpgeui	zero,at,708
 800af28:	0800af78 	rdprs	zero,at,701
 800af2c:	0800b128 	cmpgeui	zero,at,708
 800af30:	0800b0fc 	xorhi	zero,at,707
 800af34:	0800b128 	cmpgeui	zero,at,708
 800af38:	0800af78 	rdprs	zero,at,701
 800af3c:	0800af94 	ori	zero,at,702
 800af40:	0800af94 	ori	zero,at,702
 800af44:	0800b0fc 	xorhi	zero,at,707
 800af48:	0800af78 	rdprs	zero,at,701
 800af4c:	0800af88 	cmpgei	zero,at,702
 800af50:	0800af88 	cmpgei	zero,at,702
 800af54:	0800af88 	cmpgei	zero,at,702
 800af58:	0800b138 	rdprs	zero,at,708
 800af5c:	8904b03a 	or	r2,r17,r4
 800af60:	1000631e 	bne	r2,zero,800b0f0 <__divdf3+0x2c4>
 800af64:	05000204 	movi	r20,8
 800af68:	0023883a 	mov	r17,zero
 800af6c:	0027883a 	mov	r19,zero
 800af70:	02000084 	movi	r8,2
 800af74:	003fcc06 	br	800aea8 <__alt_data_end+0xfc00aea8>
 800af78:	8023883a 	mov	r17,r16
 800af7c:	a827883a 	mov	r19,r21
 800af80:	4839883a 	mov	fp,r9
 800af84:	3811883a 	mov	r8,r7
 800af88:	00800084 	movi	r2,2
 800af8c:	4081531e 	bne	r8,r2,800b4dc <__divdf3+0x6b0>
 800af90:	e029883a 	mov	r20,fp
 800af94:	a180004c 	andi	r6,r20,1
 800af98:	0201ffc4 	movi	r8,2047
 800af9c:	000b883a 	mov	r5,zero
 800afa0:	0027883a 	mov	r19,zero
 800afa4:	4010953a 	slli	r8,r8,20
 800afa8:	30c03fcc 	andi	r3,r6,255
 800afac:	04000434 	movhi	r16,16
 800afb0:	180697fa 	slli	r3,r3,31
 800afb4:	843fffc4 	addi	r16,r16,-1
 800afb8:	2c20703a 	and	r16,r5,r16
 800afbc:	8220b03a 	or	r16,r16,r8
 800afc0:	80c6b03a 	or	r3,r16,r3
 800afc4:	9805883a 	mov	r2,r19
 800afc8:	dfc00f17 	ldw	ra,60(sp)
 800afcc:	df000e17 	ldw	fp,56(sp)
 800afd0:	ddc00d17 	ldw	r23,52(sp)
 800afd4:	dd800c17 	ldw	r22,48(sp)
 800afd8:	dd400b17 	ldw	r21,44(sp)
 800afdc:	dd000a17 	ldw	r20,40(sp)
 800afe0:	dcc00917 	ldw	r19,36(sp)
 800afe4:	dc800817 	ldw	r18,32(sp)
 800afe8:	dc400717 	ldw	r17,28(sp)
 800afec:	dc000617 	ldw	r16,24(sp)
 800aff0:	dec01004 	addi	sp,sp,64
 800aff4:	f800283a 	ret
 800aff8:	8904b03a 	or	r2,r17,r4
 800affc:	10003726 	beq	r2,zero,800b0dc <__divdf3+0x2b0>
 800b000:	88014d26 	beq	r17,zero,800b538 <__divdf3+0x70c>
 800b004:	8809883a 	mov	r4,r17
 800b008:	d9800215 	stw	r6,8(sp)
 800b00c:	d9c00515 	stw	r7,20(sp)
 800b010:	800cf2c0 	call	800cf2c <__clzsi2>
 800b014:	d9800217 	ldw	r6,8(sp)
 800b018:	d9c00517 	ldw	r7,20(sp)
 800b01c:	1007883a 	mov	r3,r2
 800b020:	01000a04 	movi	r4,40
 800b024:	1cfffe04 	addi	r19,r3,-8
 800b028:	20c9c83a 	sub	r4,r4,r3
 800b02c:	8cca983a 	sll	r5,r17,r19
 800b030:	a108d83a 	srl	r4,r20,r4
 800b034:	a4e6983a 	sll	r19,r20,r19
 800b038:	2162b03a 	or	r17,r4,r5
 800b03c:	04bf0344 	movi	r18,-1011
 800b040:	90e5c83a 	sub	r18,r18,r3
 800b044:	0029883a 	mov	r20,zero
 800b048:	0011883a 	mov	r8,zero
 800b04c:	003f9606 	br	800aea8 <__alt_data_end+0xfc00aea8>
 800b050:	8184b03a 	or	r2,r16,r6
 800b054:	10001f1e 	bne	r2,zero,800b0d4 <__divdf3+0x2a8>
 800b058:	0021883a 	mov	r16,zero
 800b05c:	002b883a 	mov	r21,zero
 800b060:	01c00084 	movi	r7,2
 800b064:	003fa206 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800b068:	8184b03a 	or	r2,r16,r6
 800b06c:	10001526 	beq	r2,zero,800b0c4 <__divdf3+0x298>
 800b070:	80013d26 	beq	r16,zero,800b568 <__divdf3+0x73c>
 800b074:	8009883a 	mov	r4,r16
 800b078:	d9800215 	stw	r6,8(sp)
 800b07c:	da000315 	stw	r8,12(sp)
 800b080:	da400415 	stw	r9,16(sp)
 800b084:	800cf2c0 	call	800cf2c <__clzsi2>
 800b088:	d9800217 	ldw	r6,8(sp)
 800b08c:	da000317 	ldw	r8,12(sp)
 800b090:	da400417 	ldw	r9,16(sp)
 800b094:	1007883a 	mov	r3,r2
 800b098:	01000a04 	movi	r4,40
 800b09c:	1d7ffe04 	addi	r21,r3,-8
 800b0a0:	20c9c83a 	sub	r4,r4,r3
 800b0a4:	8560983a 	sll	r16,r16,r21
 800b0a8:	3108d83a 	srl	r4,r6,r4
 800b0ac:	356a983a 	sll	r21,r6,r21
 800b0b0:	2420b03a 	or	r16,r4,r16
 800b0b4:	017f0344 	movi	r5,-1011
 800b0b8:	28cbc83a 	sub	r5,r5,r3
 800b0bc:	000f883a 	mov	r7,zero
 800b0c0:	003f8b06 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800b0c4:	0021883a 	mov	r16,zero
 800b0c8:	002b883a 	mov	r21,zero
 800b0cc:	01c00044 	movi	r7,1
 800b0d0:	003f8706 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800b0d4:	01c000c4 	movi	r7,3
 800b0d8:	003f8506 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800b0dc:	05000104 	movi	r20,4
 800b0e0:	0023883a 	mov	r17,zero
 800b0e4:	0027883a 	mov	r19,zero
 800b0e8:	02000044 	movi	r8,1
 800b0ec:	003f6e06 	br	800aea8 <__alt_data_end+0xfc00aea8>
 800b0f0:	05000304 	movi	r20,12
 800b0f4:	020000c4 	movi	r8,3
 800b0f8:	003f6b06 	br	800aea8 <__alt_data_end+0xfc00aea8>
 800b0fc:	01400434 	movhi	r5,16
 800b100:	000d883a 	mov	r6,zero
 800b104:	297fffc4 	addi	r5,r5,-1
 800b108:	04ffffc4 	movi	r19,-1
 800b10c:	0201ffc4 	movi	r8,2047
 800b110:	003fa406 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800b114:	043f0084 	movi	r16,-1022
 800b118:	84a1c83a 	sub	r16,r16,r18
 800b11c:	00800e04 	movi	r2,56
 800b120:	14014d0e 	bge	r2,r16,800b658 <__divdf3+0x82c>
 800b124:	a180004c 	andi	r6,r20,1
 800b128:	0011883a 	mov	r8,zero
 800b12c:	000b883a 	mov	r5,zero
 800b130:	0027883a 	mov	r19,zero
 800b134:	003f9b06 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800b138:	8880022c 	andhi	r2,r17,8
 800b13c:	1000f026 	beq	r2,zero,800b500 <__divdf3+0x6d4>
 800b140:	8080022c 	andhi	r2,r16,8
 800b144:	1000ee1e 	bne	r2,zero,800b500 <__divdf3+0x6d4>
 800b148:	00800434 	movhi	r2,16
 800b14c:	81400234 	orhi	r5,r16,8
 800b150:	10bfffc4 	addi	r2,r2,-1
 800b154:	b80d883a 	mov	r6,r23
 800b158:	288a703a 	and	r5,r5,r2
 800b15c:	a827883a 	mov	r19,r21
 800b160:	003fea06 	br	800b10c <__alt_data_end+0xfc00b10c>
 800b164:	84411c36 	bltu	r16,r17,800b5d8 <__divdf3+0x7ac>
 800b168:	8c011a26 	beq	r17,r16,800b5d4 <__divdf3+0x7a8>
 800b16c:	94bfffc4 	addi	r18,r18,-1
 800b170:	dcc00015 	stw	r19,0(sp)
 800b174:	8811883a 	mov	r8,r17
 800b178:	002d883a 	mov	r22,zero
 800b17c:	a80cd63a 	srli	r6,r21,24
 800b180:	8020923a 	slli	r16,r16,8
 800b184:	a82a923a 	slli	r21,r21,8
 800b188:	4009883a 	mov	r4,r8
 800b18c:	342eb03a 	or	r23,r6,r16
 800b190:	dd400115 	stw	r21,4(sp)
 800b194:	b82ad43a 	srli	r21,r23,16
 800b198:	da000315 	stw	r8,12(sp)
 800b19c:	bcffffcc 	andi	r19,r23,65535
 800b1a0:	a80b883a 	mov	r5,r21
 800b1a4:	8009fd40 	call	8009fd4 <__udivsi3>
 800b1a8:	1009883a 	mov	r4,r2
 800b1ac:	980b883a 	mov	r5,r19
 800b1b0:	1023883a 	mov	r17,r2
 800b1b4:	8009fe40 	call	8009fe4 <__mulsi3>
 800b1b8:	da000317 	ldw	r8,12(sp)
 800b1bc:	a80b883a 	mov	r5,r21
 800b1c0:	1039883a 	mov	fp,r2
 800b1c4:	4009883a 	mov	r4,r8
 800b1c8:	8009fdc0 	call	8009fdc <__umodsi3>
 800b1cc:	d8c00017 	ldw	r3,0(sp)
 800b1d0:	1004943a 	slli	r2,r2,16
 800b1d4:	1810d43a 	srli	r8,r3,16
 800b1d8:	120eb03a 	or	r7,r2,r8
 800b1dc:	3f00062e 	bgeu	r7,fp,800b1f8 <__divdf3+0x3cc>
 800b1e0:	3dcf883a 	add	r7,r7,r23
 800b1e4:	88bfffc4 	addi	r2,r17,-1
 800b1e8:	3dc10a36 	bltu	r7,r23,800b614 <__divdf3+0x7e8>
 800b1ec:	3f01092e 	bgeu	r7,fp,800b614 <__divdf3+0x7e8>
 800b1f0:	8c7fff84 	addi	r17,r17,-2
 800b1f4:	3dcf883a 	add	r7,r7,r23
 800b1f8:	3f39c83a 	sub	fp,r7,fp
 800b1fc:	e009883a 	mov	r4,fp
 800b200:	a80b883a 	mov	r5,r21
 800b204:	8009fd40 	call	8009fd4 <__udivsi3>
 800b208:	1009883a 	mov	r4,r2
 800b20c:	980b883a 	mov	r5,r19
 800b210:	1021883a 	mov	r16,r2
 800b214:	8009fe40 	call	8009fe4 <__mulsi3>
 800b218:	e009883a 	mov	r4,fp
 800b21c:	a80b883a 	mov	r5,r21
 800b220:	d8800315 	stw	r2,12(sp)
 800b224:	8009fdc0 	call	8009fdc <__umodsi3>
 800b228:	d9000017 	ldw	r4,0(sp)
 800b22c:	1004943a 	slli	r2,r2,16
 800b230:	da000317 	ldw	r8,12(sp)
 800b234:	20ffffcc 	andi	r3,r4,65535
 800b238:	10ceb03a 	or	r7,r2,r3
 800b23c:	3a00062e 	bgeu	r7,r8,800b258 <__divdf3+0x42c>
 800b240:	3dcf883a 	add	r7,r7,r23
 800b244:	80bfffc4 	addi	r2,r16,-1
 800b248:	3dc0f036 	bltu	r7,r23,800b60c <__divdf3+0x7e0>
 800b24c:	3a00ef2e 	bgeu	r7,r8,800b60c <__divdf3+0x7e0>
 800b250:	843fff84 	addi	r16,r16,-2
 800b254:	3dcf883a 	add	r7,r7,r23
 800b258:	d8c00117 	ldw	r3,4(sp)
 800b25c:	8822943a 	slli	r17,r17,16
 800b260:	3a0fc83a 	sub	r7,r7,r8
 800b264:	1806d43a 	srli	r3,r3,16
 800b268:	8462b03a 	or	r17,r16,r17
 800b26c:	8affffcc 	andi	r11,r17,65535
 800b270:	d8c00015 	stw	r3,0(sp)
 800b274:	d8c00117 	ldw	r3,4(sp)
 800b278:	8820d43a 	srli	r16,r17,16
 800b27c:	5809883a 	mov	r4,r11
 800b280:	1f3fffcc 	andi	fp,r3,65535
 800b284:	e00b883a 	mov	r5,fp
 800b288:	d9c00515 	stw	r7,20(sp)
 800b28c:	dac00215 	stw	r11,8(sp)
 800b290:	8009fe40 	call	8009fe4 <__mulsi3>
 800b294:	8009883a 	mov	r4,r16
 800b298:	e00b883a 	mov	r5,fp
 800b29c:	d8800415 	stw	r2,16(sp)
 800b2a0:	8009fe40 	call	8009fe4 <__mulsi3>
 800b2a4:	d9400017 	ldw	r5,0(sp)
 800b2a8:	8009883a 	mov	r4,r16
 800b2ac:	d8800315 	stw	r2,12(sp)
 800b2b0:	8009fe40 	call	8009fe4 <__mulsi3>
 800b2b4:	dac00217 	ldw	r11,8(sp)
 800b2b8:	d9400017 	ldw	r5,0(sp)
 800b2bc:	d8800215 	stw	r2,8(sp)
 800b2c0:	5809883a 	mov	r4,r11
 800b2c4:	8009fe40 	call	8009fe4 <__mulsi3>
 800b2c8:	da400417 	ldw	r9,16(sp)
 800b2cc:	da800317 	ldw	r10,12(sp)
 800b2d0:	d9c00517 	ldw	r7,20(sp)
 800b2d4:	480ad43a 	srli	r5,r9,16
 800b2d8:	5085883a 	add	r2,r10,r2
 800b2dc:	db000217 	ldw	r12,8(sp)
 800b2e0:	1151883a 	add	r8,r2,r5
 800b2e4:	4280022e 	bgeu	r8,r10,800b2f0 <__divdf3+0x4c4>
 800b2e8:	00800074 	movhi	r2,1
 800b2ec:	6099883a 	add	r12,r12,r2
 800b2f0:	400ad43a 	srli	r5,r8,16
 800b2f4:	4010943a 	slli	r8,r8,16
 800b2f8:	4c3fffcc 	andi	r16,r9,65535
 800b2fc:	6149883a 	add	r4,r12,r5
 800b300:	4411883a 	add	r8,r8,r16
 800b304:	3900a736 	bltu	r7,r4,800b5a4 <__divdf3+0x778>
 800b308:	3900c426 	beq	r7,r4,800b61c <__divdf3+0x7f0>
 800b30c:	3909c83a 	sub	r4,r7,r4
 800b310:	b221c83a 	sub	r16,r22,r8
 800b314:	b42d803a 	cmpltu	r22,r22,r16
 800b318:	25adc83a 	sub	r22,r4,r22
 800b31c:	b5c0c626 	beq	r22,r23,800b638 <__divdf3+0x80c>
 800b320:	b009883a 	mov	r4,r22
 800b324:	a80b883a 	mov	r5,r21
 800b328:	8009fd40 	call	8009fd4 <__udivsi3>
 800b32c:	1009883a 	mov	r4,r2
 800b330:	980b883a 	mov	r5,r19
 800b334:	d8800315 	stw	r2,12(sp)
 800b338:	8009fe40 	call	8009fe4 <__mulsi3>
 800b33c:	a80b883a 	mov	r5,r21
 800b340:	b009883a 	mov	r4,r22
 800b344:	d8800415 	stw	r2,16(sp)
 800b348:	8009fdc0 	call	8009fdc <__umodsi3>
 800b34c:	1004943a 	slli	r2,r2,16
 800b350:	800ed43a 	srli	r7,r16,16
 800b354:	da400417 	ldw	r9,16(sp)
 800b358:	da000317 	ldw	r8,12(sp)
 800b35c:	11cab03a 	or	r5,r2,r7
 800b360:	2a40062e 	bgeu	r5,r9,800b37c <__divdf3+0x550>
 800b364:	2dcb883a 	add	r5,r5,r23
 800b368:	40bfffc4 	addi	r2,r8,-1
 800b36c:	2dc0b436 	bltu	r5,r23,800b640 <__divdf3+0x814>
 800b370:	2a40b32e 	bgeu	r5,r9,800b640 <__divdf3+0x814>
 800b374:	423fff84 	addi	r8,r8,-2
 800b378:	2dcb883a 	add	r5,r5,r23
 800b37c:	2a6dc83a 	sub	r22,r5,r9
 800b380:	b009883a 	mov	r4,r22
 800b384:	a80b883a 	mov	r5,r21
 800b388:	da000315 	stw	r8,12(sp)
 800b38c:	8009fd40 	call	8009fd4 <__udivsi3>
 800b390:	980b883a 	mov	r5,r19
 800b394:	1009883a 	mov	r4,r2
 800b398:	d8800415 	stw	r2,16(sp)
 800b39c:	8009fe40 	call	8009fe4 <__mulsi3>
 800b3a0:	b009883a 	mov	r4,r22
 800b3a4:	a80b883a 	mov	r5,r21
 800b3a8:	1027883a 	mov	r19,r2
 800b3ac:	8009fdc0 	call	8009fdc <__umodsi3>
 800b3b0:	1004943a 	slli	r2,r2,16
 800b3b4:	843fffcc 	andi	r16,r16,65535
 800b3b8:	da000317 	ldw	r8,12(sp)
 800b3bc:	140eb03a 	or	r7,r2,r16
 800b3c0:	da400417 	ldw	r9,16(sp)
 800b3c4:	3cc0062e 	bgeu	r7,r19,800b3e0 <__divdf3+0x5b4>
 800b3c8:	3dcf883a 	add	r7,r7,r23
 800b3cc:	48bfffc4 	addi	r2,r9,-1
 800b3d0:	3dc09d36 	bltu	r7,r23,800b648 <__divdf3+0x81c>
 800b3d4:	3cc09c2e 	bgeu	r7,r19,800b648 <__divdf3+0x81c>
 800b3d8:	4a7fff84 	addi	r9,r9,-2
 800b3dc:	3dcf883a 	add	r7,r7,r23
 800b3e0:	4010943a 	slli	r8,r8,16
 800b3e4:	3cebc83a 	sub	r21,r7,r19
 800b3e8:	e00b883a 	mov	r5,fp
 800b3ec:	4a26b03a 	or	r19,r9,r8
 800b3f0:	99ffffcc 	andi	r7,r19,65535
 800b3f4:	9820d43a 	srli	r16,r19,16
 800b3f8:	3809883a 	mov	r4,r7
 800b3fc:	d9c00515 	stw	r7,20(sp)
 800b400:	8009fe40 	call	8009fe4 <__mulsi3>
 800b404:	8009883a 	mov	r4,r16
 800b408:	e00b883a 	mov	r5,fp
 800b40c:	102d883a 	mov	r22,r2
 800b410:	8009fe40 	call	8009fe4 <__mulsi3>
 800b414:	d9400017 	ldw	r5,0(sp)
 800b418:	8009883a 	mov	r4,r16
 800b41c:	1039883a 	mov	fp,r2
 800b420:	8009fe40 	call	8009fe4 <__mulsi3>
 800b424:	d9c00517 	ldw	r7,20(sp)
 800b428:	d9400017 	ldw	r5,0(sp)
 800b42c:	1021883a 	mov	r16,r2
 800b430:	3809883a 	mov	r4,r7
 800b434:	8009fe40 	call	8009fe4 <__mulsi3>
 800b438:	b008d43a 	srli	r4,r22,16
 800b43c:	e085883a 	add	r2,fp,r2
 800b440:	1109883a 	add	r4,r2,r4
 800b444:	2700022e 	bgeu	r4,fp,800b450 <__divdf3+0x624>
 800b448:	00800074 	movhi	r2,1
 800b44c:	80a1883a 	add	r16,r16,r2
 800b450:	200ad43a 	srli	r5,r4,16
 800b454:	2008943a 	slli	r4,r4,16
 800b458:	b5bfffcc 	andi	r22,r22,65535
 800b45c:	8145883a 	add	r2,r16,r5
 800b460:	2589883a 	add	r4,r4,r22
 800b464:	a8802c36 	bltu	r21,r2,800b518 <__divdf3+0x6ec>
 800b468:	a880a426 	beq	r21,r2,800b6fc <__divdf3+0x8d0>
 800b46c:	9cc00054 	ori	r19,r19,1
 800b470:	9200ffc4 	addi	r8,r18,1023
 800b474:	023f270e 	bge	zero,r8,800b114 <__alt_data_end+0xfc00b114>
 800b478:	988001cc 	andi	r2,r19,7
 800b47c:	10000726 	beq	r2,zero,800b49c <__divdf3+0x670>
 800b480:	990003cc 	andi	r4,r19,15
 800b484:	00800104 	movi	r2,4
 800b488:	20800426 	beq	r4,r2,800b49c <__divdf3+0x670>
 800b48c:	9885883a 	add	r2,r19,r2
 800b490:	14e7803a 	cmpltu	r19,r2,r19
 800b494:	8ce3883a 	add	r17,r17,r19
 800b498:	1027883a 	mov	r19,r2
 800b49c:	8880402c 	andhi	r2,r17,256
 800b4a0:	10000426 	beq	r2,zero,800b4b4 <__divdf3+0x688>
 800b4a4:	00bfc034 	movhi	r2,65280
 800b4a8:	10bfffc4 	addi	r2,r2,-1
 800b4ac:	92010004 	addi	r8,r18,1024
 800b4b0:	88a2703a 	and	r17,r17,r2
 800b4b4:	0081ff84 	movi	r2,2046
 800b4b8:	123eb616 	blt	r2,r8,800af94 <__alt_data_end+0xfc00af94>
 800b4bc:	9826d0fa 	srli	r19,r19,3
 800b4c0:	8804977a 	slli	r2,r17,29
 800b4c4:	8820927a 	slli	r16,r17,9
 800b4c8:	4201ffcc 	andi	r8,r8,2047
 800b4cc:	14e6b03a 	or	r19,r2,r19
 800b4d0:	800ad33a 	srli	r5,r16,12
 800b4d4:	a180004c 	andi	r6,r20,1
 800b4d8:	003eb206 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800b4dc:	008000c4 	movi	r2,3
 800b4e0:	4080ac26 	beq	r8,r2,800b794 <__divdf3+0x968>
 800b4e4:	00800044 	movi	r2,1
 800b4e8:	4080591e 	bne	r8,r2,800b650 <__divdf3+0x824>
 800b4ec:	e00d883a 	mov	r6,fp
 800b4f0:	0011883a 	mov	r8,zero
 800b4f4:	000b883a 	mov	r5,zero
 800b4f8:	0027883a 	mov	r19,zero
 800b4fc:	003ea906 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800b500:	00800434 	movhi	r2,16
 800b504:	89400234 	orhi	r5,r17,8
 800b508:	10bfffc4 	addi	r2,r2,-1
 800b50c:	b00d883a 	mov	r6,r22
 800b510:	288a703a 	and	r5,r5,r2
 800b514:	003efd06 	br	800b10c <__alt_data_end+0xfc00b10c>
 800b518:	adcf883a 	add	r7,r21,r23
 800b51c:	997fffc4 	addi	r5,r19,-1
 800b520:	3dc0412e 	bgeu	r7,r23,800b628 <__divdf3+0x7fc>
 800b524:	2827883a 	mov	r19,r5
 800b528:	38bfd01e 	bne	r7,r2,800b46c <__alt_data_end+0xfc00b46c>
 800b52c:	d8c00117 	ldw	r3,4(sp)
 800b530:	193fce1e 	bne	r3,r4,800b46c <__alt_data_end+0xfc00b46c>
 800b534:	003fce06 	br	800b470 <__alt_data_end+0xfc00b470>
 800b538:	d9800215 	stw	r6,8(sp)
 800b53c:	d9c00515 	stw	r7,20(sp)
 800b540:	800cf2c0 	call	800cf2c <__clzsi2>
 800b544:	10c00804 	addi	r3,r2,32
 800b548:	010009c4 	movi	r4,39
 800b54c:	d9800217 	ldw	r6,8(sp)
 800b550:	d9c00517 	ldw	r7,20(sp)
 800b554:	20feb20e 	bge	r4,r3,800b020 <__alt_data_end+0xfc00b020>
 800b558:	117ffe04 	addi	r5,r2,-8
 800b55c:	a162983a 	sll	r17,r20,r5
 800b560:	0027883a 	mov	r19,zero
 800b564:	003eb506 	br	800b03c <__alt_data_end+0xfc00b03c>
 800b568:	3009883a 	mov	r4,r6
 800b56c:	d9800215 	stw	r6,8(sp)
 800b570:	da000315 	stw	r8,12(sp)
 800b574:	da400415 	stw	r9,16(sp)
 800b578:	800cf2c0 	call	800cf2c <__clzsi2>
 800b57c:	10c00804 	addi	r3,r2,32
 800b580:	010009c4 	movi	r4,39
 800b584:	d9800217 	ldw	r6,8(sp)
 800b588:	da000317 	ldw	r8,12(sp)
 800b58c:	da400417 	ldw	r9,16(sp)
 800b590:	20fec10e 	bge	r4,r3,800b098 <__alt_data_end+0xfc00b098>
 800b594:	10bffe04 	addi	r2,r2,-8
 800b598:	a8a0983a 	sll	r16,r21,r2
 800b59c:	002b883a 	mov	r21,zero
 800b5a0:	003ec406 	br	800b0b4 <__alt_data_end+0xfc00b0b4>
 800b5a4:	d8c00117 	ldw	r3,4(sp)
 800b5a8:	b0ed883a 	add	r22,r22,r3
 800b5ac:	b0c5803a 	cmpltu	r2,r22,r3
 800b5b0:	15c5883a 	add	r2,r2,r23
 800b5b4:	11cf883a 	add	r7,r2,r7
 800b5b8:	88bfffc4 	addi	r2,r17,-1
 800b5bc:	b9c00d2e 	bgeu	r23,r7,800b5f4 <__divdf3+0x7c8>
 800b5c0:	39003f36 	bltu	r7,r4,800b6c0 <__divdf3+0x894>
 800b5c4:	21c06a26 	beq	r4,r7,800b770 <__divdf3+0x944>
 800b5c8:	3909c83a 	sub	r4,r7,r4
 800b5cc:	1023883a 	mov	r17,r2
 800b5d0:	003f4f06 	br	800b310 <__alt_data_end+0xfc00b310>
 800b5d4:	9d7ee536 	bltu	r19,r21,800b16c <__alt_data_end+0xfc00b16c>
 800b5d8:	982ed07a 	srli	r23,r19,1
 800b5dc:	880497fa 	slli	r2,r17,31
 800b5e0:	8810d07a 	srli	r8,r17,1
 800b5e4:	982c97fa 	slli	r22,r19,31
 800b5e8:	b884b03a 	or	r2,r23,r2
 800b5ec:	d8800015 	stw	r2,0(sp)
 800b5f0:	003ee206 	br	800b17c <__alt_data_end+0xfc00b17c>
 800b5f4:	3dfff41e 	bne	r7,r23,800b5c8 <__alt_data_end+0xfc00b5c8>
 800b5f8:	d8c00117 	ldw	r3,4(sp)
 800b5fc:	b0fff02e 	bgeu	r22,r3,800b5c0 <__alt_data_end+0xfc00b5c0>
 800b600:	b909c83a 	sub	r4,r23,r4
 800b604:	1023883a 	mov	r17,r2
 800b608:	003f4106 	br	800b310 <__alt_data_end+0xfc00b310>
 800b60c:	1021883a 	mov	r16,r2
 800b610:	003f1106 	br	800b258 <__alt_data_end+0xfc00b258>
 800b614:	1023883a 	mov	r17,r2
 800b618:	003ef706 	br	800b1f8 <__alt_data_end+0xfc00b1f8>
 800b61c:	b23fe136 	bltu	r22,r8,800b5a4 <__alt_data_end+0xfc00b5a4>
 800b620:	0009883a 	mov	r4,zero
 800b624:	003f3a06 	br	800b310 <__alt_data_end+0xfc00b310>
 800b628:	38802c36 	bltu	r7,r2,800b6dc <__divdf3+0x8b0>
 800b62c:	11c05326 	beq	r2,r7,800b77c <__divdf3+0x950>
 800b630:	2827883a 	mov	r19,r5
 800b634:	003f8d06 	br	800b46c <__alt_data_end+0xfc00b46c>
 800b638:	04ffffc4 	movi	r19,-1
 800b63c:	003f8c06 	br	800b470 <__alt_data_end+0xfc00b470>
 800b640:	1011883a 	mov	r8,r2
 800b644:	003f4d06 	br	800b37c <__alt_data_end+0xfc00b37c>
 800b648:	1013883a 	mov	r9,r2
 800b64c:	003f6406 	br	800b3e0 <__alt_data_end+0xfc00b3e0>
 800b650:	e029883a 	mov	r20,fp
 800b654:	003f8606 	br	800b470 <__alt_data_end+0xfc00b470>
 800b658:	008007c4 	movi	r2,31
 800b65c:	14002a16 	blt	r2,r16,800b708 <__divdf3+0x8dc>
 800b660:	91410784 	addi	r5,r18,1054
 800b664:	9c0cd83a 	srl	r6,r19,r16
 800b668:	8948983a 	sll	r4,r17,r5
 800b66c:	9944983a 	sll	r2,r19,r5
 800b670:	8c20d83a 	srl	r16,r17,r16
 800b674:	3108b03a 	or	r4,r6,r4
 800b678:	1004c03a 	cmpne	r2,r2,zero
 800b67c:	2084b03a 	or	r2,r4,r2
 800b680:	110001cc 	andi	r4,r2,7
 800b684:	20000726 	beq	r4,zero,800b6a4 <__divdf3+0x878>
 800b688:	114003cc 	andi	r5,r2,15
 800b68c:	01000104 	movi	r4,4
 800b690:	29000426 	beq	r5,r4,800b6a4 <__divdf3+0x878>
 800b694:	11000104 	addi	r4,r2,4
 800b698:	2085803a 	cmpltu	r2,r4,r2
 800b69c:	80a1883a 	add	r16,r16,r2
 800b6a0:	2005883a 	mov	r2,r4
 800b6a4:	8100202c 	andhi	r4,r16,128
 800b6a8:	20002d26 	beq	r4,zero,800b760 <__divdf3+0x934>
 800b6ac:	a180004c 	andi	r6,r20,1
 800b6b0:	02000044 	movi	r8,1
 800b6b4:	000b883a 	mov	r5,zero
 800b6b8:	0027883a 	mov	r19,zero
 800b6bc:	003e3906 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800b6c0:	d8c00117 	ldw	r3,4(sp)
 800b6c4:	8c7fff84 	addi	r17,r17,-2
 800b6c8:	b0ed883a 	add	r22,r22,r3
 800b6cc:	b0c5803a 	cmpltu	r2,r22,r3
 800b6d0:	15c5883a 	add	r2,r2,r23
 800b6d4:	11cf883a 	add	r7,r2,r7
 800b6d8:	003f0c06 	br	800b30c <__alt_data_end+0xfc00b30c>
 800b6dc:	d8c00117 	ldw	r3,4(sp)
 800b6e0:	997fff84 	addi	r5,r19,-2
 800b6e4:	18d1883a 	add	r8,r3,r3
 800b6e8:	40c7803a 	cmpltu	r3,r8,r3
 800b6ec:	1dcd883a 	add	r6,r3,r23
 800b6f0:	398f883a 	add	r7,r7,r6
 800b6f4:	da000115 	stw	r8,4(sp)
 800b6f8:	003f8a06 	br	800b524 <__alt_data_end+0xfc00b524>
 800b6fc:	203f861e 	bne	r4,zero,800b518 <__alt_data_end+0xfc00b518>
 800b700:	d8000115 	stw	zero,4(sp)
 800b704:	003f8906 	br	800b52c <__alt_data_end+0xfc00b52c>
 800b708:	00bef884 	movi	r2,-1054
 800b70c:	1485c83a 	sub	r2,r2,r18
 800b710:	01000804 	movi	r4,32
 800b714:	8884d83a 	srl	r2,r17,r2
 800b718:	81001c26 	beq	r16,r4,800b78c <__divdf3+0x960>
 800b71c:	91010f84 	addi	r4,r18,1086
 800b720:	8908983a 	sll	r4,r17,r4
 800b724:	24c8b03a 	or	r4,r4,r19
 800b728:	2008c03a 	cmpne	r4,r4,zero
 800b72c:	2084b03a 	or	r2,r4,r2
 800b730:	140001cc 	andi	r16,r2,7
 800b734:	8000061e 	bne	r16,zero,800b750 <__divdf3+0x924>
 800b738:	000b883a 	mov	r5,zero
 800b73c:	1004d0fa 	srli	r2,r2,3
 800b740:	a180004c 	andi	r6,r20,1
 800b744:	0011883a 	mov	r8,zero
 800b748:	1426b03a 	or	r19,r2,r16
 800b74c:	003e1506 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800b750:	114003cc 	andi	r5,r2,15
 800b754:	01000104 	movi	r4,4
 800b758:	0021883a 	mov	r16,zero
 800b75c:	293fcd1e 	bne	r5,r4,800b694 <__alt_data_end+0xfc00b694>
 800b760:	800a927a 	slli	r5,r16,9
 800b764:	8020977a 	slli	r16,r16,29
 800b768:	280ad33a 	srli	r5,r5,12
 800b76c:	003ff306 	br	800b73c <__alt_data_end+0xfc00b73c>
 800b770:	b23fd336 	bltu	r22,r8,800b6c0 <__alt_data_end+0xfc00b6c0>
 800b774:	1023883a 	mov	r17,r2
 800b778:	003fa906 	br	800b620 <__alt_data_end+0xfc00b620>
 800b77c:	d8c00117 	ldw	r3,4(sp)
 800b780:	193fd636 	bltu	r3,r4,800b6dc <__alt_data_end+0xfc00b6dc>
 800b784:	2827883a 	mov	r19,r5
 800b788:	003f6806 	br	800b52c <__alt_data_end+0xfc00b52c>
 800b78c:	0009883a 	mov	r4,zero
 800b790:	003fe406 	br	800b724 <__alt_data_end+0xfc00b724>
 800b794:	00800434 	movhi	r2,16
 800b798:	89400234 	orhi	r5,r17,8
 800b79c:	10bfffc4 	addi	r2,r2,-1
 800b7a0:	e00d883a 	mov	r6,fp
 800b7a4:	288a703a 	and	r5,r5,r2
 800b7a8:	003e5806 	br	800b10c <__alt_data_end+0xfc00b10c>

0800b7ac <__eqdf2>:
 800b7ac:	2804d53a 	srli	r2,r5,20
 800b7b0:	3806d53a 	srli	r3,r7,20
 800b7b4:	02000434 	movhi	r8,16
 800b7b8:	423fffc4 	addi	r8,r8,-1
 800b7bc:	1081ffcc 	andi	r2,r2,2047
 800b7c0:	0241ffc4 	movi	r9,2047
 800b7c4:	2a14703a 	and	r10,r5,r8
 800b7c8:	18c1ffcc 	andi	r3,r3,2047
 800b7cc:	3a10703a 	and	r8,r7,r8
 800b7d0:	280ad7fa 	srli	r5,r5,31
 800b7d4:	380ed7fa 	srli	r7,r7,31
 800b7d8:	12400f26 	beq	r2,r9,800b818 <__eqdf2+0x6c>
 800b7dc:	0241ffc4 	movi	r9,2047
 800b7e0:	1a400326 	beq	r3,r9,800b7f0 <__eqdf2+0x44>
 800b7e4:	10c00526 	beq	r2,r3,800b7fc <__eqdf2+0x50>
 800b7e8:	00800044 	movi	r2,1
 800b7ec:	f800283a 	ret
 800b7f0:	4192b03a 	or	r9,r8,r6
 800b7f4:	483ffc1e 	bne	r9,zero,800b7e8 <__alt_data_end+0xfc00b7e8>
 800b7f8:	10fffb1e 	bne	r2,r3,800b7e8 <__alt_data_end+0xfc00b7e8>
 800b7fc:	523ffa1e 	bne	r10,r8,800b7e8 <__alt_data_end+0xfc00b7e8>
 800b800:	21bff91e 	bne	r4,r6,800b7e8 <__alt_data_end+0xfc00b7e8>
 800b804:	29c00826 	beq	r5,r7,800b828 <__eqdf2+0x7c>
 800b808:	103ff71e 	bne	r2,zero,800b7e8 <__alt_data_end+0xfc00b7e8>
 800b80c:	5104b03a 	or	r2,r10,r4
 800b810:	1004c03a 	cmpne	r2,r2,zero
 800b814:	f800283a 	ret
 800b818:	5112b03a 	or	r9,r10,r4
 800b81c:	483fef26 	beq	r9,zero,800b7dc <__alt_data_end+0xfc00b7dc>
 800b820:	00800044 	movi	r2,1
 800b824:	f800283a 	ret
 800b828:	0005883a 	mov	r2,zero
 800b82c:	f800283a 	ret

0800b830 <__gedf2>:
 800b830:	2804d53a 	srli	r2,r5,20
 800b834:	3806d53a 	srli	r3,r7,20
 800b838:	02000434 	movhi	r8,16
 800b83c:	423fffc4 	addi	r8,r8,-1
 800b840:	0241ffc4 	movi	r9,2047
 800b844:	1081ffcc 	andi	r2,r2,2047
 800b848:	2a14703a 	and	r10,r5,r8
 800b84c:	1a46703a 	and	r3,r3,r9
 800b850:	3a10703a 	and	r8,r7,r8
 800b854:	280ad7fa 	srli	r5,r5,31
 800b858:	380ed7fa 	srli	r7,r7,31
 800b85c:	12400b26 	beq	r2,r9,800b88c <__gedf2+0x5c>
 800b860:	1a401626 	beq	r3,r9,800b8bc <__gedf2+0x8c>
 800b864:	10000c1e 	bne	r2,zero,800b898 <__gedf2+0x68>
 800b868:	5112b03a 	or	r9,r10,r4
 800b86c:	4813003a 	cmpeq	r9,r9,zero
 800b870:	4817883a 	mov	r11,r9
 800b874:	18000c1e 	bne	r3,zero,800b8a8 <__gedf2+0x78>
 800b878:	4198b03a 	or	r12,r8,r6
 800b87c:	60000a1e 	bne	r12,zero,800b8a8 <__gedf2+0x78>
 800b880:	48001326 	beq	r9,zero,800b8d0 <__gedf2+0xa0>
 800b884:	0005883a 	mov	r2,zero
 800b888:	f800283a 	ret
 800b88c:	5112b03a 	or	r9,r10,r4
 800b890:	4800191e 	bne	r9,zero,800b8f8 <__gedf2+0xc8>
 800b894:	18800926 	beq	r3,r2,800b8bc <__gedf2+0x8c>
 800b898:	18000b1e 	bne	r3,zero,800b8c8 <__gedf2+0x98>
 800b89c:	4192b03a 	or	r9,r8,r6
 800b8a0:	0017883a 	mov	r11,zero
 800b8a4:	48000a26 	beq	r9,zero,800b8d0 <__gedf2+0xa0>
 800b8a8:	39c03fcc 	andi	r7,r7,255
 800b8ac:	58000726 	beq	r11,zero,800b8cc <__gedf2+0x9c>
 800b8b0:	3800081e 	bne	r7,zero,800b8d4 <__gedf2+0xa4>
 800b8b4:	00bfffc4 	movi	r2,-1
 800b8b8:	f800283a 	ret
 800b8bc:	4192b03a 	or	r9,r8,r6
 800b8c0:	48000d1e 	bne	r9,zero,800b8f8 <__gedf2+0xc8>
 800b8c4:	103fe826 	beq	r2,zero,800b868 <__alt_data_end+0xfc00b868>
 800b8c8:	39c03fcc 	andi	r7,r7,255
 800b8cc:	29c00326 	beq	r5,r7,800b8dc <__gedf2+0xac>
 800b8d0:	283ff81e 	bne	r5,zero,800b8b4 <__alt_data_end+0xfc00b8b4>
 800b8d4:	00800044 	movi	r2,1
 800b8d8:	f800283a 	ret
 800b8dc:	18bffc16 	blt	r3,r2,800b8d0 <__alt_data_end+0xfc00b8d0>
 800b8e0:	10c00316 	blt	r2,r3,800b8f0 <__gedf2+0xc0>
 800b8e4:	42bffa36 	bltu	r8,r10,800b8d0 <__alt_data_end+0xfc00b8d0>
 800b8e8:	52000526 	beq	r10,r8,800b900 <__gedf2+0xd0>
 800b8ec:	523fe52e 	bgeu	r10,r8,800b884 <__alt_data_end+0xfc00b884>
 800b8f0:	283ff026 	beq	r5,zero,800b8b4 <__alt_data_end+0xfc00b8b4>
 800b8f4:	003ff706 	br	800b8d4 <__alt_data_end+0xfc00b8d4>
 800b8f8:	00bfff84 	movi	r2,-2
 800b8fc:	f800283a 	ret
 800b900:	313ff336 	bltu	r6,r4,800b8d0 <__alt_data_end+0xfc00b8d0>
 800b904:	21bfdf2e 	bgeu	r4,r6,800b884 <__alt_data_end+0xfc00b884>
 800b908:	283fea26 	beq	r5,zero,800b8b4 <__alt_data_end+0xfc00b8b4>
 800b90c:	003ff106 	br	800b8d4 <__alt_data_end+0xfc00b8d4>

0800b910 <__ledf2>:
 800b910:	2804d53a 	srli	r2,r5,20
 800b914:	3810d53a 	srli	r8,r7,20
 800b918:	00c00434 	movhi	r3,16
 800b91c:	18ffffc4 	addi	r3,r3,-1
 800b920:	0241ffc4 	movi	r9,2047
 800b924:	1081ffcc 	andi	r2,r2,2047
 800b928:	28d4703a 	and	r10,r5,r3
 800b92c:	4250703a 	and	r8,r8,r9
 800b930:	38c6703a 	and	r3,r7,r3
 800b934:	280ad7fa 	srli	r5,r5,31
 800b938:	380ed7fa 	srli	r7,r7,31
 800b93c:	12400b26 	beq	r2,r9,800b96c <__ledf2+0x5c>
 800b940:	42401926 	beq	r8,r9,800b9a8 <__ledf2+0x98>
 800b944:	10000c1e 	bne	r2,zero,800b978 <__ledf2+0x68>
 800b948:	5112b03a 	or	r9,r10,r4
 800b94c:	4813003a 	cmpeq	r9,r9,zero
 800b950:	4817883a 	mov	r11,r9
 800b954:	40000f26 	beq	r8,zero,800b994 <__ledf2+0x84>
 800b958:	39c03fcc 	andi	r7,r7,255
 800b95c:	58001826 	beq	r11,zero,800b9c0 <__ledf2+0xb0>
 800b960:	38000a1e 	bne	r7,zero,800b98c <__ledf2+0x7c>
 800b964:	00bfffc4 	movi	r2,-1
 800b968:	f800283a 	ret
 800b96c:	5112b03a 	or	r9,r10,r4
 800b970:	48000f1e 	bne	r9,zero,800b9b0 <__ledf2+0xa0>
 800b974:	40800c26 	beq	r8,r2,800b9a8 <__ledf2+0x98>
 800b978:	4000101e 	bne	r8,zero,800b9bc <__ledf2+0xac>
 800b97c:	1992b03a 	or	r9,r3,r6
 800b980:	0017883a 	mov	r11,zero
 800b984:	483ff41e 	bne	r9,zero,800b958 <__alt_data_end+0xfc00b958>
 800b988:	283ff61e 	bne	r5,zero,800b964 <__alt_data_end+0xfc00b964>
 800b98c:	00800044 	movi	r2,1
 800b990:	f800283a 	ret
 800b994:	1998b03a 	or	r12,r3,r6
 800b998:	603fef1e 	bne	r12,zero,800b958 <__alt_data_end+0xfc00b958>
 800b99c:	483ffa26 	beq	r9,zero,800b988 <__alt_data_end+0xfc00b988>
 800b9a0:	0005883a 	mov	r2,zero
 800b9a4:	f800283a 	ret
 800b9a8:	1992b03a 	or	r9,r3,r6
 800b9ac:	48000226 	beq	r9,zero,800b9b8 <__ledf2+0xa8>
 800b9b0:	00800084 	movi	r2,2
 800b9b4:	f800283a 	ret
 800b9b8:	103fe326 	beq	r2,zero,800b948 <__alt_data_end+0xfc00b948>
 800b9bc:	39c03fcc 	andi	r7,r7,255
 800b9c0:	29fff11e 	bne	r5,r7,800b988 <__alt_data_end+0xfc00b988>
 800b9c4:	40bff016 	blt	r8,r2,800b988 <__alt_data_end+0xfc00b988>
 800b9c8:	12000316 	blt	r2,r8,800b9d8 <__ledf2+0xc8>
 800b9cc:	1abfee36 	bltu	r3,r10,800b988 <__alt_data_end+0xfc00b988>
 800b9d0:	50c00326 	beq	r10,r3,800b9e0 <__ledf2+0xd0>
 800b9d4:	50fff22e 	bgeu	r10,r3,800b9a0 <__alt_data_end+0xfc00b9a0>
 800b9d8:	283fe226 	beq	r5,zero,800b964 <__alt_data_end+0xfc00b964>
 800b9dc:	003feb06 	br	800b98c <__alt_data_end+0xfc00b98c>
 800b9e0:	313fe936 	bltu	r6,r4,800b988 <__alt_data_end+0xfc00b988>
 800b9e4:	21bfee2e 	bgeu	r4,r6,800b9a0 <__alt_data_end+0xfc00b9a0>
 800b9e8:	283fde26 	beq	r5,zero,800b964 <__alt_data_end+0xfc00b964>
 800b9ec:	003fe706 	br	800b98c <__alt_data_end+0xfc00b98c>

0800b9f0 <__muldf3>:
 800b9f0:	deffee04 	addi	sp,sp,-72
 800b9f4:	dd000c15 	stw	r20,48(sp)
 800b9f8:	2828d53a 	srli	r20,r5,20
 800b9fc:	dd400d15 	stw	r21,52(sp)
 800ba00:	282ad7fa 	srli	r21,r5,31
 800ba04:	dc000815 	stw	r16,32(sp)
 800ba08:	04000434 	movhi	r16,16
 800ba0c:	ddc00f15 	stw	r23,60(sp)
 800ba10:	dcc00b15 	stw	r19,44(sp)
 800ba14:	dc800a15 	stw	r18,40(sp)
 800ba18:	843fffc4 	addi	r16,r16,-1
 800ba1c:	dfc01115 	stw	ra,68(sp)
 800ba20:	df001015 	stw	fp,64(sp)
 800ba24:	dd800e15 	stw	r22,56(sp)
 800ba28:	dc400915 	stw	r17,36(sp)
 800ba2c:	a501ffcc 	andi	r20,r20,2047
 800ba30:	2025883a 	mov	r18,r4
 800ba34:	202f883a 	mov	r23,r4
 800ba38:	2c20703a 	and	r16,r5,r16
 800ba3c:	a827883a 	mov	r19,r21
 800ba40:	aa403fcc 	andi	r9,r21,255
 800ba44:	a0005926 	beq	r20,zero,800bbac <__muldf3+0x1bc>
 800ba48:	0081ffc4 	movi	r2,2047
 800ba4c:	a0803426 	beq	r20,r2,800bb20 <__muldf3+0x130>
 800ba50:	84000434 	orhi	r16,r16,16
 800ba54:	2004d77a 	srli	r2,r4,29
 800ba58:	802090fa 	slli	r16,r16,3
 800ba5c:	202e90fa 	slli	r23,r4,3
 800ba60:	a53f0044 	addi	r20,r20,-1023
 800ba64:	80a0b03a 	or	r16,r16,r2
 800ba68:	000b883a 	mov	r5,zero
 800ba6c:	0039883a 	mov	fp,zero
 800ba70:	3806d53a 	srli	r3,r7,20
 800ba74:	382cd7fa 	srli	r22,r7,31
 800ba78:	00800434 	movhi	r2,16
 800ba7c:	10bfffc4 	addi	r2,r2,-1
 800ba80:	18c1ffcc 	andi	r3,r3,2047
 800ba84:	3025883a 	mov	r18,r6
 800ba88:	38a2703a 	and	r17,r7,r2
 800ba8c:	b2803fcc 	andi	r10,r22,255
 800ba90:	18006426 	beq	r3,zero,800bc24 <__muldf3+0x234>
 800ba94:	0081ffc4 	movi	r2,2047
 800ba98:	18805c26 	beq	r3,r2,800bc0c <__muldf3+0x21c>
 800ba9c:	8c400434 	orhi	r17,r17,16
 800baa0:	3004d77a 	srli	r2,r6,29
 800baa4:	882290fa 	slli	r17,r17,3
 800baa8:	302490fa 	slli	r18,r6,3
 800baac:	18ff0044 	addi	r3,r3,-1023
 800bab0:	88a2b03a 	or	r17,r17,r2
 800bab4:	000f883a 	mov	r7,zero
 800bab8:	394ab03a 	or	r5,r7,r5
 800babc:	280a90ba 	slli	r5,r5,2
 800bac0:	00820074 	movhi	r2,2049
 800bac4:	10aeb804 	addi	r2,r2,-17696
 800bac8:	288b883a 	add	r5,r5,r2
 800bacc:	28800017 	ldw	r2,0(r5)
 800bad0:	a0c7883a 	add	r3,r20,r3
 800bad4:	b54cf03a 	xor	r6,r22,r21
 800bad8:	1a000044 	addi	r8,r3,1
 800badc:	1000683a 	jmp	r2
 800bae0:	0800bd24 	muli	zero,at,756
 800bae4:	0800bd10 	cmplti	zero,at,756
 800bae8:	0800bd10 	cmplti	zero,at,756
 800baec:	0800bcfc 	xorhi	zero,at,755
 800baf0:	0800bb3c 	xorhi	zero,at,748
 800baf4:	0800bb3c 	xorhi	zero,at,748
 800baf8:	0800bce4 	muli	zero,at,755
 800bafc:	0800bcfc 	xorhi	zero,at,755
 800bb00:	0800bb3c 	xorhi	zero,at,748
 800bb04:	0800bce4 	muli	zero,at,755
 800bb08:	0800bb3c 	xorhi	zero,at,748
 800bb0c:	0800bcfc 	xorhi	zero,at,755
 800bb10:	0800bb40 	call	800bb4 <__alt_mem_onchip_memory2_0+0x800bb4>
 800bb14:	0800bb40 	call	800bb4 <__alt_mem_onchip_memory2_0+0x800bb4>
 800bb18:	0800bb40 	call	800bb4 <__alt_mem_onchip_memory2_0+0x800bb4>
 800bb1c:	0800c060 	cmpeqi	zero,at,769
 800bb20:	8104b03a 	or	r2,r16,r4
 800bb24:	10006c1e 	bne	r2,zero,800bcd8 <__muldf3+0x2e8>
 800bb28:	01400204 	movi	r5,8
 800bb2c:	0021883a 	mov	r16,zero
 800bb30:	002f883a 	mov	r23,zero
 800bb34:	07000084 	movi	fp,2
 800bb38:	003fcd06 	br	800ba70 <__alt_data_end+0xfc00ba70>
 800bb3c:	3013883a 	mov	r9,r6
 800bb40:	00800084 	movi	r2,2
 800bb44:	e080501e 	bne	fp,r2,800bc88 <__muldf3+0x298>
 800bb48:	4cc0004c 	andi	r19,r9,1
 800bb4c:	0101ffc4 	movi	r4,2047
 800bb50:	0021883a 	mov	r16,zero
 800bb54:	002f883a 	mov	r23,zero
 800bb58:	2008953a 	slli	r4,r4,20
 800bb5c:	98c03fcc 	andi	r3,r19,255
 800bb60:	04400434 	movhi	r17,16
 800bb64:	8c7fffc4 	addi	r17,r17,-1
 800bb68:	180697fa 	slli	r3,r3,31
 800bb6c:	8460703a 	and	r16,r16,r17
 800bb70:	8120b03a 	or	r16,r16,r4
 800bb74:	80c6b03a 	or	r3,r16,r3
 800bb78:	b805883a 	mov	r2,r23
 800bb7c:	dfc01117 	ldw	ra,68(sp)
 800bb80:	df001017 	ldw	fp,64(sp)
 800bb84:	ddc00f17 	ldw	r23,60(sp)
 800bb88:	dd800e17 	ldw	r22,56(sp)
 800bb8c:	dd400d17 	ldw	r21,52(sp)
 800bb90:	dd000c17 	ldw	r20,48(sp)
 800bb94:	dcc00b17 	ldw	r19,44(sp)
 800bb98:	dc800a17 	ldw	r18,40(sp)
 800bb9c:	dc400917 	ldw	r17,36(sp)
 800bba0:	dc000817 	ldw	r16,32(sp)
 800bba4:	dec01204 	addi	sp,sp,72
 800bba8:	f800283a 	ret
 800bbac:	8104b03a 	or	r2,r16,r4
 800bbb0:	10004426 	beq	r2,zero,800bcc4 <__muldf3+0x2d4>
 800bbb4:	80014b26 	beq	r16,zero,800c0e4 <__muldf3+0x6f4>
 800bbb8:	8009883a 	mov	r4,r16
 800bbbc:	d9800715 	stw	r6,28(sp)
 800bbc0:	d9c00215 	stw	r7,8(sp)
 800bbc4:	da400415 	stw	r9,16(sp)
 800bbc8:	800cf2c0 	call	800cf2c <__clzsi2>
 800bbcc:	d9800717 	ldw	r6,28(sp)
 800bbd0:	d9c00217 	ldw	r7,8(sp)
 800bbd4:	da400417 	ldw	r9,16(sp)
 800bbd8:	1007883a 	mov	r3,r2
 800bbdc:	01000a04 	movi	r4,40
 800bbe0:	1dfffe04 	addi	r23,r3,-8
 800bbe4:	20c9c83a 	sub	r4,r4,r3
 800bbe8:	85e0983a 	sll	r16,r16,r23
 800bbec:	9108d83a 	srl	r4,r18,r4
 800bbf0:	95ee983a 	sll	r23,r18,r23
 800bbf4:	2420b03a 	or	r16,r4,r16
 800bbf8:	053f0344 	movi	r20,-1011
 800bbfc:	a0e9c83a 	sub	r20,r20,r3
 800bc00:	000b883a 	mov	r5,zero
 800bc04:	0039883a 	mov	fp,zero
 800bc08:	003f9906 	br	800ba70 <__alt_data_end+0xfc00ba70>
 800bc0c:	8984b03a 	or	r2,r17,r6
 800bc10:	10002a1e 	bne	r2,zero,800bcbc <__muldf3+0x2cc>
 800bc14:	0023883a 	mov	r17,zero
 800bc18:	0025883a 	mov	r18,zero
 800bc1c:	01c00084 	movi	r7,2
 800bc20:	003fa506 	br	800bab8 <__alt_data_end+0xfc00bab8>
 800bc24:	8984b03a 	or	r2,r17,r6
 800bc28:	10002026 	beq	r2,zero,800bcac <__muldf3+0x2bc>
 800bc2c:	88011c26 	beq	r17,zero,800c0a0 <__muldf3+0x6b0>
 800bc30:	8809883a 	mov	r4,r17
 800bc34:	d9400215 	stw	r5,8(sp)
 800bc38:	d9800715 	stw	r6,28(sp)
 800bc3c:	da400415 	stw	r9,16(sp)
 800bc40:	da800315 	stw	r10,12(sp)
 800bc44:	800cf2c0 	call	800cf2c <__clzsi2>
 800bc48:	d9400217 	ldw	r5,8(sp)
 800bc4c:	d9800717 	ldw	r6,28(sp)
 800bc50:	da400417 	ldw	r9,16(sp)
 800bc54:	da800317 	ldw	r10,12(sp)
 800bc58:	1007883a 	mov	r3,r2
 800bc5c:	01000a04 	movi	r4,40
 800bc60:	1cbffe04 	addi	r18,r3,-8
 800bc64:	20c9c83a 	sub	r4,r4,r3
 800bc68:	8ca2983a 	sll	r17,r17,r18
 800bc6c:	3108d83a 	srl	r4,r6,r4
 800bc70:	34a4983a 	sll	r18,r6,r18
 800bc74:	2462b03a 	or	r17,r4,r17
 800bc78:	00bf0344 	movi	r2,-1011
 800bc7c:	10c7c83a 	sub	r3,r2,r3
 800bc80:	000f883a 	mov	r7,zero
 800bc84:	003f8c06 	br	800bab8 <__alt_data_end+0xfc00bab8>
 800bc88:	008000c4 	movi	r2,3
 800bc8c:	e0816d26 	beq	fp,r2,800c244 <__muldf3+0x854>
 800bc90:	00800044 	movi	r2,1
 800bc94:	e081321e 	bne	fp,r2,800c160 <__muldf3+0x770>
 800bc98:	48a6703a 	and	r19,r9,r2
 800bc9c:	0009883a 	mov	r4,zero
 800bca0:	0021883a 	mov	r16,zero
 800bca4:	002f883a 	mov	r23,zero
 800bca8:	003fab06 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800bcac:	0023883a 	mov	r17,zero
 800bcb0:	0025883a 	mov	r18,zero
 800bcb4:	01c00044 	movi	r7,1
 800bcb8:	003f7f06 	br	800bab8 <__alt_data_end+0xfc00bab8>
 800bcbc:	01c000c4 	movi	r7,3
 800bcc0:	003f7d06 	br	800bab8 <__alt_data_end+0xfc00bab8>
 800bcc4:	01400104 	movi	r5,4
 800bcc8:	0021883a 	mov	r16,zero
 800bccc:	002f883a 	mov	r23,zero
 800bcd0:	07000044 	movi	fp,1
 800bcd4:	003f6606 	br	800ba70 <__alt_data_end+0xfc00ba70>
 800bcd8:	01400304 	movi	r5,12
 800bcdc:	070000c4 	movi	fp,3
 800bce0:	003f6306 	br	800ba70 <__alt_data_end+0xfc00ba70>
 800bce4:	04000434 	movhi	r16,16
 800bce8:	0027883a 	mov	r19,zero
 800bcec:	843fffc4 	addi	r16,r16,-1
 800bcf0:	05ffffc4 	movi	r23,-1
 800bcf4:	0101ffc4 	movi	r4,2047
 800bcf8:	003f9706 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800bcfc:	8821883a 	mov	r16,r17
 800bd00:	902f883a 	mov	r23,r18
 800bd04:	5013883a 	mov	r9,r10
 800bd08:	3839883a 	mov	fp,r7
 800bd0c:	003f8c06 	br	800bb40 <__alt_data_end+0xfc00bb40>
 800bd10:	8821883a 	mov	r16,r17
 800bd14:	902f883a 	mov	r23,r18
 800bd18:	3013883a 	mov	r9,r6
 800bd1c:	3839883a 	mov	fp,r7
 800bd20:	003f8706 	br	800bb40 <__alt_data_end+0xfc00bb40>
 800bd24:	b82ad43a 	srli	r21,r23,16
 800bd28:	9038d43a 	srli	fp,r18,16
 800bd2c:	bdffffcc 	andi	r23,r23,65535
 800bd30:	94bfffcc 	andi	r18,r18,65535
 800bd34:	9009883a 	mov	r4,r18
 800bd38:	b80b883a 	mov	r5,r23
 800bd3c:	d8c00515 	stw	r3,20(sp)
 800bd40:	d9800715 	stw	r6,28(sp)
 800bd44:	da000615 	stw	r8,24(sp)
 800bd48:	8009fe40 	call	8009fe4 <__mulsi3>
 800bd4c:	9009883a 	mov	r4,r18
 800bd50:	a80b883a 	mov	r5,r21
 800bd54:	1029883a 	mov	r20,r2
 800bd58:	8009fe40 	call	8009fe4 <__mulsi3>
 800bd5c:	e009883a 	mov	r4,fp
 800bd60:	a80b883a 	mov	r5,r21
 800bd64:	102d883a 	mov	r22,r2
 800bd68:	8009fe40 	call	8009fe4 <__mulsi3>
 800bd6c:	e009883a 	mov	r4,fp
 800bd70:	b80b883a 	mov	r5,r23
 800bd74:	1027883a 	mov	r19,r2
 800bd78:	8009fe40 	call	8009fe4 <__mulsi3>
 800bd7c:	a008d43a 	srli	r4,r20,16
 800bd80:	b085883a 	add	r2,r22,r2
 800bd84:	d8c00517 	ldw	r3,20(sp)
 800bd88:	110f883a 	add	r7,r2,r4
 800bd8c:	d9800717 	ldw	r6,28(sp)
 800bd90:	da000617 	ldw	r8,24(sp)
 800bd94:	3d80022e 	bgeu	r7,r22,800bda0 <__muldf3+0x3b0>
 800bd98:	00800074 	movhi	r2,1
 800bd9c:	98a7883a 	add	r19,r19,r2
 800bda0:	3804943a 	slli	r2,r7,16
 800bda4:	380ed43a 	srli	r7,r7,16
 800bda8:	882cd43a 	srli	r22,r17,16
 800bdac:	a53fffcc 	andi	r20,r20,65535
 800bdb0:	8c7fffcc 	andi	r17,r17,65535
 800bdb4:	1529883a 	add	r20,r2,r20
 800bdb8:	8809883a 	mov	r4,r17
 800bdbc:	b80b883a 	mov	r5,r23
 800bdc0:	d8c00515 	stw	r3,20(sp)
 800bdc4:	d9800715 	stw	r6,28(sp)
 800bdc8:	da000615 	stw	r8,24(sp)
 800bdcc:	d9c00015 	stw	r7,0(sp)
 800bdd0:	dd000115 	stw	r20,4(sp)
 800bdd4:	8009fe40 	call	8009fe4 <__mulsi3>
 800bdd8:	a80b883a 	mov	r5,r21
 800bddc:	8809883a 	mov	r4,r17
 800bde0:	d8800415 	stw	r2,16(sp)
 800bde4:	8009fe40 	call	8009fe4 <__mulsi3>
 800bde8:	a80b883a 	mov	r5,r21
 800bdec:	b009883a 	mov	r4,r22
 800bdf0:	1029883a 	mov	r20,r2
 800bdf4:	8009fe40 	call	8009fe4 <__mulsi3>
 800bdf8:	b009883a 	mov	r4,r22
 800bdfc:	b80b883a 	mov	r5,r23
 800be00:	102b883a 	mov	r21,r2
 800be04:	8009fe40 	call	8009fe4 <__mulsi3>
 800be08:	da400417 	ldw	r9,16(sp)
 800be0c:	a085883a 	add	r2,r20,r2
 800be10:	d8c00517 	ldw	r3,20(sp)
 800be14:	4808d43a 	srli	r4,r9,16
 800be18:	d9800717 	ldw	r6,28(sp)
 800be1c:	da000617 	ldw	r8,24(sp)
 800be20:	1109883a 	add	r4,r2,r4
 800be24:	2500022e 	bgeu	r4,r20,800be30 <__muldf3+0x440>
 800be28:	00800074 	movhi	r2,1
 800be2c:	a8ab883a 	add	r21,r21,r2
 800be30:	200e943a 	slli	r7,r4,16
 800be34:	2004d43a 	srli	r2,r4,16
 800be38:	802ed43a 	srli	r23,r16,16
 800be3c:	843fffcc 	andi	r16,r16,65535
 800be40:	4d3fffcc 	andi	r20,r9,65535
 800be44:	9009883a 	mov	r4,r18
 800be48:	800b883a 	mov	r5,r16
 800be4c:	3d29883a 	add	r20,r7,r20
 800be50:	d8c00515 	stw	r3,20(sp)
 800be54:	d9800715 	stw	r6,28(sp)
 800be58:	da000615 	stw	r8,24(sp)
 800be5c:	a8ab883a 	add	r21,r21,r2
 800be60:	8009fe40 	call	8009fe4 <__mulsi3>
 800be64:	9009883a 	mov	r4,r18
 800be68:	b80b883a 	mov	r5,r23
 800be6c:	d8800315 	stw	r2,12(sp)
 800be70:	8009fe40 	call	8009fe4 <__mulsi3>
 800be74:	e009883a 	mov	r4,fp
 800be78:	b80b883a 	mov	r5,r23
 800be7c:	1025883a 	mov	r18,r2
 800be80:	8009fe40 	call	8009fe4 <__mulsi3>
 800be84:	e009883a 	mov	r4,fp
 800be88:	800b883a 	mov	r5,r16
 800be8c:	d8800215 	stw	r2,8(sp)
 800be90:	8009fe40 	call	8009fe4 <__mulsi3>
 800be94:	da800317 	ldw	r10,12(sp)
 800be98:	d9400017 	ldw	r5,0(sp)
 800be9c:	9085883a 	add	r2,r18,r2
 800bea0:	5008d43a 	srli	r4,r10,16
 800bea4:	a153883a 	add	r9,r20,r5
 800bea8:	d8c00517 	ldw	r3,20(sp)
 800beac:	1109883a 	add	r4,r2,r4
 800beb0:	d9800717 	ldw	r6,28(sp)
 800beb4:	da000617 	ldw	r8,24(sp)
 800beb8:	dac00217 	ldw	r11,8(sp)
 800bebc:	2480022e 	bgeu	r4,r18,800bec8 <__muldf3+0x4d8>
 800bec0:	00800074 	movhi	r2,1
 800bec4:	5897883a 	add	r11,r11,r2
 800bec8:	200e943a 	slli	r7,r4,16
 800becc:	2038d43a 	srli	fp,r4,16
 800bed0:	52bfffcc 	andi	r10,r10,65535
 800bed4:	3a8f883a 	add	r7,r7,r10
 800bed8:	8809883a 	mov	r4,r17
 800bedc:	800b883a 	mov	r5,r16
 800bee0:	d8c00515 	stw	r3,20(sp)
 800bee4:	d9800715 	stw	r6,28(sp)
 800bee8:	d9c00215 	stw	r7,8(sp)
 800beec:	da000615 	stw	r8,24(sp)
 800bef0:	da400415 	stw	r9,16(sp)
 800bef4:	5f39883a 	add	fp,r11,fp
 800bef8:	8009fe40 	call	8009fe4 <__mulsi3>
 800befc:	8809883a 	mov	r4,r17
 800bf00:	b80b883a 	mov	r5,r23
 800bf04:	1025883a 	mov	r18,r2
 800bf08:	8009fe40 	call	8009fe4 <__mulsi3>
 800bf0c:	b009883a 	mov	r4,r22
 800bf10:	b80b883a 	mov	r5,r23
 800bf14:	d8800315 	stw	r2,12(sp)
 800bf18:	8009fe40 	call	8009fe4 <__mulsi3>
 800bf1c:	b009883a 	mov	r4,r22
 800bf20:	800b883a 	mov	r5,r16
 800bf24:	1023883a 	mov	r17,r2
 800bf28:	8009fe40 	call	8009fe4 <__mulsi3>
 800bf2c:	da800317 	ldw	r10,12(sp)
 800bf30:	9008d43a 	srli	r4,r18,16
 800bf34:	d8c00517 	ldw	r3,20(sp)
 800bf38:	5085883a 	add	r2,r10,r2
 800bf3c:	1109883a 	add	r4,r2,r4
 800bf40:	d9800717 	ldw	r6,28(sp)
 800bf44:	d9c00217 	ldw	r7,8(sp)
 800bf48:	da000617 	ldw	r8,24(sp)
 800bf4c:	da400417 	ldw	r9,16(sp)
 800bf50:	2280022e 	bgeu	r4,r10,800bf5c <__muldf3+0x56c>
 800bf54:	00800074 	movhi	r2,1
 800bf58:	88a3883a 	add	r17,r17,r2
 800bf5c:	2004943a 	slli	r2,r4,16
 800bf60:	94bfffcc 	andi	r18,r18,65535
 800bf64:	4ce7883a 	add	r19,r9,r19
 800bf68:	14a5883a 	add	r18,r2,r18
 800bf6c:	9d29803a 	cmpltu	r20,r19,r20
 800bf70:	9565883a 	add	r18,r18,r21
 800bf74:	9505883a 	add	r2,r18,r20
 800bf78:	99e7883a 	add	r19,r19,r7
 800bf7c:	99cf803a 	cmpltu	r7,r19,r7
 800bf80:	e08b883a 	add	r5,fp,r2
 800bf84:	2008d43a 	srli	r4,r4,16
 800bf88:	29ef883a 	add	r23,r5,r7
 800bf8c:	1529803a 	cmpltu	r20,r2,r20
 800bf90:	956b803a 	cmpltu	r21,r18,r21
 800bf94:	b9cf803a 	cmpltu	r7,r23,r7
 800bf98:	a564b03a 	or	r18,r20,r21
 800bf9c:	2f39803a 	cmpltu	fp,r5,fp
 800bfa0:	9125883a 	add	r18,r18,r4
 800bfa4:	3f38b03a 	or	fp,r7,fp
 800bfa8:	9725883a 	add	r18,r18,fp
 800bfac:	9804927a 	slli	r2,r19,9
 800bfb0:	9463883a 	add	r17,r18,r17
 800bfb4:	d9000117 	ldw	r4,4(sp)
 800bfb8:	b820d5fa 	srli	r16,r23,23
 800bfbc:	8822927a 	slli	r17,r17,9
 800bfc0:	9826d5fa 	srli	r19,r19,23
 800bfc4:	1104b03a 	or	r2,r2,r4
 800bfc8:	b82e927a 	slli	r23,r23,9
 800bfcc:	1004c03a 	cmpne	r2,r2,zero
 800bfd0:	8c20b03a 	or	r16,r17,r16
 800bfd4:	14e6b03a 	or	r19,r2,r19
 800bfd8:	8080402c 	andhi	r2,r16,256
 800bfdc:	9deeb03a 	or	r23,r19,r23
 800bfe0:	10000726 	beq	r2,zero,800c000 <__muldf3+0x610>
 800bfe4:	b804d07a 	srli	r2,r23,1
 800bfe8:	800697fa 	slli	r3,r16,31
 800bfec:	bdc0004c 	andi	r23,r23,1
 800bff0:	8020d07a 	srli	r16,r16,1
 800bff4:	b8aeb03a 	or	r23,r23,r2
 800bff8:	b8eeb03a 	or	r23,r23,r3
 800bffc:	4007883a 	mov	r3,r8
 800c000:	1900ffc4 	addi	r4,r3,1023
 800c004:	01004d0e 	bge	zero,r4,800c13c <__muldf3+0x74c>
 800c008:	b88001cc 	andi	r2,r23,7
 800c00c:	10000726 	beq	r2,zero,800c02c <__muldf3+0x63c>
 800c010:	b94003cc 	andi	r5,r23,15
 800c014:	00800104 	movi	r2,4
 800c018:	28800426 	beq	r5,r2,800c02c <__muldf3+0x63c>
 800c01c:	b885883a 	add	r2,r23,r2
 800c020:	15ef803a 	cmpltu	r23,r2,r23
 800c024:	85e1883a 	add	r16,r16,r23
 800c028:	102f883a 	mov	r23,r2
 800c02c:	8080402c 	andhi	r2,r16,256
 800c030:	10000426 	beq	r2,zero,800c044 <__muldf3+0x654>
 800c034:	00bfc034 	movhi	r2,65280
 800c038:	10bfffc4 	addi	r2,r2,-1
 800c03c:	19010004 	addi	r4,r3,1024
 800c040:	80a0703a 	and	r16,r16,r2
 800c044:	0081ff84 	movi	r2,2046
 800c048:	1100340e 	bge	r2,r4,800c11c <__muldf3+0x72c>
 800c04c:	34c0004c 	andi	r19,r6,1
 800c050:	0101ffc4 	movi	r4,2047
 800c054:	0021883a 	mov	r16,zero
 800c058:	002f883a 	mov	r23,zero
 800c05c:	003ebe06 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800c060:	8080022c 	andhi	r2,r16,8
 800c064:	10000926 	beq	r2,zero,800c08c <__muldf3+0x69c>
 800c068:	8880022c 	andhi	r2,r17,8
 800c06c:	1000071e 	bne	r2,zero,800c08c <__muldf3+0x69c>
 800c070:	00800434 	movhi	r2,16
 800c074:	8c000234 	orhi	r16,r17,8
 800c078:	10bfffc4 	addi	r2,r2,-1
 800c07c:	b027883a 	mov	r19,r22
 800c080:	80a0703a 	and	r16,r16,r2
 800c084:	902f883a 	mov	r23,r18
 800c088:	003f1a06 	br	800bcf4 <__alt_data_end+0xfc00bcf4>
 800c08c:	00800434 	movhi	r2,16
 800c090:	84000234 	orhi	r16,r16,8
 800c094:	10bfffc4 	addi	r2,r2,-1
 800c098:	80a0703a 	and	r16,r16,r2
 800c09c:	003f1506 	br	800bcf4 <__alt_data_end+0xfc00bcf4>
 800c0a0:	3009883a 	mov	r4,r6
 800c0a4:	d9400215 	stw	r5,8(sp)
 800c0a8:	d9800715 	stw	r6,28(sp)
 800c0ac:	da400415 	stw	r9,16(sp)
 800c0b0:	da800315 	stw	r10,12(sp)
 800c0b4:	800cf2c0 	call	800cf2c <__clzsi2>
 800c0b8:	10c00804 	addi	r3,r2,32
 800c0bc:	010009c4 	movi	r4,39
 800c0c0:	d9400217 	ldw	r5,8(sp)
 800c0c4:	d9800717 	ldw	r6,28(sp)
 800c0c8:	da400417 	ldw	r9,16(sp)
 800c0cc:	da800317 	ldw	r10,12(sp)
 800c0d0:	20fee20e 	bge	r4,r3,800bc5c <__alt_data_end+0xfc00bc5c>
 800c0d4:	147ffe04 	addi	r17,r2,-8
 800c0d8:	9462983a 	sll	r17,r18,r17
 800c0dc:	0025883a 	mov	r18,zero
 800c0e0:	003ee506 	br	800bc78 <__alt_data_end+0xfc00bc78>
 800c0e4:	d9800715 	stw	r6,28(sp)
 800c0e8:	d9c00215 	stw	r7,8(sp)
 800c0ec:	da400415 	stw	r9,16(sp)
 800c0f0:	800cf2c0 	call	800cf2c <__clzsi2>
 800c0f4:	10c00804 	addi	r3,r2,32
 800c0f8:	010009c4 	movi	r4,39
 800c0fc:	d9800717 	ldw	r6,28(sp)
 800c100:	d9c00217 	ldw	r7,8(sp)
 800c104:	da400417 	ldw	r9,16(sp)
 800c108:	20feb40e 	bge	r4,r3,800bbdc <__alt_data_end+0xfc00bbdc>
 800c10c:	143ffe04 	addi	r16,r2,-8
 800c110:	9420983a 	sll	r16,r18,r16
 800c114:	002f883a 	mov	r23,zero
 800c118:	003eb706 	br	800bbf8 <__alt_data_end+0xfc00bbf8>
 800c11c:	8004977a 	slli	r2,r16,29
 800c120:	b82ed0fa 	srli	r23,r23,3
 800c124:	8020927a 	slli	r16,r16,9
 800c128:	2101ffcc 	andi	r4,r4,2047
 800c12c:	15eeb03a 	or	r23,r2,r23
 800c130:	8020d33a 	srli	r16,r16,12
 800c134:	34c0004c 	andi	r19,r6,1
 800c138:	003e8706 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800c13c:	00bf0084 	movi	r2,-1022
 800c140:	10c5c83a 	sub	r2,r2,r3
 800c144:	01000e04 	movi	r4,56
 800c148:	2080080e 	bge	r4,r2,800c16c <__muldf3+0x77c>
 800c14c:	34c0004c 	andi	r19,r6,1
 800c150:	0009883a 	mov	r4,zero
 800c154:	0021883a 	mov	r16,zero
 800c158:	002f883a 	mov	r23,zero
 800c15c:	003e7e06 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800c160:	4007883a 	mov	r3,r8
 800c164:	480d883a 	mov	r6,r9
 800c168:	003fa506 	br	800c000 <__alt_data_end+0xfc00c000>
 800c16c:	010007c4 	movi	r4,31
 800c170:	20801816 	blt	r4,r2,800c1d4 <__muldf3+0x7e4>
 800c174:	18c10784 	addi	r3,r3,1054
 800c178:	80c8983a 	sll	r4,r16,r3
 800c17c:	b88ad83a 	srl	r5,r23,r2
 800c180:	b8c6983a 	sll	r3,r23,r3
 800c184:	80a0d83a 	srl	r16,r16,r2
 800c188:	2908b03a 	or	r4,r5,r4
 800c18c:	1804c03a 	cmpne	r2,r3,zero
 800c190:	2088b03a 	or	r4,r4,r2
 800c194:	208001cc 	andi	r2,r4,7
 800c198:	10000726 	beq	r2,zero,800c1b8 <__muldf3+0x7c8>
 800c19c:	20c003cc 	andi	r3,r4,15
 800c1a0:	00800104 	movi	r2,4
 800c1a4:	18800426 	beq	r3,r2,800c1b8 <__muldf3+0x7c8>
 800c1a8:	20c00104 	addi	r3,r4,4
 800c1ac:	1905803a 	cmpltu	r2,r3,r4
 800c1b0:	80a1883a 	add	r16,r16,r2
 800c1b4:	1809883a 	mov	r4,r3
 800c1b8:	8080202c 	andhi	r2,r16,128
 800c1bc:	10001b26 	beq	r2,zero,800c22c <__muldf3+0x83c>
 800c1c0:	34c0004c 	andi	r19,r6,1
 800c1c4:	01000044 	movi	r4,1
 800c1c8:	0021883a 	mov	r16,zero
 800c1cc:	002f883a 	mov	r23,zero
 800c1d0:	003e6106 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800c1d4:	013ef884 	movi	r4,-1054
 800c1d8:	20c9c83a 	sub	r4,r4,r3
 800c1dc:	01400804 	movi	r5,32
 800c1e0:	8108d83a 	srl	r4,r16,r4
 800c1e4:	11401526 	beq	r2,r5,800c23c <__muldf3+0x84c>
 800c1e8:	18c10f84 	addi	r3,r3,1086
 800c1ec:	80e0983a 	sll	r16,r16,r3
 800c1f0:	85eeb03a 	or	r23,r16,r23
 800c1f4:	b804c03a 	cmpne	r2,r23,zero
 800c1f8:	1108b03a 	or	r4,r2,r4
 800c1fc:	20c001cc 	andi	r3,r4,7
 800c200:	1800061e 	bne	r3,zero,800c21c <__muldf3+0x82c>
 800c204:	0021883a 	mov	r16,zero
 800c208:	202ed0fa 	srli	r23,r4,3
 800c20c:	34c0004c 	andi	r19,r6,1
 800c210:	0009883a 	mov	r4,zero
 800c214:	b8eeb03a 	or	r23,r23,r3
 800c218:	003e4f06 	br	800bb58 <__alt_data_end+0xfc00bb58>
 800c21c:	20c003cc 	andi	r3,r4,15
 800c220:	00800104 	movi	r2,4
 800c224:	0021883a 	mov	r16,zero
 800c228:	18bfdf1e 	bne	r3,r2,800c1a8 <__alt_data_end+0xfc00c1a8>
 800c22c:	8004927a 	slli	r2,r16,9
 800c230:	8006977a 	slli	r3,r16,29
 800c234:	1020d33a 	srli	r16,r2,12
 800c238:	003ff306 	br	800c208 <__alt_data_end+0xfc00c208>
 800c23c:	0021883a 	mov	r16,zero
 800c240:	003feb06 	br	800c1f0 <__alt_data_end+0xfc00c1f0>
 800c244:	00800434 	movhi	r2,16
 800c248:	84000234 	orhi	r16,r16,8
 800c24c:	10bfffc4 	addi	r2,r2,-1
 800c250:	4cc0004c 	andi	r19,r9,1
 800c254:	80a0703a 	and	r16,r16,r2
 800c258:	003ea606 	br	800bcf4 <__alt_data_end+0xfc00bcf4>

0800c25c <__subdf3>:
 800c25c:	00c00434 	movhi	r3,16
 800c260:	18ffffc4 	addi	r3,r3,-1
 800c264:	defffb04 	addi	sp,sp,-20
 800c268:	28d2703a 	and	r9,r5,r3
 800c26c:	3814d53a 	srli	r10,r7,20
 800c270:	38c6703a 	and	r3,r7,r3
 800c274:	3004d77a 	srli	r2,r6,29
 800c278:	dc800215 	stw	r18,8(sp)
 800c27c:	dc000015 	stw	r16,0(sp)
 800c280:	2824d7fa 	srli	r18,r5,31
 800c284:	2820d53a 	srli	r16,r5,20
 800c288:	481290fa 	slli	r9,r9,3
 800c28c:	200ad77a 	srli	r5,r4,29
 800c290:	180690fa 	slli	r3,r3,3
 800c294:	dc400115 	stw	r17,4(sp)
 800c298:	dfc00415 	stw	ra,16(sp)
 800c29c:	202290fa 	slli	r17,r4,3
 800c2a0:	dcc00315 	stw	r19,12(sp)
 800c2a4:	5281ffcc 	andi	r10,r10,2047
 800c2a8:	0101ffc4 	movi	r4,2047
 800c2ac:	9011883a 	mov	r8,r18
 800c2b0:	8401ffcc 	andi	r16,r16,2047
 800c2b4:	94803fcc 	andi	r18,r18,255
 800c2b8:	494ab03a 	or	r5,r9,r5
 800c2bc:	380ed7fa 	srli	r7,r7,31
 800c2c0:	1886b03a 	or	r3,r3,r2
 800c2c4:	300c90fa 	slli	r6,r6,3
 800c2c8:	51009026 	beq	r10,r4,800c50c <__subdf3+0x2b0>
 800c2cc:	39c0005c 	xori	r7,r7,1
 800c2d0:	8285c83a 	sub	r2,r16,r10
 800c2d4:	91c06f26 	beq	r18,r7,800c494 <__subdf3+0x238>
 800c2d8:	0080b10e 	bge	zero,r2,800c5a0 <__subdf3+0x344>
 800c2dc:	50002a1e 	bne	r10,zero,800c388 <__subdf3+0x12c>
 800c2e0:	1988b03a 	or	r4,r3,r6
 800c2e4:	2000941e 	bne	r4,zero,800c538 <__subdf3+0x2dc>
 800c2e8:	888001cc 	andi	r2,r17,7
 800c2ec:	10005b26 	beq	r2,zero,800c45c <__subdf3+0x200>
 800c2f0:	88c003cc 	andi	r3,r17,15
 800c2f4:	00800104 	movi	r2,4
 800c2f8:	18805826 	beq	r3,r2,800c45c <__subdf3+0x200>
 800c2fc:	88c00104 	addi	r3,r17,4
 800c300:	1c63803a 	cmpltu	r17,r3,r17
 800c304:	2c4b883a 	add	r5,r5,r17
 800c308:	2880202c 	andhi	r2,r5,128
 800c30c:	9200004c 	andi	r8,r18,1
 800c310:	1823883a 	mov	r17,r3
 800c314:	10005426 	beq	r2,zero,800c468 <__subdf3+0x20c>
 800c318:	84000044 	addi	r16,r16,1
 800c31c:	0081ffc4 	movi	r2,2047
 800c320:	8080bf26 	beq	r16,r2,800c620 <__subdf3+0x3c4>
 800c324:	013fe034 	movhi	r4,65408
 800c328:	213fffc4 	addi	r4,r4,-1
 800c32c:	290a703a 	and	r5,r5,r4
 800c330:	2804977a 	slli	r2,r5,29
 800c334:	280a927a 	slli	r5,r5,9
 800c338:	8822d0fa 	srli	r17,r17,3
 800c33c:	8401ffcc 	andi	r16,r16,2047
 800c340:	2808d33a 	srli	r4,r5,12
 800c344:	1444b03a 	or	r2,r2,r17
 800c348:	8401ffcc 	andi	r16,r16,2047
 800c34c:	800a953a 	slli	r5,r16,20
 800c350:	40c03fcc 	andi	r3,r8,255
 800c354:	04000434 	movhi	r16,16
 800c358:	180697fa 	slli	r3,r3,31
 800c35c:	843fffc4 	addi	r16,r16,-1
 800c360:	2420703a 	and	r16,r4,r16
 800c364:	8160b03a 	or	r16,r16,r5
 800c368:	80c6b03a 	or	r3,r16,r3
 800c36c:	dfc00417 	ldw	ra,16(sp)
 800c370:	dcc00317 	ldw	r19,12(sp)
 800c374:	dc800217 	ldw	r18,8(sp)
 800c378:	dc400117 	ldw	r17,4(sp)
 800c37c:	dc000017 	ldw	r16,0(sp)
 800c380:	dec00504 	addi	sp,sp,20
 800c384:	f800283a 	ret
 800c388:	0101ffc4 	movi	r4,2047
 800c38c:	813fd626 	beq	r16,r4,800c2e8 <__alt_data_end+0xfc00c2e8>
 800c390:	18c02034 	orhi	r3,r3,128
 800c394:	01000e04 	movi	r4,56
 800c398:	2080a416 	blt	r4,r2,800c62c <__subdf3+0x3d0>
 800c39c:	010007c4 	movi	r4,31
 800c3a0:	2080c716 	blt	r4,r2,800c6c0 <__subdf3+0x464>
 800c3a4:	01000804 	movi	r4,32
 800c3a8:	2089c83a 	sub	r4,r4,r2
 800c3ac:	1910983a 	sll	r8,r3,r4
 800c3b0:	308ed83a 	srl	r7,r6,r2
 800c3b4:	3108983a 	sll	r4,r6,r4
 800c3b8:	1884d83a 	srl	r2,r3,r2
 800c3bc:	41ccb03a 	or	r6,r8,r7
 800c3c0:	2008c03a 	cmpne	r4,r4,zero
 800c3c4:	310cb03a 	or	r6,r6,r4
 800c3c8:	898dc83a 	sub	r6,r17,r6
 800c3cc:	89a3803a 	cmpltu	r17,r17,r6
 800c3d0:	288bc83a 	sub	r5,r5,r2
 800c3d4:	2c4bc83a 	sub	r5,r5,r17
 800c3d8:	3023883a 	mov	r17,r6
 800c3dc:	2880202c 	andhi	r2,r5,128
 800c3e0:	10006b26 	beq	r2,zero,800c590 <__subdf3+0x334>
 800c3e4:	04c02034 	movhi	r19,128
 800c3e8:	9cffffc4 	addi	r19,r19,-1
 800c3ec:	2ce6703a 	and	r19,r5,r19
 800c3f0:	98007c26 	beq	r19,zero,800c5e4 <__subdf3+0x388>
 800c3f4:	9809883a 	mov	r4,r19
 800c3f8:	800cf2c0 	call	800cf2c <__clzsi2>
 800c3fc:	10fffe04 	addi	r3,r2,-8
 800c400:	010007c4 	movi	r4,31
 800c404:	20c07d16 	blt	r4,r3,800c5fc <__subdf3+0x3a0>
 800c408:	01400a04 	movi	r5,40
 800c40c:	2885c83a 	sub	r2,r5,r2
 800c410:	888ad83a 	srl	r5,r17,r2
 800c414:	98e6983a 	sll	r19,r19,r3
 800c418:	88e2983a 	sll	r17,r17,r3
 800c41c:	2ce6b03a 	or	r19,r5,r19
 800c420:	1c007a16 	blt	r3,r16,800c60c <__subdf3+0x3b0>
 800c424:	1c21c83a 	sub	r16,r3,r16
 800c428:	81400044 	addi	r5,r16,1
 800c42c:	00c007c4 	movi	r3,31
 800c430:	19409616 	blt	r3,r5,800c68c <__subdf3+0x430>
 800c434:	1c21c83a 	sub	r16,r3,r16
 800c438:	8c08983a 	sll	r4,r17,r16
 800c43c:	8946d83a 	srl	r3,r17,r5
 800c440:	9c20983a 	sll	r16,r19,r16
 800c444:	2008c03a 	cmpne	r4,r4,zero
 800c448:	994ad83a 	srl	r5,r19,r5
 800c44c:	1c06b03a 	or	r3,r3,r16
 800c450:	1922b03a 	or	r17,r3,r4
 800c454:	0021883a 	mov	r16,zero
 800c458:	003fa306 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c45c:	2880202c 	andhi	r2,r5,128
 800c460:	9200004c 	andi	r8,r18,1
 800c464:	103fac1e 	bne	r2,zero,800c318 <__alt_data_end+0xfc00c318>
 800c468:	2804977a 	slli	r2,r5,29
 800c46c:	8822d0fa 	srli	r17,r17,3
 800c470:	00c1ffc4 	movi	r3,2047
 800c474:	280ad0fa 	srli	r5,r5,3
 800c478:	1444b03a 	or	r2,r2,r17
 800c47c:	80c02726 	beq	r16,r3,800c51c <__subdf3+0x2c0>
 800c480:	01000434 	movhi	r4,16
 800c484:	213fffc4 	addi	r4,r4,-1
 800c488:	80e0703a 	and	r16,r16,r3
 800c48c:	2908703a 	and	r4,r5,r4
 800c490:	003fad06 	br	800c348 <__alt_data_end+0xfc00c348>
 800c494:	0080690e 	bge	zero,r2,800c63c <__subdf3+0x3e0>
 800c498:	50002f26 	beq	r10,zero,800c558 <__subdf3+0x2fc>
 800c49c:	0101ffc4 	movi	r4,2047
 800c4a0:	813f9126 	beq	r16,r4,800c2e8 <__alt_data_end+0xfc00c2e8>
 800c4a4:	18c02034 	orhi	r3,r3,128
 800c4a8:	01000e04 	movi	r4,56
 800c4ac:	2080b00e 	bge	r4,r2,800c770 <__subdf3+0x514>
 800c4b0:	198cb03a 	or	r6,r3,r6
 800c4b4:	300ec03a 	cmpne	r7,r6,zero
 800c4b8:	0005883a 	mov	r2,zero
 800c4bc:	3c4f883a 	add	r7,r7,r17
 800c4c0:	3c63803a 	cmpltu	r17,r7,r17
 800c4c4:	114b883a 	add	r5,r2,r5
 800c4c8:	2c4b883a 	add	r5,r5,r17
 800c4cc:	3823883a 	mov	r17,r7
 800c4d0:	2880202c 	andhi	r2,r5,128
 800c4d4:	10002e26 	beq	r2,zero,800c590 <__subdf3+0x334>
 800c4d8:	84000044 	addi	r16,r16,1
 800c4dc:	0081ffc4 	movi	r2,2047
 800c4e0:	8080de26 	beq	r16,r2,800c85c <__subdf3+0x600>
 800c4e4:	00bfe034 	movhi	r2,65408
 800c4e8:	10bfffc4 	addi	r2,r2,-1
 800c4ec:	288a703a 	and	r5,r5,r2
 800c4f0:	880cd07a 	srli	r6,r17,1
 800c4f4:	280897fa 	slli	r4,r5,31
 800c4f8:	88c0004c 	andi	r3,r17,1
 800c4fc:	30e2b03a 	or	r17,r6,r3
 800c500:	280ad07a 	srli	r5,r5,1
 800c504:	8922b03a 	or	r17,r17,r4
 800c508:	003f7706 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c50c:	1984b03a 	or	r2,r3,r6
 800c510:	103f6e26 	beq	r2,zero,800c2cc <__alt_data_end+0xfc00c2cc>
 800c514:	39c03fcc 	andi	r7,r7,255
 800c518:	003f6d06 	br	800c2d0 <__alt_data_end+0xfc00c2d0>
 800c51c:	1146b03a 	or	r3,r2,r5
 800c520:	18003f26 	beq	r3,zero,800c620 <__subdf3+0x3c4>
 800c524:	00c00434 	movhi	r3,16
 800c528:	29000234 	orhi	r4,r5,8
 800c52c:	18ffffc4 	addi	r3,r3,-1
 800c530:	20c8703a 	and	r4,r4,r3
 800c534:	003f8406 	br	800c348 <__alt_data_end+0xfc00c348>
 800c538:	10bfffc4 	addi	r2,r2,-1
 800c53c:	1000501e 	bne	r2,zero,800c680 <__subdf3+0x424>
 800c540:	898fc83a 	sub	r7,r17,r6
 800c544:	89e3803a 	cmpltu	r17,r17,r7
 800c548:	28cbc83a 	sub	r5,r5,r3
 800c54c:	2c4bc83a 	sub	r5,r5,r17
 800c550:	3823883a 	mov	r17,r7
 800c554:	003fa106 	br	800c3dc <__alt_data_end+0xfc00c3dc>
 800c558:	1988b03a 	or	r4,r3,r6
 800c55c:	203f6226 	beq	r4,zero,800c2e8 <__alt_data_end+0xfc00c2e8>
 800c560:	10bfffc4 	addi	r2,r2,-1
 800c564:	10009b1e 	bne	r2,zero,800c7d4 <__subdf3+0x578>
 800c568:	344d883a 	add	r6,r6,r17
 800c56c:	3463803a 	cmpltu	r17,r6,r17
 800c570:	194b883a 	add	r5,r3,r5
 800c574:	2c4b883a 	add	r5,r5,r17
 800c578:	3023883a 	mov	r17,r6
 800c57c:	003fd406 	br	800c4d0 <__alt_data_end+0xfc00c4d0>
 800c580:	1106b03a 	or	r3,r2,r4
 800c584:	1800b426 	beq	r3,zero,800c858 <__subdf3+0x5fc>
 800c588:	100b883a 	mov	r5,r2
 800c58c:	2023883a 	mov	r17,r4
 800c590:	888001cc 	andi	r2,r17,7
 800c594:	103f561e 	bne	r2,zero,800c2f0 <__alt_data_end+0xfc00c2f0>
 800c598:	9200004c 	andi	r8,r18,1
 800c59c:	003fb206 	br	800c468 <__alt_data_end+0xfc00c468>
 800c5a0:	1000531e 	bne	r2,zero,800c6f0 <__subdf3+0x494>
 800c5a4:	80800044 	addi	r2,r16,1
 800c5a8:	1081ffcc 	andi	r2,r2,2047
 800c5ac:	01000044 	movi	r4,1
 800c5b0:	2080a00e 	bge	r4,r2,800c834 <__subdf3+0x5d8>
 800c5b4:	8985c83a 	sub	r2,r17,r6
 800c5b8:	8889803a 	cmpltu	r4,r17,r2
 800c5bc:	28e7c83a 	sub	r19,r5,r3
 800c5c0:	9927c83a 	sub	r19,r19,r4
 800c5c4:	9900202c 	andhi	r4,r19,128
 800c5c8:	20006226 	beq	r4,zero,800c754 <__subdf3+0x4f8>
 800c5cc:	3463c83a 	sub	r17,r6,r17
 800c5d0:	194bc83a 	sub	r5,r3,r5
 800c5d4:	344d803a 	cmpltu	r6,r6,r17
 800c5d8:	29a7c83a 	sub	r19,r5,r6
 800c5dc:	3825883a 	mov	r18,r7
 800c5e0:	983f841e 	bne	r19,zero,800c3f4 <__alt_data_end+0xfc00c3f4>
 800c5e4:	8809883a 	mov	r4,r17
 800c5e8:	800cf2c0 	call	800cf2c <__clzsi2>
 800c5ec:	10800804 	addi	r2,r2,32
 800c5f0:	10fffe04 	addi	r3,r2,-8
 800c5f4:	010007c4 	movi	r4,31
 800c5f8:	20ff830e 	bge	r4,r3,800c408 <__alt_data_end+0xfc00c408>
 800c5fc:	14fff604 	addi	r19,r2,-40
 800c600:	8ce6983a 	sll	r19,r17,r19
 800c604:	0023883a 	mov	r17,zero
 800c608:	1c3f860e 	bge	r3,r16,800c424 <__alt_data_end+0xfc00c424>
 800c60c:	017fe034 	movhi	r5,65408
 800c610:	297fffc4 	addi	r5,r5,-1
 800c614:	80e1c83a 	sub	r16,r16,r3
 800c618:	994a703a 	and	r5,r19,r5
 800c61c:	003f3206 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c620:	0009883a 	mov	r4,zero
 800c624:	0005883a 	mov	r2,zero
 800c628:	003f4706 	br	800c348 <__alt_data_end+0xfc00c348>
 800c62c:	198cb03a 	or	r6,r3,r6
 800c630:	300cc03a 	cmpne	r6,r6,zero
 800c634:	0005883a 	mov	r2,zero
 800c638:	003f6306 	br	800c3c8 <__alt_data_end+0xfc00c3c8>
 800c63c:	10009d1e 	bne	r2,zero,800c8b4 <__subdf3+0x658>
 800c640:	81c00044 	addi	r7,r16,1
 800c644:	3881ffcc 	andi	r2,r7,2047
 800c648:	02400044 	movi	r9,1
 800c64c:	4880680e 	bge	r9,r2,800c7f0 <__subdf3+0x594>
 800c650:	0081ffc4 	movi	r2,2047
 800c654:	3880ae26 	beq	r7,r2,800c910 <__subdf3+0x6b4>
 800c658:	344d883a 	add	r6,r6,r17
 800c65c:	3463803a 	cmpltu	r17,r6,r17
 800c660:	194b883a 	add	r5,r3,r5
 800c664:	2c4b883a 	add	r5,r5,r17
 800c668:	282297fa 	slli	r17,r5,31
 800c66c:	300cd07a 	srli	r6,r6,1
 800c670:	280ad07a 	srli	r5,r5,1
 800c674:	3821883a 	mov	r16,r7
 800c678:	89a2b03a 	or	r17,r17,r6
 800c67c:	003f1a06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c680:	0101ffc4 	movi	r4,2047
 800c684:	813f431e 	bne	r16,r4,800c394 <__alt_data_end+0xfc00c394>
 800c688:	003f1706 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c68c:	80bff844 	addi	r2,r16,-31
 800c690:	00c00804 	movi	r3,32
 800c694:	9884d83a 	srl	r2,r19,r2
 800c698:	28c05126 	beq	r5,r3,800c7e0 <__subdf3+0x584>
 800c69c:	00c00fc4 	movi	r3,63
 800c6a0:	1c21c83a 	sub	r16,r3,r16
 800c6a4:	9c26983a 	sll	r19,r19,r16
 800c6a8:	9c62b03a 	or	r17,r19,r17
 800c6ac:	8822c03a 	cmpne	r17,r17,zero
 800c6b0:	88a2b03a 	or	r17,r17,r2
 800c6b4:	000b883a 	mov	r5,zero
 800c6b8:	0021883a 	mov	r16,zero
 800c6bc:	003fb406 	br	800c590 <__alt_data_end+0xfc00c590>
 800c6c0:	113ff804 	addi	r4,r2,-32
 800c6c4:	01c00804 	movi	r7,32
 800c6c8:	1908d83a 	srl	r4,r3,r4
 800c6cc:	11c04626 	beq	r2,r7,800c7e8 <__subdf3+0x58c>
 800c6d0:	01c01004 	movi	r7,64
 800c6d4:	3885c83a 	sub	r2,r7,r2
 800c6d8:	1884983a 	sll	r2,r3,r2
 800c6dc:	118cb03a 	or	r6,r2,r6
 800c6e0:	300cc03a 	cmpne	r6,r6,zero
 800c6e4:	310cb03a 	or	r6,r6,r4
 800c6e8:	0005883a 	mov	r2,zero
 800c6ec:	003f3606 	br	800c3c8 <__alt_data_end+0xfc00c3c8>
 800c6f0:	80002b26 	beq	r16,zero,800c7a0 <__subdf3+0x544>
 800c6f4:	0101ffc4 	movi	r4,2047
 800c6f8:	51006926 	beq	r10,r4,800c8a0 <__subdf3+0x644>
 800c6fc:	0085c83a 	sub	r2,zero,r2
 800c700:	29402034 	orhi	r5,r5,128
 800c704:	01000e04 	movi	r4,56
 800c708:	20807d16 	blt	r4,r2,800c900 <__subdf3+0x6a4>
 800c70c:	010007c4 	movi	r4,31
 800c710:	2080d916 	blt	r4,r2,800ca78 <__subdf3+0x81c>
 800c714:	01000804 	movi	r4,32
 800c718:	2089c83a 	sub	r4,r4,r2
 800c71c:	2912983a 	sll	r9,r5,r4
 800c720:	8890d83a 	srl	r8,r17,r2
 800c724:	8908983a 	sll	r4,r17,r4
 800c728:	2884d83a 	srl	r2,r5,r2
 800c72c:	4a22b03a 	or	r17,r9,r8
 800c730:	2008c03a 	cmpne	r4,r4,zero
 800c734:	8922b03a 	or	r17,r17,r4
 800c738:	3463c83a 	sub	r17,r6,r17
 800c73c:	1885c83a 	sub	r2,r3,r2
 800c740:	344d803a 	cmpltu	r6,r6,r17
 800c744:	118bc83a 	sub	r5,r2,r6
 800c748:	5021883a 	mov	r16,r10
 800c74c:	3825883a 	mov	r18,r7
 800c750:	003f2206 	br	800c3dc <__alt_data_end+0xfc00c3dc>
 800c754:	9886b03a 	or	r3,r19,r2
 800c758:	18001c1e 	bne	r3,zero,800c7cc <__subdf3+0x570>
 800c75c:	0011883a 	mov	r8,zero
 800c760:	000b883a 	mov	r5,zero
 800c764:	0023883a 	mov	r17,zero
 800c768:	0021883a 	mov	r16,zero
 800c76c:	003f3e06 	br	800c468 <__alt_data_end+0xfc00c468>
 800c770:	010007c4 	movi	r4,31
 800c774:	20803c16 	blt	r4,r2,800c868 <__subdf3+0x60c>
 800c778:	01000804 	movi	r4,32
 800c77c:	2089c83a 	sub	r4,r4,r2
 800c780:	1912983a 	sll	r9,r3,r4
 800c784:	308ed83a 	srl	r7,r6,r2
 800c788:	3108983a 	sll	r4,r6,r4
 800c78c:	1884d83a 	srl	r2,r3,r2
 800c790:	49ceb03a 	or	r7,r9,r7
 800c794:	2008c03a 	cmpne	r4,r4,zero
 800c798:	390eb03a 	or	r7,r7,r4
 800c79c:	003f4706 	br	800c4bc <__alt_data_end+0xfc00c4bc>
 800c7a0:	2c48b03a 	or	r4,r5,r17
 800c7a4:	20003e26 	beq	r4,zero,800c8a0 <__subdf3+0x644>
 800c7a8:	0084303a 	nor	r2,zero,r2
 800c7ac:	10003a1e 	bne	r2,zero,800c898 <__subdf3+0x63c>
 800c7b0:	3463c83a 	sub	r17,r6,r17
 800c7b4:	194bc83a 	sub	r5,r3,r5
 800c7b8:	344d803a 	cmpltu	r6,r6,r17
 800c7bc:	298bc83a 	sub	r5,r5,r6
 800c7c0:	5021883a 	mov	r16,r10
 800c7c4:	3825883a 	mov	r18,r7
 800c7c8:	003f0406 	br	800c3dc <__alt_data_end+0xfc00c3dc>
 800c7cc:	1023883a 	mov	r17,r2
 800c7d0:	003f0706 	br	800c3f0 <__alt_data_end+0xfc00c3f0>
 800c7d4:	0101ffc4 	movi	r4,2047
 800c7d8:	813f331e 	bne	r16,r4,800c4a8 <__alt_data_end+0xfc00c4a8>
 800c7dc:	003ec206 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c7e0:	0027883a 	mov	r19,zero
 800c7e4:	003fb006 	br	800c6a8 <__alt_data_end+0xfc00c6a8>
 800c7e8:	0005883a 	mov	r2,zero
 800c7ec:	003fbb06 	br	800c6dc <__alt_data_end+0xfc00c6dc>
 800c7f0:	2c44b03a 	or	r2,r5,r17
 800c7f4:	80008b1e 	bne	r16,zero,800ca24 <__subdf3+0x7c8>
 800c7f8:	1000b526 	beq	r2,zero,800cad0 <__subdf3+0x874>
 800c7fc:	1984b03a 	or	r2,r3,r6
 800c800:	103eb926 	beq	r2,zero,800c2e8 <__alt_data_end+0xfc00c2e8>
 800c804:	3449883a 	add	r4,r6,r17
 800c808:	2463803a 	cmpltu	r17,r4,r17
 800c80c:	194b883a 	add	r5,r3,r5
 800c810:	2c4b883a 	add	r5,r5,r17
 800c814:	2880202c 	andhi	r2,r5,128
 800c818:	2023883a 	mov	r17,r4
 800c81c:	103f5c26 	beq	r2,zero,800c590 <__alt_data_end+0xfc00c590>
 800c820:	00bfe034 	movhi	r2,65408
 800c824:	10bfffc4 	addi	r2,r2,-1
 800c828:	4821883a 	mov	r16,r9
 800c82c:	288a703a 	and	r5,r5,r2
 800c830:	003ead06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c834:	2c44b03a 	or	r2,r5,r17
 800c838:	8000291e 	bne	r16,zero,800c8e0 <__subdf3+0x684>
 800c83c:	10004f1e 	bne	r2,zero,800c97c <__subdf3+0x720>
 800c840:	1984b03a 	or	r2,r3,r6
 800c844:	10000426 	beq	r2,zero,800c858 <__subdf3+0x5fc>
 800c848:	180b883a 	mov	r5,r3
 800c84c:	3023883a 	mov	r17,r6
 800c850:	3825883a 	mov	r18,r7
 800c854:	003ea406 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c858:	0011883a 	mov	r8,zero
 800c85c:	000b883a 	mov	r5,zero
 800c860:	0023883a 	mov	r17,zero
 800c864:	003f0006 	br	800c468 <__alt_data_end+0xfc00c468>
 800c868:	11fff804 	addi	r7,r2,-32
 800c86c:	19c8d83a 	srl	r4,r3,r7
 800c870:	01c00804 	movi	r7,32
 800c874:	11c07e26 	beq	r2,r7,800ca70 <__subdf3+0x814>
 800c878:	01c01004 	movi	r7,64
 800c87c:	3885c83a 	sub	r2,r7,r2
 800c880:	1884983a 	sll	r2,r3,r2
 800c884:	118cb03a 	or	r6,r2,r6
 800c888:	300ec03a 	cmpne	r7,r6,zero
 800c88c:	390eb03a 	or	r7,r7,r4
 800c890:	0005883a 	mov	r2,zero
 800c894:	003f0906 	br	800c4bc <__alt_data_end+0xfc00c4bc>
 800c898:	0101ffc4 	movi	r4,2047
 800c89c:	513f991e 	bne	r10,r4,800c704 <__alt_data_end+0xfc00c704>
 800c8a0:	180b883a 	mov	r5,r3
 800c8a4:	3023883a 	mov	r17,r6
 800c8a8:	5021883a 	mov	r16,r10
 800c8ac:	3825883a 	mov	r18,r7
 800c8b0:	003e8d06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c8b4:	80001a1e 	bne	r16,zero,800c920 <__subdf3+0x6c4>
 800c8b8:	2c48b03a 	or	r4,r5,r17
 800c8bc:	20005526 	beq	r4,zero,800ca14 <__subdf3+0x7b8>
 800c8c0:	0084303a 	nor	r2,zero,r2
 800c8c4:	1000511e 	bne	r2,zero,800ca0c <__subdf3+0x7b0>
 800c8c8:	89a3883a 	add	r17,r17,r6
 800c8cc:	194b883a 	add	r5,r3,r5
 800c8d0:	898d803a 	cmpltu	r6,r17,r6
 800c8d4:	298b883a 	add	r5,r5,r6
 800c8d8:	5021883a 	mov	r16,r10
 800c8dc:	003efc06 	br	800c4d0 <__alt_data_end+0xfc00c4d0>
 800c8e0:	1000341e 	bne	r2,zero,800c9b4 <__subdf3+0x758>
 800c8e4:	1984b03a 	or	r2,r3,r6
 800c8e8:	10006f26 	beq	r2,zero,800caa8 <__subdf3+0x84c>
 800c8ec:	180b883a 	mov	r5,r3
 800c8f0:	3023883a 	mov	r17,r6
 800c8f4:	3825883a 	mov	r18,r7
 800c8f8:	0401ffc4 	movi	r16,2047
 800c8fc:	003e7a06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c900:	2c62b03a 	or	r17,r5,r17
 800c904:	8822c03a 	cmpne	r17,r17,zero
 800c908:	0005883a 	mov	r2,zero
 800c90c:	003f8a06 	br	800c738 <__alt_data_end+0xfc00c738>
 800c910:	3821883a 	mov	r16,r7
 800c914:	000b883a 	mov	r5,zero
 800c918:	0023883a 	mov	r17,zero
 800c91c:	003ed206 	br	800c468 <__alt_data_end+0xfc00c468>
 800c920:	0101ffc4 	movi	r4,2047
 800c924:	51003b26 	beq	r10,r4,800ca14 <__subdf3+0x7b8>
 800c928:	0085c83a 	sub	r2,zero,r2
 800c92c:	29402034 	orhi	r5,r5,128
 800c930:	01000e04 	movi	r4,56
 800c934:	20806216 	blt	r4,r2,800cac0 <__subdf3+0x864>
 800c938:	010007c4 	movi	r4,31
 800c93c:	20806b16 	blt	r4,r2,800caec <__subdf3+0x890>
 800c940:	01000804 	movi	r4,32
 800c944:	2089c83a 	sub	r4,r4,r2
 800c948:	2912983a 	sll	r9,r5,r4
 800c94c:	888ed83a 	srl	r7,r17,r2
 800c950:	8908983a 	sll	r4,r17,r4
 800c954:	2884d83a 	srl	r2,r5,r2
 800c958:	49e2b03a 	or	r17,r9,r7
 800c95c:	2008c03a 	cmpne	r4,r4,zero
 800c960:	8922b03a 	or	r17,r17,r4
 800c964:	89a3883a 	add	r17,r17,r6
 800c968:	10c5883a 	add	r2,r2,r3
 800c96c:	898d803a 	cmpltu	r6,r17,r6
 800c970:	118b883a 	add	r5,r2,r6
 800c974:	5021883a 	mov	r16,r10
 800c978:	003ed506 	br	800c4d0 <__alt_data_end+0xfc00c4d0>
 800c97c:	1984b03a 	or	r2,r3,r6
 800c980:	103e5926 	beq	r2,zero,800c2e8 <__alt_data_end+0xfc00c2e8>
 800c984:	8989c83a 	sub	r4,r17,r6
 800c988:	8911803a 	cmpltu	r8,r17,r4
 800c98c:	28c5c83a 	sub	r2,r5,r3
 800c990:	1205c83a 	sub	r2,r2,r8
 800c994:	1200202c 	andhi	r8,r2,128
 800c998:	403ef926 	beq	r8,zero,800c580 <__alt_data_end+0xfc00c580>
 800c99c:	3463c83a 	sub	r17,r6,r17
 800c9a0:	194bc83a 	sub	r5,r3,r5
 800c9a4:	344d803a 	cmpltu	r6,r6,r17
 800c9a8:	298bc83a 	sub	r5,r5,r6
 800c9ac:	3825883a 	mov	r18,r7
 800c9b0:	003e4d06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c9b4:	1984b03a 	or	r2,r3,r6
 800c9b8:	10002b26 	beq	r2,zero,800ca68 <__subdf3+0x80c>
 800c9bc:	2808d0fa 	srli	r4,r5,3
 800c9c0:	8822d0fa 	srli	r17,r17,3
 800c9c4:	280a977a 	slli	r5,r5,29
 800c9c8:	2080022c 	andhi	r2,r4,8
 800c9cc:	2c62b03a 	or	r17,r5,r17
 800c9d0:	10000826 	beq	r2,zero,800c9f4 <__subdf3+0x798>
 800c9d4:	1810d0fa 	srli	r8,r3,3
 800c9d8:	4080022c 	andhi	r2,r8,8
 800c9dc:	1000051e 	bne	r2,zero,800c9f4 <__subdf3+0x798>
 800c9e0:	300cd0fa 	srli	r6,r6,3
 800c9e4:	1804977a 	slli	r2,r3,29
 800c9e8:	4009883a 	mov	r4,r8
 800c9ec:	3825883a 	mov	r18,r7
 800c9f0:	11a2b03a 	or	r17,r2,r6
 800c9f4:	880ad77a 	srli	r5,r17,29
 800c9f8:	200890fa 	slli	r4,r4,3
 800c9fc:	882290fa 	slli	r17,r17,3
 800ca00:	0401ffc4 	movi	r16,2047
 800ca04:	290ab03a 	or	r5,r5,r4
 800ca08:	003e3706 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800ca0c:	0101ffc4 	movi	r4,2047
 800ca10:	513fc71e 	bne	r10,r4,800c930 <__alt_data_end+0xfc00c930>
 800ca14:	180b883a 	mov	r5,r3
 800ca18:	3023883a 	mov	r17,r6
 800ca1c:	5021883a 	mov	r16,r10
 800ca20:	003e3106 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800ca24:	10002d26 	beq	r2,zero,800cadc <__subdf3+0x880>
 800ca28:	1984b03a 	or	r2,r3,r6
 800ca2c:	10000e26 	beq	r2,zero,800ca68 <__subdf3+0x80c>
 800ca30:	2808d0fa 	srli	r4,r5,3
 800ca34:	8822d0fa 	srli	r17,r17,3
 800ca38:	280a977a 	slli	r5,r5,29
 800ca3c:	2080022c 	andhi	r2,r4,8
 800ca40:	2c62b03a 	or	r17,r5,r17
 800ca44:	103feb26 	beq	r2,zero,800c9f4 <__alt_data_end+0xfc00c9f4>
 800ca48:	180ed0fa 	srli	r7,r3,3
 800ca4c:	3880022c 	andhi	r2,r7,8
 800ca50:	103fe81e 	bne	r2,zero,800c9f4 <__alt_data_end+0xfc00c9f4>
 800ca54:	300cd0fa 	srli	r6,r6,3
 800ca58:	1804977a 	slli	r2,r3,29
 800ca5c:	3809883a 	mov	r4,r7
 800ca60:	11a2b03a 	or	r17,r2,r6
 800ca64:	003fe306 	br	800c9f4 <__alt_data_end+0xfc00c9f4>
 800ca68:	0401ffc4 	movi	r16,2047
 800ca6c:	003e1e06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800ca70:	0005883a 	mov	r2,zero
 800ca74:	003f8306 	br	800c884 <__alt_data_end+0xfc00c884>
 800ca78:	113ff804 	addi	r4,r2,-32
 800ca7c:	02000804 	movi	r8,32
 800ca80:	2908d83a 	srl	r4,r5,r4
 800ca84:	12002526 	beq	r2,r8,800cb1c <__subdf3+0x8c0>
 800ca88:	02001004 	movi	r8,64
 800ca8c:	4085c83a 	sub	r2,r8,r2
 800ca90:	288a983a 	sll	r5,r5,r2
 800ca94:	2c62b03a 	or	r17,r5,r17
 800ca98:	8822c03a 	cmpne	r17,r17,zero
 800ca9c:	8922b03a 	or	r17,r17,r4
 800caa0:	0005883a 	mov	r2,zero
 800caa4:	003f2406 	br	800c738 <__alt_data_end+0xfc00c738>
 800caa8:	01402034 	movhi	r5,128
 800caac:	0011883a 	mov	r8,zero
 800cab0:	297fffc4 	addi	r5,r5,-1
 800cab4:	047ffe04 	movi	r17,-8
 800cab8:	0401ffc4 	movi	r16,2047
 800cabc:	003e6a06 	br	800c468 <__alt_data_end+0xfc00c468>
 800cac0:	2c62b03a 	or	r17,r5,r17
 800cac4:	8822c03a 	cmpne	r17,r17,zero
 800cac8:	0005883a 	mov	r2,zero
 800cacc:	003fa506 	br	800c964 <__alt_data_end+0xfc00c964>
 800cad0:	180b883a 	mov	r5,r3
 800cad4:	3023883a 	mov	r17,r6
 800cad8:	003e0306 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800cadc:	180b883a 	mov	r5,r3
 800cae0:	3023883a 	mov	r17,r6
 800cae4:	0401ffc4 	movi	r16,2047
 800cae8:	003dff06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800caec:	113ff804 	addi	r4,r2,-32
 800caf0:	01c00804 	movi	r7,32
 800caf4:	2908d83a 	srl	r4,r5,r4
 800caf8:	11c00a26 	beq	r2,r7,800cb24 <__subdf3+0x8c8>
 800cafc:	01c01004 	movi	r7,64
 800cb00:	3885c83a 	sub	r2,r7,r2
 800cb04:	288a983a 	sll	r5,r5,r2
 800cb08:	2c62b03a 	or	r17,r5,r17
 800cb0c:	8822c03a 	cmpne	r17,r17,zero
 800cb10:	8922b03a 	or	r17,r17,r4
 800cb14:	0005883a 	mov	r2,zero
 800cb18:	003f9206 	br	800c964 <__alt_data_end+0xfc00c964>
 800cb1c:	000b883a 	mov	r5,zero
 800cb20:	003fdc06 	br	800ca94 <__alt_data_end+0xfc00ca94>
 800cb24:	000b883a 	mov	r5,zero
 800cb28:	003ff706 	br	800cb08 <__alt_data_end+0xfc00cb08>

0800cb2c <__fixdfsi>:
 800cb2c:	2806d53a 	srli	r3,r5,20
 800cb30:	00800434 	movhi	r2,16
 800cb34:	10bfffc4 	addi	r2,r2,-1
 800cb38:	18c1ffcc 	andi	r3,r3,2047
 800cb3c:	0180ff84 	movi	r6,1022
 800cb40:	2884703a 	and	r2,r5,r2
 800cb44:	280ad7fa 	srli	r5,r5,31
 800cb48:	30c0130e 	bge	r6,r3,800cb98 <__fixdfsi+0x6c>
 800cb4c:	01810744 	movi	r6,1053
 800cb50:	30c00d16 	blt	r6,r3,800cb88 <__fixdfsi+0x5c>
 800cb54:	01810cc4 	movi	r6,1075
 800cb58:	30cdc83a 	sub	r6,r6,r3
 800cb5c:	01c007c4 	movi	r7,31
 800cb60:	10800434 	orhi	r2,r2,16
 800cb64:	39800e0e 	bge	r7,r6,800cba0 <__fixdfsi+0x74>
 800cb68:	010104c4 	movi	r4,1043
 800cb6c:	20c7c83a 	sub	r3,r4,r3
 800cb70:	10c6d83a 	srl	r3,r2,r3
 800cb74:	29403fcc 	andi	r5,r5,255
 800cb78:	0145c83a 	sub	r2,zero,r5
 800cb7c:	1884f03a 	xor	r2,r3,r2
 800cb80:	1145883a 	add	r2,r2,r5
 800cb84:	f800283a 	ret
 800cb88:	00a00034 	movhi	r2,32768
 800cb8c:	10bfffc4 	addi	r2,r2,-1
 800cb90:	2885883a 	add	r2,r5,r2
 800cb94:	f800283a 	ret
 800cb98:	0005883a 	mov	r2,zero
 800cb9c:	f800283a 	ret
 800cba0:	18fefb44 	addi	r3,r3,-1043
 800cba4:	2188d83a 	srl	r4,r4,r6
 800cba8:	10c6983a 	sll	r3,r2,r3
 800cbac:	20c6b03a 	or	r3,r4,r3
 800cbb0:	003ff006 	br	800cb74 <__alt_data_end+0xfc00cb74>

0800cbb4 <__floatsidf>:
 800cbb4:	defffd04 	addi	sp,sp,-12
 800cbb8:	dc400115 	stw	r17,4(sp)
 800cbbc:	dfc00215 	stw	ra,8(sp)
 800cbc0:	dc000015 	stw	r16,0(sp)
 800cbc4:	2023883a 	mov	r17,r4
 800cbc8:	20001426 	beq	r4,zero,800cc1c <__floatsidf+0x68>
 800cbcc:	2020d7fa 	srli	r16,r4,31
 800cbd0:	80000126 	beq	r16,zero,800cbd8 <__floatsidf+0x24>
 800cbd4:	0123c83a 	sub	r17,zero,r4
 800cbd8:	8809883a 	mov	r4,r17
 800cbdc:	800cf2c0 	call	800cf2c <__clzsi2>
 800cbe0:	01410784 	movi	r5,1054
 800cbe4:	00c00284 	movi	r3,10
 800cbe8:	288bc83a 	sub	r5,r5,r2
 800cbec:	18801c16 	blt	r3,r2,800cc60 <__floatsidf+0xac>
 800cbf0:	00c002c4 	movi	r3,11
 800cbf4:	1887c83a 	sub	r3,r3,r2
 800cbf8:	88c8d83a 	srl	r4,r17,r3
 800cbfc:	00c00434 	movhi	r3,16
 800cc00:	18ffffc4 	addi	r3,r3,-1
 800cc04:	10800544 	addi	r2,r2,21
 800cc08:	20c8703a 	and	r4,r4,r3
 800cc0c:	8884983a 	sll	r2,r17,r2
 800cc10:	28c1ffcc 	andi	r3,r5,2047
 800cc14:	800d883a 	mov	r6,r16
 800cc18:	00000406 	br	800cc2c <__floatsidf+0x78>
 800cc1c:	000d883a 	mov	r6,zero
 800cc20:	0007883a 	mov	r3,zero
 800cc24:	0009883a 	mov	r4,zero
 800cc28:	0005883a 	mov	r2,zero
 800cc2c:	180a953a 	slli	r5,r3,20
 800cc30:	31803fcc 	andi	r6,r6,255
 800cc34:	00c00434 	movhi	r3,16
 800cc38:	300c97fa 	slli	r6,r6,31
 800cc3c:	18ffffc4 	addi	r3,r3,-1
 800cc40:	20c6703a 	and	r3,r4,r3
 800cc44:	1946b03a 	or	r3,r3,r5
 800cc48:	1986b03a 	or	r3,r3,r6
 800cc4c:	dfc00217 	ldw	ra,8(sp)
 800cc50:	dc400117 	ldw	r17,4(sp)
 800cc54:	dc000017 	ldw	r16,0(sp)
 800cc58:	dec00304 	addi	sp,sp,12
 800cc5c:	f800283a 	ret
 800cc60:	10fffd44 	addi	r3,r2,-11
 800cc64:	88c8983a 	sll	r4,r17,r3
 800cc68:	00800434 	movhi	r2,16
 800cc6c:	10bfffc4 	addi	r2,r2,-1
 800cc70:	2088703a 	and	r4,r4,r2
 800cc74:	28c1ffcc 	andi	r3,r5,2047
 800cc78:	800d883a 	mov	r6,r16
 800cc7c:	0005883a 	mov	r2,zero
 800cc80:	003fea06 	br	800cc2c <__alt_data_end+0xfc00cc2c>

0800cc84 <__extendsfdf2>:
 800cc84:	200ad5fa 	srli	r5,r4,23
 800cc88:	defffd04 	addi	sp,sp,-12
 800cc8c:	dc400115 	stw	r17,4(sp)
 800cc90:	29403fcc 	andi	r5,r5,255
 800cc94:	29800044 	addi	r6,r5,1
 800cc98:	04402034 	movhi	r17,128
 800cc9c:	dc000015 	stw	r16,0(sp)
 800cca0:	8c7fffc4 	addi	r17,r17,-1
 800cca4:	dfc00215 	stw	ra,8(sp)
 800cca8:	31803fcc 	andi	r6,r6,255
 800ccac:	00800044 	movi	r2,1
 800ccb0:	8922703a 	and	r17,r17,r4
 800ccb4:	2020d7fa 	srli	r16,r4,31
 800ccb8:	1180110e 	bge	r2,r6,800cd00 <__extendsfdf2+0x7c>
 800ccbc:	880ed0fa 	srli	r7,r17,3
 800ccc0:	8822977a 	slli	r17,r17,29
 800ccc4:	2940e004 	addi	r5,r5,896
 800ccc8:	2941ffcc 	andi	r5,r5,2047
 800cccc:	280c953a 	slli	r6,r5,20
 800ccd0:	01400434 	movhi	r5,16
 800ccd4:	800697fa 	slli	r3,r16,31
 800ccd8:	297fffc4 	addi	r5,r5,-1
 800ccdc:	394a703a 	and	r5,r7,r5
 800cce0:	298ab03a 	or	r5,r5,r6
 800cce4:	8805883a 	mov	r2,r17
 800cce8:	28c6b03a 	or	r3,r5,r3
 800ccec:	dfc00217 	ldw	ra,8(sp)
 800ccf0:	dc400117 	ldw	r17,4(sp)
 800ccf4:	dc000017 	ldw	r16,0(sp)
 800ccf8:	dec00304 	addi	sp,sp,12
 800ccfc:	f800283a 	ret
 800cd00:	2800111e 	bne	r5,zero,800cd48 <__extendsfdf2+0xc4>
 800cd04:	88001c26 	beq	r17,zero,800cd78 <__extendsfdf2+0xf4>
 800cd08:	8809883a 	mov	r4,r17
 800cd0c:	800cf2c0 	call	800cf2c <__clzsi2>
 800cd10:	00c00284 	movi	r3,10
 800cd14:	18801b16 	blt	r3,r2,800cd84 <__extendsfdf2+0x100>
 800cd18:	01c002c4 	movi	r7,11
 800cd1c:	388fc83a 	sub	r7,r7,r2
 800cd20:	10c00544 	addi	r3,r2,21
 800cd24:	89ced83a 	srl	r7,r17,r7
 800cd28:	88e2983a 	sll	r17,r17,r3
 800cd2c:	0180e244 	movi	r6,905
 800cd30:	308bc83a 	sub	r5,r6,r2
 800cd34:	01800434 	movhi	r6,16
 800cd38:	31bfffc4 	addi	r6,r6,-1
 800cd3c:	398e703a 	and	r7,r7,r6
 800cd40:	2941ffcc 	andi	r5,r5,2047
 800cd44:	003fe006 	br	800ccc8 <__alt_data_end+0xfc00ccc8>
 800cd48:	88000826 	beq	r17,zero,800cd6c <__extendsfdf2+0xe8>
 800cd4c:	880ed0fa 	srli	r7,r17,3
 800cd50:	00800434 	movhi	r2,16
 800cd54:	10bfffc4 	addi	r2,r2,-1
 800cd58:	39c00234 	orhi	r7,r7,8
 800cd5c:	8822977a 	slli	r17,r17,29
 800cd60:	388e703a 	and	r7,r7,r2
 800cd64:	0141ffc4 	movi	r5,2047
 800cd68:	003fd706 	br	800ccc8 <__alt_data_end+0xfc00ccc8>
 800cd6c:	0141ffc4 	movi	r5,2047
 800cd70:	000f883a 	mov	r7,zero
 800cd74:	003fd406 	br	800ccc8 <__alt_data_end+0xfc00ccc8>
 800cd78:	000b883a 	mov	r5,zero
 800cd7c:	000f883a 	mov	r7,zero
 800cd80:	003fd106 	br	800ccc8 <__alt_data_end+0xfc00ccc8>
 800cd84:	11fffd44 	addi	r7,r2,-11
 800cd88:	89ce983a 	sll	r7,r17,r7
 800cd8c:	0023883a 	mov	r17,zero
 800cd90:	003fe606 	br	800cd2c <__alt_data_end+0xfc00cd2c>

0800cd94 <__truncdfsf2>:
 800cd94:	2810d53a 	srli	r8,r5,20
 800cd98:	01c00434 	movhi	r7,16
 800cd9c:	39ffffc4 	addi	r7,r7,-1
 800cda0:	29ce703a 	and	r7,r5,r7
 800cda4:	380e90fa 	slli	r7,r7,3
 800cda8:	4201ffcc 	andi	r8,r8,2047
 800cdac:	200cd77a 	srli	r6,r4,29
 800cdb0:	42400044 	addi	r9,r8,1
 800cdb4:	4a41ffcc 	andi	r9,r9,2047
 800cdb8:	00800044 	movi	r2,1
 800cdbc:	398cb03a 	or	r6,r7,r6
 800cdc0:	280ad7fa 	srli	r5,r5,31
 800cdc4:	200e90fa 	slli	r7,r4,3
 800cdc8:	1240230e 	bge	r2,r9,800ce58 <__truncdfsf2+0xc4>
 800cdcc:	40ff2004 	addi	r3,r8,-896
 800cdd0:	00803f84 	movi	r2,254
 800cdd4:	10c01516 	blt	r2,r3,800ce2c <__truncdfsf2+0x98>
 800cdd8:	00c02d0e 	bge	zero,r3,800ce90 <__truncdfsf2+0xfc>
 800cddc:	200891ba 	slli	r4,r4,6
 800cde0:	300c90fa 	slli	r6,r6,3
 800cde4:	380ed77a 	srli	r7,r7,29
 800cde8:	2008c03a 	cmpne	r4,r4,zero
 800cdec:	310cb03a 	or	r6,r6,r4
 800cdf0:	31ccb03a 	or	r6,r6,r7
 800cdf4:	308001cc 	andi	r2,r6,7
 800cdf8:	10000426 	beq	r2,zero,800ce0c <__truncdfsf2+0x78>
 800cdfc:	310003cc 	andi	r4,r6,15
 800ce00:	00800104 	movi	r2,4
 800ce04:	20800126 	beq	r4,r2,800ce0c <__truncdfsf2+0x78>
 800ce08:	31800104 	addi	r6,r6,4
 800ce0c:	3081002c 	andhi	r2,r6,1024
 800ce10:	10002326 	beq	r2,zero,800cea0 <__truncdfsf2+0x10c>
 800ce14:	18c00044 	addi	r3,r3,1
 800ce18:	00803fc4 	movi	r2,255
 800ce1c:	18800326 	beq	r3,r2,800ce2c <__truncdfsf2+0x98>
 800ce20:	300c91ba 	slli	r6,r6,6
 800ce24:	300cd27a 	srli	r6,r6,9
 800ce28:	00000206 	br	800ce34 <__truncdfsf2+0xa0>
 800ce2c:	00ffffc4 	movi	r3,-1
 800ce30:	000d883a 	mov	r6,zero
 800ce34:	18c03fcc 	andi	r3,r3,255
 800ce38:	180895fa 	slli	r4,r3,23
 800ce3c:	00c02034 	movhi	r3,128
 800ce40:	280a97fa 	slli	r5,r5,31
 800ce44:	18ffffc4 	addi	r3,r3,-1
 800ce48:	30c6703a 	and	r3,r6,r3
 800ce4c:	1906b03a 	or	r3,r3,r4
 800ce50:	1944b03a 	or	r2,r3,r5
 800ce54:	f800283a 	ret
 800ce58:	4000071e 	bne	r8,zero,800ce78 <__truncdfsf2+0xe4>
 800ce5c:	31ccb03a 	or	r6,r6,r7
 800ce60:	30000d1e 	bne	r6,zero,800ce98 <__truncdfsf2+0x104>
 800ce64:	0007883a 	mov	r3,zero
 800ce68:	00802034 	movhi	r2,128
 800ce6c:	10bfffc4 	addi	r2,r2,-1
 800ce70:	308c703a 	and	r6,r6,r2
 800ce74:	003fef06 	br	800ce34 <__alt_data_end+0xfc00ce34>
 800ce78:	31c8b03a 	or	r4,r6,r7
 800ce7c:	203feb26 	beq	r4,zero,800ce2c <__alt_data_end+0xfc00ce2c>
 800ce80:	300c90fa 	slli	r6,r6,3
 800ce84:	00c03fc4 	movi	r3,255
 800ce88:	31808034 	orhi	r6,r6,512
 800ce8c:	003fd906 	br	800cdf4 <__alt_data_end+0xfc00cdf4>
 800ce90:	00bffa44 	movi	r2,-23
 800ce94:	1880090e 	bge	r3,r2,800cebc <__truncdfsf2+0x128>
 800ce98:	01800144 	movi	r6,5
 800ce9c:	0007883a 	mov	r3,zero
 800cea0:	00803fc4 	movi	r2,255
 800cea4:	300cd0fa 	srli	r6,r6,3
 800cea8:	18bfef1e 	bne	r3,r2,800ce68 <__alt_data_end+0xfc00ce68>
 800ceac:	303fdf26 	beq	r6,zero,800ce2c <__alt_data_end+0xfc00ce2c>
 800ceb0:	31801034 	orhi	r6,r6,64
 800ceb4:	00ffffc4 	movi	r3,-1
 800ceb8:	003feb06 	br	800ce68 <__alt_data_end+0xfc00ce68>
 800cebc:	0080e784 	movi	r2,926
 800cec0:	1205c83a 	sub	r2,r2,r8
 800cec4:	00c007c4 	movi	r3,31
 800cec8:	31802034 	orhi	r6,r6,128
 800cecc:	18800916 	blt	r3,r2,800cef4 <__truncdfsf2+0x160>
 800ced0:	423f2084 	addi	r8,r8,-894
 800ced4:	3a06983a 	sll	r3,r7,r8
 800ced8:	3210983a 	sll	r8,r6,r8
 800cedc:	388ed83a 	srl	r7,r7,r2
 800cee0:	180cc03a 	cmpne	r6,r3,zero
 800cee4:	418cb03a 	or	r6,r8,r6
 800cee8:	31ccb03a 	or	r6,r6,r7
 800ceec:	0007883a 	mov	r3,zero
 800cef0:	003fc006 	br	800cdf4 <__alt_data_end+0xfc00cdf4>
 800cef4:	00c0df84 	movi	r3,894
 800cef8:	1a07c83a 	sub	r3,r3,r8
 800cefc:	01000804 	movi	r4,32
 800cf00:	30c6d83a 	srl	r3,r6,r3
 800cf04:	11000726 	beq	r2,r4,800cf24 <__truncdfsf2+0x190>
 800cf08:	423f2884 	addi	r8,r8,-862
 800cf0c:	3210983a 	sll	r8,r6,r8
 800cf10:	41ceb03a 	or	r7,r8,r7
 800cf14:	380ec03a 	cmpne	r7,r7,zero
 800cf18:	38ccb03a 	or	r6,r7,r3
 800cf1c:	0007883a 	mov	r3,zero
 800cf20:	003fb406 	br	800cdf4 <__alt_data_end+0xfc00cdf4>
 800cf24:	0011883a 	mov	r8,zero
 800cf28:	003ff906 	br	800cf10 <__alt_data_end+0xfc00cf10>

0800cf2c <__clzsi2>:
 800cf2c:	00bfffd4 	movui	r2,65535
 800cf30:	11000b36 	bltu	r2,r4,800cf60 <__clzsi2+0x34>
 800cf34:	00803fc4 	movi	r2,255
 800cf38:	1100122e 	bgeu	r2,r4,800cf84 <__clzsi2+0x58>
 800cf3c:	00c00204 	movi	r3,8
 800cf40:	01400604 	movi	r5,24
 800cf44:	20c8d83a 	srl	r4,r4,r3
 800cf48:	008200b4 	movhi	r2,2050
 800cf4c:	1080b904 	addi	r2,r2,740
 800cf50:	1109883a 	add	r4,r2,r4
 800cf54:	20800003 	ldbu	r2,0(r4)
 800cf58:	2885c83a 	sub	r2,r5,r2
 800cf5c:	f800283a 	ret
 800cf60:	00804034 	movhi	r2,256
 800cf64:	10bfffc4 	addi	r2,r2,-1
 800cf68:	11000336 	bltu	r2,r4,800cf78 <__clzsi2+0x4c>
 800cf6c:	00c00404 	movi	r3,16
 800cf70:	180b883a 	mov	r5,r3
 800cf74:	003ff306 	br	800cf44 <__alt_data_end+0xfc00cf44>
 800cf78:	00c00604 	movi	r3,24
 800cf7c:	01400204 	movi	r5,8
 800cf80:	003ff006 	br	800cf44 <__alt_data_end+0xfc00cf44>
 800cf84:	0007883a 	mov	r3,zero
 800cf88:	01400804 	movi	r5,32
 800cf8c:	003fed06 	br	800cf44 <__alt_data_end+0xfc00cf44>

0800cf90 <atof>:
 800cf90:	000b883a 	mov	r5,zero
 800cf94:	800e8581 	jmpi	800e858 <strtod>

0800cf98 <atoi>:
 800cf98:	000b883a 	mov	r5,zero
 800cf9c:	01800284 	movi	r6,10
 800cfa0:	800ebe01 	jmpi	800ebe0 <strtol>

0800cfa4 <_atoi_r>:
 800cfa4:	000d883a 	mov	r6,zero
 800cfa8:	01c00284 	movi	r7,10
 800cfac:	800e9781 	jmpi	800e978 <_strtol_r>

0800cfb0 <__errno>:
 800cfb0:	008200b4 	movhi	r2,2050
 800cfb4:	1088f804 	addi	r2,r2,9184
 800cfb8:	10800017 	ldw	r2,0(r2)
 800cfbc:	f800283a 	ret

0800cfc0 <_printf_r>:
 800cfc0:	defffd04 	addi	sp,sp,-12
 800cfc4:	dfc00015 	stw	ra,0(sp)
 800cfc8:	d9800115 	stw	r6,4(sp)
 800cfcc:	d9c00215 	stw	r7,8(sp)
 800cfd0:	280d883a 	mov	r6,r5
 800cfd4:	21400217 	ldw	r5,8(r4)
 800cfd8:	d9c00104 	addi	r7,sp,4
 800cfdc:	8010c740 	call	8010c74 <___vfprintf_internal_r>
 800cfe0:	dfc00017 	ldw	ra,0(sp)
 800cfe4:	dec00304 	addi	sp,sp,12
 800cfe8:	f800283a 	ret

0800cfec <printf>:
 800cfec:	defffc04 	addi	sp,sp,-16
 800cff0:	dfc00015 	stw	ra,0(sp)
 800cff4:	d9400115 	stw	r5,4(sp)
 800cff8:	d9800215 	stw	r6,8(sp)
 800cffc:	d9c00315 	stw	r7,12(sp)
 800d000:	008200b4 	movhi	r2,2050
 800d004:	1088f804 	addi	r2,r2,9184
 800d008:	10800017 	ldw	r2,0(r2)
 800d00c:	200b883a 	mov	r5,r4
 800d010:	d9800104 	addi	r6,sp,4
 800d014:	11000217 	ldw	r4,8(r2)
 800d018:	8012d700 	call	8012d70 <__vfprintf_internal>
 800d01c:	dfc00017 	ldw	ra,0(sp)
 800d020:	dec00404 	addi	sp,sp,16
 800d024:	f800283a 	ret

0800d028 <_puts_r>:
 800d028:	defff604 	addi	sp,sp,-40
 800d02c:	dc000715 	stw	r16,28(sp)
 800d030:	2021883a 	mov	r16,r4
 800d034:	2809883a 	mov	r4,r5
 800d038:	dc400815 	stw	r17,32(sp)
 800d03c:	dfc00915 	stw	ra,36(sp)
 800d040:	2823883a 	mov	r17,r5
 800d044:	800d1b80 	call	800d1b8 <strlen>
 800d048:	00c200b4 	movhi	r3,2050
 800d04c:	18c8f804 	addi	r3,r3,9184
 800d050:	18c00017 	ldw	r3,0(r3)
 800d054:	11000044 	addi	r4,r2,1
 800d058:	d8800115 	stw	r2,4(sp)
 800d05c:	18c00217 	ldw	r3,8(r3)
 800d060:	014200b4 	movhi	r5,2050
 800d064:	2940fa04 	addi	r5,r5,1000
 800d068:	1880030b 	ldhu	r2,12(r3)
 800d06c:	d9400215 	stw	r5,8(sp)
 800d070:	d9000615 	stw	r4,24(sp)
 800d074:	01400044 	movi	r5,1
 800d078:	01000084 	movi	r4,2
 800d07c:	d9000515 	stw	r4,20(sp)
 800d080:	dc400015 	stw	r17,0(sp)
 800d084:	d9400315 	stw	r5,12(sp)
 800d088:	dec00415 	stw	sp,16(sp)
 800d08c:	1108000c 	andi	r4,r2,8192
 800d090:	2000061e 	bne	r4,zero,800d0ac <_puts_r+0x84>
 800d094:	19401917 	ldw	r5,100(r3)
 800d098:	0137ffc4 	movi	r4,-8193
 800d09c:	10880014 	ori	r2,r2,8192
 800d0a0:	2908703a 	and	r4,r5,r4
 800d0a4:	1880030d 	sth	r2,12(r3)
 800d0a8:	19001915 	stw	r4,100(r3)
 800d0ac:	81400217 	ldw	r5,8(r16)
 800d0b0:	8009883a 	mov	r4,r16
 800d0b4:	d9800404 	addi	r6,sp,16
 800d0b8:	80152340 	call	8015234 <__sfvwrite_r>
 800d0bc:	1000061e 	bne	r2,zero,800d0d8 <_puts_r+0xb0>
 800d0c0:	00800284 	movi	r2,10
 800d0c4:	dfc00917 	ldw	ra,36(sp)
 800d0c8:	dc400817 	ldw	r17,32(sp)
 800d0cc:	dc000717 	ldw	r16,28(sp)
 800d0d0:	dec00a04 	addi	sp,sp,40
 800d0d4:	f800283a 	ret
 800d0d8:	00bfffc4 	movi	r2,-1
 800d0dc:	003ff906 	br	800d0c4 <__alt_data_end+0xfc00d0c4>

0800d0e0 <puts>:
 800d0e0:	008200b4 	movhi	r2,2050
 800d0e4:	1088f804 	addi	r2,r2,9184
 800d0e8:	200b883a 	mov	r5,r4
 800d0ec:	11000017 	ldw	r4,0(r2)
 800d0f0:	800d0281 	jmpi	800d028 <_puts_r>

0800d0f4 <_sprintf_r>:
 800d0f4:	deffe404 	addi	sp,sp,-112
 800d0f8:	2807883a 	mov	r3,r5
 800d0fc:	dfc01a15 	stw	ra,104(sp)
 800d100:	d9c01b15 	stw	r7,108(sp)
 800d104:	00a00034 	movhi	r2,32768
 800d108:	10bfffc4 	addi	r2,r2,-1
 800d10c:	02008204 	movi	r8,520
 800d110:	d8800215 	stw	r2,8(sp)
 800d114:	d8800515 	stw	r2,20(sp)
 800d118:	d80b883a 	mov	r5,sp
 800d11c:	d9c01b04 	addi	r7,sp,108
 800d120:	00bfffc4 	movi	r2,-1
 800d124:	d8c00015 	stw	r3,0(sp)
 800d128:	d8c00415 	stw	r3,16(sp)
 800d12c:	da00030d 	sth	r8,12(sp)
 800d130:	d880038d 	sth	r2,14(sp)
 800d134:	800ec040 	call	800ec04 <___svfprintf_internal_r>
 800d138:	d8c00017 	ldw	r3,0(sp)
 800d13c:	18000005 	stb	zero,0(r3)
 800d140:	dfc01a17 	ldw	ra,104(sp)
 800d144:	dec01c04 	addi	sp,sp,112
 800d148:	f800283a 	ret

0800d14c <sprintf>:
 800d14c:	deffe304 	addi	sp,sp,-116
 800d150:	2007883a 	mov	r3,r4
 800d154:	dfc01a15 	stw	ra,104(sp)
 800d158:	d9801b15 	stw	r6,108(sp)
 800d15c:	d9c01c15 	stw	r7,112(sp)
 800d160:	010200b4 	movhi	r4,2050
 800d164:	2108f804 	addi	r4,r4,9184
 800d168:	21000017 	ldw	r4,0(r4)
 800d16c:	00a00034 	movhi	r2,32768
 800d170:	10bfffc4 	addi	r2,r2,-1
 800d174:	280d883a 	mov	r6,r5
 800d178:	02008204 	movi	r8,520
 800d17c:	d8800215 	stw	r2,8(sp)
 800d180:	d8800515 	stw	r2,20(sp)
 800d184:	d80b883a 	mov	r5,sp
 800d188:	d9c01b04 	addi	r7,sp,108
 800d18c:	00bfffc4 	movi	r2,-1
 800d190:	d8c00015 	stw	r3,0(sp)
 800d194:	d8c00415 	stw	r3,16(sp)
 800d198:	da00030d 	sth	r8,12(sp)
 800d19c:	d880038d 	sth	r2,14(sp)
 800d1a0:	800ec040 	call	800ec04 <___svfprintf_internal_r>
 800d1a4:	d8c00017 	ldw	r3,0(sp)
 800d1a8:	18000005 	stb	zero,0(r3)
 800d1ac:	dfc01a17 	ldw	ra,104(sp)
 800d1b0:	dec01d04 	addi	sp,sp,116
 800d1b4:	f800283a 	ret

0800d1b8 <strlen>:
 800d1b8:	208000cc 	andi	r2,r4,3
 800d1bc:	10002026 	beq	r2,zero,800d240 <strlen+0x88>
 800d1c0:	20800007 	ldb	r2,0(r4)
 800d1c4:	10002026 	beq	r2,zero,800d248 <strlen+0x90>
 800d1c8:	2005883a 	mov	r2,r4
 800d1cc:	00000206 	br	800d1d8 <strlen+0x20>
 800d1d0:	10c00007 	ldb	r3,0(r2)
 800d1d4:	18001826 	beq	r3,zero,800d238 <strlen+0x80>
 800d1d8:	10800044 	addi	r2,r2,1
 800d1dc:	10c000cc 	andi	r3,r2,3
 800d1e0:	183ffb1e 	bne	r3,zero,800d1d0 <__alt_data_end+0xfc00d1d0>
 800d1e4:	10c00017 	ldw	r3,0(r2)
 800d1e8:	01ffbff4 	movhi	r7,65279
 800d1ec:	39ffbfc4 	addi	r7,r7,-257
 800d1f0:	00ca303a 	nor	r5,zero,r3
 800d1f4:	01a02074 	movhi	r6,32897
 800d1f8:	19c7883a 	add	r3,r3,r7
 800d1fc:	31a02004 	addi	r6,r6,-32640
 800d200:	1946703a 	and	r3,r3,r5
 800d204:	1986703a 	and	r3,r3,r6
 800d208:	1800091e 	bne	r3,zero,800d230 <strlen+0x78>
 800d20c:	10800104 	addi	r2,r2,4
 800d210:	10c00017 	ldw	r3,0(r2)
 800d214:	19cb883a 	add	r5,r3,r7
 800d218:	00c6303a 	nor	r3,zero,r3
 800d21c:	28c6703a 	and	r3,r5,r3
 800d220:	1986703a 	and	r3,r3,r6
 800d224:	183ff926 	beq	r3,zero,800d20c <__alt_data_end+0xfc00d20c>
 800d228:	00000106 	br	800d230 <strlen+0x78>
 800d22c:	10800044 	addi	r2,r2,1
 800d230:	10c00007 	ldb	r3,0(r2)
 800d234:	183ffd1e 	bne	r3,zero,800d22c <__alt_data_end+0xfc00d22c>
 800d238:	1105c83a 	sub	r2,r2,r4
 800d23c:	f800283a 	ret
 800d240:	2005883a 	mov	r2,r4
 800d244:	003fe706 	br	800d1e4 <__alt_data_end+0xfc00d1e4>
 800d248:	0005883a 	mov	r2,zero
 800d24c:	f800283a 	ret

0800d250 <_strtod_r>:
 800d250:	deffe104 	addi	sp,sp,-124
 800d254:	dcc01815 	stw	r19,96(sp)
 800d258:	dc001515 	stw	r16,84(sp)
 800d25c:	dfc01e15 	stw	ra,120(sp)
 800d260:	df001d15 	stw	fp,116(sp)
 800d264:	ddc01c15 	stw	r23,112(sp)
 800d268:	dd801b15 	stw	r22,108(sp)
 800d26c:	dd401a15 	stw	r21,104(sp)
 800d270:	dd001915 	stw	r20,100(sp)
 800d274:	dc801715 	stw	r18,92(sp)
 800d278:	dc401615 	stw	r17,88(sp)
 800d27c:	d9400615 	stw	r5,24(sp)
 800d280:	2807883a 	mov	r3,r5
 800d284:	1f000003 	ldbu	fp,0(r3)
 800d288:	01c20074 	movhi	r7,2049
 800d28c:	2021883a 	mov	r16,r4
 800d290:	d9800c15 	stw	r6,48(sp)
 800d294:	d8000815 	stw	zero,32(sp)
 800d298:	d8000715 	stw	zero,28(sp)
 800d29c:	01000b44 	movi	r4,45
 800d2a0:	e0803fcc 	andi	r2,fp,255
 800d2a4:	39f4b004 	addi	r7,r7,-11584
 800d2a8:	2827883a 	mov	r19,r5
 800d2ac:	2080c236 	bltu	r4,r2,800d5b8 <_strtod_r+0x368>
 800d2b0:	100490ba 	slli	r2,r2,2
 800d2b4:	11c5883a 	add	r2,r2,r7
 800d2b8:	10800017 	ldw	r2,0(r2)
 800d2bc:	1000683a 	jmp	r2
 800d2c0:	0800d380 	call	800d38 <__alt_mem_onchip_memory2_0+0x800d38>
 800d2c4:	0800d5b8 	rdprs	zero,at,854
 800d2c8:	0800d5b8 	rdprs	zero,at,854
 800d2cc:	0800d5b8 	rdprs	zero,at,854
 800d2d0:	0800d5b8 	rdprs	zero,at,854
 800d2d4:	0800d5b8 	rdprs	zero,at,854
 800d2d8:	0800d5b8 	rdprs	zero,at,854
 800d2dc:	0800d5b8 	rdprs	zero,at,854
 800d2e0:	0800d5b8 	rdprs	zero,at,854
 800d2e4:	0800d5a4 	muli	zero,at,854
 800d2e8:	0800d5a4 	muli	zero,at,854
 800d2ec:	0800d5a4 	muli	zero,at,854
 800d2f0:	0800d5a4 	muli	zero,at,854
 800d2f4:	0800d5a4 	muli	zero,at,854
 800d2f8:	0800d5b8 	rdprs	zero,at,854
 800d2fc:	0800d5b8 	rdprs	zero,at,854
 800d300:	0800d5b8 	rdprs	zero,at,854
 800d304:	0800d5b8 	rdprs	zero,at,854
 800d308:	0800d5b8 	rdprs	zero,at,854
 800d30c:	0800d5b8 	rdprs	zero,at,854
 800d310:	0800d5b8 	rdprs	zero,at,854
 800d314:	0800d5b8 	rdprs	zero,at,854
 800d318:	0800d5b8 	rdprs	zero,at,854
 800d31c:	0800d5b8 	rdprs	zero,at,854
 800d320:	0800d5b8 	rdprs	zero,at,854
 800d324:	0800d5b8 	rdprs	zero,at,854
 800d328:	0800d5b8 	rdprs	zero,at,854
 800d32c:	0800d5b8 	rdprs	zero,at,854
 800d330:	0800d5b8 	rdprs	zero,at,854
 800d334:	0800d5b8 	rdprs	zero,at,854
 800d338:	0800d5b8 	rdprs	zero,at,854
 800d33c:	0800d5b8 	rdprs	zero,at,854
 800d340:	0800d5a4 	muli	zero,at,854
 800d344:	0800d5b8 	rdprs	zero,at,854
 800d348:	0800d5b8 	rdprs	zero,at,854
 800d34c:	0800d5b8 	rdprs	zero,at,854
 800d350:	0800d5b8 	rdprs	zero,at,854
 800d354:	0800d5b8 	rdprs	zero,at,854
 800d358:	0800d5b8 	rdprs	zero,at,854
 800d35c:	0800d5b8 	rdprs	zero,at,854
 800d360:	0800d5b8 	rdprs	zero,at,854
 800d364:	0800d5b8 	rdprs	zero,at,854
 800d368:	0800d5b8 	rdprs	zero,at,854
 800d36c:	0800d3e0 	cmpeqi	zero,at,847
 800d370:	0800d5b8 	rdprs	zero,at,854
 800d374:	0800d598 	cmpnei	zero,at,854
 800d378:	00801244 	movi	r2,73
 800d37c:	e084ca26 	beq	fp,r2,800e6a8 <_strtod_r+0x1458>
 800d380:	d9000c17 	ldw	r4,48(sp)
 800d384:	002b883a 	mov	r21,zero
 800d388:	0023883a 	mov	r17,zero
 800d38c:	20000626 	beq	r4,zero,800d3a8 <_strtod_r+0x158>
 800d390:	d8001015 	stw	zero,64(sp)
 800d394:	d8800c17 	ldw	r2,48(sp)
 800d398:	14c00015 	stw	r19,0(r2)
 800d39c:	d8c01017 	ldw	r3,64(sp)
 800d3a0:	18000126 	beq	r3,zero,800d3a8 <_strtod_r+0x158>
 800d3a4:	8c60003c 	xorhi	r17,r17,32768
 800d3a8:	a805883a 	mov	r2,r21
 800d3ac:	8807883a 	mov	r3,r17
 800d3b0:	dfc01e17 	ldw	ra,120(sp)
 800d3b4:	df001d17 	ldw	fp,116(sp)
 800d3b8:	ddc01c17 	ldw	r23,112(sp)
 800d3bc:	dd801b17 	ldw	r22,108(sp)
 800d3c0:	dd401a17 	ldw	r21,104(sp)
 800d3c4:	dd001917 	ldw	r20,100(sp)
 800d3c8:	dcc01817 	ldw	r19,96(sp)
 800d3cc:	dc801717 	ldw	r18,92(sp)
 800d3d0:	dc401617 	ldw	r17,88(sp)
 800d3d4:	dc001517 	ldw	r16,84(sp)
 800d3d8:	dec01f04 	addi	sp,sp,124
 800d3dc:	f800283a 	ret
 800d3e0:	d8001015 	stw	zero,64(sp)
 800d3e4:	1c800044 	addi	r18,r3,1
 800d3e8:	dc800615 	stw	r18,24(sp)
 800d3ec:	1f000043 	ldbu	fp,1(r3)
 800d3f0:	e0803fcc 	andi	r2,fp,255
 800d3f4:	1080201c 	xori	r2,r2,128
 800d3f8:	10bfe004 	addi	r2,r2,-128
 800d3fc:	103fe026 	beq	r2,zero,800d380 <__alt_data_end+0xfc00d380>
 800d400:	e1003fcc 	andi	r4,fp,255
 800d404:	2100201c 	xori	r4,r4,128
 800d408:	213fe004 	addi	r4,r4,-128
 800d40c:	00800c04 	movi	r2,48
 800d410:	20810c26 	beq	r4,r2,800d844 <_strtod_r+0x5f4>
 800d414:	dc800915 	stw	r18,36(sp)
 800d418:	d8000715 	stw	zero,28(sp)
 800d41c:	e0bff404 	addi	r2,fp,-48
 800d420:	10803fcc 	andi	r2,r2,255
 800d424:	04400244 	movi	r17,9
 800d428:	8883f436 	bltu	r17,r2,800e3fc <_strtod_r+0x11ac>
 800d42c:	d9000917 	ldw	r4,36(sp)
 800d430:	0029883a 	mov	r20,zero
 800d434:	0025883a 	mov	r18,zero
 800d438:	25800044 	addi	r22,r4,1
 800d43c:	002f883a 	mov	r23,zero
 800d440:	05400204 	movi	r21,8
 800d444:	adc05f16 	blt	r21,r23,800d5c4 <_strtod_r+0x374>
 800d448:	e7003fcc 	andi	fp,fp,255
 800d44c:	9009883a 	mov	r4,r18
 800d450:	01400284 	movi	r5,10
 800d454:	e700201c 	xori	fp,fp,128
 800d458:	8009fe40 	call	8009fe4 <__mulsi3>
 800d45c:	e73fe004 	addi	fp,fp,-128
 800d460:	1705883a 	add	r2,r2,fp
 800d464:	14bff404 	addi	r18,r2,-48
 800d468:	dd800615 	stw	r22,24(sp)
 800d46c:	b7000003 	ldbu	fp,0(r22)
 800d470:	b00f883a 	mov	r7,r22
 800d474:	bdc00044 	addi	r23,r23,1
 800d478:	e0fff404 	addi	r3,fp,-48
 800d47c:	18c03fcc 	andi	r3,r3,255
 800d480:	b5800044 	addi	r22,r22,1
 800d484:	88ffef2e 	bgeu	r17,r3,800d444 <__alt_data_end+0xfc00d444>
 800d488:	e7003fcc 	andi	fp,fp,255
 800d48c:	e700201c 	xori	fp,fp,128
 800d490:	e73fe004 	addi	fp,fp,-128
 800d494:	8009883a 	mov	r4,r16
 800d498:	d9c01315 	stw	r7,76(sp)
 800d49c:	80165640 	call	8016564 <_localeconv_r>
 800d4a0:	8009883a 	mov	r4,r16
 800d4a4:	14400017 	ldw	r17,0(r2)
 800d4a8:	80165640 	call	8016564 <_localeconv_r>
 800d4ac:	11000017 	ldw	r4,0(r2)
 800d4b0:	800d1b80 	call	800d1b8 <strlen>
 800d4b4:	d9c01317 	ldw	r7,76(sp)
 800d4b8:	880b883a 	mov	r5,r17
 800d4bc:	100d883a 	mov	r6,r2
 800d4c0:	3809883a 	mov	r4,r7
 800d4c4:	8018bb40 	call	8018bb4 <strncmp>
 800d4c8:	1000f126 	beq	r2,zero,800d890 <_strtod_r+0x640>
 800d4cc:	b82d883a 	mov	r22,r23
 800d4d0:	000f883a 	mov	r7,zero
 800d4d4:	0023883a 	mov	r17,zero
 800d4d8:	d8000815 	stw	zero,32(sp)
 800d4dc:	00801944 	movi	r2,101
 800d4e0:	e0804926 	beq	fp,r2,800d608 <_strtod_r+0x3b8>
 800d4e4:	00801144 	movi	r2,69
 800d4e8:	e0804726 	beq	fp,r2,800d608 <_strtod_r+0x3b8>
 800d4ec:	002b883a 	mov	r21,zero
 800d4f0:	b000951e 	bne	r22,zero,800d748 <_strtod_r+0x4f8>
 800d4f4:	38003e1e 	bne	r7,zero,800d5f0 <_strtod_r+0x3a0>
 800d4f8:	d8c00717 	ldw	r3,28(sp)
 800d4fc:	18003c1e 	bne	r3,zero,800d5f0 <_strtod_r+0x3a0>
 800d500:	d8c00817 	ldw	r3,32(sp)
 800d504:	183f9e1e 	bne	r3,zero,800d380 <__alt_data_end+0xfc00d380>
 800d508:	00801384 	movi	r2,78
 800d50c:	e0800526 	beq	fp,r2,800d524 <_strtod_r+0x2d4>
 800d510:	173f990e 	bge	r2,fp,800d378 <__alt_data_end+0xfc00d378>
 800d514:	00801a44 	movi	r2,105
 800d518:	e0846326 	beq	fp,r2,800e6a8 <_strtod_r+0x1458>
 800d51c:	00801b84 	movi	r2,110
 800d520:	e0bf971e 	bne	fp,r2,800d380 <__alt_data_end+0xfc00d380>
 800d524:	014200b4 	movhi	r5,2050
 800d528:	d9000617 	ldw	r4,24(sp)
 800d52c:	2940fe04 	addi	r5,r5,1016
 800d530:	01c00644 	movi	r7,25
 800d534:	00000b06 	br	800d564 <_strtod_r+0x314>
 800d538:	21000044 	addi	r4,r4,1
 800d53c:	20800003 	ldbu	r2,0(r4)
 800d540:	10ffefc4 	addi	r3,r2,-65
 800d544:	10803fcc 	andi	r2,r2,255
 800d548:	1080201c 	xori	r2,r2,128
 800d54c:	18c03fcc 	andi	r3,r3,255
 800d550:	10bfe004 	addi	r2,r2,-128
 800d554:	38c00136 	bltu	r7,r3,800d55c <_strtod_r+0x30c>
 800d558:	10800804 	addi	r2,r2,32
 800d55c:	29400044 	addi	r5,r5,1
 800d560:	11bf871e 	bne	r2,r6,800d380 <__alt_data_end+0xfc00d380>
 800d564:	29800007 	ldb	r6,0(r5)
 800d568:	303ff31e 	bne	r6,zero,800d538 <__alt_data_end+0xfc00d538>
 800d56c:	20800044 	addi	r2,r4,1
 800d570:	d8800615 	stw	r2,24(sp)
 800d574:	20c00047 	ldb	r3,1(r4)
 800d578:	00800a04 	movi	r2,40
 800d57c:	18849926 	beq	r3,r2,800e7e4 <_strtod_r+0x1594>
 800d580:	00fffe34 	movhi	r3,65528
 800d584:	d8c00715 	stw	r3,28(sp)
 800d588:	d8000815 	stw	zero,32(sp)
 800d58c:	dd400817 	ldw	r21,32(sp)
 800d590:	dc400717 	ldw	r17,28(sp)
 800d594:	00001806 	br	800d5f8 <_strtod_r+0x3a8>
 800d598:	00800044 	movi	r2,1
 800d59c:	d8801015 	stw	r2,64(sp)
 800d5a0:	003f9006 	br	800d3e4 <__alt_data_end+0xfc00d3e4>
 800d5a4:	18c00044 	addi	r3,r3,1
 800d5a8:	d8c00615 	stw	r3,24(sp)
 800d5ac:	1f000003 	ldbu	fp,0(r3)
 800d5b0:	e0803fcc 	andi	r2,fp,255
 800d5b4:	20bf3e2e 	bgeu	r4,r2,800d2b0 <__alt_data_end+0xfc00d2b0>
 800d5b8:	1825883a 	mov	r18,r3
 800d5bc:	d8001015 	stw	zero,64(sp)
 800d5c0:	003f8f06 	br	800d400 <__alt_data_end+0xfc00d400>
 800d5c4:	008003c4 	movi	r2,15
 800d5c8:	15ffa716 	blt	r2,r23,800d468 <__alt_data_end+0xfc00d468>
 800d5cc:	a009883a 	mov	r4,r20
 800d5d0:	01400284 	movi	r5,10
 800d5d4:	8009fe40 	call	8009fe4 <__mulsi3>
 800d5d8:	e0c03fcc 	andi	r3,fp,255
 800d5dc:	18c0201c 	xori	r3,r3,128
 800d5e0:	18ffe004 	addi	r3,r3,-128
 800d5e4:	10c5883a 	add	r2,r2,r3
 800d5e8:	153ff404 	addi	r20,r2,-48
 800d5ec:	003f9e06 	br	800d468 <__alt_data_end+0xfc00d468>
 800d5f0:	002b883a 	mov	r21,zero
 800d5f4:	0023883a 	mov	r17,zero
 800d5f8:	d9000c17 	ldw	r4,48(sp)
 800d5fc:	203f6726 	beq	r4,zero,800d39c <__alt_data_end+0xfc00d39c>
 800d600:	dcc00617 	ldw	r19,24(sp)
 800d604:	003f6306 	br	800d394 <__alt_data_end+0xfc00d394>
 800d608:	b0008926 	beq	r22,zero,800d830 <_strtod_r+0x5e0>
 800d60c:	dcc00617 	ldw	r19,24(sp)
 800d610:	98800044 	addi	r2,r19,1
 800d614:	d8800615 	stw	r2,24(sp)
 800d618:	98c00047 	ldb	r3,1(r19)
 800d61c:	00800ac4 	movi	r2,43
 800d620:	18827026 	beq	r3,r2,800dfe4 <_strtod_r+0xd94>
 800d624:	00800b44 	movi	r2,45
 800d628:	18826826 	beq	r3,r2,800dfcc <_strtod_r+0xd7c>
 800d62c:	1839883a 	mov	fp,r3
 800d630:	d8000a15 	stw	zero,40(sp)
 800d634:	e13ff404 	addi	r4,fp,-48
 800d638:	01400244 	movi	r5,9
 800d63c:	e005883a 	mov	r2,fp
 800d640:	29025036 	bltu	r5,r4,800df84 <_strtod_r+0xd34>
 800d644:	01000c04 	movi	r4,48
 800d648:	e100081e 	bne	fp,r4,800d66c <_strtod_r+0x41c>
 800d64c:	d9400617 	ldw	r5,24(sp)
 800d650:	e007883a 	mov	r3,fp
 800d654:	29400044 	addi	r5,r5,1
 800d658:	d9400615 	stw	r5,24(sp)
 800d65c:	28800007 	ldb	r2,0(r5)
 800d660:	29400044 	addi	r5,r5,1
 800d664:	10fffc26 	beq	r2,r3,800d658 <__alt_data_end+0xfc00d658>
 800d668:	1039883a 	mov	fp,r2
 800d66c:	10bff3c4 	addi	r2,r2,-49
 800d670:	01000204 	movi	r4,8
 800d674:	20bf9d36 	bltu	r4,r2,800d4ec <__alt_data_end+0xfc00d4ec>
 800d678:	d8c00617 	ldw	r3,24(sp)
 800d67c:	e13ff404 	addi	r4,fp,-48
 800d680:	01400244 	movi	r5,9
 800d684:	1b000044 	addi	r12,r3,1
 800d688:	db000615 	stw	r12,24(sp)
 800d68c:	d8c00b15 	stw	r3,44(sp)
 800d690:	18c00043 	ldbu	r3,1(r3)
 800d694:	18bff404 	addi	r2,r3,-48
 800d698:	1f003fcc 	andi	fp,r3,255
 800d69c:	e700201c 	xori	fp,fp,128
 800d6a0:	10803fcc 	andi	r2,r2,255
 800d6a4:	e73fe004 	addi	fp,fp,-128
 800d6a8:	28801b36 	bltu	r5,r2,800d718 <_strtod_r+0x4c8>
 800d6ac:	d8c00b17 	ldw	r3,44(sp)
 800d6b0:	9805883a 	mov	r2,r19
 800d6b4:	d9c00d15 	stw	r7,52(sp)
 800d6b8:	8027883a 	mov	r19,r16
 800d6bc:	1d400084 	addi	r21,r3,2
 800d6c0:	e021883a 	mov	r16,fp
 800d6c4:	1039883a 	mov	fp,r2
 800d6c8:	01400284 	movi	r5,10
 800d6cc:	8009fe40 	call	8009fe4 <__mulsi3>
 800d6d0:	dd400615 	stw	r21,24(sp)
 800d6d4:	a9800003 	ldbu	r6,0(r21)
 800d6d8:	1405883a 	add	r2,r2,r16
 800d6dc:	113ff404 	addi	r4,r2,-48
 800d6e0:	317ff404 	addi	r5,r6,-48
 800d6e4:	34003fcc 	andi	r16,r6,255
 800d6e8:	8400201c 	xori	r16,r16,128
 800d6ec:	29403fcc 	andi	r5,r5,255
 800d6f0:	00800244 	movi	r2,9
 800d6f4:	a819883a 	mov	r12,r21
 800d6f8:	843fe004 	addi	r16,r16,-128
 800d6fc:	ad400044 	addi	r21,r21,1
 800d700:	117ff12e 	bgeu	r2,r5,800d6c8 <__alt_data_end+0xfc00d6c8>
 800d704:	d9c00d17 	ldw	r7,52(sp)
 800d708:	e005883a 	mov	r2,fp
 800d70c:	8039883a 	mov	fp,r16
 800d710:	9821883a 	mov	r16,r19
 800d714:	1027883a 	mov	r19,r2
 800d718:	d8c00b17 	ldw	r3,44(sp)
 800d71c:	00800204 	movi	r2,8
 800d720:	60d9c83a 	sub	r12,r12,r3
 800d724:	13033316 	blt	r2,r12,800e3f4 <_strtod_r+0x11a4>
 800d728:	009387c4 	movi	r2,19999
 800d72c:	1100010e 	bge	r2,r4,800d734 <_strtod_r+0x4e4>
 800d730:	1009883a 	mov	r4,r2
 800d734:	d8c00a17 	ldw	r3,40(sp)
 800d738:	00c5c83a 	sub	r2,zero,r3
 800d73c:	2088f03a 	xor	r4,r4,r2
 800d740:	20eb883a 	add	r21,r4,r3
 800d744:	b03f6b26 	beq	r22,zero,800d4f4 <__alt_data_end+0xfc00d4f4>
 800d748:	ac63c83a 	sub	r17,r21,r17
 800d74c:	dc400e15 	stw	r17,56(sp)
 800d750:	b800011e 	bne	r23,zero,800d758 <_strtod_r+0x508>
 800d754:	b02f883a 	mov	r23,r22
 800d758:	00800404 	movi	r2,16
 800d75c:	b023883a 	mov	r17,r22
 800d760:	1580010e 	bge	r2,r22,800d768 <_strtod_r+0x518>
 800d764:	1023883a 	mov	r17,r2
 800d768:	9009883a 	mov	r4,r18
 800d76c:	801ccf40 	call	801ccf4 <__floatunsidf>
 800d770:	d8800815 	stw	r2,32(sp)
 800d774:	d8c00715 	stw	r3,28(sp)
 800d778:	00800244 	movi	r2,9
 800d77c:	1440150e 	bge	r2,r17,800d7d4 <_strtod_r+0x584>
 800d780:	88bffdc4 	addi	r2,r17,-9
 800d784:	100490fa 	slli	r2,r2,3
 800d788:	180b883a 	mov	r5,r3
 800d78c:	00c200b4 	movhi	r3,2050
 800d790:	18c1ee04 	addi	r3,r3,1976
 800d794:	1885883a 	add	r2,r3,r2
 800d798:	d9000817 	ldw	r4,32(sp)
 800d79c:	11800017 	ldw	r6,0(r2)
 800d7a0:	11c00117 	ldw	r7,4(r2)
 800d7a4:	800b9f00 	call	800b9f0 <__muldf3>
 800d7a8:	a009883a 	mov	r4,r20
 800d7ac:	102b883a 	mov	r21,r2
 800d7b0:	1827883a 	mov	r19,r3
 800d7b4:	801ccf40 	call	801ccf4 <__floatunsidf>
 800d7b8:	a809883a 	mov	r4,r21
 800d7bc:	980b883a 	mov	r5,r19
 800d7c0:	100d883a 	mov	r6,r2
 800d7c4:	180f883a 	mov	r7,r3
 800d7c8:	800a5900 	call	800a590 <__adddf3>
 800d7cc:	d8800815 	stw	r2,32(sp)
 800d7d0:	d8c00715 	stw	r3,28(sp)
 800d7d4:	008003c4 	movi	r2,15
 800d7d8:	15805016 	blt	r2,r22,800d91c <_strtod_r+0x6cc>
 800d7dc:	d8c00e17 	ldw	r3,56(sp)
 800d7e0:	183f6a26 	beq	r3,zero,800d58c <__alt_data_end+0xfc00d58c>
 800d7e4:	d9000e17 	ldw	r4,56(sp)
 800d7e8:	0103870e 	bge	zero,r4,800e608 <_strtod_r+0x13b8>
 800d7ec:	00c00584 	movi	r3,22
 800d7f0:	19030a16 	blt	r3,r4,800e41c <_strtod_r+0x11cc>
 800d7f4:	202290fa 	slli	r17,r4,3
 800d7f8:	008200b4 	movhi	r2,2050
 800d7fc:	1081ee04 	addi	r2,r2,1976
 800d800:	1445883a 	add	r2,r2,r17
 800d804:	d9800817 	ldw	r6,32(sp)
 800d808:	d9c00717 	ldw	r7,28(sp)
 800d80c:	11000017 	ldw	r4,0(r2)
 800d810:	11400117 	ldw	r5,4(r2)
 800d814:	800b9f00 	call	800b9f0 <__muldf3>
 800d818:	102b883a 	mov	r21,r2
 800d81c:	1823883a 	mov	r17,r3
 800d820:	003f7506 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800d824:	00c00044 	movi	r3,1
 800d828:	0023883a 	mov	r17,zero
 800d82c:	d8c00815 	stw	r3,32(sp)
 800d830:	3800021e 	bne	r7,zero,800d83c <_strtod_r+0x5ec>
 800d834:	d8c00717 	ldw	r3,28(sp)
 800d838:	183ed126 	beq	r3,zero,800d380 <__alt_data_end+0xfc00d380>
 800d83c:	002d883a 	mov	r22,zero
 800d840:	003f7206 	br	800d60c <__alt_data_end+0xfc00d60c>
 800d844:	90800047 	ldb	r2,1(r18)
 800d848:	00c01604 	movi	r3,88
 800d84c:	10c22726 	beq	r2,r3,800e0ec <_strtod_r+0xe9c>
 800d850:	00c01e04 	movi	r3,120
 800d854:	10c22526 	beq	r2,r3,800e0ec <_strtod_r+0xe9c>
 800d858:	90800044 	addi	r2,r18,1
 800d85c:	1025883a 	mov	r18,r2
 800d860:	d8800615 	stw	r2,24(sp)
 800d864:	10800044 	addi	r2,r2,1
 800d868:	173fffc3 	ldbu	fp,-1(r2)
 800d86c:	e0c03fcc 	andi	r3,fp,255
 800d870:	18c0201c 	xori	r3,r3,128
 800d874:	18ffe004 	addi	r3,r3,-128
 800d878:	193ff826 	beq	r3,r4,800d85c <__alt_data_end+0xfc00d85c>
 800d87c:	183f5c26 	beq	r3,zero,800d5f0 <__alt_data_end+0xfc00d5f0>
 800d880:	00c00044 	movi	r3,1
 800d884:	dc800915 	stw	r18,36(sp)
 800d888:	d8c00715 	stw	r3,28(sp)
 800d88c:	003ee306 	br	800d41c <__alt_data_end+0xfc00d41c>
 800d890:	8009883a 	mov	r4,r16
 800d894:	80165640 	call	8016564 <_localeconv_r>
 800d898:	11000017 	ldw	r4,0(r2)
 800d89c:	800d1b80 	call	800d1b8 <strlen>
 800d8a0:	dd400617 	ldw	r21,24(sp)
 800d8a4:	a885883a 	add	r2,r21,r2
 800d8a8:	d8800615 	stw	r2,24(sp)
 800d8ac:	17000007 	ldb	fp,0(r2)
 800d8b0:	b801b71e 	bne	r23,zero,800df90 <_strtod_r+0xd40>
 800d8b4:	01000c04 	movi	r4,48
 800d8b8:	e103a51e 	bne	fp,r4,800e750 <_strtod_r+0x1500>
 800d8bc:	11000044 	addi	r4,r2,1
 800d8c0:	e00b883a 	mov	r5,fp
 800d8c4:	d9000615 	stw	r4,24(sp)
 800d8c8:	27000007 	ldb	fp,0(r4)
 800d8cc:	208fc83a 	sub	r7,r4,r2
 800d8d0:	21000044 	addi	r4,r4,1
 800d8d4:	e17ffb26 	beq	fp,r5,800d8c4 <__alt_data_end+0xfc00d8c4>
 800d8d8:	e0bff3c4 	addi	r2,fp,-49
 800d8dc:	01000204 	movi	r4,8
 800d8e0:	2081f536 	bltu	r4,r2,800e0b8 <_strtod_r+0xe68>
 800d8e4:	d9000617 	ldw	r4,24(sp)
 800d8e8:	e73ff404 	addi	fp,fp,-48
 800d8ec:	df000815 	stw	fp,32(sp)
 800d8f0:	d9000915 	stw	r4,36(sp)
 800d8f4:	3c400044 	addi	r17,r7,1
 800d8f8:	202b883a 	mov	r21,r4
 800d8fc:	05800044 	movi	r22,1
 800d900:	9009883a 	mov	r4,r18
 800d904:	01400284 	movi	r5,10
 800d908:	8009fe40 	call	8009fe4 <__mulsi3>
 800d90c:	d8c00817 	ldw	r3,32(sp)
 800d910:	000f883a 	mov	r7,zero
 800d914:	18a5883a 	add	r18,r3,r2
 800d918:	0001a806 	br	800dfbc <_strtod_r+0xd6c>
 800d91c:	d9000e17 	ldw	r4,56(sp)
 800d920:	b463c83a 	sub	r17,r22,r17
 800d924:	2463883a 	add	r17,r4,r17
 800d928:	0442680e 	bge	zero,r17,800e2cc <_strtod_r+0x107c>
 800d92c:	888003cc 	andi	r2,r17,15
 800d930:	10000b26 	beq	r2,zero,800d960 <_strtod_r+0x710>
 800d934:	100490fa 	slli	r2,r2,3
 800d938:	00c200b4 	movhi	r3,2050
 800d93c:	18c1ee04 	addi	r3,r3,1976
 800d940:	1885883a 	add	r2,r3,r2
 800d944:	d9800817 	ldw	r6,32(sp)
 800d948:	d9c00717 	ldw	r7,28(sp)
 800d94c:	11000017 	ldw	r4,0(r2)
 800d950:	11400117 	ldw	r5,4(r2)
 800d954:	800b9f00 	call	800b9f0 <__muldf3>
 800d958:	d8800815 	stw	r2,32(sp)
 800d95c:	d8c00715 	stw	r3,28(sp)
 800d960:	04fffc04 	movi	r19,-16
 800d964:	8ce2703a 	and	r17,r17,r19
 800d968:	8801a31e 	bne	r17,zero,800dff8 <_strtod_r+0xda8>
 800d96c:	dd400817 	ldw	r21,32(sp)
 800d970:	dc400717 	ldw	r17,28(sp)
 800d974:	d8001215 	stw	zero,72(sp)
 800d978:	d9400917 	ldw	r5,36(sp)
 800d97c:	8009883a 	mov	r4,r16
 800d980:	b00f883a 	mov	r7,r22
 800d984:	dc800015 	stw	r18,0(sp)
 800d988:	b80d883a 	mov	r6,r23
 800d98c:	80175a40 	call	80175a4 <__s2b>
 800d990:	d8800d15 	stw	r2,52(sp)
 800d994:	d8800e17 	ldw	r2,56(sp)
 800d998:	d9000d17 	ldw	r4,52(sp)
 800d99c:	dd801217 	ldw	r22,72(sp)
 800d9a0:	1007d7fa 	srai	r3,r2,31
 800d9a4:	0085c83a 	sub	r2,zero,r2
 800d9a8:	21000304 	addi	r4,r4,12
 800d9ac:	1886703a 	and	r3,r3,r2
 800d9b0:	d9001115 	stw	r4,68(sp)
 800d9b4:	d8c00915 	stw	r3,36(sp)
 800d9b8:	d8800d17 	ldw	r2,52(sp)
 800d9bc:	8009883a 	mov	r4,r16
 800d9c0:	0029883a 	mov	r20,zero
 800d9c4:	11400117 	ldw	r5,4(r2)
 800d9c8:	80173980 	call	8017398 <_Balloc>
 800d9cc:	d8c00d17 	ldw	r3,52(sp)
 800d9d0:	d9401117 	ldw	r5,68(sp)
 800d9d4:	11000304 	addi	r4,r2,12
 800d9d8:	19800417 	ldw	r6,16(r3)
 800d9dc:	1027883a 	mov	r19,r2
 800d9e0:	31800084 	addi	r6,r6,2
 800d9e4:	318d883a 	add	r6,r6,r6
 800d9e8:	318d883a 	add	r6,r6,r6
 800d9ec:	8016fe00 	call	8016fe0 <memcpy>
 800d9f0:	d8800204 	addi	r2,sp,8
 800d9f4:	8009883a 	mov	r4,r16
 800d9f8:	a80b883a 	mov	r5,r21
 800d9fc:	880d883a 	mov	r6,r17
 800da00:	d9c00404 	addi	r7,sp,16
 800da04:	d8800015 	stw	r2,0(sp)
 800da08:	80180880 	call	8018088 <__d2b>
 800da0c:	8009883a 	mov	r4,r16
 800da10:	01400044 	movi	r5,1
 800da14:	d8800515 	stw	r2,20(sp)
 800da18:	80177c00 	call	80177c0 <__i2b>
 800da1c:	d8c00e17 	ldw	r3,56(sp)
 800da20:	1025883a 	mov	r18,r2
 800da24:	00c0010e 	bge	zero,r3,800da2c <_strtod_r+0x7dc>
 800da28:	1829883a 	mov	r20,r3
 800da2c:	d8800417 	ldw	r2,16(sp)
 800da30:	1000dc16 	blt	r2,zero,800dda4 <_strtod_r+0xb54>
 800da34:	d9000917 	ldw	r4,36(sp)
 800da38:	a02f883a 	mov	r23,r20
 800da3c:	20b9883a 	add	fp,r4,r2
 800da40:	d9000217 	ldw	r4,8(sp)
 800da44:	1585c83a 	sub	r2,r2,r22
 800da48:	00ff00c4 	movi	r3,-1021
 800da4c:	110b883a 	add	r5,r2,r4
 800da50:	28c09e0e 	bge	r5,r3,800dccc <_strtod_r+0xa7c>
 800da54:	10810cc4 	addi	r2,r2,1075
 800da58:	e087883a 	add	r3,fp,r2
 800da5c:	b885883a 	add	r2,r23,r2
 800da60:	15af883a 	add	r23,r2,r22
 800da64:	1805883a 	mov	r2,r3
 800da68:	e0c0010e 	bge	fp,r3,800da70 <_strtod_r+0x820>
 800da6c:	e005883a 	mov	r2,fp
 800da70:	b880010e 	bge	r23,r2,800da78 <_strtod_r+0x828>
 800da74:	b805883a 	mov	r2,r23
 800da78:	0080030e 	bge	zero,r2,800da88 <_strtod_r+0x838>
 800da7c:	1887c83a 	sub	r3,r3,r2
 800da80:	b8afc83a 	sub	r23,r23,r2
 800da84:	e0b9c83a 	sub	fp,fp,r2
 800da88:	d8800917 	ldw	r2,36(sp)
 800da8c:	10001126 	beq	r2,zero,800dad4 <_strtod_r+0x884>
 800da90:	900b883a 	mov	r5,r18
 800da94:	100d883a 	mov	r6,r2
 800da98:	8009883a 	mov	r4,r16
 800da9c:	d8c01415 	stw	r3,80(sp)
 800daa0:	8017a8c0 	call	8017a8c <__pow5mult>
 800daa4:	d9800517 	ldw	r6,20(sp)
 800daa8:	8009883a 	mov	r4,r16
 800daac:	100b883a 	mov	r5,r2
 800dab0:	1025883a 	mov	r18,r2
 800dab4:	80177fc0 	call	80177fc <__multiply>
 800dab8:	d9400517 	ldw	r5,20(sp)
 800dabc:	8009883a 	mov	r4,r16
 800dac0:	d8801315 	stw	r2,76(sp)
 800dac4:	80174400 	call	8017440 <_Bfree>
 800dac8:	d8801317 	ldw	r2,76(sp)
 800dacc:	d8c01417 	ldw	r3,80(sp)
 800dad0:	d8800515 	stw	r2,20(sp)
 800dad4:	00c0050e 	bge	zero,r3,800daec <_strtod_r+0x89c>
 800dad8:	d9400517 	ldw	r5,20(sp)
 800dadc:	8009883a 	mov	r4,r16
 800dae0:	180d883a 	mov	r6,r3
 800dae4:	8017bcc0 	call	8017bcc <__lshift>
 800dae8:	d8800515 	stw	r2,20(sp)
 800daec:	a0000526 	beq	r20,zero,800db04 <_strtod_r+0x8b4>
 800daf0:	980b883a 	mov	r5,r19
 800daf4:	8009883a 	mov	r4,r16
 800daf8:	a00d883a 	mov	r6,r20
 800dafc:	8017a8c0 	call	8017a8c <__pow5mult>
 800db00:	1027883a 	mov	r19,r2
 800db04:	05c0050e 	bge	zero,r23,800db1c <_strtod_r+0x8cc>
 800db08:	980b883a 	mov	r5,r19
 800db0c:	8009883a 	mov	r4,r16
 800db10:	b80d883a 	mov	r6,r23
 800db14:	8017bcc0 	call	8017bcc <__lshift>
 800db18:	1027883a 	mov	r19,r2
 800db1c:	0700050e 	bge	zero,fp,800db34 <_strtod_r+0x8e4>
 800db20:	900b883a 	mov	r5,r18
 800db24:	8009883a 	mov	r4,r16
 800db28:	e00d883a 	mov	r6,fp
 800db2c:	8017bcc0 	call	8017bcc <__lshift>
 800db30:	1025883a 	mov	r18,r2
 800db34:	d9400517 	ldw	r5,20(sp)
 800db38:	8009883a 	mov	r4,r16
 800db3c:	980d883a 	mov	r6,r19
 800db40:	8017d740 	call	8017d74 <__mdiff>
 800db44:	10c00317 	ldw	r3,12(r2)
 800db48:	1009883a 	mov	r4,r2
 800db4c:	10000315 	stw	zero,12(r2)
 800db50:	900b883a 	mov	r5,r18
 800db54:	1029883a 	mov	r20,r2
 800db58:	d8c00b15 	stw	r3,44(sp)
 800db5c:	8017d140 	call	8017d14 <__mcmp>
 800db60:	10017616 	blt	r2,zero,800e13c <_strtod_r+0xeec>
 800db64:	1001b626 	beq	r2,zero,800e240 <_strtod_r+0xff0>
 800db68:	a009883a 	mov	r4,r20
 800db6c:	900b883a 	mov	r5,r18
 800db70:	80181c40 	call	80181c4 <__ratio>
 800db74:	1009883a 	mov	r4,r2
 800db78:	180b883a 	mov	r5,r3
 800db7c:	000d883a 	mov	r6,zero
 800db80:	01d00034 	movhi	r7,16384
 800db84:	182f883a 	mov	r23,r3
 800db88:	d8801315 	stw	r2,76(sp)
 800db8c:	800b9100 	call	800b910 <__ledf2>
 800db90:	da001317 	ldw	r8,76(sp)
 800db94:	00805016 	blt	zero,r2,800dcd8 <_strtod_r+0xa88>
 800db98:	d9000b17 	ldw	r4,44(sp)
 800db9c:	20008426 	beq	r4,zero,800ddb0 <_strtod_r+0xb60>
 800dba0:	05cffc34 	movhi	r23,16368
 800dba4:	0039883a 	mov	fp,zero
 800dba8:	d8000f15 	stw	zero,60(sp)
 800dbac:	ddc00a15 	stw	r23,40(sp)
 800dbb0:	d8800717 	ldw	r2,28(sp)
 800dbb4:	125ffc2c 	andhi	r9,r2,32752
 800dbb8:	009ff834 	movhi	r2,32736
 800dbbc:	48805626 	beq	r9,r2,800dd18 <_strtod_r+0xac8>
 800dbc0:	b0001e26 	beq	r22,zero,800dc3c <_strtod_r+0x9ec>
 800dbc4:	0081a834 	movhi	r2,1696
 800dbc8:	12401c36 	bltu	r2,r9,800dc3c <_strtod_r+0x9ec>
 800dbcc:	d9000f17 	ldw	r4,60(sp)
 800dbd0:	d9400a17 	ldw	r5,40(sp)
 800dbd4:	01d07834 	movhi	r7,16864
 800dbd8:	39ffffc4 	addi	r7,r7,-1
 800dbdc:	01bff034 	movhi	r6,65472
 800dbe0:	da401315 	stw	r9,76(sp)
 800dbe4:	800b9100 	call	800b910 <__ledf2>
 800dbe8:	da401317 	ldw	r9,76(sp)
 800dbec:	00801016 	blt	zero,r2,800dc30 <_strtod_r+0x9e0>
 800dbf0:	d9000f17 	ldw	r4,60(sp)
 800dbf4:	d9400a17 	ldw	r5,40(sp)
 800dbf8:	8009e440 	call	8009e44 <__fixunsdfsi>
 800dbfc:	da401317 	ldw	r9,76(sp)
 800dc00:	1000dc26 	beq	r2,zero,800df74 <_strtod_r+0xd24>
 800dc04:	1009883a 	mov	r4,r2
 800dc08:	801ccf40 	call	801ccf4 <__floatunsidf>
 800dc0c:	da401317 	ldw	r9,76(sp)
 800dc10:	d8800f15 	stw	r2,60(sp)
 800dc14:	d8c00a15 	stw	r3,40(sp)
 800dc18:	d8c00b17 	ldw	r3,44(sp)
 800dc1c:	1800d31e 	bne	r3,zero,800df6c <_strtod_r+0xd1c>
 800dc20:	d9000a17 	ldw	r4,40(sp)
 800dc24:	2220003c 	xorhi	r8,r4,32768
 800dc28:	df000f17 	ldw	fp,60(sp)
 800dc2c:	402f883a 	mov	r23,r8
 800dc30:	0081ac34 	movhi	r2,1712
 800dc34:	b891883a 	add	r8,r23,r2
 800dc38:	426fc83a 	sub	r23,r8,r9
 800dc3c:	a809883a 	mov	r4,r21
 800dc40:	880b883a 	mov	r5,r17
 800dc44:	da401315 	stw	r9,76(sp)
 800dc48:	8017f0c0 	call	8017f0c <__ulp>
 800dc4c:	b80b883a 	mov	r5,r23
 800dc50:	e009883a 	mov	r4,fp
 800dc54:	100d883a 	mov	r6,r2
 800dc58:	180f883a 	mov	r7,r3
 800dc5c:	800b9f00 	call	800b9f0 <__muldf3>
 800dc60:	a809883a 	mov	r4,r21
 800dc64:	880b883a 	mov	r5,r17
 800dc68:	100d883a 	mov	r6,r2
 800dc6c:	180f883a 	mov	r7,r3
 800dc70:	800a5900 	call	800a590 <__adddf3>
 800dc74:	da401317 	ldw	r9,76(sp)
 800dc78:	102b883a 	mov	r21,r2
 800dc7c:	1823883a 	mov	r17,r3
 800dc80:	d8800815 	stw	r2,32(sp)
 800dc84:	d8c00715 	stw	r3,28(sp)
 800dc88:	182f883a 	mov	r23,r3
 800dc8c:	b000021e 	bne	r22,zero,800dc98 <_strtod_r+0xa48>
 800dc90:	b89ffc2c 	andhi	r2,r23,32752
 800dc94:	48806e26 	beq	r9,r2,800de50 <_strtod_r+0xc00>
 800dc98:	d9400517 	ldw	r5,20(sp)
 800dc9c:	8009883a 	mov	r4,r16
 800dca0:	80174400 	call	8017440 <_Bfree>
 800dca4:	8009883a 	mov	r4,r16
 800dca8:	980b883a 	mov	r5,r19
 800dcac:	80174400 	call	8017440 <_Bfree>
 800dcb0:	8009883a 	mov	r4,r16
 800dcb4:	900b883a 	mov	r5,r18
 800dcb8:	80174400 	call	8017440 <_Bfree>
 800dcbc:	8009883a 	mov	r4,r16
 800dcc0:	a00b883a 	mov	r5,r20
 800dcc4:	80174400 	call	8017440 <_Bfree>
 800dcc8:	003f3b06 	br	800d9b8 <__alt_data_end+0xfc00d9b8>
 800dccc:	00c00d84 	movi	r3,54
 800dcd0:	1905c83a 	sub	r2,r3,r4
 800dcd4:	003f6006 	br	800da58 <__alt_data_end+0xfc00da58>
 800dcd8:	4009883a 	mov	r4,r8
 800dcdc:	b80b883a 	mov	r5,r23
 800dce0:	000d883a 	mov	r6,zero
 800dce4:	01cff834 	movhi	r7,16352
 800dce8:	800b9f00 	call	800b9f0 <__muldf3>
 800dcec:	d9000b17 	ldw	r4,44(sp)
 800dcf0:	d8800f15 	stw	r2,60(sp)
 800dcf4:	d8c00a15 	stw	r3,40(sp)
 800dcf8:	2000481e 	bne	r4,zero,800de1c <_strtod_r+0xbcc>
 800dcfc:	1a20003c 	xorhi	r8,r3,32768
 800dd00:	1039883a 	mov	fp,r2
 800dd04:	d8800717 	ldw	r2,28(sp)
 800dd08:	402f883a 	mov	r23,r8
 800dd0c:	125ffc2c 	andhi	r9,r2,32752
 800dd10:	009ff834 	movhi	r2,32736
 800dd14:	48bfaa1e 	bne	r9,r2,800dbc0 <__alt_data_end+0xfc00dbc0>
 800dd18:	d8c00717 	ldw	r3,28(sp)
 800dd1c:	00bf2c34 	movhi	r2,64688
 800dd20:	d9000817 	ldw	r4,32(sp)
 800dd24:	1887883a 	add	r3,r3,r2
 800dd28:	180b883a 	mov	r5,r3
 800dd2c:	da401315 	stw	r9,76(sp)
 800dd30:	d8c00715 	stw	r3,28(sp)
 800dd34:	8017f0c0 	call	8017f0c <__ulp>
 800dd38:	e009883a 	mov	r4,fp
 800dd3c:	b80b883a 	mov	r5,r23
 800dd40:	100d883a 	mov	r6,r2
 800dd44:	180f883a 	mov	r7,r3
 800dd48:	800b9f00 	call	800b9f0 <__muldf3>
 800dd4c:	d9000817 	ldw	r4,32(sp)
 800dd50:	d9400717 	ldw	r5,28(sp)
 800dd54:	100d883a 	mov	r6,r2
 800dd58:	180f883a 	mov	r7,r3
 800dd5c:	800a5900 	call	800a590 <__adddf3>
 800dd60:	011f2834 	movhi	r4,31904
 800dd64:	d8800815 	stw	r2,32(sp)
 800dd68:	213fffc4 	addi	r4,r4,-1
 800dd6c:	189ffc2c 	andhi	r2,r3,32752
 800dd70:	da401317 	ldw	r9,76(sp)
 800dd74:	2080762e 	bgeu	r4,r2,800df50 <_strtod_r+0xd00>
 800dd78:	009ffc34 	movhi	r2,32752
 800dd7c:	10bfffc4 	addi	r2,r2,-1
 800dd80:	88814526 	beq	r17,r2,800e298 <_strtod_r+0x1048>
 800dd84:	00dffc34 	movhi	r3,32752
 800dd88:	18ffffc4 	addi	r3,r3,-1
 800dd8c:	013fffc4 	movi	r4,-1
 800dd90:	d8c00715 	stw	r3,28(sp)
 800dd94:	d9000815 	stw	r4,32(sp)
 800dd98:	202b883a 	mov	r21,r4
 800dd9c:	1823883a 	mov	r17,r3
 800dda0:	003fbd06 	br	800dc98 <__alt_data_end+0xfc00dc98>
 800dda4:	a0afc83a 	sub	r23,r20,r2
 800dda8:	df000917 	ldw	fp,36(sp)
 800ddac:	003f2406 	br	800da40 <__alt_data_end+0xfc00da40>
 800ddb0:	d8800817 	ldw	r2,32(sp)
 800ddb4:	10001b1e 	bne	r2,zero,800de24 <_strtod_r+0xbd4>
 800ddb8:	d8c00717 	ldw	r3,28(sp)
 800ddbc:	01000434 	movhi	r4,16
 800ddc0:	213fffc4 	addi	r4,r4,-1
 800ddc4:	1904703a 	and	r2,r3,r4
 800ddc8:	10001b1e 	bne	r2,zero,800de38 <_strtod_r+0xbe8>
 800ddcc:	4009883a 	mov	r4,r8
 800ddd0:	b80b883a 	mov	r5,r23
 800ddd4:	000d883a 	mov	r6,zero
 800ddd8:	01cffc34 	movhi	r7,16368
 800dddc:	da001315 	stw	r8,76(sp)
 800dde0:	800b9100 	call	800b910 <__ledf2>
 800dde4:	da001317 	ldw	r8,76(sp)
 800dde8:	10017c16 	blt	r2,zero,800e3dc <_strtod_r+0x118c>
 800ddec:	4009883a 	mov	r4,r8
 800ddf0:	b80b883a 	mov	r5,r23
 800ddf4:	000d883a 	mov	r6,zero
 800ddf8:	01cff834 	movhi	r7,16352
 800ddfc:	800b9f00 	call	800b9f0 <__muldf3>
 800de00:	d8800f15 	stw	r2,60(sp)
 800de04:	d8c00a15 	stw	r3,40(sp)
 800de08:	102f883a 	mov	r23,r2
 800de0c:	1a20003c 	xorhi	r8,r3,32768
 800de10:	b839883a 	mov	fp,r23
 800de14:	402f883a 	mov	r23,r8
 800de18:	003f6506 	br	800dbb0 <__alt_data_end+0xfc00dbb0>
 800de1c:	da000a17 	ldw	r8,40(sp)
 800de20:	003fb706 	br	800dd00 <__alt_data_end+0xfc00dd00>
 800de24:	d8c00817 	ldw	r3,32(sp)
 800de28:	00800044 	movi	r2,1
 800de2c:	1880021e 	bne	r3,r2,800de38 <_strtod_r+0xbe8>
 800de30:	d9000717 	ldw	r4,28(sp)
 800de34:	2000a726 	beq	r4,zero,800e0d4 <_strtod_r+0xe84>
 800de38:	008ffc34 	movhi	r2,16368
 800de3c:	0039883a 	mov	fp,zero
 800de40:	05effc34 	movhi	r23,49136
 800de44:	d8000f15 	stw	zero,60(sp)
 800de48:	d8800a15 	stw	r2,40(sp)
 800de4c:	003f5806 	br	800dbb0 <__alt_data_end+0xfc00dbb0>
 800de50:	d9400a17 	ldw	r5,40(sp)
 800de54:	d9000f17 	ldw	r4,60(sp)
 800de58:	800cb2c0 	call	800cb2c <__fixdfsi>
 800de5c:	1009883a 	mov	r4,r2
 800de60:	800cbb40 	call	800cbb4 <__floatsidf>
 800de64:	d9000f17 	ldw	r4,60(sp)
 800de68:	d9400a17 	ldw	r5,40(sp)
 800de6c:	100d883a 	mov	r6,r2
 800de70:	180f883a 	mov	r7,r3
 800de74:	800c25c0 	call	800c25c <__subdf3>
 800de78:	1011883a 	mov	r8,r2
 800de7c:	d8800b17 	ldw	r2,44(sp)
 800de80:	10001f1e 	bne	r2,zero,800df00 <_strtod_r+0xcb0>
 800de84:	d9000817 	ldw	r4,32(sp)
 800de88:	20001d1e 	bne	r4,zero,800df00 <_strtod_r+0xcb0>
 800de8c:	00800434 	movhi	r2,16
 800de90:	10bfffc4 	addi	r2,r2,-1
 800de94:	b8ae703a 	and	r23,r23,r2
 800de98:	b800191e 	bne	r23,zero,800df00 <_strtod_r+0xcb0>
 800de9c:	01a52834 	movhi	r6,38048
 800dea0:	01cff434 	movhi	r7,16336
 800dea4:	318d6544 	addi	r6,r6,13717
 800dea8:	39ffffc4 	addi	r7,r7,-1
 800deac:	4009883a 	mov	r4,r8
 800deb0:	180b883a 	mov	r5,r3
 800deb4:	800b9100 	call	800b910 <__ledf2>
 800deb8:	103f770e 	bge	r2,zero,800dc98 <__alt_data_end+0xfc00dc98>
 800debc:	a02d883a 	mov	r22,r20
 800dec0:	d9400517 	ldw	r5,20(sp)
 800dec4:	8009883a 	mov	r4,r16
 800dec8:	80174400 	call	8017440 <_Bfree>
 800decc:	8009883a 	mov	r4,r16
 800ded0:	980b883a 	mov	r5,r19
 800ded4:	80174400 	call	8017440 <_Bfree>
 800ded8:	8009883a 	mov	r4,r16
 800dedc:	900b883a 	mov	r5,r18
 800dee0:	80174400 	call	8017440 <_Bfree>
 800dee4:	d9400d17 	ldw	r5,52(sp)
 800dee8:	8009883a 	mov	r4,r16
 800deec:	80174400 	call	8017440 <_Bfree>
 800def0:	8009883a 	mov	r4,r16
 800def4:	b00b883a 	mov	r5,r22
 800def8:	80174400 	call	8017440 <_Bfree>
 800defc:	003dbe06 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800df00:	01a52834 	movhi	r6,38048
 800df04:	01cff834 	movhi	r7,16352
 800df08:	4009883a 	mov	r4,r8
 800df0c:	180b883a 	mov	r5,r3
 800df10:	318d6544 	addi	r6,r6,13717
 800df14:	39ffffc4 	addi	r7,r7,-1
 800df18:	d8c01415 	stw	r3,80(sp)
 800df1c:	da001315 	stw	r8,76(sp)
 800df20:	800b9100 	call	800b910 <__ledf2>
 800df24:	d8c01417 	ldw	r3,80(sp)
 800df28:	da001317 	ldw	r8,76(sp)
 800df2c:	103fe316 	blt	r2,zero,800debc <__alt_data_end+0xfc00debc>
 800df30:	018d6c34 	movhi	r6,13744
 800df34:	31b94d44 	addi	r6,r6,-6859
 800df38:	4009883a 	mov	r4,r8
 800df3c:	180b883a 	mov	r5,r3
 800df40:	01cff834 	movhi	r7,16352
 800df44:	800b8300 	call	800b830 <__gedf2>
 800df48:	00bf530e 	bge	zero,r2,800dc98 <__alt_data_end+0xfc00dc98>
 800df4c:	003fdb06 	br	800debc <__alt_data_end+0xfc00debc>
 800df50:	0080d434 	movhi	r2,848
 800df54:	1887883a 	add	r3,r3,r2
 800df58:	d8c00715 	stw	r3,28(sp)
 800df5c:	182f883a 	mov	r23,r3
 800df60:	dd400817 	ldw	r21,32(sp)
 800df64:	1823883a 	mov	r17,r3
 800df68:	003f4806 	br	800dc8c <__alt_data_end+0xfc00dc8c>
 800df6c:	da000a17 	ldw	r8,40(sp)
 800df70:	003f2d06 	br	800dc28 <__alt_data_end+0xfc00dc28>
 800df74:	008ffc34 	movhi	r2,16368
 800df78:	d8000f15 	stw	zero,60(sp)
 800df7c:	d8800a15 	stw	r2,40(sp)
 800df80:	003f2506 	br	800dc18 <__alt_data_end+0xfc00dc18>
 800df84:	dcc00615 	stw	r19,24(sp)
 800df88:	002b883a 	mov	r21,zero
 800df8c:	003d5806 	br	800d4f0 <__alt_data_end+0xfc00d4f0>
 800df90:	b82d883a 	mov	r22,r23
 800df94:	000f883a 	mov	r7,zero
 800df98:	0023883a 	mov	r17,zero
 800df9c:	e1bff404 	addi	r6,fp,-48
 800dfa0:	00800244 	movi	r2,9
 800dfa4:	11801136 	bltu	r2,r6,800dfec <_strtod_r+0xd9c>
 800dfa8:	d9800815 	stw	r6,32(sp)
 800dfac:	38800044 	addi	r2,r7,1
 800dfb0:	3001341e 	bne	r6,zero,800e484 <_strtod_r+0x1234>
 800dfb4:	dd400617 	ldw	r21,24(sp)
 800dfb8:	100f883a 	mov	r7,r2
 800dfbc:	a8800044 	addi	r2,r21,1
 800dfc0:	d8800615 	stw	r2,24(sp)
 800dfc4:	af000047 	ldb	fp,1(r21)
 800dfc8:	003ff406 	br	800df9c <__alt_data_end+0xfc00df9c>
 800dfcc:	00c00044 	movi	r3,1
 800dfd0:	d8c00a15 	stw	r3,40(sp)
 800dfd4:	98800084 	addi	r2,r19,2
 800dfd8:	d8800615 	stw	r2,24(sp)
 800dfdc:	9f000087 	ldb	fp,2(r19)
 800dfe0:	003d9406 	br	800d634 <__alt_data_end+0xfc00d634>
 800dfe4:	d8000a15 	stw	zero,40(sp)
 800dfe8:	003ffa06 	br	800dfd4 <__alt_data_end+0xfc00dfd4>
 800dfec:	00c00044 	movi	r3,1
 800dff0:	d8c00815 	stw	r3,32(sp)
 800dff4:	003d3906 	br	800d4dc <__alt_data_end+0xfc00d4dc>
 800dff8:	00804d04 	movi	r2,308
 800dffc:	1440ae16 	blt	r2,r17,800e2b8 <_strtod_r+0x1068>
 800e000:	8827d13a 	srai	r19,r17,4
 800e004:	05400044 	movi	r21,1
 800e008:	044200b4 	movhi	r17,2050
 800e00c:	8c41e404 	addi	r17,r17,1936
 800e010:	acc1ea0e 	bge	r21,r19,800e7bc <_strtod_r+0x156c>
 800e014:	d8800817 	ldw	r2,32(sp)
 800e018:	d8c00717 	ldw	r3,28(sp)
 800e01c:	0029883a 	mov	r20,zero
 800e020:	9980004c 	andi	r6,r19,1
 800e024:	30000726 	beq	r6,zero,800e044 <_strtod_r+0xdf4>
 800e028:	a00c90fa 	slli	r6,r20,3
 800e02c:	1009883a 	mov	r4,r2
 800e030:	180b883a 	mov	r5,r3
 800e034:	8985883a 	add	r2,r17,r6
 800e038:	11800017 	ldw	r6,0(r2)
 800e03c:	11c00117 	ldw	r7,4(r2)
 800e040:	800b9f00 	call	800b9f0 <__muldf3>
 800e044:	9827d07a 	srai	r19,r19,1
 800e048:	a5000044 	addi	r20,r20,1
 800e04c:	9d7ff41e 	bne	r19,r21,800e020 <__alt_data_end+0xfc00e020>
 800e050:	d8800815 	stw	r2,32(sp)
 800e054:	d8c00715 	stw	r3,28(sp)
 800e058:	a02890fa 	slli	r20,r20,3
 800e05c:	d8800717 	ldw	r2,28(sp)
 800e060:	d9800817 	ldw	r6,32(sp)
 800e064:	8d23883a 	add	r17,r17,r20
 800e068:	89000017 	ldw	r4,0(r17)
 800e06c:	89400117 	ldw	r5,4(r17)
 800e070:	01ff2c34 	movhi	r7,64688
 800e074:	11cf883a 	add	r7,r2,r7
 800e078:	800b9f00 	call	800b9f0 <__muldf3>
 800e07c:	d8800815 	stw	r2,32(sp)
 800e080:	011f2834 	movhi	r4,31904
 800e084:	189ffc2c 	andhi	r2,r3,32752
 800e088:	20808b36 	bltu	r4,r2,800e2b8 <_strtod_r+0x1068>
 800e08c:	011f2434 	movhi	r4,31888
 800e090:	2081b12e 	bgeu	r4,r2,800e758 <_strtod_r+0x1508>
 800e094:	00dffc34 	movhi	r3,32752
 800e098:	18ffffc4 	addi	r3,r3,-1
 800e09c:	013fffc4 	movi	r4,-1
 800e0a0:	d8c00715 	stw	r3,28(sp)
 800e0a4:	d9000815 	stw	r4,32(sp)
 800e0a8:	202b883a 	mov	r21,r4
 800e0ac:	1823883a 	mov	r17,r3
 800e0b0:	d8001215 	stw	zero,72(sp)
 800e0b4:	003e3006 	br	800d978 <__alt_data_end+0xfc00d978>
 800e0b8:	00801944 	movi	r2,101
 800e0bc:	e0bdd926 	beq	fp,r2,800d824 <__alt_data_end+0xfc00d824>
 800e0c0:	00c00044 	movi	r3,1
 800e0c4:	002d883a 	mov	r22,zero
 800e0c8:	0023883a 	mov	r17,zero
 800e0cc:	d8c00815 	stw	r3,32(sp)
 800e0d0:	003d0406 	br	800d4e4 <__alt_data_end+0xfc00d4e4>
 800e0d4:	a02d883a 	mov	r22,r20
 800e0d8:	00800884 	movi	r2,34
 800e0dc:	80800015 	stw	r2,0(r16)
 800e0e0:	002b883a 	mov	r21,zero
 800e0e4:	0023883a 	mov	r17,zero
 800e0e8:	003f7506 	br	800dec0 <__alt_data_end+0xfc00dec0>
 800e0ec:	d8c01017 	ldw	r3,64(sp)
 800e0f0:	04c200b4 	movhi	r19,2050
 800e0f4:	d8800504 	addi	r2,sp,20
 800e0f8:	9cc34b04 	addi	r19,r19,3372
 800e0fc:	d8800015 	stw	r2,0(sp)
 800e100:	d8c00115 	stw	r3,4(sp)
 800e104:	8009883a 	mov	r4,r16
 800e108:	d9400604 	addi	r5,sp,24
 800e10c:	980d883a 	mov	r6,r19
 800e110:	d9c00404 	addi	r7,sp,16
 800e114:	80159cc0 	call	80159cc <__gethex>
 800e118:	144001cc 	andi	r17,r2,7
 800e11c:	883d3426 	beq	r17,zero,800d5f0 <__alt_data_end+0xfc00d5f0>
 800e120:	00c00184 	movi	r3,6
 800e124:	88c0fc1e 	bne	r17,r3,800e518 <_strtod_r+0x12c8>
 800e128:	94800044 	addi	r18,r18,1
 800e12c:	dc800615 	stw	r18,24(sp)
 800e130:	002b883a 	mov	r21,zero
 800e134:	0023883a 	mov	r17,zero
 800e138:	003d2f06 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800e13c:	df000b17 	ldw	fp,44(sp)
 800e140:	a02d883a 	mov	r22,r20
 800e144:	e0003b1e 	bne	fp,zero,800e234 <_strtod_r+0xfe4>
 800e148:	d9000817 	ldw	r4,32(sp)
 800e14c:	2000391e 	bne	r4,zero,800e234 <_strtod_r+0xfe4>
 800e150:	d8c00717 	ldw	r3,28(sp)
 800e154:	00800434 	movhi	r2,16
 800e158:	10bfffc4 	addi	r2,r2,-1
 800e15c:	1884703a 	and	r2,r3,r2
 800e160:	1000341e 	bne	r2,zero,800e234 <_strtod_r+0xfe4>
 800e164:	1f1ffc2c 	andhi	fp,r3,32752
 800e168:	0081ac34 	movhi	r2,1712
 800e16c:	1700312e 	bgeu	r2,fp,800e234 <_strtod_r+0xfe4>
 800e170:	a0800517 	ldw	r2,20(r20)
 800e174:	1000031e 	bne	r2,zero,800e184 <_strtod_r+0xf34>
 800e178:	a0800417 	ldw	r2,16(r20)
 800e17c:	00c00044 	movi	r3,1
 800e180:	18802c0e 	bge	r3,r2,800e234 <_strtod_r+0xfe4>
 800e184:	8009883a 	mov	r4,r16
 800e188:	a00b883a 	mov	r5,r20
 800e18c:	01800044 	movi	r6,1
 800e190:	8017bcc0 	call	8017bcc <__lshift>
 800e194:	1009883a 	mov	r4,r2
 800e198:	900b883a 	mov	r5,r18
 800e19c:	102d883a 	mov	r22,r2
 800e1a0:	8017d140 	call	8017d14 <__mcmp>
 800e1a4:	0080230e 	bge	zero,r2,800e234 <_strtod_r+0xfe4>
 800e1a8:	d8801217 	ldw	r2,72(sp)
 800e1ac:	10017a26 	beq	r2,zero,800e798 <_strtod_r+0x1548>
 800e1b0:	0081ac34 	movhi	r2,1712
 800e1b4:	17017816 	blt	r2,fp,800e798 <_strtod_r+0x1548>
 800e1b8:	0080dc34 	movhi	r2,880
 800e1bc:	173fc60e 	bge	r2,fp,800e0d8 <__alt_data_end+0xfc00e0d8>
 800e1c0:	a809883a 	mov	r4,r21
 800e1c4:	880b883a 	mov	r5,r17
 800e1c8:	000d883a 	mov	r6,zero
 800e1cc:	01ce5434 	movhi	r7,14672
 800e1d0:	800b9f00 	call	800b9f0 <__muldf3>
 800e1d4:	102b883a 	mov	r21,r2
 800e1d8:	1823883a 	mov	r17,r3
 800e1dc:	183f381e 	bne	r3,zero,800dec0 <__alt_data_end+0xfc00dec0>
 800e1e0:	103f371e 	bne	r2,zero,800dec0 <__alt_data_end+0xfc00dec0>
 800e1e4:	00800884 	movi	r2,34
 800e1e8:	80800015 	stw	r2,0(r16)
 800e1ec:	003f3406 	br	800dec0 <__alt_data_end+0xfc00dec0>
 800e1f0:	d8801217 	ldw	r2,72(sp)
 800e1f4:	10016f26 	beq	r2,zero,800e7b4 <_strtod_r+0x1564>
 800e1f8:	209ffc2c 	andhi	r2,r4,32752
 800e1fc:	00c1a834 	movhi	r3,1696
 800e200:	18816c36 	bltu	r3,r2,800e7b4 <_strtod_r+0x1564>
 800e204:	1004d53a 	srli	r2,r2,20
 800e208:	00c01ac4 	movi	r3,107
 800e20c:	1887c83a 	sub	r3,r3,r2
 800e210:	00bfffc4 	movi	r2,-1
 800e214:	10c4983a 	sll	r2,r2,r3
 800e218:	d8c00817 	ldw	r3,32(sp)
 800e21c:	1880101e 	bne	r3,r2,800e260 <_strtod_r+0x1010>
 800e220:	d9000717 	ldw	r4,28(sp)
 800e224:	00800434 	movhi	r2,16
 800e228:	002b883a 	mov	r21,zero
 800e22c:	245ffc2c 	andhi	r17,r4,32752
 800e230:	88a3883a 	add	r17,r17,r2
 800e234:	d8c01217 	ldw	r3,72(sp)
 800e238:	183fe11e 	bne	r3,zero,800e1c0 <__alt_data_end+0xfc00e1c0>
 800e23c:	003f2006 	br	800dec0 <__alt_data_end+0xfc00dec0>
 800e240:	df000b17 	ldw	fp,44(sp)
 800e244:	00800434 	movhi	r2,16
 800e248:	a02d883a 	mov	r22,r20
 800e24c:	10bfffc4 	addi	r2,r2,-1
 800e250:	e000aa26 	beq	fp,zero,800e4fc <_strtod_r+0x12ac>
 800e254:	d9000717 	ldw	r4,28(sp)
 800e258:	2086703a 	and	r3,r4,r2
 800e25c:	18bfe426 	beq	r3,r2,800e1f0 <__alt_data_end+0xfc00e1f0>
 800e260:	d8c00817 	ldw	r3,32(sp)
 800e264:	1880004c 	andi	r2,r3,1
 800e268:	103ff226 	beq	r2,zero,800e234 <__alt_data_end+0xfc00e234>
 800e26c:	a809883a 	mov	r4,r21
 800e270:	880b883a 	mov	r5,r17
 800e274:	8017f0c0 	call	8017f0c <__ulp>
 800e278:	a809883a 	mov	r4,r21
 800e27c:	880b883a 	mov	r5,r17
 800e280:	100d883a 	mov	r6,r2
 800e284:	180f883a 	mov	r7,r3
 800e288:	800a5900 	call	800a590 <__adddf3>
 800e28c:	102b883a 	mov	r21,r2
 800e290:	1823883a 	mov	r17,r3
 800e294:	003fe706 	br	800e234 <__alt_data_end+0xfc00e234>
 800e298:	00bfffc4 	movi	r2,-1
 800e29c:	a8beb91e 	bne	r21,r2,800dd84 <__alt_data_end+0xfc00dd84>
 800e2a0:	00800884 	movi	r2,34
 800e2a4:	80800015 	stw	r2,0(r16)
 800e2a8:	002b883a 	mov	r21,zero
 800e2ac:	045ffc34 	movhi	r17,32752
 800e2b0:	a02d883a 	mov	r22,r20
 800e2b4:	003f0206 	br	800dec0 <__alt_data_end+0xfc00dec0>
 800e2b8:	00800884 	movi	r2,34
 800e2bc:	80800015 	stw	r2,0(r16)
 800e2c0:	002b883a 	mov	r21,zero
 800e2c4:	045ffc34 	movhi	r17,32752
 800e2c8:	003ccb06 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800e2cc:	883da726 	beq	r17,zero,800d96c <__alt_data_end+0xfc00d96c>
 800e2d0:	0463c83a 	sub	r17,zero,r17
 800e2d4:	888003cc 	andi	r2,r17,15
 800e2d8:	10000b26 	beq	r2,zero,800e308 <_strtod_r+0x10b8>
 800e2dc:	100490fa 	slli	r2,r2,3
 800e2e0:	00c200b4 	movhi	r3,2050
 800e2e4:	18c1ee04 	addi	r3,r3,1976
 800e2e8:	1885883a 	add	r2,r3,r2
 800e2ec:	d9000817 	ldw	r4,32(sp)
 800e2f0:	d9400717 	ldw	r5,28(sp)
 800e2f4:	11800017 	ldw	r6,0(r2)
 800e2f8:	11c00117 	ldw	r7,4(r2)
 800e2fc:	800ae2c0 	call	800ae2c <__divdf3>
 800e300:	d8800815 	stw	r2,32(sp)
 800e304:	d8c00715 	stw	r3,28(sp)
 800e308:	8823d13a 	srai	r17,r17,4
 800e30c:	883d9726 	beq	r17,zero,800d96c <__alt_data_end+0xfc00d96c>
 800e310:	008007c4 	movi	r2,31
 800e314:	14402c16 	blt	r2,r17,800e3c8 <_strtod_r+0x1178>
 800e318:	8880040c 	andi	r2,r17,16
 800e31c:	10012e26 	beq	r2,zero,800e7d8 <_strtod_r+0x1588>
 800e320:	0441430e 	bge	zero,r17,800e830 <_strtod_r+0x15e0>
 800e324:	00801a84 	movi	r2,106
 800e328:	d8801215 	stw	r2,72(sp)
 800e32c:	d8800817 	ldw	r2,32(sp)
 800e330:	d8c00717 	ldw	r3,28(sp)
 800e334:	04c200b4 	movhi	r19,2050
 800e338:	9cc0ff04 	addi	r19,r19,1020
 800e33c:	8980004c 	andi	r6,r17,1
 800e340:	30000526 	beq	r6,zero,800e358 <_strtod_r+0x1108>
 800e344:	99800017 	ldw	r6,0(r19)
 800e348:	99c00117 	ldw	r7,4(r19)
 800e34c:	1009883a 	mov	r4,r2
 800e350:	180b883a 	mov	r5,r3
 800e354:	800b9f00 	call	800b9f0 <__muldf3>
 800e358:	8823d07a 	srai	r17,r17,1
 800e35c:	9cc00204 	addi	r19,r19,8
 800e360:	047ff616 	blt	zero,r17,800e33c <__alt_data_end+0xfc00e33c>
 800e364:	d8c00715 	stw	r3,28(sp)
 800e368:	d8c01217 	ldw	r3,72(sp)
 800e36c:	d8800815 	stw	r2,32(sp)
 800e370:	18000d26 	beq	r3,zero,800e3a8 <_strtod_r+0x1158>
 800e374:	d9000717 	ldw	r4,28(sp)
 800e378:	00801ac4 	movi	r2,107
 800e37c:	271ffc2c 	andhi	fp,r4,32752
 800e380:	e006d53a 	srli	r3,fp,20
 800e384:	10c5c83a 	sub	r2,r2,r3
 800e388:	0080070e 	bge	zero,r2,800e3a8 <_strtod_r+0x1158>
 800e38c:	00c007c4 	movi	r3,31
 800e390:	1881210e 	bge	r3,r2,800e818 <_strtod_r+0x15c8>
 800e394:	d8000815 	stw	zero,32(sp)
 800e398:	00c00d04 	movi	r3,52
 800e39c:	1881270e 	bge	r3,r2,800e83c <_strtod_r+0x15ec>
 800e3a0:	0080dc34 	movhi	r2,880
 800e3a4:	d8800715 	stw	r2,28(sp)
 800e3a8:	d9000817 	ldw	r4,32(sp)
 800e3ac:	d9400717 	ldw	r5,28(sp)
 800e3b0:	000d883a 	mov	r6,zero
 800e3b4:	000f883a 	mov	r7,zero
 800e3b8:	202b883a 	mov	r21,r4
 800e3bc:	2823883a 	mov	r17,r5
 800e3c0:	800b7ac0 	call	800b7ac <__eqdf2>
 800e3c4:	103d6c1e 	bne	r2,zero,800d978 <__alt_data_end+0xfc00d978>
 800e3c8:	00800884 	movi	r2,34
 800e3cc:	80800015 	stw	r2,0(r16)
 800e3d0:	002b883a 	mov	r21,zero
 800e3d4:	0023883a 	mov	r17,zero
 800e3d8:	003c8706 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800e3dc:	00cff834 	movhi	r3,16352
 800e3e0:	002f883a 	mov	r23,zero
 800e3e4:	022ff834 	movhi	r8,49120
 800e3e8:	d8000f15 	stw	zero,60(sp)
 800e3ec:	d8c00a15 	stw	r3,40(sp)
 800e3f0:	003e8706 	br	800de10 <__alt_data_end+0xfc00de10>
 800e3f4:	011387c4 	movi	r4,19999
 800e3f8:	003cce06 	br	800d734 <__alt_data_end+0xfc00d734>
 800e3fc:	e7003fcc 	andi	fp,fp,255
 800e400:	e700201c 	xori	fp,fp,128
 800e404:	e73fe004 	addi	fp,fp,-128
 800e408:	d9c00917 	ldw	r7,36(sp)
 800e40c:	0029883a 	mov	r20,zero
 800e410:	0025883a 	mov	r18,zero
 800e414:	002f883a 	mov	r23,zero
 800e418:	003c1e06 	br	800d494 <__alt_data_end+0xfc00d494>
 800e41c:	d9000e17 	ldw	r4,56(sp)
 800e420:	00c00944 	movi	r3,37
 800e424:	1d87c83a 	sub	r3,r3,r22
 800e428:	193d3c16 	blt	r3,r4,800d91c <__alt_data_end+0xfc00d91c>
 800e42c:	15a1c83a 	sub	r16,r2,r22
 800e430:	800690fa 	slli	r3,r16,3
 800e434:	044200b4 	movhi	r17,2050
 800e438:	8c41ee04 	addi	r17,r17,1976
 800e43c:	88c7883a 	add	r3,r17,r3
 800e440:	d9800817 	ldw	r6,32(sp)
 800e444:	d9c00717 	ldw	r7,28(sp)
 800e448:	19000017 	ldw	r4,0(r3)
 800e44c:	19400117 	ldw	r5,4(r3)
 800e450:	800b9f00 	call	800b9f0 <__muldf3>
 800e454:	d9000e17 	ldw	r4,56(sp)
 800e458:	180b883a 	mov	r5,r3
 800e45c:	240dc83a 	sub	r6,r4,r16
 800e460:	300c90fa 	slli	r6,r6,3
 800e464:	1009883a 	mov	r4,r2
 800e468:	8985883a 	add	r2,r17,r6
 800e46c:	11800017 	ldw	r6,0(r2)
 800e470:	11c00117 	ldw	r7,4(r2)
 800e474:	800b9f00 	call	800b9f0 <__muldf3>
 800e478:	102b883a 	mov	r21,r2
 800e47c:	1823883a 	mov	r17,r3
 800e480:	003c5d06 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800e484:	88a3883a 	add	r17,r17,r2
 800e488:	3800d126 	beq	r7,zero,800e7d0 <_strtod_r+0x1580>
 800e48c:	dc000a15 	stw	r16,40(sp)
 800e490:	3dab883a 	add	r21,r7,r22
 800e494:	9021883a 	mov	r16,r18
 800e498:	07000204 	movi	fp,8
 800e49c:	3025883a 	mov	r18,r6
 800e4a0:	b5800044 	addi	r22,r22,1
 800e4a4:	b0ffffc4 	addi	r3,r22,-1
 800e4a8:	e0c00d16 	blt	fp,r3,800e4e0 <_strtod_r+0x1290>
 800e4ac:	8009883a 	mov	r4,r16
 800e4b0:	01400284 	movi	r5,10
 800e4b4:	8009fe40 	call	8009fe4 <__mulsi3>
 800e4b8:	1021883a 	mov	r16,r2
 800e4bc:	b57ff81e 	bne	r22,r21,800e4a0 <__alt_data_end+0xfc00e4a0>
 800e4c0:	900d883a 	mov	r6,r18
 800e4c4:	8025883a 	mov	r18,r16
 800e4c8:	dc000a17 	ldw	r16,40(sp)
 800e4cc:	00800204 	movi	r2,8
 800e4d0:	ad800044 	addi	r22,r21,1
 800e4d4:	15406f16 	blt	r2,r21,800e694 <_strtod_r+0x1444>
 800e4d8:	dd400617 	ldw	r21,24(sp)
 800e4dc:	003d0806 	br	800d900 <__alt_data_end+0xfc00d900>
 800e4e0:	00c00404 	movi	r3,16
 800e4e4:	1dbff516 	blt	r3,r22,800e4bc <__alt_data_end+0xfc00e4bc>
 800e4e8:	a009883a 	mov	r4,r20
 800e4ec:	01400284 	movi	r5,10
 800e4f0:	8009fe40 	call	8009fe4 <__mulsi3>
 800e4f4:	1029883a 	mov	r20,r2
 800e4f8:	003ff006 	br	800e4bc <__alt_data_end+0xfc00e4bc>
 800e4fc:	d8c00717 	ldw	r3,28(sp)
 800e500:	1884703a 	and	r2,r3,r2
 800e504:	10004f1e 	bne	r2,zero,800e644 <_strtod_r+0x13f4>
 800e508:	d9000817 	ldw	r4,32(sp)
 800e50c:	20004d1e 	bne	r4,zero,800e644 <_strtod_r+0x13f4>
 800e510:	1f1ffc2c 	andhi	fp,r3,32752
 800e514:	003f2406 	br	800e1a8 <__alt_data_end+0xfc00e1a8>
 800e518:	d9800517 	ldw	r6,20(sp)
 800e51c:	30000826 	beq	r6,zero,800e540 <_strtod_r+0x12f0>
 800e520:	99400017 	ldw	r5,0(r19)
 800e524:	d9000204 	addi	r4,sp,8
 800e528:	d8801315 	stw	r2,76(sp)
 800e52c:	80182dc0 	call	80182dc <__copybits>
 800e530:	d9400517 	ldw	r5,20(sp)
 800e534:	8009883a 	mov	r4,r16
 800e538:	80174400 	call	8017440 <_Bfree>
 800e53c:	d8801317 	ldw	r2,76(sp)
 800e540:	00c00184 	movi	r3,6
 800e544:	d9000417 	ldw	r4,16(sp)
 800e548:	1c401036 	bltu	r3,r17,800e58c <_strtod_r+0x133c>
 800e54c:	882290ba 	slli	r17,r17,2
 800e550:	00c20074 	movhi	r3,2049
 800e554:	18f95904 	addi	r3,r3,-6812
 800e558:	88e3883a 	add	r17,r17,r3
 800e55c:	88c00017 	ldw	r3,0(r17)
 800e560:	1800683a 	jmp	r3
 800e564:	0800e5a4 	muli	zero,at,918
 800e568:	0800e5dc 	xori	zero,at,919
 800e56c:	0800e5c8 	cmpgei	zero,at,919
 800e570:	0800e580 	call	800e58 <__alt_mem_onchip_memory2_0+0x800e58>
 800e574:	0800e5b0 	cmpltui	zero,at,918
 800e578:	0800e5dc 	xori	zero,at,919
 800e57c:	0800e5a4 	muli	zero,at,918
 800e580:	00dffc34 	movhi	r3,32752
 800e584:	d8c00715 	stw	r3,28(sp)
 800e588:	d8000815 	stw	zero,32(sp)
 800e58c:	1080020c 	andi	r2,r2,8
 800e590:	dd400817 	ldw	r21,32(sp)
 800e594:	103bfe26 	beq	r2,zero,800d590 <__alt_data_end+0xfc00d590>
 800e598:	d9000717 	ldw	r4,28(sp)
 800e59c:	24600034 	orhi	r17,r4,32768
 800e5a0:	003c1506 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800e5a4:	d8000715 	stw	zero,28(sp)
 800e5a8:	d8000815 	stw	zero,32(sp)
 800e5ac:	003ff706 	br	800e58c <__alt_data_end+0xfc00e58c>
 800e5b0:	01200034 	movhi	r4,32768
 800e5b4:	213fffc4 	addi	r4,r4,-1
 800e5b8:	00ffffc4 	movi	r3,-1
 800e5bc:	d9000715 	stw	r4,28(sp)
 800e5c0:	d8c00815 	stw	r3,32(sp)
 800e5c4:	003ff106 	br	800e58c <__alt_data_end+0xfc00e58c>
 800e5c8:	d9000217 	ldw	r4,8(sp)
 800e5cc:	d8c00317 	ldw	r3,12(sp)
 800e5d0:	d9000815 	stw	r4,32(sp)
 800e5d4:	d8c00715 	stw	r3,28(sp)
 800e5d8:	003fec06 	br	800e58c <__alt_data_end+0xfc00e58c>
 800e5dc:	20c10cc4 	addi	r3,r4,1075
 800e5e0:	d9000217 	ldw	r4,8(sp)
 800e5e4:	d9400317 	ldw	r5,12(sp)
 800e5e8:	1806953a 	slli	r3,r3,20
 800e5ec:	d9000815 	stw	r4,32(sp)
 800e5f0:	013ffc34 	movhi	r4,65520
 800e5f4:	213fffc4 	addi	r4,r4,-1
 800e5f8:	2908703a 	and	r4,r5,r4
 800e5fc:	1908b03a 	or	r4,r3,r4
 800e600:	d9000715 	stw	r4,28(sp)
 800e604:	003fe106 	br	800e58c <__alt_data_end+0xfc00e58c>
 800e608:	d8c00e17 	ldw	r3,56(sp)
 800e60c:	00bffa84 	movi	r2,-22
 800e610:	18bcc216 	blt	r3,r2,800d91c <__alt_data_end+0xfc00d91c>
 800e614:	182290fa 	slli	r17,r3,3
 800e618:	008200b4 	movhi	r2,2050
 800e61c:	1081ee04 	addi	r2,r2,1976
 800e620:	1445c83a 	sub	r2,r2,r17
 800e624:	d9000817 	ldw	r4,32(sp)
 800e628:	d9400717 	ldw	r5,28(sp)
 800e62c:	11800017 	ldw	r6,0(r2)
 800e630:	11c00117 	ldw	r7,4(r2)
 800e634:	800ae2c0 	call	800ae2c <__divdf3>
 800e638:	102b883a 	mov	r21,r2
 800e63c:	1823883a 	mov	r17,r3
 800e640:	003bed06 	br	800d5f8 <__alt_data_end+0xfc00d5f8>
 800e644:	d8c00817 	ldw	r3,32(sp)
 800e648:	1880004c 	andi	r2,r3,1
 800e64c:	103ef926 	beq	r2,zero,800e234 <__alt_data_end+0xfc00e234>
 800e650:	a809883a 	mov	r4,r21
 800e654:	880b883a 	mov	r5,r17
 800e658:	8017f0c0 	call	8017f0c <__ulp>
 800e65c:	a809883a 	mov	r4,r21
 800e660:	880b883a 	mov	r5,r17
 800e664:	100d883a 	mov	r6,r2
 800e668:	180f883a 	mov	r7,r3
 800e66c:	800c25c0 	call	800c25c <__subdf3>
 800e670:	1009883a 	mov	r4,r2
 800e674:	180b883a 	mov	r5,r3
 800e678:	000d883a 	mov	r6,zero
 800e67c:	000f883a 	mov	r7,zero
 800e680:	102b883a 	mov	r21,r2
 800e684:	1823883a 	mov	r17,r3
 800e688:	800b7ac0 	call	800b7ac <__eqdf2>
 800e68c:	103e9226 	beq	r2,zero,800e0d8 <__alt_data_end+0xfc00e0d8>
 800e690:	003ee806 	br	800e234 <__alt_data_end+0xfc00e234>
 800e694:	00800404 	movi	r2,16
 800e698:	1580360e 	bge	r2,r22,800e774 <_strtod_r+0x1524>
 800e69c:	dd400617 	ldw	r21,24(sp)
 800e6a0:	000f883a 	mov	r7,zero
 800e6a4:	003e4506 	br	800dfbc <__alt_data_end+0xfc00dfbc>
 800e6a8:	014200b4 	movhi	r5,2050
 800e6ac:	d9000617 	ldw	r4,24(sp)
 800e6b0:	2940fb04 	addi	r5,r5,1004
 800e6b4:	01c00644 	movi	r7,25
 800e6b8:	00000b06 	br	800e6e8 <_strtod_r+0x1498>
 800e6bc:	21000044 	addi	r4,r4,1
 800e6c0:	20800003 	ldbu	r2,0(r4)
 800e6c4:	10ffefc4 	addi	r3,r2,-65
 800e6c8:	10803fcc 	andi	r2,r2,255
 800e6cc:	1080201c 	xori	r2,r2,128
 800e6d0:	18c03fcc 	andi	r3,r3,255
 800e6d4:	10bfe004 	addi	r2,r2,-128
 800e6d8:	38c00136 	bltu	r7,r3,800e6e0 <_strtod_r+0x1490>
 800e6dc:	10800804 	addi	r2,r2,32
 800e6e0:	29400044 	addi	r5,r5,1
 800e6e4:	11bb261e 	bne	r2,r6,800d380 <__alt_data_end+0xfc00d380>
 800e6e8:	29800007 	ldb	r6,0(r5)
 800e6ec:	303ff31e 	bne	r6,zero,800e6bc <__alt_data_end+0xfc00e6bc>
 800e6f0:	018200b4 	movhi	r6,2050
 800e6f4:	200b883a 	mov	r5,r4
 800e6f8:	d9000615 	stw	r4,24(sp)
 800e6fc:	3180fc04 	addi	r6,r6,1008
 800e700:	02000644 	movi	r8,25
 800e704:	00000a06 	br	800e730 <_strtod_r+0x14e0>
 800e708:	28800003 	ldbu	r2,0(r5)
 800e70c:	10ffefc4 	addi	r3,r2,-65
 800e710:	10803fcc 	andi	r2,r2,255
 800e714:	1080201c 	xori	r2,r2,128
 800e718:	18c03fcc 	andi	r3,r3,255
 800e71c:	10bfe004 	addi	r2,r2,-128
 800e720:	40c00136 	bltu	r8,r3,800e728 <_strtod_r+0x14d8>
 800e724:	10800804 	addi	r2,r2,32
 800e728:	31800044 	addi	r6,r6,1
 800e72c:	11c0251e 	bne	r2,r7,800e7c4 <_strtod_r+0x1574>
 800e730:	31c00007 	ldb	r7,0(r6)
 800e734:	29400044 	addi	r5,r5,1
 800e738:	383ff31e 	bne	r7,zero,800e708 <__alt_data_end+0xfc00e708>
 800e73c:	d9400615 	stw	r5,24(sp)
 800e740:	011ffc34 	movhi	r4,32752
 800e744:	d9000715 	stw	r4,28(sp)
 800e748:	d8000815 	stw	zero,32(sp)
 800e74c:	003b8f06 	br	800d58c <__alt_data_end+0xfc00d58c>
 800e750:	000f883a 	mov	r7,zero
 800e754:	003c6006 	br	800d8d8 <__alt_data_end+0xfc00d8d8>
 800e758:	0080d434 	movhi	r2,848
 800e75c:	1887883a 	add	r3,r3,r2
 800e760:	d8c00715 	stw	r3,28(sp)
 800e764:	dd400817 	ldw	r21,32(sp)
 800e768:	1823883a 	mov	r17,r3
 800e76c:	d8001215 	stw	zero,72(sp)
 800e770:	003c8106 	br	800d978 <__alt_data_end+0xfc00d978>
 800e774:	a009883a 	mov	r4,r20
 800e778:	01400284 	movi	r5,10
 800e77c:	d9801315 	stw	r6,76(sp)
 800e780:	8009fe40 	call	8009fe4 <__mulsi3>
 800e784:	d9801317 	ldw	r6,76(sp)
 800e788:	dd400617 	ldw	r21,24(sp)
 800e78c:	000f883a 	mov	r7,zero
 800e790:	30a9883a 	add	r20,r6,r2
 800e794:	003e0906 	br	800dfbc <__alt_data_end+0xfc00dfbc>
 800e798:	047ffc34 	movhi	r17,65520
 800e79c:	e46f883a 	add	r23,fp,r17
 800e7a0:	057fffc4 	movi	r21,-1
 800e7a4:	04400434 	movhi	r17,16
 800e7a8:	8d63883a 	add	r17,r17,r21
 800e7ac:	bc62b03a 	or	r17,r23,r17
 800e7b0:	003ea006 	br	800e234 <__alt_data_end+0xfc00e234>
 800e7b4:	00bfffc4 	movi	r2,-1
 800e7b8:	003e9706 	br	800e218 <__alt_data_end+0xfc00e218>
 800e7bc:	0029883a 	mov	r20,zero
 800e7c0:	003e2506 	br	800e058 <__alt_data_end+0xfc00e058>
 800e7c4:	21000044 	addi	r4,r4,1
 800e7c8:	d9000615 	stw	r4,24(sp)
 800e7cc:	003fdc06 	br	800e740 <__alt_data_end+0xfc00e740>
 800e7d0:	b02b883a 	mov	r21,r22
 800e7d4:	003f3d06 	br	800e4cc <__alt_data_end+0xfc00e4cc>
 800e7d8:	d8001215 	stw	zero,72(sp)
 800e7dc:	047ed316 	blt	zero,r17,800e32c <__alt_data_end+0xfc00e32c>
 800e7e0:	003ef106 	br	800e3a8 <__alt_data_end+0xfc00e3a8>
 800e7e4:	014200b4 	movhi	r5,2050
 800e7e8:	29434604 	addi	r5,r5,3352
 800e7ec:	d9000604 	addi	r4,sp,24
 800e7f0:	d9800204 	addi	r6,sp,8
 800e7f4:	80162240 	call	8016224 <__hexnan>
 800e7f8:	00c00144 	movi	r3,5
 800e7fc:	10fb601e 	bne	r2,r3,800d580 <__alt_data_end+0xfc00d580>
 800e800:	d8800217 	ldw	r2,8(sp)
 800e804:	d8800815 	stw	r2,32(sp)
 800e808:	d8800317 	ldw	r2,12(sp)
 800e80c:	109ffc34 	orhi	r2,r2,32752
 800e810:	d8800715 	stw	r2,28(sp)
 800e814:	003b5d06 	br	800d58c <__alt_data_end+0xfc00d58c>
 800e818:	00ffffc4 	movi	r3,-1
 800e81c:	d9000817 	ldw	r4,32(sp)
 800e820:	1884983a 	sll	r2,r3,r2
 800e824:	1108703a 	and	r4,r2,r4
 800e828:	d9000815 	stw	r4,32(sp)
 800e82c:	003ede06 	br	800e3a8 <__alt_data_end+0xfc00e3a8>
 800e830:	01001a84 	movi	r4,106
 800e834:	d9001215 	stw	r4,72(sp)
 800e838:	003ece06 	br	800e374 <__alt_data_end+0xfc00e374>
 800e83c:	00ffffc4 	movi	r3,-1
 800e840:	10bff804 	addi	r2,r2,-32
 800e844:	1884983a 	sll	r2,r3,r2
 800e848:	d8c00717 	ldw	r3,28(sp)
 800e84c:	10c6703a 	and	r3,r2,r3
 800e850:	d8c00715 	stw	r3,28(sp)
 800e854:	003ed406 	br	800e3a8 <__alt_data_end+0xfc00e3a8>

0800e858 <strtod>:
 800e858:	00c200b4 	movhi	r3,2050
 800e85c:	18c8f804 	addi	r3,r3,9184
 800e860:	2005883a 	mov	r2,r4
 800e864:	19000017 	ldw	r4,0(r3)
 800e868:	280d883a 	mov	r6,r5
 800e86c:	100b883a 	mov	r5,r2
 800e870:	800d2501 	jmpi	800d250 <_strtod_r>

0800e874 <strtof>:
 800e874:	defffb04 	addi	sp,sp,-20
 800e878:	dcc00315 	stw	r19,12(sp)
 800e87c:	04c200b4 	movhi	r19,2050
 800e880:	9cc8f804 	addi	r19,r19,9184
 800e884:	2005883a 	mov	r2,r4
 800e888:	99000017 	ldw	r4,0(r19)
 800e88c:	280d883a 	mov	r6,r5
 800e890:	100b883a 	mov	r5,r2
 800e894:	dfc00415 	stw	ra,16(sp)
 800e898:	dc800215 	stw	r18,8(sp)
 800e89c:	dc400115 	stw	r17,4(sp)
 800e8a0:	dc000015 	stw	r16,0(sp)
 800e8a4:	800d2500 	call	800d250 <_strtod_r>
 800e8a8:	1009883a 	mov	r4,r2
 800e8ac:	180b883a 	mov	r5,r3
 800e8b0:	1025883a 	mov	r18,r2
 800e8b4:	1823883a 	mov	r17,r3
 800e8b8:	800cd940 	call	800cd94 <__truncdfsf2>
 800e8bc:	1009883a 	mov	r4,r2
 800e8c0:	000b883a 	mov	r5,zero
 800e8c4:	1021883a 	mov	r16,r2
 800e8c8:	801cb100 	call	801cb10 <__eqsf2>
 800e8cc:	1000111e 	bne	r2,zero,800e914 <strtof+0xa0>
 800e8d0:	9009883a 	mov	r4,r18
 800e8d4:	880b883a 	mov	r5,r17
 800e8d8:	000d883a 	mov	r6,zero
 800e8dc:	000f883a 	mov	r7,zero
 800e8e0:	800b7ac0 	call	800b7ac <__eqdf2>
 800e8e4:	10000b26 	beq	r2,zero,800e914 <strtof+0xa0>
 800e8e8:	98800017 	ldw	r2,0(r19)
 800e8ec:	00c00884 	movi	r3,34
 800e8f0:	10c00015 	stw	r3,0(r2)
 800e8f4:	8005883a 	mov	r2,r16
 800e8f8:	dfc00417 	ldw	ra,16(sp)
 800e8fc:	dcc00317 	ldw	r19,12(sp)
 800e900:	dc800217 	ldw	r18,8(sp)
 800e904:	dc400117 	ldw	r17,4(sp)
 800e908:	dc000017 	ldw	r16,0(sp)
 800e90c:	dec00504 	addi	sp,sp,20
 800e910:	f800283a 	ret
 800e914:	015fe034 	movhi	r5,32640
 800e918:	297fffc4 	addi	r5,r5,-1
 800e91c:	8009883a 	mov	r4,r16
 800e920:	801cb840 	call	801cb84 <__gesf2>
 800e924:	0080070e 	bge	zero,r2,800e944 <strtof+0xd0>
 800e928:	01dffc34 	movhi	r7,32752
 800e92c:	39ffffc4 	addi	r7,r7,-1
 800e930:	9009883a 	mov	r4,r18
 800e934:	880b883a 	mov	r5,r17
 800e938:	01bfffc4 	movi	r6,-1
 800e93c:	800b8300 	call	800b830 <__gedf2>
 800e940:	00bfe90e 	bge	zero,r2,800e8e8 <__alt_data_end+0xfc00e8e8>
 800e944:	017fe034 	movhi	r5,65408
 800e948:	297fffc4 	addi	r5,r5,-1
 800e94c:	8009883a 	mov	r4,r16
 800e950:	801cc3c0 	call	801cc3c <__lesf2>
 800e954:	103fe70e 	bge	r2,zero,800e8f4 <__alt_data_end+0xfc00e8f4>
 800e958:	01fffc34 	movhi	r7,65520
 800e95c:	39ffffc4 	addi	r7,r7,-1
 800e960:	9009883a 	mov	r4,r18
 800e964:	880b883a 	mov	r5,r17
 800e968:	01bfffc4 	movi	r6,-1
 800e96c:	800b9100 	call	800b910 <__ledf2>
 800e970:	103fdd0e 	bge	r2,zero,800e8e8 <__alt_data_end+0xfc00e8e8>
 800e974:	003fdf06 	br	800e8f4 <__alt_data_end+0xfc00e8f4>

0800e978 <_strtol_r>:
 800e978:	008200b4 	movhi	r2,2050
 800e97c:	defff204 	addi	sp,sp,-56
 800e980:	1088f904 	addi	r2,r2,9188
 800e984:	dd400915 	stw	r21,36(sp)
 800e988:	15400017 	ldw	r21,0(r2)
 800e98c:	ddc00b15 	stw	r23,44(sp)
 800e990:	dc000415 	stw	r16,16(sp)
 800e994:	dfc00d15 	stw	ra,52(sp)
 800e998:	df000c15 	stw	fp,48(sp)
 800e99c:	dd800a15 	stw	r22,40(sp)
 800e9a0:	dd000815 	stw	r20,32(sp)
 800e9a4:	dcc00715 	stw	r19,28(sp)
 800e9a8:	dc800615 	stw	r18,24(sp)
 800e9ac:	dc400515 	stw	r17,20(sp)
 800e9b0:	d9400215 	stw	r5,8(sp)
 800e9b4:	d9000315 	stw	r4,12(sp)
 800e9b8:	d9800015 	stw	r6,0(sp)
 800e9bc:	382f883a 	mov	r23,r7
 800e9c0:	2821883a 	mov	r16,r5
 800e9c4:	87000007 	ldb	fp,0(r16)
 800e9c8:	8007883a 	mov	r3,r16
 800e9cc:	84000044 	addi	r16,r16,1
 800e9d0:	af05883a 	add	r2,r21,fp
 800e9d4:	10800043 	ldbu	r2,1(r2)
 800e9d8:	1080020c 	andi	r2,r2,8
 800e9dc:	103ff91e 	bne	r2,zero,800e9c4 <__alt_data_end+0xfc00e9c4>
 800e9e0:	00800b44 	movi	r2,45
 800e9e4:	e0805c26 	beq	fp,r2,800eb58 <_strtol_r+0x1e0>
 800e9e8:	00800ac4 	movi	r2,43
 800e9ec:	e0805e26 	beq	fp,r2,800eb68 <_strtol_r+0x1f0>
 800e9f0:	0027883a 	mov	r19,zero
 800e9f4:	b8000426 	beq	r23,zero,800ea08 <_strtol_r+0x90>
 800e9f8:	00800404 	movi	r2,16
 800e9fc:	b8805e26 	beq	r23,r2,800eb78 <_strtol_r+0x200>
 800ea00:	b825883a 	mov	r18,r23
 800ea04:	00000406 	br	800ea18 <_strtol_r+0xa0>
 800ea08:	00800c04 	movi	r2,48
 800ea0c:	e0806926 	beq	fp,r2,800ebb4 <_strtol_r+0x23c>
 800ea10:	05c00284 	movi	r23,10
 800ea14:	b825883a 	mov	r18,r23
 800ea18:	04600034 	movhi	r17,32768
 800ea1c:	8c7fffc4 	addi	r17,r17,-1
 800ea20:	9c63883a 	add	r17,r19,r17
 800ea24:	8809883a 	mov	r4,r17
 800ea28:	900b883a 	mov	r5,r18
 800ea2c:	8009fdc0 	call	8009fdc <__umodsi3>
 800ea30:	8809883a 	mov	r4,r17
 800ea34:	900b883a 	mov	r5,r18
 800ea38:	d8800115 	stw	r2,4(sp)
 800ea3c:	8009fd40 	call	8009fd4 <__udivsi3>
 800ea40:	af07883a 	add	r3,r21,fp
 800ea44:	18c00043 	ldbu	r3,1(r3)
 800ea48:	1029883a 	mov	r20,r2
 800ea4c:	000d883a 	mov	r6,zero
 800ea50:	1940010c 	andi	r5,r3,4
 800ea54:	0009883a 	mov	r4,zero
 800ea58:	04400044 	movi	r17,1
 800ea5c:	05bfffc4 	movi	r22,-1
 800ea60:	28000f26 	beq	r5,zero,800eaa0 <_strtol_r+0x128>
 800ea64:	e73ff404 	addi	fp,fp,-48
 800ea68:	e5c0130e 	bge	fp,r23,800eab8 <_strtol_r+0x140>
 800ea6c:	35800626 	beq	r6,r22,800ea88 <_strtol_r+0x110>
 800ea70:	a1002b36 	bltu	r20,r4,800eb20 <_strtol_r+0x1a8>
 800ea74:	25002826 	beq	r4,r20,800eb18 <_strtol_r+0x1a0>
 800ea78:	900b883a 	mov	r5,r18
 800ea7c:	8009fe40 	call	8009fe4 <__mulsi3>
 800ea80:	e089883a 	add	r4,fp,r2
 800ea84:	01800044 	movi	r6,1
 800ea88:	87000007 	ldb	fp,0(r16)
 800ea8c:	84000044 	addi	r16,r16,1
 800ea90:	af07883a 	add	r3,r21,fp
 800ea94:	18c00043 	ldbu	r3,1(r3)
 800ea98:	1940010c 	andi	r5,r3,4
 800ea9c:	283ff11e 	bne	r5,zero,800ea64 <__alt_data_end+0xfc00ea64>
 800eaa0:	18c000cc 	andi	r3,r3,3
 800eaa4:	18000426 	beq	r3,zero,800eab8 <_strtol_r+0x140>
 800eaa8:	1c401f26 	beq	r3,r17,800eb28 <_strtol_r+0x1b0>
 800eaac:	00c015c4 	movi	r3,87
 800eab0:	e0f9c83a 	sub	fp,fp,r3
 800eab4:	e5ffed16 	blt	fp,r23,800ea6c <__alt_data_end+0xfc00ea6c>
 800eab8:	00bfffc4 	movi	r2,-1
 800eabc:	30801c26 	beq	r6,r2,800eb30 <_strtol_r+0x1b8>
 800eac0:	04c5c83a 	sub	r2,zero,r19
 800eac4:	d8c00017 	ldw	r3,0(sp)
 800eac8:	2084f03a 	xor	r2,r4,r2
 800eacc:	14e7883a 	add	r19,r2,r19
 800ead0:	9805883a 	mov	r2,r19
 800ead4:	18000426 	beq	r3,zero,800eae8 <_strtol_r+0x170>
 800ead8:	30001d1e 	bne	r6,zero,800eb50 <_strtol_r+0x1d8>
 800eadc:	dd400217 	ldw	r21,8(sp)
 800eae0:	d8c00017 	ldw	r3,0(sp)
 800eae4:	1d400015 	stw	r21,0(r3)
 800eae8:	dfc00d17 	ldw	ra,52(sp)
 800eaec:	df000c17 	ldw	fp,48(sp)
 800eaf0:	ddc00b17 	ldw	r23,44(sp)
 800eaf4:	dd800a17 	ldw	r22,40(sp)
 800eaf8:	dd400917 	ldw	r21,36(sp)
 800eafc:	dd000817 	ldw	r20,32(sp)
 800eb00:	dcc00717 	ldw	r19,28(sp)
 800eb04:	dc800617 	ldw	r18,24(sp)
 800eb08:	dc400517 	ldw	r17,20(sp)
 800eb0c:	dc000417 	ldw	r16,16(sp)
 800eb10:	dec00e04 	addi	sp,sp,56
 800eb14:	f800283a 	ret
 800eb18:	d8c00117 	ldw	r3,4(sp)
 800eb1c:	1f3fd60e 	bge	r3,fp,800ea78 <__alt_data_end+0xfc00ea78>
 800eb20:	01bfffc4 	movi	r6,-1
 800eb24:	003fd806 	br	800ea88 <__alt_data_end+0xfc00ea88>
 800eb28:	00c00dc4 	movi	r3,55
 800eb2c:	003fe006 	br	800eab0 <__alt_data_end+0xfc00eab0>
 800eb30:	d8c00317 	ldw	r3,12(sp)
 800eb34:	00800884 	movi	r2,34
 800eb38:	18800015 	stw	r2,0(r3)
 800eb3c:	d8c00017 	ldw	r3,0(sp)
 800eb40:	00a00034 	movhi	r2,32768
 800eb44:	10bfffc4 	addi	r2,r2,-1
 800eb48:	9885883a 	add	r2,r19,r2
 800eb4c:	183fe626 	beq	r3,zero,800eae8 <__alt_data_end+0xfc00eae8>
 800eb50:	857fffc4 	addi	r21,r16,-1
 800eb54:	003fe206 	br	800eae0 <__alt_data_end+0xfc00eae0>
 800eb58:	1c000084 	addi	r16,r3,2
 800eb5c:	1f000047 	ldb	fp,1(r3)
 800eb60:	04c00044 	movi	r19,1
 800eb64:	003fa306 	br	800e9f4 <__alt_data_end+0xfc00e9f4>
 800eb68:	1c000084 	addi	r16,r3,2
 800eb6c:	1f000047 	ldb	fp,1(r3)
 800eb70:	0027883a 	mov	r19,zero
 800eb74:	003f9f06 	br	800e9f4 <__alt_data_end+0xfc00e9f4>
 800eb78:	00800c04 	movi	r2,48
 800eb7c:	e0bfa01e 	bne	fp,r2,800ea00 <__alt_data_end+0xfc00ea00>
 800eb80:	80c00003 	ldbu	r3,0(r16)
 800eb84:	00bff7c4 	movi	r2,-33
 800eb88:	1884703a 	and	r2,r3,r2
 800eb8c:	10803fcc 	andi	r2,r2,255
 800eb90:	1080201c 	xori	r2,r2,128
 800eb94:	10bfe004 	addi	r2,r2,-128
 800eb98:	00c01604 	movi	r3,88
 800eb9c:	10ff981e 	bne	r2,r3,800ea00 <__alt_data_end+0xfc00ea00>
 800eba0:	04800404 	movi	r18,16
 800eba4:	87000047 	ldb	fp,1(r16)
 800eba8:	902f883a 	mov	r23,r18
 800ebac:	84000084 	addi	r16,r16,2
 800ebb0:	003f9906 	br	800ea18 <__alt_data_end+0xfc00ea18>
 800ebb4:	80c00003 	ldbu	r3,0(r16)
 800ebb8:	00bff7c4 	movi	r2,-33
 800ebbc:	1884703a 	and	r2,r3,r2
 800ebc0:	10803fcc 	andi	r2,r2,255
 800ebc4:	1080201c 	xori	r2,r2,128
 800ebc8:	10bfe004 	addi	r2,r2,-128
 800ebcc:	00c01604 	movi	r3,88
 800ebd0:	10fff326 	beq	r2,r3,800eba0 <__alt_data_end+0xfc00eba0>
 800ebd4:	05c00204 	movi	r23,8
 800ebd8:	b825883a 	mov	r18,r23
 800ebdc:	003f8e06 	br	800ea18 <__alt_data_end+0xfc00ea18>

0800ebe0 <strtol>:
 800ebe0:	2007883a 	mov	r3,r4
 800ebe4:	010200b4 	movhi	r4,2050
 800ebe8:	2108f804 	addi	r4,r4,9184
 800ebec:	21000017 	ldw	r4,0(r4)
 800ebf0:	2805883a 	mov	r2,r5
 800ebf4:	300f883a 	mov	r7,r6
 800ebf8:	180b883a 	mov	r5,r3
 800ebfc:	100d883a 	mov	r6,r2
 800ec00:	800e9781 	jmpi	800e978 <_strtol_r>

0800ec04 <___svfprintf_internal_r>:
 800ec04:	deffb504 	addi	sp,sp,-300
 800ec08:	dfc04a15 	stw	ra,296(sp)
 800ec0c:	dd804715 	stw	r22,284(sp)
 800ec10:	d9002f15 	stw	r4,188(sp)
 800ec14:	282d883a 	mov	r22,r5
 800ec18:	d9802915 	stw	r6,164(sp)
 800ec1c:	d9c02d15 	stw	r7,180(sp)
 800ec20:	df004915 	stw	fp,292(sp)
 800ec24:	ddc04815 	stw	r23,288(sp)
 800ec28:	dd404615 	stw	r21,280(sp)
 800ec2c:	dd004515 	stw	r20,276(sp)
 800ec30:	dcc04415 	stw	r19,272(sp)
 800ec34:	dc804315 	stw	r18,268(sp)
 800ec38:	dc404215 	stw	r17,264(sp)
 800ec3c:	dc004115 	stw	r16,260(sp)
 800ec40:	80165640 	call	8016564 <_localeconv_r>
 800ec44:	10800017 	ldw	r2,0(r2)
 800ec48:	1009883a 	mov	r4,r2
 800ec4c:	d8803515 	stw	r2,212(sp)
 800ec50:	800d1b80 	call	800d1b8 <strlen>
 800ec54:	d8803915 	stw	r2,228(sp)
 800ec58:	b080030b 	ldhu	r2,12(r22)
 800ec5c:	1080200c 	andi	r2,r2,128
 800ec60:	10000226 	beq	r2,zero,800ec6c <___svfprintf_internal_r+0x68>
 800ec64:	b0800417 	ldw	r2,16(r22)
 800ec68:	10067426 	beq	r2,zero,801063c <___svfprintf_internal_r+0x1a38>
 800ec6c:	d9001dc4 	addi	r4,sp,119
 800ec70:	ddc01e04 	addi	r23,sp,120
 800ec74:	d9400404 	addi	r5,sp,16
 800ec78:	050200b4 	movhi	r20,2050
 800ec7c:	b905c83a 	sub	r2,r23,r4
 800ec80:	a50118c4 	addi	r20,r20,1123
 800ec84:	d9002815 	stw	r4,160(sp)
 800ec88:	d9401e15 	stw	r5,120(sp)
 800ec8c:	d8002015 	stw	zero,128(sp)
 800ec90:	d8001f15 	stw	zero,124(sp)
 800ec94:	d8003315 	stw	zero,204(sp)
 800ec98:	d8003715 	stw	zero,220(sp)
 800ec9c:	d8003815 	stw	zero,224(sp)
 800eca0:	d8003b15 	stw	zero,236(sp)
 800eca4:	d8003a15 	stw	zero,232(sp)
 800eca8:	d8003015 	stw	zero,192(sp)
 800ecac:	2811883a 	mov	r8,r5
 800ecb0:	d8803d15 	stw	r2,244(sp)
 800ecb4:	d8c02917 	ldw	r3,164(sp)
 800ecb8:	18800007 	ldb	r2,0(r3)
 800ecbc:	1001fa26 	beq	r2,zero,800f4a8 <___svfprintf_internal_r+0x8a4>
 800ecc0:	00c00944 	movi	r3,37
 800ecc4:	dc002917 	ldw	r16,164(sp)
 800ecc8:	10c0021e 	bne	r2,r3,800ecd4 <___svfprintf_internal_r+0xd0>
 800eccc:	00001606 	br	800ed28 <___svfprintf_internal_r+0x124>
 800ecd0:	10c08526 	beq	r2,r3,800eee8 <___svfprintf_internal_r+0x2e4>
 800ecd4:	84000044 	addi	r16,r16,1
 800ecd8:	80800007 	ldb	r2,0(r16)
 800ecdc:	103ffc1e 	bne	r2,zero,800ecd0 <__alt_data_end+0xfc00ecd0>
 800ece0:	d9002917 	ldw	r4,164(sp)
 800ece4:	8123c83a 	sub	r17,r16,r4
 800ece8:	88000f26 	beq	r17,zero,800ed28 <___svfprintf_internal_r+0x124>
 800ecec:	d8802917 	ldw	r2,164(sp)
 800ecf0:	d8c02017 	ldw	r3,128(sp)
 800ecf4:	44400115 	stw	r17,4(r8)
 800ecf8:	40800015 	stw	r2,0(r8)
 800ecfc:	d8801f17 	ldw	r2,124(sp)
 800ed00:	1c47883a 	add	r3,r3,r17
 800ed04:	d8c02015 	stw	r3,128(sp)
 800ed08:	10800044 	addi	r2,r2,1
 800ed0c:	d8801f15 	stw	r2,124(sp)
 800ed10:	00c001c4 	movi	r3,7
 800ed14:	18807716 	blt	r3,r2,800eef4 <___svfprintf_internal_r+0x2f0>
 800ed18:	42000204 	addi	r8,r8,8
 800ed1c:	d8c03017 	ldw	r3,192(sp)
 800ed20:	1c47883a 	add	r3,r3,r17
 800ed24:	d8c03015 	stw	r3,192(sp)
 800ed28:	80800007 	ldb	r2,0(r16)
 800ed2c:	10007826 	beq	r2,zero,800ef10 <___svfprintf_internal_r+0x30c>
 800ed30:	80800044 	addi	r2,r16,1
 800ed34:	84000047 	ldb	r16,1(r16)
 800ed38:	0027883a 	mov	r19,zero
 800ed3c:	0039883a 	mov	fp,zero
 800ed40:	dcc02a05 	stb	r19,168(sp)
 800ed44:	d8002785 	stb	zero,158(sp)
 800ed48:	027fffc4 	movi	r9,-1
 800ed4c:	d8002e15 	stw	zero,184(sp)
 800ed50:	04401604 	movi	r17,88
 800ed54:	04800244 	movi	r18,9
 800ed58:	da002915 	stw	r8,164(sp)
 800ed5c:	e027883a 	mov	r19,fp
 800ed60:	17000044 	addi	fp,r2,1
 800ed64:	80bff804 	addi	r2,r16,-32
 800ed68:	88830036 	bltu	r17,r2,800f96c <___svfprintf_internal_r+0xd68>
 800ed6c:	100490ba 	slli	r2,r2,2
 800ed70:	01020074 	movhi	r4,2049
 800ed74:	213b6104 	addi	r4,r4,-4732
 800ed78:	1105883a 	add	r2,r2,r4
 800ed7c:	10800017 	ldw	r2,0(r2)
 800ed80:	1000683a 	jmp	r2
 800ed84:	0800f7b0 	cmpltui	zero,at,990
 800ed88:	0800f96c 	andhi	zero,at,997
 800ed8c:	0800f96c 	andhi	zero,at,997
 800ed90:	0800f7cc 	andi	zero,at,991
 800ed94:	0800f96c 	andhi	zero,at,997
 800ed98:	0800f96c 	andhi	zero,at,997
 800ed9c:	0800f96c 	andhi	zero,at,997
 800eda0:	0800f96c 	andhi	zero,at,997
 800eda4:	0800f96c 	andhi	zero,at,997
 800eda8:	0800f96c 	andhi	zero,at,997
 800edac:	0800f8b8 	rdprs	zero,at,994
 800edb0:	0800f8e0 	cmpeqi	zero,at,995
 800edb4:	0800f96c 	andhi	zero,at,997
 800edb8:	0800ef70 	cmpltui	zero,at,957
 800edbc:	0800ef80 	call	800ef8 <__alt_mem_onchip_memory2_0+0x800ef8>
 800edc0:	0800f96c 	andhi	zero,at,997
 800edc4:	0800efd0 	cmplti	zero,at,959
 800edc8:	0800efe0 	cmpeqi	zero,at,959
 800edcc:	0800efe0 	cmpeqi	zero,at,959
 800edd0:	0800efe0 	cmpeqi	zero,at,959
 800edd4:	0800efe0 	cmpeqi	zero,at,959
 800edd8:	0800efe0 	cmpeqi	zero,at,959
 800eddc:	0800efe0 	cmpeqi	zero,at,959
 800ede0:	0800efe0 	cmpeqi	zero,at,959
 800ede4:	0800efe0 	cmpeqi	zero,at,959
 800ede8:	0800efe0 	cmpeqi	zero,at,959
 800edec:	0800f96c 	andhi	zero,at,997
 800edf0:	0800f96c 	andhi	zero,at,997
 800edf4:	0800f96c 	andhi	zero,at,997
 800edf8:	0800f96c 	andhi	zero,at,997
 800edfc:	0800f96c 	andhi	zero,at,997
 800ee00:	0800f96c 	andhi	zero,at,997
 800ee04:	0800f96c 	andhi	zero,at,997
 800ee08:	0800f96c 	andhi	zero,at,997
 800ee0c:	0800f96c 	andhi	zero,at,997
 800ee10:	0800f96c 	andhi	zero,at,997
 800ee14:	0800f024 	muli	zero,at,960
 800ee18:	0800f4b0 	cmpltui	zero,at,978
 800ee1c:	0800f96c 	andhi	zero,at,997
 800ee20:	0800f4b0 	cmpltui	zero,at,978
 800ee24:	0800f96c 	andhi	zero,at,997
 800ee28:	0800f96c 	andhi	zero,at,997
 800ee2c:	0800f96c 	andhi	zero,at,997
 800ee30:	0800f96c 	andhi	zero,at,997
 800ee34:	0800f558 	cmpnei	zero,at,981
 800ee38:	0800f96c 	andhi	zero,at,997
 800ee3c:	0800f96c 	andhi	zero,at,997
 800ee40:	0800f568 	cmpgeui	zero,at,981
 800ee44:	0800f96c 	andhi	zero,at,997
 800ee48:	0800f96c 	andhi	zero,at,997
 800ee4c:	0800f96c 	andhi	zero,at,997
 800ee50:	0800f96c 	andhi	zero,at,997
 800ee54:	0800f96c 	andhi	zero,at,997
 800ee58:	0800f5a8 	cmpgeui	zero,at,982
 800ee5c:	0800f96c 	andhi	zero,at,997
 800ee60:	0800f96c 	andhi	zero,at,997
 800ee64:	0800f6fc 	xorhi	zero,at,987
 800ee68:	0800f96c 	andhi	zero,at,997
 800ee6c:	0800f96c 	andhi	zero,at,997
 800ee70:	0800f96c 	andhi	zero,at,997
 800ee74:	0800f96c 	andhi	zero,at,997
 800ee78:	0800f96c 	andhi	zero,at,997
 800ee7c:	0800f96c 	andhi	zero,at,997
 800ee80:	0800f96c 	andhi	zero,at,997
 800ee84:	0800f96c 	andhi	zero,at,997
 800ee88:	0800f96c 	andhi	zero,at,997
 800ee8c:	0800f96c 	andhi	zero,at,997
 800ee90:	0800f764 	muli	zero,at,989
 800ee94:	0800f628 	cmpgeui	zero,at,984
 800ee98:	0800f4b0 	cmpltui	zero,at,978
 800ee9c:	0800f4b0 	cmpltui	zero,at,978
 800eea0:	0800f4b0 	cmpltui	zero,at,978
 800eea4:	0800f694 	ori	zero,at,986
 800eea8:	0800f628 	cmpgeui	zero,at,984
 800eeac:	0800f96c 	andhi	zero,at,997
 800eeb0:	0800f96c 	andhi	zero,at,997
 800eeb4:	0800f6a4 	muli	zero,at,986
 800eeb8:	0800f96c 	andhi	zero,at,997
 800eebc:	0800f6bc 	xorhi	zero,at,986
 800eec0:	0800f930 	cmpltui	zero,at,996
 800eec4:	0800f5dc 	xori	zero,at,983
 800eec8:	0800f8a8 	cmpgeui	zero,at,994
 800eecc:	0800f96c 	andhi	zero,at,997
 800eed0:	0800f7dc 	xori	zero,at,991
 800eed4:	0800f96c 	andhi	zero,at,997
 800eed8:	0800f8f4 	orhi	zero,at,995
 800eedc:	0800f96c 	andhi	zero,at,997
 800eee0:	0800f96c 	andhi	zero,at,997
 800eee4:	0800f85c 	xori	zero,at,993
 800eee8:	d9402917 	ldw	r5,164(sp)
 800eeec:	8163c83a 	sub	r17,r16,r5
 800eef0:	003f7d06 	br	800ece8 <__alt_data_end+0xfc00ece8>
 800eef4:	d9002f17 	ldw	r4,188(sp)
 800eef8:	b00b883a 	mov	r5,r22
 800eefc:	b80d883a 	mov	r6,r23
 800ef00:	8018c740 	call	8018c74 <__ssprint_r>
 800ef04:	1000081e 	bne	r2,zero,800ef28 <___svfprintf_internal_r+0x324>
 800ef08:	da000404 	addi	r8,sp,16
 800ef0c:	003f8306 	br	800ed1c <__alt_data_end+0xfc00ed1c>
 800ef10:	d8802017 	ldw	r2,128(sp)
 800ef14:	10000426 	beq	r2,zero,800ef28 <___svfprintf_internal_r+0x324>
 800ef18:	d9002f17 	ldw	r4,188(sp)
 800ef1c:	b00b883a 	mov	r5,r22
 800ef20:	d9801e04 	addi	r6,sp,120
 800ef24:	8018c740 	call	8018c74 <__ssprint_r>
 800ef28:	b080030b 	ldhu	r2,12(r22)
 800ef2c:	1080100c 	andi	r2,r2,64
 800ef30:	10000d1e 	bne	r2,zero,800ef68 <___svfprintf_internal_r+0x364>
 800ef34:	d8803017 	ldw	r2,192(sp)
 800ef38:	dfc04a17 	ldw	ra,296(sp)
 800ef3c:	df004917 	ldw	fp,292(sp)
 800ef40:	ddc04817 	ldw	r23,288(sp)
 800ef44:	dd804717 	ldw	r22,284(sp)
 800ef48:	dd404617 	ldw	r21,280(sp)
 800ef4c:	dd004517 	ldw	r20,276(sp)
 800ef50:	dcc04417 	ldw	r19,272(sp)
 800ef54:	dc804317 	ldw	r18,268(sp)
 800ef58:	dc404217 	ldw	r17,264(sp)
 800ef5c:	dc004117 	ldw	r16,260(sp)
 800ef60:	dec04b04 	addi	sp,sp,300
 800ef64:	f800283a 	ret
 800ef68:	00bfffc4 	movi	r2,-1
 800ef6c:	003ff206 	br	800ef38 <__alt_data_end+0xfc00ef38>
 800ef70:	e005883a 	mov	r2,fp
 800ef74:	9cc00114 	ori	r19,r19,4
 800ef78:	e4000007 	ldb	r16,0(fp)
 800ef7c:	003f7806 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800ef80:	e4000007 	ldb	r16,0(fp)
 800ef84:	01000a84 	movi	r4,42
 800ef88:	e0800044 	addi	r2,fp,1
 800ef8c:	81071026 	beq	r16,r4,8010bd0 <___svfprintf_internal_r+0x1fcc>
 800ef90:	857ff404 	addi	r21,r16,-48
 800ef94:	1039883a 	mov	fp,r2
 800ef98:	0013883a 	mov	r9,zero
 800ef9c:	957f7136 	bltu	r18,r21,800ed64 <__alt_data_end+0xfc00ed64>
 800efa0:	0009883a 	mov	r4,zero
 800efa4:	01400284 	movi	r5,10
 800efa8:	8009fe40 	call	8009fe4 <__mulsi3>
 800efac:	e4000007 	ldb	r16,0(fp)
 800efb0:	a889883a 	add	r4,r21,r2
 800efb4:	e7000044 	addi	fp,fp,1
 800efb8:	857ff404 	addi	r21,r16,-48
 800efbc:	957ff92e 	bgeu	r18,r21,800efa4 <__alt_data_end+0xfc00efa4>
 800efc0:	2013883a 	mov	r9,r4
 800efc4:	203f670e 	bge	r4,zero,800ed64 <__alt_data_end+0xfc00ed64>
 800efc8:	027fffc4 	movi	r9,-1
 800efcc:	003f6506 	br	800ed64 <__alt_data_end+0xfc00ed64>
 800efd0:	9cc02014 	ori	r19,r19,128
 800efd4:	e005883a 	mov	r2,fp
 800efd8:	e4000007 	ldb	r16,0(fp)
 800efdc:	003f6006 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800efe0:	857ff404 	addi	r21,r16,-48
 800efe4:	d8002e15 	stw	zero,184(sp)
 800efe8:	e021883a 	mov	r16,fp
 800efec:	0009883a 	mov	r4,zero
 800eff0:	da402b15 	stw	r9,172(sp)
 800eff4:	01400284 	movi	r5,10
 800eff8:	8009fe40 	call	8009fe4 <__mulsi3>
 800effc:	81400007 	ldb	r5,0(r16)
 800f000:	1549883a 	add	r4,r2,r21
 800f004:	e7000044 	addi	fp,fp,1
 800f008:	2d7ff404 	addi	r21,r5,-48
 800f00c:	e021883a 	mov	r16,fp
 800f010:	957ff82e 	bgeu	r18,r21,800eff4 <__alt_data_end+0xfc00eff4>
 800f014:	2821883a 	mov	r16,r5
 800f018:	d9002e15 	stw	r4,184(sp)
 800f01c:	da402b17 	ldw	r9,172(sp)
 800f020:	003f5006 	br	800ed64 <__alt_data_end+0xfc00ed64>
 800f024:	da002917 	ldw	r8,164(sp)
 800f028:	df002915 	stw	fp,164(sp)
 800f02c:	9839883a 	mov	fp,r19
 800f030:	dcc02a03 	ldbu	r19,168(sp)
 800f034:	e7000414 	ori	fp,fp,16
 800f038:	e080080c 	andi	r2,fp,32
 800f03c:	dcc02785 	stb	r19,158(sp)
 800f040:	d8c02d17 	ldw	r3,180(sp)
 800f044:	10018026 	beq	r2,zero,800f648 <___svfprintf_internal_r+0xa44>
 800f048:	d9002d17 	ldw	r4,180(sp)
 800f04c:	18800117 	ldw	r2,4(r3)
 800f050:	1c800017 	ldw	r18,0(r3)
 800f054:	21000204 	addi	r4,r4,8
 800f058:	d9002d15 	stw	r4,180(sp)
 800f05c:	102b883a 	mov	r21,r2
 800f060:	10018216 	blt	r2,zero,800f66c <___svfprintf_internal_r+0xa68>
 800f064:	dcc02783 	ldbu	r19,158(sp)
 800f068:	da403215 	stw	r9,200(sp)
 800f06c:	00800044 	movi	r2,1
 800f070:	9546b03a 	or	r3,r18,r21
 800f074:	48000216 	blt	r9,zero,800f080 <___svfprintf_internal_r+0x47c>
 800f078:	013fdfc4 	movi	r4,-129
 800f07c:	e138703a 	and	fp,fp,r4
 800f080:	1802471e 	bne	r3,zero,800f9a0 <___svfprintf_internal_r+0xd9c>
 800f084:	48035226 	beq	r9,zero,800fdd0 <___svfprintf_internal_r+0x11cc>
 800f088:	10803fcc 	andi	r2,r2,255
 800f08c:	00c00044 	movi	r3,1
 800f090:	10c26626 	beq	r2,r3,800fa2c <___svfprintf_internal_r+0xe28>
 800f094:	00c00084 	movi	r3,2
 800f098:	10c2e826 	beq	r2,r3,800fc3c <___svfprintf_internal_r+0x1038>
 800f09c:	b807883a 	mov	r3,r23
 800f0a0:	9008d0fa 	srli	r4,r18,3
 800f0a4:	a80a977a 	slli	r5,r21,29
 800f0a8:	a82ad0fa 	srli	r21,r21,3
 800f0ac:	948001cc 	andi	r18,r18,7
 800f0b0:	90800c04 	addi	r2,r18,48
 800f0b4:	18ffffc4 	addi	r3,r3,-1
 800f0b8:	2924b03a 	or	r18,r5,r4
 800f0bc:	18800005 	stb	r2,0(r3)
 800f0c0:	9548b03a 	or	r4,r18,r21
 800f0c4:	203ff61e 	bne	r4,zero,800f0a0 <__alt_data_end+0xfc00f0a0>
 800f0c8:	e100004c 	andi	r4,fp,1
 800f0cc:	d8c03115 	stw	r3,196(sp)
 800f0d0:	2002e826 	beq	r4,zero,800fc74 <___svfprintf_internal_r+0x1070>
 800f0d4:	10803fcc 	andi	r2,r2,255
 800f0d8:	1080201c 	xori	r2,r2,128
 800f0dc:	10bfe004 	addi	r2,r2,-128
 800f0e0:	01000c04 	movi	r4,48
 800f0e4:	11056d26 	beq	r2,r4,801069c <___svfprintf_internal_r+0x1a98>
 800f0e8:	d9403117 	ldw	r5,196(sp)
 800f0ec:	193fffc5 	stb	r4,-1(r3)
 800f0f0:	297fffc4 	addi	r5,r5,-1
 800f0f4:	d9403115 	stw	r5,196(sp)
 800f0f8:	b963c83a 	sub	r17,r23,r5
 800f0fc:	8805883a 	mov	r2,r17
 800f100:	8a40010e 	bge	r17,r9,800f108 <___svfprintf_internal_r+0x504>
 800f104:	4805883a 	mov	r2,r9
 800f108:	d8802a15 	stw	r2,168(sp)
 800f10c:	d8003415 	stw	zero,208(sp)
 800f110:	98803fcc 	andi	r2,r19,255
 800f114:	1080201c 	xori	r2,r2,128
 800f118:	10bfe004 	addi	r2,r2,-128
 800f11c:	10000326 	beq	r2,zero,800f12c <___svfprintf_internal_r+0x528>
 800f120:	d8c02a17 	ldw	r3,168(sp)
 800f124:	18c00044 	addi	r3,r3,1
 800f128:	d8c02a15 	stw	r3,168(sp)
 800f12c:	e0c0008c 	andi	r3,fp,2
 800f130:	d8c02b15 	stw	r3,172(sp)
 800f134:	18000326 	beq	r3,zero,800f144 <___svfprintf_internal_r+0x540>
 800f138:	d8c02a17 	ldw	r3,168(sp)
 800f13c:	18c00084 	addi	r3,r3,2
 800f140:	d8c02a15 	stw	r3,168(sp)
 800f144:	e0c0210c 	andi	r3,fp,132
 800f148:	d8c02c15 	stw	r3,176(sp)
 800f14c:	1802121e 	bne	r3,zero,800f998 <___svfprintf_internal_r+0xd94>
 800f150:	d9002e17 	ldw	r4,184(sp)
 800f154:	d8c02a17 	ldw	r3,168(sp)
 800f158:	20ebc83a 	sub	r21,r4,r3
 800f15c:	05420e0e 	bge	zero,r21,800f998 <___svfprintf_internal_r+0xd94>
 800f160:	02400404 	movi	r9,16
 800f164:	d8c02017 	ldw	r3,128(sp)
 800f168:	d8801f17 	ldw	r2,124(sp)
 800f16c:	4d45aa0e 	bge	r9,r21,8010818 <___svfprintf_internal_r+0x1c14>
 800f170:	014200b4 	movhi	r5,2050
 800f174:	a809883a 	mov	r4,r21
 800f178:	29411cc4 	addi	r5,r5,1139
 800f17c:	dc003c15 	stw	r16,240(sp)
 800f180:	882b883a 	mov	r21,r17
 800f184:	d9403615 	stw	r5,216(sp)
 800f188:	4827883a 	mov	r19,r9
 800f18c:	048001c4 	movi	r18,7
 800f190:	dc002f17 	ldw	r16,188(sp)
 800f194:	2023883a 	mov	r17,r4
 800f198:	00000306 	br	800f1a8 <___svfprintf_internal_r+0x5a4>
 800f19c:	8c7ffc04 	addi	r17,r17,-16
 800f1a0:	42000204 	addi	r8,r8,8
 800f1a4:	9c40130e 	bge	r19,r17,800f1f4 <___svfprintf_internal_r+0x5f0>
 800f1a8:	010200b4 	movhi	r4,2050
 800f1ac:	18c00404 	addi	r3,r3,16
 800f1b0:	10800044 	addi	r2,r2,1
 800f1b4:	21011cc4 	addi	r4,r4,1139
 800f1b8:	41000015 	stw	r4,0(r8)
 800f1bc:	44c00115 	stw	r19,4(r8)
 800f1c0:	d8c02015 	stw	r3,128(sp)
 800f1c4:	d8801f15 	stw	r2,124(sp)
 800f1c8:	90bff40e 	bge	r18,r2,800f19c <__alt_data_end+0xfc00f19c>
 800f1cc:	8009883a 	mov	r4,r16
 800f1d0:	b00b883a 	mov	r5,r22
 800f1d4:	b80d883a 	mov	r6,r23
 800f1d8:	8018c740 	call	8018c74 <__ssprint_r>
 800f1dc:	103f521e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800f1e0:	8c7ffc04 	addi	r17,r17,-16
 800f1e4:	d8c02017 	ldw	r3,128(sp)
 800f1e8:	d8801f17 	ldw	r2,124(sp)
 800f1ec:	da000404 	addi	r8,sp,16
 800f1f0:	9c7fed16 	blt	r19,r17,800f1a8 <__alt_data_end+0xfc00f1a8>
 800f1f4:	dc003c17 	ldw	r16,240(sp)
 800f1f8:	8809883a 	mov	r4,r17
 800f1fc:	a823883a 	mov	r17,r21
 800f200:	202b883a 	mov	r21,r4
 800f204:	d9403617 	ldw	r5,216(sp)
 800f208:	a8c7883a 	add	r3,r21,r3
 800f20c:	10800044 	addi	r2,r2,1
 800f210:	41400015 	stw	r5,0(r8)
 800f214:	45400115 	stw	r21,4(r8)
 800f218:	d8c02015 	stw	r3,128(sp)
 800f21c:	d8801f15 	stw	r2,124(sp)
 800f220:	010001c4 	movi	r4,7
 800f224:	20834416 	blt	r4,r2,800ff38 <___svfprintf_internal_r+0x1334>
 800f228:	d8802787 	ldb	r2,158(sp)
 800f22c:	42000204 	addi	r8,r8,8
 800f230:	10000c26 	beq	r2,zero,800f264 <___svfprintf_internal_r+0x660>
 800f234:	d8801f17 	ldw	r2,124(sp)
 800f238:	d9002784 	addi	r4,sp,158
 800f23c:	18c00044 	addi	r3,r3,1
 800f240:	10800044 	addi	r2,r2,1
 800f244:	41000015 	stw	r4,0(r8)
 800f248:	01000044 	movi	r4,1
 800f24c:	41000115 	stw	r4,4(r8)
 800f250:	d8c02015 	stw	r3,128(sp)
 800f254:	d8801f15 	stw	r2,124(sp)
 800f258:	010001c4 	movi	r4,7
 800f25c:	2082ee16 	blt	r4,r2,800fe18 <___svfprintf_internal_r+0x1214>
 800f260:	42000204 	addi	r8,r8,8
 800f264:	d8802b17 	ldw	r2,172(sp)
 800f268:	10000c26 	beq	r2,zero,800f29c <___svfprintf_internal_r+0x698>
 800f26c:	d8801f17 	ldw	r2,124(sp)
 800f270:	d9002704 	addi	r4,sp,156
 800f274:	18c00084 	addi	r3,r3,2
 800f278:	10800044 	addi	r2,r2,1
 800f27c:	41000015 	stw	r4,0(r8)
 800f280:	01000084 	movi	r4,2
 800f284:	41000115 	stw	r4,4(r8)
 800f288:	d8c02015 	stw	r3,128(sp)
 800f28c:	d8801f15 	stw	r2,124(sp)
 800f290:	010001c4 	movi	r4,7
 800f294:	2082e816 	blt	r4,r2,800fe38 <___svfprintf_internal_r+0x1234>
 800f298:	42000204 	addi	r8,r8,8
 800f29c:	d9002c17 	ldw	r4,176(sp)
 800f2a0:	00802004 	movi	r2,128
 800f2a4:	20823126 	beq	r4,r2,800fb6c <___svfprintf_internal_r+0xf68>
 800f2a8:	d9403217 	ldw	r5,200(sp)
 800f2ac:	2c67c83a 	sub	r19,r5,r17
 800f2b0:	04c02f0e 	bge	zero,r19,800f370 <___svfprintf_internal_r+0x76c>
 800f2b4:	05400404 	movi	r21,16
 800f2b8:	d8801f17 	ldw	r2,124(sp)
 800f2bc:	acc4260e 	bge	r21,r19,8010358 <___svfprintf_internal_r+0x1754>
 800f2c0:	014200b4 	movhi	r5,2050
 800f2c4:	9809883a 	mov	r4,r19
 800f2c8:	294118c4 	addi	r5,r5,1123
 800f2cc:	dc002c15 	stw	r16,176(sp)
 800f2d0:	8827883a 	mov	r19,r17
 800f2d4:	d9402b15 	stw	r5,172(sp)
 800f2d8:	048001c4 	movi	r18,7
 800f2dc:	dc002f17 	ldw	r16,188(sp)
 800f2e0:	2023883a 	mov	r17,r4
 800f2e4:	00000306 	br	800f2f4 <___svfprintf_internal_r+0x6f0>
 800f2e8:	8c7ffc04 	addi	r17,r17,-16
 800f2ec:	42000204 	addi	r8,r8,8
 800f2f0:	ac40110e 	bge	r21,r17,800f338 <___svfprintf_internal_r+0x734>
 800f2f4:	18c00404 	addi	r3,r3,16
 800f2f8:	10800044 	addi	r2,r2,1
 800f2fc:	45000015 	stw	r20,0(r8)
 800f300:	45400115 	stw	r21,4(r8)
 800f304:	d8c02015 	stw	r3,128(sp)
 800f308:	d8801f15 	stw	r2,124(sp)
 800f30c:	90bff60e 	bge	r18,r2,800f2e8 <__alt_data_end+0xfc00f2e8>
 800f310:	8009883a 	mov	r4,r16
 800f314:	b00b883a 	mov	r5,r22
 800f318:	b80d883a 	mov	r6,r23
 800f31c:	8018c740 	call	8018c74 <__ssprint_r>
 800f320:	103f011e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800f324:	8c7ffc04 	addi	r17,r17,-16
 800f328:	d8c02017 	ldw	r3,128(sp)
 800f32c:	d8801f17 	ldw	r2,124(sp)
 800f330:	da000404 	addi	r8,sp,16
 800f334:	ac7fef16 	blt	r21,r17,800f2f4 <__alt_data_end+0xfc00f2f4>
 800f338:	dc002c17 	ldw	r16,176(sp)
 800f33c:	8809883a 	mov	r4,r17
 800f340:	9823883a 	mov	r17,r19
 800f344:	2027883a 	mov	r19,r4
 800f348:	d9002b17 	ldw	r4,172(sp)
 800f34c:	1cc7883a 	add	r3,r3,r19
 800f350:	10800044 	addi	r2,r2,1
 800f354:	41000015 	stw	r4,0(r8)
 800f358:	44c00115 	stw	r19,4(r8)
 800f35c:	d8c02015 	stw	r3,128(sp)
 800f360:	d8801f15 	stw	r2,124(sp)
 800f364:	010001c4 	movi	r4,7
 800f368:	2082a316 	blt	r4,r2,800fdf8 <___svfprintf_internal_r+0x11f4>
 800f36c:	42000204 	addi	r8,r8,8
 800f370:	e080400c 	andi	r2,fp,256
 800f374:	1001b31e 	bne	r2,zero,800fa44 <___svfprintf_internal_r+0xe40>
 800f378:	d8801f17 	ldw	r2,124(sp)
 800f37c:	d9403117 	ldw	r5,196(sp)
 800f380:	1c47883a 	add	r3,r3,r17
 800f384:	10800044 	addi	r2,r2,1
 800f388:	41400015 	stw	r5,0(r8)
 800f38c:	44400115 	stw	r17,4(r8)
 800f390:	d8c02015 	stw	r3,128(sp)
 800f394:	d8801f15 	stw	r2,124(sp)
 800f398:	010001c4 	movi	r4,7
 800f39c:	20827e16 	blt	r4,r2,800fd98 <___svfprintf_internal_r+0x1194>
 800f3a0:	42000204 	addi	r8,r8,8
 800f3a4:	e080010c 	andi	r2,fp,4
 800f3a8:	10003226 	beq	r2,zero,800f474 <___svfprintf_internal_r+0x870>
 800f3ac:	d8802e17 	ldw	r2,184(sp)
 800f3b0:	d9002a17 	ldw	r4,168(sp)
 800f3b4:	1121c83a 	sub	r16,r2,r4
 800f3b8:	04002e0e 	bge	zero,r16,800f474 <___svfprintf_internal_r+0x870>
 800f3bc:	04400404 	movi	r17,16
 800f3c0:	d8801f17 	ldw	r2,124(sp)
 800f3c4:	8c05550e 	bge	r17,r16,801091c <___svfprintf_internal_r+0x1d18>
 800f3c8:	010200b4 	movhi	r4,2050
 800f3cc:	21011cc4 	addi	r4,r4,1139
 800f3d0:	d9003615 	stw	r4,216(sp)
 800f3d4:	048001c4 	movi	r18,7
 800f3d8:	dcc02f17 	ldw	r19,188(sp)
 800f3dc:	00000306 	br	800f3ec <___svfprintf_internal_r+0x7e8>
 800f3e0:	843ffc04 	addi	r16,r16,-16
 800f3e4:	42000204 	addi	r8,r8,8
 800f3e8:	8c00130e 	bge	r17,r16,800f438 <___svfprintf_internal_r+0x834>
 800f3ec:	014200b4 	movhi	r5,2050
 800f3f0:	18c00404 	addi	r3,r3,16
 800f3f4:	10800044 	addi	r2,r2,1
 800f3f8:	29411cc4 	addi	r5,r5,1139
 800f3fc:	41400015 	stw	r5,0(r8)
 800f400:	44400115 	stw	r17,4(r8)
 800f404:	d8c02015 	stw	r3,128(sp)
 800f408:	d8801f15 	stw	r2,124(sp)
 800f40c:	90bff40e 	bge	r18,r2,800f3e0 <__alt_data_end+0xfc00f3e0>
 800f410:	9809883a 	mov	r4,r19
 800f414:	b00b883a 	mov	r5,r22
 800f418:	b80d883a 	mov	r6,r23
 800f41c:	8018c740 	call	8018c74 <__ssprint_r>
 800f420:	103ec11e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800f424:	843ffc04 	addi	r16,r16,-16
 800f428:	d8c02017 	ldw	r3,128(sp)
 800f42c:	d8801f17 	ldw	r2,124(sp)
 800f430:	da000404 	addi	r8,sp,16
 800f434:	8c3fed16 	blt	r17,r16,800f3ec <__alt_data_end+0xfc00f3ec>
 800f438:	d9003617 	ldw	r4,216(sp)
 800f43c:	1c07883a 	add	r3,r3,r16
 800f440:	10800044 	addi	r2,r2,1
 800f444:	41000015 	stw	r4,0(r8)
 800f448:	44000115 	stw	r16,4(r8)
 800f44c:	d8c02015 	stw	r3,128(sp)
 800f450:	d8801f15 	stw	r2,124(sp)
 800f454:	010001c4 	movi	r4,7
 800f458:	2080060e 	bge	r4,r2,800f474 <___svfprintf_internal_r+0x870>
 800f45c:	d9002f17 	ldw	r4,188(sp)
 800f460:	b00b883a 	mov	r5,r22
 800f464:	b80d883a 	mov	r6,r23
 800f468:	8018c740 	call	8018c74 <__ssprint_r>
 800f46c:	103eae1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800f470:	d8c02017 	ldw	r3,128(sp)
 800f474:	df002a17 	ldw	fp,168(sp)
 800f478:	d9402e17 	ldw	r5,184(sp)
 800f47c:	e140010e 	bge	fp,r5,800f484 <___svfprintf_internal_r+0x880>
 800f480:	2839883a 	mov	fp,r5
 800f484:	d8803017 	ldw	r2,192(sp)
 800f488:	1705883a 	add	r2,r2,fp
 800f48c:	d8803015 	stw	r2,192(sp)
 800f490:	1802491e 	bne	r3,zero,800fdb8 <___svfprintf_internal_r+0x11b4>
 800f494:	d8c02917 	ldw	r3,164(sp)
 800f498:	d8001f15 	stw	zero,124(sp)
 800f49c:	da000404 	addi	r8,sp,16
 800f4a0:	18800007 	ldb	r2,0(r3)
 800f4a4:	103e061e 	bne	r2,zero,800ecc0 <__alt_data_end+0xfc00ecc0>
 800f4a8:	dc002917 	ldw	r16,164(sp)
 800f4ac:	003e1e06 	br	800ed28 <__alt_data_end+0xfc00ed28>
 800f4b0:	d9002d17 	ldw	r4,180(sp)
 800f4b4:	d9402d17 	ldw	r5,180(sp)
 800f4b8:	da002917 	ldw	r8,164(sp)
 800f4bc:	21000017 	ldw	r4,0(r4)
 800f4c0:	29400117 	ldw	r5,4(r5)
 800f4c4:	df002915 	stw	fp,164(sp)
 800f4c8:	9839883a 	mov	fp,r19
 800f4cc:	dcc02a03 	ldbu	r19,168(sp)
 800f4d0:	d9003715 	stw	r4,220(sp)
 800f4d4:	d9403815 	stw	r5,224(sp)
 800f4d8:	da004015 	stw	r8,256(sp)
 800f4dc:	da403f15 	stw	r9,252(sp)
 800f4e0:	dcc02785 	stb	r19,158(sp)
 800f4e4:	80092d80 	call	80092d8 <__fpclassifyd>
 800f4e8:	d8c02d17 	ldw	r3,180(sp)
 800f4ec:	04400044 	movi	r17,1
 800f4f0:	da004017 	ldw	r8,256(sp)
 800f4f4:	1c800204 	addi	r18,r3,8
 800f4f8:	da403f17 	ldw	r9,252(sp)
 800f4fc:	d9003717 	ldw	r4,220(sp)
 800f500:	d9403817 	ldw	r5,224(sp)
 800f504:	14433e1e 	bne	r2,r17,8010200 <___svfprintf_internal_r+0x15fc>
 800f508:	000d883a 	mov	r6,zero
 800f50c:	000f883a 	mov	r7,zero
 800f510:	800b9100 	call	800b910 <__ledf2>
 800f514:	da004017 	ldw	r8,256(sp)
 800f518:	10050c16 	blt	r2,zero,801094c <___svfprintf_internal_r+0x1d48>
 800f51c:	dcc02783 	ldbu	r19,158(sp)
 800f520:	008011c4 	movi	r2,71
 800f524:	1404410e 	bge	r2,r16,801062c <___svfprintf_internal_r+0x1a28>
 800f528:	014200b4 	movhi	r5,2050
 800f52c:	29410a04 	addi	r5,r5,1064
 800f530:	d9403115 	stw	r5,196(sp)
 800f534:	00c000c4 	movi	r3,3
 800f538:	00bfdfc4 	movi	r2,-129
 800f53c:	d8c02a15 	stw	r3,168(sp)
 800f540:	e0b8703a 	and	fp,fp,r2
 800f544:	dc802d15 	stw	r18,180(sp)
 800f548:	1823883a 	mov	r17,r3
 800f54c:	d8003215 	stw	zero,200(sp)
 800f550:	d8003415 	stw	zero,208(sp)
 800f554:	003eee06 	br	800f110 <__alt_data_end+0xfc00f110>
 800f558:	9cc00214 	ori	r19,r19,8
 800f55c:	e005883a 	mov	r2,fp
 800f560:	e4000007 	ldb	r16,0(fp)
 800f564:	003dfe06 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f568:	da002917 	ldw	r8,164(sp)
 800f56c:	df002915 	stw	fp,164(sp)
 800f570:	9f000414 	ori	fp,r19,16
 800f574:	e080080c 	andi	r2,fp,32
 800f578:	1000f226 	beq	r2,zero,800f944 <___svfprintf_internal_r+0xd40>
 800f57c:	d9402d17 	ldw	r5,180(sp)
 800f580:	0005883a 	mov	r2,zero
 800f584:	2c800017 	ldw	r18,0(r5)
 800f588:	2d400117 	ldw	r21,4(r5)
 800f58c:	29400204 	addi	r5,r5,8
 800f590:	d9402d15 	stw	r5,180(sp)
 800f594:	9546b03a 	or	r3,r18,r21
 800f598:	d8002785 	stb	zero,158(sp)
 800f59c:	da403215 	stw	r9,200(sp)
 800f5a0:	0027883a 	mov	r19,zero
 800f5a4:	003eb306 	br	800f074 <__alt_data_end+0xfc00f074>
 800f5a8:	da002917 	ldw	r8,164(sp)
 800f5ac:	df002915 	stw	fp,164(sp)
 800f5b0:	9f000414 	ori	fp,r19,16
 800f5b4:	e080080c 	andi	r2,fp,32
 800f5b8:	1000d326 	beq	r2,zero,800f908 <___svfprintf_internal_r+0xd04>
 800f5bc:	d9002d17 	ldw	r4,180(sp)
 800f5c0:	00800044 	movi	r2,1
 800f5c4:	24800017 	ldw	r18,0(r4)
 800f5c8:	25400117 	ldw	r21,4(r4)
 800f5cc:	21000204 	addi	r4,r4,8
 800f5d0:	d9002d15 	stw	r4,180(sp)
 800f5d4:	9546b03a 	or	r3,r18,r21
 800f5d8:	003fef06 	br	800f598 <__alt_data_end+0xfc00f598>
 800f5dc:	d9402d17 	ldw	r5,180(sp)
 800f5e0:	00800c04 	movi	r2,48
 800f5e4:	d8802705 	stb	r2,156(sp)
 800f5e8:	2c800017 	ldw	r18,0(r5)
 800f5ec:	00801e04 	movi	r2,120
 800f5f0:	d8802745 	stb	r2,157(sp)
 800f5f4:	008200b4 	movhi	r2,2050
 800f5f8:	10811204 	addi	r2,r2,1096
 800f5fc:	29400104 	addi	r5,r5,4
 800f600:	da002917 	ldw	r8,164(sp)
 800f604:	d8803b15 	stw	r2,236(sp)
 800f608:	df002915 	stw	fp,164(sp)
 800f60c:	002b883a 	mov	r21,zero
 800f610:	9f000094 	ori	fp,r19,2
 800f614:	d9402d15 	stw	r5,180(sp)
 800f618:	00800084 	movi	r2,2
 800f61c:	04001e04 	movi	r16,120
 800f620:	9007883a 	mov	r3,r18
 800f624:	003fdc06 	br	800f598 <__alt_data_end+0xfc00f598>
 800f628:	da002917 	ldw	r8,164(sp)
 800f62c:	df002915 	stw	fp,164(sp)
 800f630:	9839883a 	mov	fp,r19
 800f634:	dcc02a03 	ldbu	r19,168(sp)
 800f638:	e080080c 	andi	r2,fp,32
 800f63c:	d8c02d17 	ldw	r3,180(sp)
 800f640:	dcc02785 	stb	r19,158(sp)
 800f644:	103e801e 	bne	r2,zero,800f048 <__alt_data_end+0xfc00f048>
 800f648:	e080040c 	andi	r2,fp,16
 800f64c:	10031f26 	beq	r2,zero,80102cc <___svfprintf_internal_r+0x16c8>
 800f650:	1c800017 	ldw	r18,0(r3)
 800f654:	d9402d17 	ldw	r5,180(sp)
 800f658:	902bd7fa 	srai	r21,r18,31
 800f65c:	29400104 	addi	r5,r5,4
 800f660:	d9402d15 	stw	r5,180(sp)
 800f664:	a805883a 	mov	r2,r21
 800f668:	103e7e0e 	bge	r2,zero,800f064 <__alt_data_end+0xfc00f064>
 800f66c:	04a5c83a 	sub	r18,zero,r18
 800f670:	9004c03a 	cmpne	r2,r18,zero
 800f674:	056bc83a 	sub	r21,zero,r21
 800f678:	a8abc83a 	sub	r21,r21,r2
 800f67c:	04c00b44 	movi	r19,45
 800f680:	dcc02785 	stb	r19,158(sp)
 800f684:	da403215 	stw	r9,200(sp)
 800f688:	00800044 	movi	r2,1
 800f68c:	9546b03a 	or	r3,r18,r21
 800f690:	003e7806 	br	800f074 <__alt_data_end+0xfc00f074>
 800f694:	9cc01014 	ori	r19,r19,64
 800f698:	e005883a 	mov	r2,fp
 800f69c:	e4000007 	ldb	r16,0(fp)
 800f6a0:	003daf06 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f6a4:	e4000007 	ldb	r16,0(fp)
 800f6a8:	00801b04 	movi	r2,108
 800f6ac:	80837726 	beq	r16,r2,801048c <___svfprintf_internal_r+0x1888>
 800f6b0:	9cc00414 	ori	r19,r19,16
 800f6b4:	e005883a 	mov	r2,fp
 800f6b8:	003da906 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f6bc:	da002917 	ldw	r8,164(sp)
 800f6c0:	df002915 	stw	fp,164(sp)
 800f6c4:	9839883a 	mov	fp,r19
 800f6c8:	dcc02a03 	ldbu	r19,168(sp)
 800f6cc:	e080080c 	andi	r2,fp,32
 800f6d0:	dcc02785 	stb	r19,158(sp)
 800f6d4:	1002f126 	beq	r2,zero,801029c <___svfprintf_internal_r+0x1698>
 800f6d8:	d9402d17 	ldw	r5,180(sp)
 800f6dc:	d9003017 	ldw	r4,192(sp)
 800f6e0:	28800017 	ldw	r2,0(r5)
 800f6e4:	2007d7fa 	srai	r3,r4,31
 800f6e8:	29400104 	addi	r5,r5,4
 800f6ec:	d9402d15 	stw	r5,180(sp)
 800f6f0:	11000015 	stw	r4,0(r2)
 800f6f4:	10c00115 	stw	r3,4(r2)
 800f6f8:	003d6e06 	br	800ecb4 <__alt_data_end+0xfc00ecb4>
 800f6fc:	da002917 	ldw	r8,164(sp)
 800f700:	df002915 	stw	fp,164(sp)
 800f704:	9839883a 	mov	fp,r19
 800f708:	dcc02a03 	ldbu	r19,168(sp)
 800f70c:	014200b4 	movhi	r5,2050
 800f710:	29410d04 	addi	r5,r5,1076
 800f714:	dcc02785 	stb	r19,158(sp)
 800f718:	d9403b15 	stw	r5,236(sp)
 800f71c:	e0c0080c 	andi	r3,fp,32
 800f720:	d8802d17 	ldw	r2,180(sp)
 800f724:	18005826 	beq	r3,zero,800f888 <___svfprintf_internal_r+0xc84>
 800f728:	d9402d17 	ldw	r5,180(sp)
 800f72c:	14800017 	ldw	r18,0(r2)
 800f730:	15400117 	ldw	r21,4(r2)
 800f734:	29400204 	addi	r5,r5,8
 800f738:	d9402d15 	stw	r5,180(sp)
 800f73c:	e080004c 	andi	r2,fp,1
 800f740:	10020626 	beq	r2,zero,800ff5c <___svfprintf_internal_r+0x1358>
 800f744:	9546b03a 	or	r3,r18,r21
 800f748:	1802f326 	beq	r3,zero,8010318 <___svfprintf_internal_r+0x1714>
 800f74c:	00800c04 	movi	r2,48
 800f750:	d8802705 	stb	r2,156(sp)
 800f754:	dc002745 	stb	r16,157(sp)
 800f758:	e7000094 	ori	fp,fp,2
 800f75c:	00800084 	movi	r2,2
 800f760:	003f8d06 	br	800f598 <__alt_data_end+0xfc00f598>
 800f764:	d8c02d17 	ldw	r3,180(sp)
 800f768:	d9002d17 	ldw	r4,180(sp)
 800f76c:	da002917 	ldw	r8,164(sp)
 800f770:	18800017 	ldw	r2,0(r3)
 800f774:	21000104 	addi	r4,r4,4
 800f778:	00c00044 	movi	r3,1
 800f77c:	df002915 	stw	fp,164(sp)
 800f780:	d8c02a15 	stw	r3,168(sp)
 800f784:	9839883a 	mov	fp,r19
 800f788:	d8002785 	stb	zero,158(sp)
 800f78c:	d8801405 	stb	r2,80(sp)
 800f790:	d9002d15 	stw	r4,180(sp)
 800f794:	1823883a 	mov	r17,r3
 800f798:	d8c01404 	addi	r3,sp,80
 800f79c:	d8003215 	stw	zero,200(sp)
 800f7a0:	d8003415 	stw	zero,208(sp)
 800f7a4:	d8c03115 	stw	r3,196(sp)
 800f7a8:	0005883a 	mov	r2,zero
 800f7ac:	003e5f06 	br	800f12c <__alt_data_end+0xfc00f12c>
 800f7b0:	d8802a07 	ldb	r2,168(sp)
 800f7b4:	1002c21e 	bne	r2,zero,80102c0 <___svfprintf_internal_r+0x16bc>
 800f7b8:	00c00804 	movi	r3,32
 800f7bc:	d8c02a05 	stb	r3,168(sp)
 800f7c0:	e005883a 	mov	r2,fp
 800f7c4:	e4000007 	ldb	r16,0(fp)
 800f7c8:	003d6506 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f7cc:	9cc00054 	ori	r19,r19,1
 800f7d0:	e005883a 	mov	r2,fp
 800f7d4:	e4000007 	ldb	r16,0(fp)
 800f7d8:	003d6106 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f7dc:	d8c02d17 	ldw	r3,180(sp)
 800f7e0:	d9002d17 	ldw	r4,180(sp)
 800f7e4:	da002917 	ldw	r8,164(sp)
 800f7e8:	18c00017 	ldw	r3,0(r3)
 800f7ec:	df002915 	stw	fp,164(sp)
 800f7f0:	d8002785 	stb	zero,158(sp)
 800f7f4:	d8c03115 	stw	r3,196(sp)
 800f7f8:	9839883a 	mov	fp,r19
 800f7fc:	24800104 	addi	r18,r4,4
 800f800:	18043526 	beq	r3,zero,80108d8 <___svfprintf_internal_r+0x1cd4>
 800f804:	d9003117 	ldw	r4,196(sp)
 800f808:	4803e016 	blt	r9,zero,801078c <___svfprintf_internal_r+0x1b88>
 800f80c:	480d883a 	mov	r6,r9
 800f810:	000b883a 	mov	r5,zero
 800f814:	da004015 	stw	r8,256(sp)
 800f818:	da403f15 	stw	r9,252(sp)
 800f81c:	8016ef80 	call	8016ef8 <memchr>
 800f820:	da004017 	ldw	r8,256(sp)
 800f824:	da403f17 	ldw	r9,252(sp)
 800f828:	10045f26 	beq	r2,zero,80109a8 <___svfprintf_internal_r+0x1da4>
 800f82c:	d8c03117 	ldw	r3,196(sp)
 800f830:	10e3c83a 	sub	r17,r2,r3
 800f834:	4c40010e 	bge	r9,r17,800f83c <___svfprintf_internal_r+0xc38>
 800f838:	4823883a 	mov	r17,r9
 800f83c:	8805883a 	mov	r2,r17
 800f840:	8803d716 	blt	r17,zero,80107a0 <___svfprintf_internal_r+0x1b9c>
 800f844:	dcc02783 	ldbu	r19,158(sp)
 800f848:	d8802a15 	stw	r2,168(sp)
 800f84c:	dc802d15 	stw	r18,180(sp)
 800f850:	d8003215 	stw	zero,200(sp)
 800f854:	d8003415 	stw	zero,208(sp)
 800f858:	003e2d06 	br	800f110 <__alt_data_end+0xfc00f110>
 800f85c:	da002917 	ldw	r8,164(sp)
 800f860:	df002915 	stw	fp,164(sp)
 800f864:	9839883a 	mov	fp,r19
 800f868:	dcc02a03 	ldbu	r19,168(sp)
 800f86c:	010200b4 	movhi	r4,2050
 800f870:	21011204 	addi	r4,r4,1096
 800f874:	d9003b15 	stw	r4,236(sp)
 800f878:	dcc02785 	stb	r19,158(sp)
 800f87c:	e0c0080c 	andi	r3,fp,32
 800f880:	d8802d17 	ldw	r2,180(sp)
 800f884:	183fa81e 	bne	r3,zero,800f728 <__alt_data_end+0xfc00f728>
 800f888:	e0c0040c 	andi	r3,fp,16
 800f88c:	18027126 	beq	r3,zero,8010254 <___svfprintf_internal_r+0x1650>
 800f890:	d8c02d17 	ldw	r3,180(sp)
 800f894:	14800017 	ldw	r18,0(r2)
 800f898:	002b883a 	mov	r21,zero
 800f89c:	18c00104 	addi	r3,r3,4
 800f8a0:	d8c02d15 	stw	r3,180(sp)
 800f8a4:	003fa506 	br	800f73c <__alt_data_end+0xfc00f73c>
 800f8a8:	9cc00814 	ori	r19,r19,32
 800f8ac:	e005883a 	mov	r2,fp
 800f8b0:	e4000007 	ldb	r16,0(fp)
 800f8b4:	003d2a06 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f8b8:	d9002d17 	ldw	r4,180(sp)
 800f8bc:	d9402d17 	ldw	r5,180(sp)
 800f8c0:	21000017 	ldw	r4,0(r4)
 800f8c4:	28c00104 	addi	r3,r5,4
 800f8c8:	d9002e15 	stw	r4,184(sp)
 800f8cc:	2002e916 	blt	r4,zero,8010474 <___svfprintf_internal_r+0x1870>
 800f8d0:	d8c02d15 	stw	r3,180(sp)
 800f8d4:	e005883a 	mov	r2,fp
 800f8d8:	e4000007 	ldb	r16,0(fp)
 800f8dc:	003d2006 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f8e0:	00c00ac4 	movi	r3,43
 800f8e4:	d8c02a05 	stb	r3,168(sp)
 800f8e8:	e005883a 	mov	r2,fp
 800f8ec:	e4000007 	ldb	r16,0(fp)
 800f8f0:	003d1b06 	br	800ed60 <__alt_data_end+0xfc00ed60>
 800f8f4:	da002917 	ldw	r8,164(sp)
 800f8f8:	df002915 	stw	fp,164(sp)
 800f8fc:	9839883a 	mov	fp,r19
 800f900:	e080080c 	andi	r2,fp,32
 800f904:	103f2d1e 	bne	r2,zero,800f5bc <__alt_data_end+0xfc00f5bc>
 800f908:	e080040c 	andi	r2,fp,16
 800f90c:	10027826 	beq	r2,zero,80102f0 <___svfprintf_internal_r+0x16ec>
 800f910:	d9402d17 	ldw	r5,180(sp)
 800f914:	002b883a 	mov	r21,zero
 800f918:	00800044 	movi	r2,1
 800f91c:	2c800017 	ldw	r18,0(r5)
 800f920:	29400104 	addi	r5,r5,4
 800f924:	d9402d15 	stw	r5,180(sp)
 800f928:	9007883a 	mov	r3,r18
 800f92c:	003f1a06 	br	800f598 <__alt_data_end+0xfc00f598>
 800f930:	da002917 	ldw	r8,164(sp)
 800f934:	df002915 	stw	fp,164(sp)
 800f938:	9839883a 	mov	fp,r19
 800f93c:	e080080c 	andi	r2,fp,32
 800f940:	103f0e1e 	bne	r2,zero,800f57c <__alt_data_end+0xfc00f57c>
 800f944:	e080040c 	andi	r2,fp,16
 800f948:	10024a26 	beq	r2,zero,8010274 <___svfprintf_internal_r+0x1670>
 800f94c:	d8802d17 	ldw	r2,180(sp)
 800f950:	002b883a 	mov	r21,zero
 800f954:	14800017 	ldw	r18,0(r2)
 800f958:	10800104 	addi	r2,r2,4
 800f95c:	d8802d15 	stw	r2,180(sp)
 800f960:	9007883a 	mov	r3,r18
 800f964:	0005883a 	mov	r2,zero
 800f968:	003f0b06 	br	800f598 <__alt_data_end+0xfc00f598>
 800f96c:	da002917 	ldw	r8,164(sp)
 800f970:	df002915 	stw	fp,164(sp)
 800f974:	9839883a 	mov	fp,r19
 800f978:	dcc02a03 	ldbu	r19,168(sp)
 800f97c:	dcc02785 	stb	r19,158(sp)
 800f980:	803d6326 	beq	r16,zero,800ef10 <__alt_data_end+0xfc00ef10>
 800f984:	00c00044 	movi	r3,1
 800f988:	d8c02a15 	stw	r3,168(sp)
 800f98c:	dc001405 	stb	r16,80(sp)
 800f990:	d8002785 	stb	zero,158(sp)
 800f994:	003f7f06 	br	800f794 <__alt_data_end+0xfc00f794>
 800f998:	d8c02017 	ldw	r3,128(sp)
 800f99c:	003e2406 	br	800f230 <__alt_data_end+0xfc00f230>
 800f9a0:	10803fcc 	andi	r2,r2,255
 800f9a4:	00c00044 	movi	r3,1
 800f9a8:	10fdba1e 	bne	r2,r3,800f094 <__alt_data_end+0xfc00f094>
 800f9ac:	a800021e 	bne	r21,zero,800f9b8 <___svfprintf_internal_r+0xdb4>
 800f9b0:	00800244 	movi	r2,9
 800f9b4:	14801d2e 	bgeu	r2,r18,800fa2c <___svfprintf_internal_r+0xe28>
 800f9b8:	dc002a15 	stw	r16,168(sp)
 800f9bc:	b823883a 	mov	r17,r23
 800f9c0:	9021883a 	mov	r16,r18
 800f9c4:	da002b15 	stw	r8,172(sp)
 800f9c8:	a825883a 	mov	r18,r21
 800f9cc:	482b883a 	mov	r21,r9
 800f9d0:	8009883a 	mov	r4,r16
 800f9d4:	900b883a 	mov	r5,r18
 800f9d8:	01800284 	movi	r6,10
 800f9dc:	000f883a 	mov	r7,zero
 800f9e0:	801c4f40 	call	801c4f4 <__umoddi3>
 800f9e4:	10800c04 	addi	r2,r2,48
 800f9e8:	8c7fffc4 	addi	r17,r17,-1
 800f9ec:	8009883a 	mov	r4,r16
 800f9f0:	900b883a 	mov	r5,r18
 800f9f4:	01800284 	movi	r6,10
 800f9f8:	000f883a 	mov	r7,zero
 800f9fc:	88800005 	stb	r2,0(r17)
 800fa00:	801beb40 	call	801beb4 <__udivdi3>
 800fa04:	1021883a 	mov	r16,r2
 800fa08:	10c4b03a 	or	r2,r2,r3
 800fa0c:	1825883a 	mov	r18,r3
 800fa10:	103fef1e 	bne	r2,zero,800f9d0 <__alt_data_end+0xfc00f9d0>
 800fa14:	dc403115 	stw	r17,196(sp)
 800fa18:	dc002a17 	ldw	r16,168(sp)
 800fa1c:	da002b17 	ldw	r8,172(sp)
 800fa20:	a813883a 	mov	r9,r21
 800fa24:	bc63c83a 	sub	r17,r23,r17
 800fa28:	003db406 	br	800f0fc <__alt_data_end+0xfc00f0fc>
 800fa2c:	94800c04 	addi	r18,r18,48
 800fa30:	d8c01dc4 	addi	r3,sp,119
 800fa34:	dc801dc5 	stb	r18,119(sp)
 800fa38:	dc403d17 	ldw	r17,244(sp)
 800fa3c:	d8c03115 	stw	r3,196(sp)
 800fa40:	003dae06 	br	800f0fc <__alt_data_end+0xfc00f0fc>
 800fa44:	00801944 	movi	r2,101
 800fa48:	14008c0e 	bge	r2,r16,800fc7c <___svfprintf_internal_r+0x1078>
 800fa4c:	d9003717 	ldw	r4,220(sp)
 800fa50:	d9403817 	ldw	r5,224(sp)
 800fa54:	000d883a 	mov	r6,zero
 800fa58:	000f883a 	mov	r7,zero
 800fa5c:	d8c03e15 	stw	r3,248(sp)
 800fa60:	da004015 	stw	r8,256(sp)
 800fa64:	800b7ac0 	call	800b7ac <__eqdf2>
 800fa68:	d8c03e17 	ldw	r3,248(sp)
 800fa6c:	da004017 	ldw	r8,256(sp)
 800fa70:	1000fc1e 	bne	r2,zero,800fe64 <___svfprintf_internal_r+0x1260>
 800fa74:	d8801f17 	ldw	r2,124(sp)
 800fa78:	010200b4 	movhi	r4,2050
 800fa7c:	21002f04 	addi	r4,r4,188
 800fa80:	18c00044 	addi	r3,r3,1
 800fa84:	10800044 	addi	r2,r2,1
 800fa88:	41000015 	stw	r4,0(r8)
 800fa8c:	01000044 	movi	r4,1
 800fa90:	41000115 	stw	r4,4(r8)
 800fa94:	d8c02015 	stw	r3,128(sp)
 800fa98:	d8801f15 	stw	r2,124(sp)
 800fa9c:	010001c4 	movi	r4,7
 800faa0:	20823116 	blt	r4,r2,8010368 <___svfprintf_internal_r+0x1764>
 800faa4:	42000204 	addi	r8,r8,8
 800faa8:	d8802617 	ldw	r2,152(sp)
 800faac:	d9403317 	ldw	r5,204(sp)
 800fab0:	11400216 	blt	r2,r5,800fabc <___svfprintf_internal_r+0xeb8>
 800fab4:	e080004c 	andi	r2,fp,1
 800fab8:	103e3a26 	beq	r2,zero,800f3a4 <__alt_data_end+0xfc00f3a4>
 800fabc:	d8803917 	ldw	r2,228(sp)
 800fac0:	d9003517 	ldw	r4,212(sp)
 800fac4:	d9403917 	ldw	r5,228(sp)
 800fac8:	1887883a 	add	r3,r3,r2
 800facc:	d8801f17 	ldw	r2,124(sp)
 800fad0:	41000015 	stw	r4,0(r8)
 800fad4:	41400115 	stw	r5,4(r8)
 800fad8:	10800044 	addi	r2,r2,1
 800fadc:	d8c02015 	stw	r3,128(sp)
 800fae0:	d8801f15 	stw	r2,124(sp)
 800fae4:	010001c4 	movi	r4,7
 800fae8:	20826c16 	blt	r4,r2,801049c <___svfprintf_internal_r+0x1898>
 800faec:	42000204 	addi	r8,r8,8
 800faf0:	d8803317 	ldw	r2,204(sp)
 800faf4:	143fffc4 	addi	r16,r2,-1
 800faf8:	043e2a0e 	bge	zero,r16,800f3a4 <__alt_data_end+0xfc00f3a4>
 800fafc:	04400404 	movi	r17,16
 800fb00:	d8801f17 	ldw	r2,124(sp)
 800fb04:	8c00980e 	bge	r17,r16,800fd68 <___svfprintf_internal_r+0x1164>
 800fb08:	014200b4 	movhi	r5,2050
 800fb0c:	294118c4 	addi	r5,r5,1123
 800fb10:	d9402b15 	stw	r5,172(sp)
 800fb14:	04c001c4 	movi	r19,7
 800fb18:	dc802f17 	ldw	r18,188(sp)
 800fb1c:	00000306 	br	800fb2c <___svfprintf_internal_r+0xf28>
 800fb20:	42000204 	addi	r8,r8,8
 800fb24:	843ffc04 	addi	r16,r16,-16
 800fb28:	8c00920e 	bge	r17,r16,800fd74 <___svfprintf_internal_r+0x1170>
 800fb2c:	18c00404 	addi	r3,r3,16
 800fb30:	10800044 	addi	r2,r2,1
 800fb34:	45000015 	stw	r20,0(r8)
 800fb38:	44400115 	stw	r17,4(r8)
 800fb3c:	d8c02015 	stw	r3,128(sp)
 800fb40:	d8801f15 	stw	r2,124(sp)
 800fb44:	98bff60e 	bge	r19,r2,800fb20 <__alt_data_end+0xfc00fb20>
 800fb48:	9009883a 	mov	r4,r18
 800fb4c:	b00b883a 	mov	r5,r22
 800fb50:	b80d883a 	mov	r6,r23
 800fb54:	8018c740 	call	8018c74 <__ssprint_r>
 800fb58:	103cf31e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800fb5c:	d8c02017 	ldw	r3,128(sp)
 800fb60:	d8801f17 	ldw	r2,124(sp)
 800fb64:	da000404 	addi	r8,sp,16
 800fb68:	003fee06 	br	800fb24 <__alt_data_end+0xfc00fb24>
 800fb6c:	d9402e17 	ldw	r5,184(sp)
 800fb70:	d8802a17 	ldw	r2,168(sp)
 800fb74:	28a7c83a 	sub	r19,r5,r2
 800fb78:	04fdcb0e 	bge	zero,r19,800f2a8 <__alt_data_end+0xfc00f2a8>
 800fb7c:	05400404 	movi	r21,16
 800fb80:	d8801f17 	ldw	r2,124(sp)
 800fb84:	acc3840e 	bge	r21,r19,8010998 <___svfprintf_internal_r+0x1d94>
 800fb88:	014200b4 	movhi	r5,2050
 800fb8c:	9809883a 	mov	r4,r19
 800fb90:	294118c4 	addi	r5,r5,1123
 800fb94:	dc002c15 	stw	r16,176(sp)
 800fb98:	8827883a 	mov	r19,r17
 800fb9c:	d9402b15 	stw	r5,172(sp)
 800fba0:	048001c4 	movi	r18,7
 800fba4:	dc002f17 	ldw	r16,188(sp)
 800fba8:	2023883a 	mov	r17,r4
 800fbac:	00000306 	br	800fbbc <___svfprintf_internal_r+0xfb8>
 800fbb0:	8c7ffc04 	addi	r17,r17,-16
 800fbb4:	42000204 	addi	r8,r8,8
 800fbb8:	ac40110e 	bge	r21,r17,800fc00 <___svfprintf_internal_r+0xffc>
 800fbbc:	18c00404 	addi	r3,r3,16
 800fbc0:	10800044 	addi	r2,r2,1
 800fbc4:	45000015 	stw	r20,0(r8)
 800fbc8:	45400115 	stw	r21,4(r8)
 800fbcc:	d8c02015 	stw	r3,128(sp)
 800fbd0:	d8801f15 	stw	r2,124(sp)
 800fbd4:	90bff60e 	bge	r18,r2,800fbb0 <__alt_data_end+0xfc00fbb0>
 800fbd8:	8009883a 	mov	r4,r16
 800fbdc:	b00b883a 	mov	r5,r22
 800fbe0:	b80d883a 	mov	r6,r23
 800fbe4:	8018c740 	call	8018c74 <__ssprint_r>
 800fbe8:	103ccf1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800fbec:	8c7ffc04 	addi	r17,r17,-16
 800fbf0:	d8c02017 	ldw	r3,128(sp)
 800fbf4:	d8801f17 	ldw	r2,124(sp)
 800fbf8:	da000404 	addi	r8,sp,16
 800fbfc:	ac7fef16 	blt	r21,r17,800fbbc <__alt_data_end+0xfc00fbbc>
 800fc00:	dc002c17 	ldw	r16,176(sp)
 800fc04:	8809883a 	mov	r4,r17
 800fc08:	9823883a 	mov	r17,r19
 800fc0c:	2027883a 	mov	r19,r4
 800fc10:	d9002b17 	ldw	r4,172(sp)
 800fc14:	1cc7883a 	add	r3,r3,r19
 800fc18:	10800044 	addi	r2,r2,1
 800fc1c:	41000015 	stw	r4,0(r8)
 800fc20:	44c00115 	stw	r19,4(r8)
 800fc24:	d8c02015 	stw	r3,128(sp)
 800fc28:	d8801f15 	stw	r2,124(sp)
 800fc2c:	010001c4 	movi	r4,7
 800fc30:	20816b16 	blt	r4,r2,80101e0 <___svfprintf_internal_r+0x15dc>
 800fc34:	42000204 	addi	r8,r8,8
 800fc38:	003d9b06 	br	800f2a8 <__alt_data_end+0xfc00f2a8>
 800fc3c:	d9403b17 	ldw	r5,236(sp)
 800fc40:	b807883a 	mov	r3,r23
 800fc44:	908003cc 	andi	r2,r18,15
 800fc48:	a808973a 	slli	r4,r21,28
 800fc4c:	2885883a 	add	r2,r5,r2
 800fc50:	9024d13a 	srli	r18,r18,4
 800fc54:	10800003 	ldbu	r2,0(r2)
 800fc58:	a82ad13a 	srli	r21,r21,4
 800fc5c:	18ffffc4 	addi	r3,r3,-1
 800fc60:	24a4b03a 	or	r18,r4,r18
 800fc64:	18800005 	stb	r2,0(r3)
 800fc68:	9544b03a 	or	r2,r18,r21
 800fc6c:	103ff51e 	bne	r2,zero,800fc44 <__alt_data_end+0xfc00fc44>
 800fc70:	d8c03115 	stw	r3,196(sp)
 800fc74:	b8e3c83a 	sub	r17,r23,r3
 800fc78:	003d2006 	br	800f0fc <__alt_data_end+0xfc00f0fc>
 800fc7c:	d9403317 	ldw	r5,204(sp)
 800fc80:	00800044 	movi	r2,1
 800fc84:	18c00044 	addi	r3,r3,1
 800fc88:	1141360e 	bge	r2,r5,8010164 <___svfprintf_internal_r+0x1560>
 800fc8c:	dc001f17 	ldw	r16,124(sp)
 800fc90:	d8803117 	ldw	r2,196(sp)
 800fc94:	d8c02015 	stw	r3,128(sp)
 800fc98:	84000044 	addi	r16,r16,1
 800fc9c:	40800015 	stw	r2,0(r8)
 800fca0:	00800044 	movi	r2,1
 800fca4:	40800115 	stw	r2,4(r8)
 800fca8:	dc001f15 	stw	r16,124(sp)
 800fcac:	008001c4 	movi	r2,7
 800fcb0:	14013916 	blt	r2,r16,8010198 <___svfprintf_internal_r+0x1594>
 800fcb4:	42000204 	addi	r8,r8,8
 800fcb8:	d9003917 	ldw	r4,228(sp)
 800fcbc:	d9403517 	ldw	r5,212(sp)
 800fcc0:	84000044 	addi	r16,r16,1
 800fcc4:	1907883a 	add	r3,r3,r4
 800fcc8:	41400015 	stw	r5,0(r8)
 800fccc:	41000115 	stw	r4,4(r8)
 800fcd0:	d8c02015 	stw	r3,128(sp)
 800fcd4:	dc001f15 	stw	r16,124(sp)
 800fcd8:	008001c4 	movi	r2,7
 800fcdc:	14013716 	blt	r2,r16,80101bc <___svfprintf_internal_r+0x15b8>
 800fce0:	44400204 	addi	r17,r8,8
 800fce4:	d9003717 	ldw	r4,220(sp)
 800fce8:	d9403817 	ldw	r5,224(sp)
 800fcec:	000d883a 	mov	r6,zero
 800fcf0:	000f883a 	mov	r7,zero
 800fcf4:	d8c03e15 	stw	r3,248(sp)
 800fcf8:	800b7ac0 	call	800b7ac <__eqdf2>
 800fcfc:	d8c03e17 	ldw	r3,248(sp)
 800fd00:	10009926 	beq	r2,zero,800ff68 <___svfprintf_internal_r+0x1364>
 800fd04:	d9003317 	ldw	r4,204(sp)
 800fd08:	d9403117 	ldw	r5,196(sp)
 800fd0c:	84000044 	addi	r16,r16,1
 800fd10:	20bfffc4 	addi	r2,r4,-1
 800fd14:	1887883a 	add	r3,r3,r2
 800fd18:	29000044 	addi	r4,r5,1
 800fd1c:	88800115 	stw	r2,4(r17)
 800fd20:	89000015 	stw	r4,0(r17)
 800fd24:	d8c02015 	stw	r3,128(sp)
 800fd28:	dc001f15 	stw	r16,124(sp)
 800fd2c:	008001c4 	movi	r2,7
 800fd30:	1400b716 	blt	r2,r16,8010010 <___svfprintf_internal_r+0x140c>
 800fd34:	8c400204 	addi	r17,r17,8
 800fd38:	d9403a17 	ldw	r5,232(sp)
 800fd3c:	dcc022c4 	addi	r19,sp,139
 800fd40:	84000044 	addi	r16,r16,1
 800fd44:	28c7883a 	add	r3,r5,r3
 800fd48:	8cc00015 	stw	r19,0(r17)
 800fd4c:	89400115 	stw	r5,4(r17)
 800fd50:	d8c02015 	stw	r3,128(sp)
 800fd54:	dc001f15 	stw	r16,124(sp)
 800fd58:	008001c4 	movi	r2,7
 800fd5c:	14000e16 	blt	r2,r16,800fd98 <___svfprintf_internal_r+0x1194>
 800fd60:	8a000204 	addi	r8,r17,8
 800fd64:	003d8f06 	br	800f3a4 <__alt_data_end+0xfc00f3a4>
 800fd68:	010200b4 	movhi	r4,2050
 800fd6c:	210118c4 	addi	r4,r4,1123
 800fd70:	d9002b15 	stw	r4,172(sp)
 800fd74:	d9002b17 	ldw	r4,172(sp)
 800fd78:	1c07883a 	add	r3,r3,r16
 800fd7c:	44000115 	stw	r16,4(r8)
 800fd80:	41000015 	stw	r4,0(r8)
 800fd84:	10800044 	addi	r2,r2,1
 800fd88:	d8c02015 	stw	r3,128(sp)
 800fd8c:	d8801f15 	stw	r2,124(sp)
 800fd90:	010001c4 	movi	r4,7
 800fd94:	20bd820e 	bge	r4,r2,800f3a0 <__alt_data_end+0xfc00f3a0>
 800fd98:	d9002f17 	ldw	r4,188(sp)
 800fd9c:	b00b883a 	mov	r5,r22
 800fda0:	b80d883a 	mov	r6,r23
 800fda4:	8018c740 	call	8018c74 <__ssprint_r>
 800fda8:	103c5f1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800fdac:	d8c02017 	ldw	r3,128(sp)
 800fdb0:	da000404 	addi	r8,sp,16
 800fdb4:	003d7b06 	br	800f3a4 <__alt_data_end+0xfc00f3a4>
 800fdb8:	d9002f17 	ldw	r4,188(sp)
 800fdbc:	b00b883a 	mov	r5,r22
 800fdc0:	b80d883a 	mov	r6,r23
 800fdc4:	8018c740 	call	8018c74 <__ssprint_r>
 800fdc8:	103db226 	beq	r2,zero,800f494 <__alt_data_end+0xfc00f494>
 800fdcc:	003c5606 	br	800ef28 <__alt_data_end+0xfc00ef28>
 800fdd0:	10803fcc 	andi	r2,r2,255
 800fdd4:	1000201e 	bne	r2,zero,800fe58 <___svfprintf_internal_r+0x1254>
 800fdd8:	e080004c 	andi	r2,fp,1
 800fddc:	10001e26 	beq	r2,zero,800fe58 <___svfprintf_internal_r+0x1254>
 800fde0:	00800c04 	movi	r2,48
 800fde4:	d8c01dc4 	addi	r3,sp,119
 800fde8:	d8801dc5 	stb	r2,119(sp)
 800fdec:	dc403d17 	ldw	r17,244(sp)
 800fdf0:	d8c03115 	stw	r3,196(sp)
 800fdf4:	003cc106 	br	800f0fc <__alt_data_end+0xfc00f0fc>
 800fdf8:	d9002f17 	ldw	r4,188(sp)
 800fdfc:	b00b883a 	mov	r5,r22
 800fe00:	b80d883a 	mov	r6,r23
 800fe04:	8018c740 	call	8018c74 <__ssprint_r>
 800fe08:	103c471e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800fe0c:	d8c02017 	ldw	r3,128(sp)
 800fe10:	da000404 	addi	r8,sp,16
 800fe14:	003d5606 	br	800f370 <__alt_data_end+0xfc00f370>
 800fe18:	d9002f17 	ldw	r4,188(sp)
 800fe1c:	b00b883a 	mov	r5,r22
 800fe20:	b80d883a 	mov	r6,r23
 800fe24:	8018c740 	call	8018c74 <__ssprint_r>
 800fe28:	103c3f1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800fe2c:	d8c02017 	ldw	r3,128(sp)
 800fe30:	da000404 	addi	r8,sp,16
 800fe34:	003d0b06 	br	800f264 <__alt_data_end+0xfc00f264>
 800fe38:	d9002f17 	ldw	r4,188(sp)
 800fe3c:	b00b883a 	mov	r5,r22
 800fe40:	b80d883a 	mov	r6,r23
 800fe44:	8018c740 	call	8018c74 <__ssprint_r>
 800fe48:	103c371e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800fe4c:	d8c02017 	ldw	r3,128(sp)
 800fe50:	da000404 	addi	r8,sp,16
 800fe54:	003d1106 	br	800f29c <__alt_data_end+0xfc00f29c>
 800fe58:	0023883a 	mov	r17,zero
 800fe5c:	ddc03115 	stw	r23,196(sp)
 800fe60:	003ca606 	br	800f0fc <__alt_data_end+0xfc00f0fc>
 800fe64:	dc002617 	ldw	r16,152(sp)
 800fe68:	0401470e 	bge	zero,r16,8010388 <___svfprintf_internal_r+0x1784>
 800fe6c:	d8803317 	ldw	r2,204(sp)
 800fe70:	d9403117 	ldw	r5,196(sp)
 800fe74:	d9003417 	ldw	r4,208(sp)
 800fe78:	1023883a 	mov	r17,r2
 800fe7c:	28a1883a 	add	r16,r5,r2
 800fe80:	2080010e 	bge	r4,r2,800fe88 <___svfprintf_internal_r+0x1284>
 800fe84:	2023883a 	mov	r17,r4
 800fe88:	04400b0e 	bge	zero,r17,800feb8 <___svfprintf_internal_r+0x12b4>
 800fe8c:	d8801f17 	ldw	r2,124(sp)
 800fe90:	d9403117 	ldw	r5,196(sp)
 800fe94:	1c47883a 	add	r3,r3,r17
 800fe98:	10800044 	addi	r2,r2,1
 800fe9c:	41400015 	stw	r5,0(r8)
 800fea0:	44400115 	stw	r17,4(r8)
 800fea4:	d8c02015 	stw	r3,128(sp)
 800fea8:	d8801f15 	stw	r2,124(sp)
 800feac:	010001c4 	movi	r4,7
 800feb0:	20825f16 	blt	r4,r2,8010830 <___svfprintf_internal_r+0x1c2c>
 800feb4:	42000204 	addi	r8,r8,8
 800feb8:	88025b16 	blt	r17,zero,8010828 <___svfprintf_internal_r+0x1c24>
 800febc:	d8803417 	ldw	r2,208(sp)
 800fec0:	1463c83a 	sub	r17,r2,r17
 800fec4:	0440620e 	bge	zero,r17,8010050 <___svfprintf_internal_r+0x144c>
 800fec8:	04c00404 	movi	r19,16
 800fecc:	d8801f17 	ldw	r2,124(sp)
 800fed0:	9c41130e 	bge	r19,r17,8010320 <___svfprintf_internal_r+0x171c>
 800fed4:	014200b4 	movhi	r5,2050
 800fed8:	294118c4 	addi	r5,r5,1123
 800fedc:	d9402b15 	stw	r5,172(sp)
 800fee0:	054001c4 	movi	r21,7
 800fee4:	dc802f17 	ldw	r18,188(sp)
 800fee8:	00000306 	br	800fef8 <___svfprintf_internal_r+0x12f4>
 800feec:	42000204 	addi	r8,r8,8
 800fef0:	8c7ffc04 	addi	r17,r17,-16
 800fef4:	9c410d0e 	bge	r19,r17,801032c <___svfprintf_internal_r+0x1728>
 800fef8:	18c00404 	addi	r3,r3,16
 800fefc:	10800044 	addi	r2,r2,1
 800ff00:	45000015 	stw	r20,0(r8)
 800ff04:	44c00115 	stw	r19,4(r8)
 800ff08:	d8c02015 	stw	r3,128(sp)
 800ff0c:	d8801f15 	stw	r2,124(sp)
 800ff10:	a8bff60e 	bge	r21,r2,800feec <__alt_data_end+0xfc00feec>
 800ff14:	9009883a 	mov	r4,r18
 800ff18:	b00b883a 	mov	r5,r22
 800ff1c:	b80d883a 	mov	r6,r23
 800ff20:	8018c740 	call	8018c74 <__ssprint_r>
 800ff24:	103c001e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800ff28:	d8c02017 	ldw	r3,128(sp)
 800ff2c:	d8801f17 	ldw	r2,124(sp)
 800ff30:	da000404 	addi	r8,sp,16
 800ff34:	003fee06 	br	800fef0 <__alt_data_end+0xfc00fef0>
 800ff38:	d9002f17 	ldw	r4,188(sp)
 800ff3c:	b00b883a 	mov	r5,r22
 800ff40:	b80d883a 	mov	r6,r23
 800ff44:	8018c740 	call	8018c74 <__ssprint_r>
 800ff48:	103bf71e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800ff4c:	d8c02017 	ldw	r3,128(sp)
 800ff50:	d8802787 	ldb	r2,158(sp)
 800ff54:	da000404 	addi	r8,sp,16
 800ff58:	003cb506 	br	800f230 <__alt_data_end+0xfc00f230>
 800ff5c:	00800084 	movi	r2,2
 800ff60:	9546b03a 	or	r3,r18,r21
 800ff64:	003d8c06 	br	800f598 <__alt_data_end+0xfc00f598>
 800ff68:	d8803317 	ldw	r2,204(sp)
 800ff6c:	14ffffc4 	addi	r19,r2,-1
 800ff70:	04ff710e 	bge	zero,r19,800fd38 <__alt_data_end+0xfc00fd38>
 800ff74:	05400404 	movi	r21,16
 800ff78:	acc2f80e 	bge	r21,r19,8010b5c <___svfprintf_internal_r+0x1f58>
 800ff7c:	014200b4 	movhi	r5,2050
 800ff80:	294118c4 	addi	r5,r5,1123
 800ff84:	d9402b15 	stw	r5,172(sp)
 800ff88:	01c001c4 	movi	r7,7
 800ff8c:	dc802f17 	ldw	r18,188(sp)
 800ff90:	00000306 	br	800ffa0 <___svfprintf_internal_r+0x139c>
 800ff94:	9cfffc04 	addi	r19,r19,-16
 800ff98:	8c400204 	addi	r17,r17,8
 800ff9c:	acc0130e 	bge	r21,r19,800ffec <___svfprintf_internal_r+0x13e8>
 800ffa0:	18c00404 	addi	r3,r3,16
 800ffa4:	84000044 	addi	r16,r16,1
 800ffa8:	8d000015 	stw	r20,0(r17)
 800ffac:	8d400115 	stw	r21,4(r17)
 800ffb0:	d8c02015 	stw	r3,128(sp)
 800ffb4:	dc001f15 	stw	r16,124(sp)
 800ffb8:	3c3ff60e 	bge	r7,r16,800ff94 <__alt_data_end+0xfc00ff94>
 800ffbc:	9009883a 	mov	r4,r18
 800ffc0:	b00b883a 	mov	r5,r22
 800ffc4:	b80d883a 	mov	r6,r23
 800ffc8:	d9c03e15 	stw	r7,248(sp)
 800ffcc:	8018c740 	call	8018c74 <__ssprint_r>
 800ffd0:	d9c03e17 	ldw	r7,248(sp)
 800ffd4:	103bd41e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 800ffd8:	9cfffc04 	addi	r19,r19,-16
 800ffdc:	d8c02017 	ldw	r3,128(sp)
 800ffe0:	dc001f17 	ldw	r16,124(sp)
 800ffe4:	dc400404 	addi	r17,sp,16
 800ffe8:	acffed16 	blt	r21,r19,800ffa0 <__alt_data_end+0xfc00ffa0>
 800ffec:	d8802b17 	ldw	r2,172(sp)
 800fff0:	1cc7883a 	add	r3,r3,r19
 800fff4:	84000044 	addi	r16,r16,1
 800fff8:	88800015 	stw	r2,0(r17)
 800fffc:	8cc00115 	stw	r19,4(r17)
 8010000:	d8c02015 	stw	r3,128(sp)
 8010004:	dc001f15 	stw	r16,124(sp)
 8010008:	008001c4 	movi	r2,7
 801000c:	143f490e 	bge	r2,r16,800fd34 <__alt_data_end+0xfc00fd34>
 8010010:	d9002f17 	ldw	r4,188(sp)
 8010014:	b00b883a 	mov	r5,r22
 8010018:	b80d883a 	mov	r6,r23
 801001c:	8018c740 	call	8018c74 <__ssprint_r>
 8010020:	103bc11e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010024:	d8c02017 	ldw	r3,128(sp)
 8010028:	dc001f17 	ldw	r16,124(sp)
 801002c:	dc400404 	addi	r17,sp,16
 8010030:	003f4106 	br	800fd38 <__alt_data_end+0xfc00fd38>
 8010034:	d9002f17 	ldw	r4,188(sp)
 8010038:	b00b883a 	mov	r5,r22
 801003c:	b80d883a 	mov	r6,r23
 8010040:	8018c740 	call	8018c74 <__ssprint_r>
 8010044:	103bb81e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010048:	d8c02017 	ldw	r3,128(sp)
 801004c:	da000404 	addi	r8,sp,16
 8010050:	d9403117 	ldw	r5,196(sp)
 8010054:	d9003417 	ldw	r4,208(sp)
 8010058:	d8802617 	ldw	r2,152(sp)
 801005c:	2923883a 	add	r17,r5,r4
 8010060:	d9403317 	ldw	r5,204(sp)
 8010064:	11400216 	blt	r2,r5,8010070 <___svfprintf_internal_r+0x146c>
 8010068:	e100004c 	andi	r4,fp,1
 801006c:	20000d26 	beq	r4,zero,80100a4 <___svfprintf_internal_r+0x14a0>
 8010070:	d9003917 	ldw	r4,228(sp)
 8010074:	d9403517 	ldw	r5,212(sp)
 8010078:	1907883a 	add	r3,r3,r4
 801007c:	d9001f17 	ldw	r4,124(sp)
 8010080:	41400015 	stw	r5,0(r8)
 8010084:	d9403917 	ldw	r5,228(sp)
 8010088:	21000044 	addi	r4,r4,1
 801008c:	d8c02015 	stw	r3,128(sp)
 8010090:	41400115 	stw	r5,4(r8)
 8010094:	d9001f15 	stw	r4,124(sp)
 8010098:	014001c4 	movi	r5,7
 801009c:	2901ec16 	blt	r5,r4,8010850 <___svfprintf_internal_r+0x1c4c>
 80100a0:	42000204 	addi	r8,r8,8
 80100a4:	d9003317 	ldw	r4,204(sp)
 80100a8:	2085c83a 	sub	r2,r4,r2
 80100ac:	8449c83a 	sub	r4,r16,r17
 80100b0:	1021883a 	mov	r16,r2
 80100b4:	2080010e 	bge	r4,r2,80100bc <___svfprintf_internal_r+0x14b8>
 80100b8:	2021883a 	mov	r16,r4
 80100bc:	04000a0e 	bge	zero,r16,80100e8 <___svfprintf_internal_r+0x14e4>
 80100c0:	d9001f17 	ldw	r4,124(sp)
 80100c4:	1c07883a 	add	r3,r3,r16
 80100c8:	44400015 	stw	r17,0(r8)
 80100cc:	21000044 	addi	r4,r4,1
 80100d0:	44000115 	stw	r16,4(r8)
 80100d4:	d8c02015 	stw	r3,128(sp)
 80100d8:	d9001f15 	stw	r4,124(sp)
 80100dc:	014001c4 	movi	r5,7
 80100e0:	2901f216 	blt	r5,r4,80108ac <___svfprintf_internal_r+0x1ca8>
 80100e4:	42000204 	addi	r8,r8,8
 80100e8:	80020a16 	blt	r16,zero,8010914 <___svfprintf_internal_r+0x1d10>
 80100ec:	1421c83a 	sub	r16,r2,r16
 80100f0:	043cac0e 	bge	zero,r16,800f3a4 <__alt_data_end+0xfc00f3a4>
 80100f4:	04400404 	movi	r17,16
 80100f8:	d8801f17 	ldw	r2,124(sp)
 80100fc:	8c3f1a0e 	bge	r17,r16,800fd68 <__alt_data_end+0xfc00fd68>
 8010100:	014200b4 	movhi	r5,2050
 8010104:	294118c4 	addi	r5,r5,1123
 8010108:	d9402b15 	stw	r5,172(sp)
 801010c:	04c001c4 	movi	r19,7
 8010110:	dc802f17 	ldw	r18,188(sp)
 8010114:	00000306 	br	8010124 <___svfprintf_internal_r+0x1520>
 8010118:	42000204 	addi	r8,r8,8
 801011c:	843ffc04 	addi	r16,r16,-16
 8010120:	8c3f140e 	bge	r17,r16,800fd74 <__alt_data_end+0xfc00fd74>
 8010124:	18c00404 	addi	r3,r3,16
 8010128:	10800044 	addi	r2,r2,1
 801012c:	45000015 	stw	r20,0(r8)
 8010130:	44400115 	stw	r17,4(r8)
 8010134:	d8c02015 	stw	r3,128(sp)
 8010138:	d8801f15 	stw	r2,124(sp)
 801013c:	98bff60e 	bge	r19,r2,8010118 <__alt_data_end+0xfc010118>
 8010140:	9009883a 	mov	r4,r18
 8010144:	b00b883a 	mov	r5,r22
 8010148:	b80d883a 	mov	r6,r23
 801014c:	8018c740 	call	8018c74 <__ssprint_r>
 8010150:	103b751e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010154:	d8c02017 	ldw	r3,128(sp)
 8010158:	d8801f17 	ldw	r2,124(sp)
 801015c:	da000404 	addi	r8,sp,16
 8010160:	003fee06 	br	801011c <__alt_data_end+0xfc01011c>
 8010164:	e088703a 	and	r4,fp,r2
 8010168:	203ec81e 	bne	r4,zero,800fc8c <__alt_data_end+0xfc00fc8c>
 801016c:	dc001f17 	ldw	r16,124(sp)
 8010170:	d9003117 	ldw	r4,196(sp)
 8010174:	40800115 	stw	r2,4(r8)
 8010178:	84000044 	addi	r16,r16,1
 801017c:	41000015 	stw	r4,0(r8)
 8010180:	d8c02015 	stw	r3,128(sp)
 8010184:	dc001f15 	stw	r16,124(sp)
 8010188:	008001c4 	movi	r2,7
 801018c:	143fa016 	blt	r2,r16,8010010 <__alt_data_end+0xfc010010>
 8010190:	44400204 	addi	r17,r8,8
 8010194:	003ee806 	br	800fd38 <__alt_data_end+0xfc00fd38>
 8010198:	d9002f17 	ldw	r4,188(sp)
 801019c:	b00b883a 	mov	r5,r22
 80101a0:	b80d883a 	mov	r6,r23
 80101a4:	8018c740 	call	8018c74 <__ssprint_r>
 80101a8:	103b5f1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 80101ac:	d8c02017 	ldw	r3,128(sp)
 80101b0:	dc001f17 	ldw	r16,124(sp)
 80101b4:	da000404 	addi	r8,sp,16
 80101b8:	003ebf06 	br	800fcb8 <__alt_data_end+0xfc00fcb8>
 80101bc:	d9002f17 	ldw	r4,188(sp)
 80101c0:	b00b883a 	mov	r5,r22
 80101c4:	b80d883a 	mov	r6,r23
 80101c8:	8018c740 	call	8018c74 <__ssprint_r>
 80101cc:	103b561e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 80101d0:	d8c02017 	ldw	r3,128(sp)
 80101d4:	dc001f17 	ldw	r16,124(sp)
 80101d8:	dc400404 	addi	r17,sp,16
 80101dc:	003ec106 	br	800fce4 <__alt_data_end+0xfc00fce4>
 80101e0:	d9002f17 	ldw	r4,188(sp)
 80101e4:	b00b883a 	mov	r5,r22
 80101e8:	b80d883a 	mov	r6,r23
 80101ec:	8018c740 	call	8018c74 <__ssprint_r>
 80101f0:	103b4d1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 80101f4:	d8c02017 	ldw	r3,128(sp)
 80101f8:	da000404 	addi	r8,sp,16
 80101fc:	003c2a06 	br	800f2a8 <__alt_data_end+0xfc00f2a8>
 8010200:	da004015 	stw	r8,256(sp)
 8010204:	da403f15 	stw	r9,252(sp)
 8010208:	80092d80 	call	80092d8 <__fpclassifyd>
 801020c:	da004017 	ldw	r8,256(sp)
 8010210:	da403f17 	ldw	r9,252(sp)
 8010214:	1000a91e 	bne	r2,zero,80104bc <___svfprintf_internal_r+0x18b8>
 8010218:	008011c4 	movi	r2,71
 801021c:	14011016 	blt	r2,r16,8010660 <___svfprintf_internal_r+0x1a5c>
 8010220:	010200b4 	movhi	r4,2050
 8010224:	21010b04 	addi	r4,r4,1068
 8010228:	d9003115 	stw	r4,196(sp)
 801022c:	00c000c4 	movi	r3,3
 8010230:	00bfdfc4 	movi	r2,-129
 8010234:	d8c02a15 	stw	r3,168(sp)
 8010238:	e0b8703a 	and	fp,fp,r2
 801023c:	dcc02783 	ldbu	r19,158(sp)
 8010240:	dc802d15 	stw	r18,180(sp)
 8010244:	1823883a 	mov	r17,r3
 8010248:	d8003215 	stw	zero,200(sp)
 801024c:	d8003415 	stw	zero,208(sp)
 8010250:	003baf06 	br	800f110 <__alt_data_end+0xfc00f110>
 8010254:	e0c0100c 	andi	r3,fp,64
 8010258:	18012a26 	beq	r3,zero,8010704 <___svfprintf_internal_r+0x1b00>
 801025c:	d9002d17 	ldw	r4,180(sp)
 8010260:	1480000b 	ldhu	r18,0(r2)
 8010264:	002b883a 	mov	r21,zero
 8010268:	21000104 	addi	r4,r4,4
 801026c:	d9002d15 	stw	r4,180(sp)
 8010270:	003d3206 	br	800f73c <__alt_data_end+0xfc00f73c>
 8010274:	e080100c 	andi	r2,fp,64
 8010278:	10011326 	beq	r2,zero,80106c8 <___svfprintf_internal_r+0x1ac4>
 801027c:	d8c02d17 	ldw	r3,180(sp)
 8010280:	002b883a 	mov	r21,zero
 8010284:	0005883a 	mov	r2,zero
 8010288:	1c80000b 	ldhu	r18,0(r3)
 801028c:	18c00104 	addi	r3,r3,4
 8010290:	d8c02d15 	stw	r3,180(sp)
 8010294:	9007883a 	mov	r3,r18
 8010298:	003cbf06 	br	800f598 <__alt_data_end+0xfc00f598>
 801029c:	e080040c 	andi	r2,fp,16
 80102a0:	10011e26 	beq	r2,zero,801071c <___svfprintf_internal_r+0x1b18>
 80102a4:	d9402d17 	ldw	r5,180(sp)
 80102a8:	d8c03017 	ldw	r3,192(sp)
 80102ac:	28800017 	ldw	r2,0(r5)
 80102b0:	29400104 	addi	r5,r5,4
 80102b4:	d9402d15 	stw	r5,180(sp)
 80102b8:	10c00015 	stw	r3,0(r2)
 80102bc:	003a7d06 	br	800ecb4 <__alt_data_end+0xfc00ecb4>
 80102c0:	e4000007 	ldb	r16,0(fp)
 80102c4:	e005883a 	mov	r2,fp
 80102c8:	003aa506 	br	800ed60 <__alt_data_end+0xfc00ed60>
 80102cc:	e080100c 	andi	r2,fp,64
 80102d0:	10010526 	beq	r2,zero,80106e8 <___svfprintf_internal_r+0x1ae4>
 80102d4:	1c80000f 	ldh	r18,0(r3)
 80102d8:	d8802d17 	ldw	r2,180(sp)
 80102dc:	902bd7fa 	srai	r21,r18,31
 80102e0:	10800104 	addi	r2,r2,4
 80102e4:	d8802d15 	stw	r2,180(sp)
 80102e8:	a805883a 	mov	r2,r21
 80102ec:	003b5c06 	br	800f060 <__alt_data_end+0xfc00f060>
 80102f0:	e080100c 	andi	r2,fp,64
 80102f4:	1000ec26 	beq	r2,zero,80106a8 <___svfprintf_internal_r+0x1aa4>
 80102f8:	d8802d17 	ldw	r2,180(sp)
 80102fc:	002b883a 	mov	r21,zero
 8010300:	1480000b 	ldhu	r18,0(r2)
 8010304:	10800104 	addi	r2,r2,4
 8010308:	d8802d15 	stw	r2,180(sp)
 801030c:	9007883a 	mov	r3,r18
 8010310:	00800044 	movi	r2,1
 8010314:	003ca006 	br	800f598 <__alt_data_end+0xfc00f598>
 8010318:	00800084 	movi	r2,2
 801031c:	003c9e06 	br	800f598 <__alt_data_end+0xfc00f598>
 8010320:	010200b4 	movhi	r4,2050
 8010324:	210118c4 	addi	r4,r4,1123
 8010328:	d9002b15 	stw	r4,172(sp)
 801032c:	d9002b17 	ldw	r4,172(sp)
 8010330:	1c47883a 	add	r3,r3,r17
 8010334:	10800044 	addi	r2,r2,1
 8010338:	41000015 	stw	r4,0(r8)
 801033c:	44400115 	stw	r17,4(r8)
 8010340:	d8c02015 	stw	r3,128(sp)
 8010344:	d8801f15 	stw	r2,124(sp)
 8010348:	010001c4 	movi	r4,7
 801034c:	20bf3916 	blt	r4,r2,8010034 <__alt_data_end+0xfc010034>
 8010350:	42000204 	addi	r8,r8,8
 8010354:	003f3e06 	br	8010050 <__alt_data_end+0xfc010050>
 8010358:	010200b4 	movhi	r4,2050
 801035c:	210118c4 	addi	r4,r4,1123
 8010360:	d9002b15 	stw	r4,172(sp)
 8010364:	003bf806 	br	800f348 <__alt_data_end+0xfc00f348>
 8010368:	d9002f17 	ldw	r4,188(sp)
 801036c:	b00b883a 	mov	r5,r22
 8010370:	b80d883a 	mov	r6,r23
 8010374:	8018c740 	call	8018c74 <__ssprint_r>
 8010378:	103aeb1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 801037c:	d8c02017 	ldw	r3,128(sp)
 8010380:	da000404 	addi	r8,sp,16
 8010384:	003dc806 	br	800faa8 <__alt_data_end+0xfc00faa8>
 8010388:	d8801f17 	ldw	r2,124(sp)
 801038c:	014200b4 	movhi	r5,2050
 8010390:	01000044 	movi	r4,1
 8010394:	18c00044 	addi	r3,r3,1
 8010398:	10800044 	addi	r2,r2,1
 801039c:	29402f04 	addi	r5,r5,188
 80103a0:	41000115 	stw	r4,4(r8)
 80103a4:	41400015 	stw	r5,0(r8)
 80103a8:	d8c02015 	stw	r3,128(sp)
 80103ac:	d8801f15 	stw	r2,124(sp)
 80103b0:	010001c4 	movi	r4,7
 80103b4:	2080ae16 	blt	r4,r2,8010670 <___svfprintf_internal_r+0x1a6c>
 80103b8:	42000204 	addi	r8,r8,8
 80103bc:	8000041e 	bne	r16,zero,80103d0 <___svfprintf_internal_r+0x17cc>
 80103c0:	d8803317 	ldw	r2,204(sp)
 80103c4:	1000021e 	bne	r2,zero,80103d0 <___svfprintf_internal_r+0x17cc>
 80103c8:	e080004c 	andi	r2,fp,1
 80103cc:	103bf526 	beq	r2,zero,800f3a4 <__alt_data_end+0xfc00f3a4>
 80103d0:	d9003917 	ldw	r4,228(sp)
 80103d4:	d8801f17 	ldw	r2,124(sp)
 80103d8:	d9403517 	ldw	r5,212(sp)
 80103dc:	1907883a 	add	r3,r3,r4
 80103e0:	10800044 	addi	r2,r2,1
 80103e4:	41000115 	stw	r4,4(r8)
 80103e8:	41400015 	stw	r5,0(r8)
 80103ec:	d8c02015 	stw	r3,128(sp)
 80103f0:	d8801f15 	stw	r2,124(sp)
 80103f4:	010001c4 	movi	r4,7
 80103f8:	2081ac16 	blt	r4,r2,8010aac <___svfprintf_internal_r+0x1ea8>
 80103fc:	42000204 	addi	r8,r8,8
 8010400:	0421c83a 	sub	r16,zero,r16
 8010404:	0400d60e 	bge	zero,r16,8010760 <___svfprintf_internal_r+0x1b5c>
 8010408:	04400404 	movi	r17,16
 801040c:	8c01190e 	bge	r17,r16,8010874 <___svfprintf_internal_r+0x1c70>
 8010410:	014200b4 	movhi	r5,2050
 8010414:	294118c4 	addi	r5,r5,1123
 8010418:	d9402b15 	stw	r5,172(sp)
 801041c:	04c001c4 	movi	r19,7
 8010420:	dc802f17 	ldw	r18,188(sp)
 8010424:	00000306 	br	8010434 <___svfprintf_internal_r+0x1830>
 8010428:	42000204 	addi	r8,r8,8
 801042c:	843ffc04 	addi	r16,r16,-16
 8010430:	8c01130e 	bge	r17,r16,8010880 <___svfprintf_internal_r+0x1c7c>
 8010434:	18c00404 	addi	r3,r3,16
 8010438:	10800044 	addi	r2,r2,1
 801043c:	45000015 	stw	r20,0(r8)
 8010440:	44400115 	stw	r17,4(r8)
 8010444:	d8c02015 	stw	r3,128(sp)
 8010448:	d8801f15 	stw	r2,124(sp)
 801044c:	98bff60e 	bge	r19,r2,8010428 <__alt_data_end+0xfc010428>
 8010450:	9009883a 	mov	r4,r18
 8010454:	b00b883a 	mov	r5,r22
 8010458:	b80d883a 	mov	r6,r23
 801045c:	8018c740 	call	8018c74 <__ssprint_r>
 8010460:	103ab11e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010464:	d8c02017 	ldw	r3,128(sp)
 8010468:	d8801f17 	ldw	r2,124(sp)
 801046c:	da000404 	addi	r8,sp,16
 8010470:	003fee06 	br	801042c <__alt_data_end+0xfc01042c>
 8010474:	d8802e17 	ldw	r2,184(sp)
 8010478:	d8c02d15 	stw	r3,180(sp)
 801047c:	0085c83a 	sub	r2,zero,r2
 8010480:	d8802e15 	stw	r2,184(sp)
 8010484:	e005883a 	mov	r2,fp
 8010488:	003aba06 	br	800ef74 <__alt_data_end+0xfc00ef74>
 801048c:	e0800044 	addi	r2,fp,1
 8010490:	9cc00814 	ori	r19,r19,32
 8010494:	e4000047 	ldb	r16,1(fp)
 8010498:	003a3106 	br	800ed60 <__alt_data_end+0xfc00ed60>
 801049c:	d9002f17 	ldw	r4,188(sp)
 80104a0:	b00b883a 	mov	r5,r22
 80104a4:	b80d883a 	mov	r6,r23
 80104a8:	8018c740 	call	8018c74 <__ssprint_r>
 80104ac:	103a9e1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 80104b0:	d8c02017 	ldw	r3,128(sp)
 80104b4:	da000404 	addi	r8,sp,16
 80104b8:	003d8d06 	br	800faf0 <__alt_data_end+0xfc00faf0>
 80104bc:	04fff7c4 	movi	r19,-33
 80104c0:	00bfffc4 	movi	r2,-1
 80104c4:	84e6703a 	and	r19,r16,r19
 80104c8:	48807226 	beq	r9,r2,8010694 <___svfprintf_internal_r+0x1a90>
 80104cc:	008011c4 	movi	r2,71
 80104d0:	98818026 	beq	r19,r2,8010ad4 <___svfprintf_internal_r+0x1ed0>
 80104d4:	d9003817 	ldw	r4,224(sp)
 80104d8:	e0c04014 	ori	r3,fp,256
 80104dc:	d8c02d15 	stw	r3,180(sp)
 80104e0:	20017f16 	blt	r4,zero,8010ae0 <___svfprintf_internal_r+0x1edc>
 80104e4:	dc403817 	ldw	r17,224(sp)
 80104e8:	d8002a05 	stb	zero,168(sp)
 80104ec:	00801984 	movi	r2,102
 80104f0:	8080ad26 	beq	r16,r2,80107a8 <___svfprintf_internal_r+0x1ba4>
 80104f4:	00801184 	movi	r2,70
 80104f8:	8080ab26 	beq	r16,r2,80107a8 <___svfprintf_internal_r+0x1ba4>
 80104fc:	00801144 	movi	r2,69
 8010500:	98818426 	beq	r19,r2,8010b14 <___svfprintf_internal_r+0x1f10>
 8010504:	482b883a 	mov	r21,r9
 8010508:	d8802604 	addi	r2,sp,152
 801050c:	d8800115 	stw	r2,4(sp)
 8010510:	d9002f17 	ldw	r4,188(sp)
 8010514:	d8802504 	addi	r2,sp,148
 8010518:	d9403717 	ldw	r5,220(sp)
 801051c:	d8800215 	stw	r2,8(sp)
 8010520:	d8802104 	addi	r2,sp,132
 8010524:	dd400015 	stw	r21,0(sp)
 8010528:	d8800315 	stw	r2,12(sp)
 801052c:	880d883a 	mov	r6,r17
 8010530:	01c00084 	movi	r7,2
 8010534:	da004015 	stw	r8,256(sp)
 8010538:	da403f15 	stw	r9,252(sp)
 801053c:	80130ec0 	call	80130ec <_dtoa_r>
 8010540:	d8803115 	stw	r2,196(sp)
 8010544:	008019c4 	movi	r2,103
 8010548:	da004017 	ldw	r8,256(sp)
 801054c:	da403f17 	ldw	r9,252(sp)
 8010550:	80800226 	beq	r16,r2,801055c <___svfprintf_internal_r+0x1958>
 8010554:	008011c4 	movi	r2,71
 8010558:	8080a51e 	bne	r16,r2,80107f0 <___svfprintf_internal_r+0x1bec>
 801055c:	e080004c 	andi	r2,fp,1
 8010560:	10017226 	beq	r2,zero,8010b2c <___svfprintf_internal_r+0x1f28>
 8010564:	d8c03117 	ldw	r3,196(sp)
 8010568:	1d55883a 	add	r10,r3,r21
 801056c:	d9003717 	ldw	r4,220(sp)
 8010570:	880b883a 	mov	r5,r17
 8010574:	000d883a 	mov	r6,zero
 8010578:	000f883a 	mov	r7,zero
 801057c:	da004015 	stw	r8,256(sp)
 8010580:	da403f15 	stw	r9,252(sp)
 8010584:	da803e15 	stw	r10,248(sp)
 8010588:	800b7ac0 	call	800b7ac <__eqdf2>
 801058c:	da004017 	ldw	r8,256(sp)
 8010590:	da403f17 	ldw	r9,252(sp)
 8010594:	da803e17 	ldw	r10,248(sp)
 8010598:	1000fd26 	beq	r2,zero,8010990 <___svfprintf_internal_r+0x1d8c>
 801059c:	d8802117 	ldw	r2,132(sp)
 80105a0:	1280062e 	bgeu	r2,r10,80105bc <___svfprintf_internal_r+0x19b8>
 80105a4:	01000c04 	movi	r4,48
 80105a8:	10c00044 	addi	r3,r2,1
 80105ac:	d8c02115 	stw	r3,132(sp)
 80105b0:	11000005 	stb	r4,0(r2)
 80105b4:	d8802117 	ldw	r2,132(sp)
 80105b8:	12bffb36 	bltu	r2,r10,80105a8 <__alt_data_end+0xfc0105a8>
 80105bc:	d8c03117 	ldw	r3,196(sp)
 80105c0:	10c5c83a 	sub	r2,r2,r3
 80105c4:	d8803315 	stw	r2,204(sp)
 80105c8:	008011c4 	movi	r2,71
 80105cc:	9880e226 	beq	r19,r2,8010958 <___svfprintf_internal_r+0x1d54>
 80105d0:	00801944 	movi	r2,101
 80105d4:	1401a30e 	bge	r2,r16,8010c64 <___svfprintf_internal_r+0x2060>
 80105d8:	d8c02617 	ldw	r3,152(sp)
 80105dc:	00801984 	movi	r2,102
 80105e0:	d8c03415 	stw	r3,208(sp)
 80105e4:	80815326 	beq	r16,r2,8010b34 <___svfprintf_internal_r+0x1f30>
 80105e8:	d8c03417 	ldw	r3,208(sp)
 80105ec:	d9003317 	ldw	r4,204(sp)
 80105f0:	19013f16 	blt	r3,r4,8010af0 <___svfprintf_internal_r+0x1eec>
 80105f4:	e080004c 	andi	r2,fp,1
 80105f8:	10014826 	beq	r2,zero,8010b1c <___svfprintf_internal_r+0x1f18>
 80105fc:	d8c03417 	ldw	r3,208(sp)
 8010600:	1c400044 	addi	r17,r3,1
 8010604:	8839883a 	mov	fp,r17
 8010608:	88014016 	blt	r17,zero,8010b0c <___svfprintf_internal_r+0x1f08>
 801060c:	dd402a07 	ldb	r21,168(sp)
 8010610:	a800c61e 	bne	r21,zero,801092c <___svfprintf_internal_r+0x1d28>
 8010614:	df002a15 	stw	fp,168(sp)
 8010618:	dcc02783 	ldbu	r19,158(sp)
 801061c:	df002d17 	ldw	fp,180(sp)
 8010620:	d8003215 	stw	zero,200(sp)
 8010624:	dc802d15 	stw	r18,180(sp)
 8010628:	003ab906 	br	800f110 <__alt_data_end+0xfc00f110>
 801062c:	010200b4 	movhi	r4,2050
 8010630:	21010904 	addi	r4,r4,1060
 8010634:	d9003115 	stw	r4,196(sp)
 8010638:	003bbe06 	br	800f534 <__alt_data_end+0xfc00f534>
 801063c:	d9002f17 	ldw	r4,188(sp)
 8010640:	04001004 	movi	r16,64
 8010644:	800b883a 	mov	r5,r16
 8010648:	80167500 	call	8016750 <_malloc_r>
 801064c:	b0800015 	stw	r2,0(r22)
 8010650:	b0800415 	stw	r2,16(r22)
 8010654:	10017c26 	beq	r2,zero,8010c48 <___svfprintf_internal_r+0x2044>
 8010658:	b4000515 	stw	r16,20(r22)
 801065c:	00398306 	br	800ec6c <__alt_data_end+0xfc00ec6c>
 8010660:	014200b4 	movhi	r5,2050
 8010664:	29410c04 	addi	r5,r5,1072
 8010668:	d9403115 	stw	r5,196(sp)
 801066c:	003eef06 	br	801022c <__alt_data_end+0xfc01022c>
 8010670:	d9002f17 	ldw	r4,188(sp)
 8010674:	b00b883a 	mov	r5,r22
 8010678:	b80d883a 	mov	r6,r23
 801067c:	8018c740 	call	8018c74 <__ssprint_r>
 8010680:	103a291e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010684:	dc002617 	ldw	r16,152(sp)
 8010688:	d8c02017 	ldw	r3,128(sp)
 801068c:	da000404 	addi	r8,sp,16
 8010690:	003f4a06 	br	80103bc <__alt_data_end+0xfc0103bc>
 8010694:	02400184 	movi	r9,6
 8010698:	003f8e06 	br	80104d4 <__alt_data_end+0xfc0104d4>
 801069c:	d8c03117 	ldw	r3,196(sp)
 80106a0:	b8e3c83a 	sub	r17,r23,r3
 80106a4:	003a9506 	br	800f0fc <__alt_data_end+0xfc00f0fc>
 80106a8:	d8c02d17 	ldw	r3,180(sp)
 80106ac:	002b883a 	mov	r21,zero
 80106b0:	00800044 	movi	r2,1
 80106b4:	1c800017 	ldw	r18,0(r3)
 80106b8:	18c00104 	addi	r3,r3,4
 80106bc:	d8c02d15 	stw	r3,180(sp)
 80106c0:	9007883a 	mov	r3,r18
 80106c4:	003bb406 	br	800f598 <__alt_data_end+0xfc00f598>
 80106c8:	d9002d17 	ldw	r4,180(sp)
 80106cc:	002b883a 	mov	r21,zero
 80106d0:	0005883a 	mov	r2,zero
 80106d4:	24800017 	ldw	r18,0(r4)
 80106d8:	21000104 	addi	r4,r4,4
 80106dc:	d9002d15 	stw	r4,180(sp)
 80106e0:	9007883a 	mov	r3,r18
 80106e4:	003bac06 	br	800f598 <__alt_data_end+0xfc00f598>
 80106e8:	1c800017 	ldw	r18,0(r3)
 80106ec:	d8c02d17 	ldw	r3,180(sp)
 80106f0:	902bd7fa 	srai	r21,r18,31
 80106f4:	18c00104 	addi	r3,r3,4
 80106f8:	d8c02d15 	stw	r3,180(sp)
 80106fc:	a805883a 	mov	r2,r21
 8010700:	003a5706 	br	800f060 <__alt_data_end+0xfc00f060>
 8010704:	d9402d17 	ldw	r5,180(sp)
 8010708:	14800017 	ldw	r18,0(r2)
 801070c:	002b883a 	mov	r21,zero
 8010710:	29400104 	addi	r5,r5,4
 8010714:	d9402d15 	stw	r5,180(sp)
 8010718:	003c0806 	br	800f73c <__alt_data_end+0xfc00f73c>
 801071c:	e080100c 	andi	r2,fp,64
 8010720:	10009426 	beq	r2,zero,8010974 <___svfprintf_internal_r+0x1d70>
 8010724:	d9002d17 	ldw	r4,180(sp)
 8010728:	d9403017 	ldw	r5,192(sp)
 801072c:	20800017 	ldw	r2,0(r4)
 8010730:	21000104 	addi	r4,r4,4
 8010734:	d9002d15 	stw	r4,180(sp)
 8010738:	1140000d 	sth	r5,0(r2)
 801073c:	00395d06 	br	800ecb4 <__alt_data_end+0xfc00ecb4>
 8010740:	d9002f17 	ldw	r4,188(sp)
 8010744:	b00b883a 	mov	r5,r22
 8010748:	b80d883a 	mov	r6,r23
 801074c:	8018c740 	call	8018c74 <__ssprint_r>
 8010750:	1039f51e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010754:	d8c02017 	ldw	r3,128(sp)
 8010758:	d8801f17 	ldw	r2,124(sp)
 801075c:	da000404 	addi	r8,sp,16
 8010760:	d9403317 	ldw	r5,204(sp)
 8010764:	d9003117 	ldw	r4,196(sp)
 8010768:	10800044 	addi	r2,r2,1
 801076c:	28c7883a 	add	r3,r5,r3
 8010770:	41000015 	stw	r4,0(r8)
 8010774:	41400115 	stw	r5,4(r8)
 8010778:	d8c02015 	stw	r3,128(sp)
 801077c:	d8801f15 	stw	r2,124(sp)
 8010780:	010001c4 	movi	r4,7
 8010784:	20bb060e 	bge	r4,r2,800f3a0 <__alt_data_end+0xfc00f3a0>
 8010788:	003d8306 	br	800fd98 <__alt_data_end+0xfc00fd98>
 801078c:	da004015 	stw	r8,256(sp)
 8010790:	800d1b80 	call	800d1b8 <strlen>
 8010794:	1023883a 	mov	r17,r2
 8010798:	da004017 	ldw	r8,256(sp)
 801079c:	883c290e 	bge	r17,zero,800f844 <__alt_data_end+0xfc00f844>
 80107a0:	0005883a 	mov	r2,zero
 80107a4:	003c2706 	br	800f844 <__alt_data_end+0xfc00f844>
 80107a8:	d8802604 	addi	r2,sp,152
 80107ac:	d8800115 	stw	r2,4(sp)
 80107b0:	d9002f17 	ldw	r4,188(sp)
 80107b4:	d8802504 	addi	r2,sp,148
 80107b8:	d9403717 	ldw	r5,220(sp)
 80107bc:	d8800215 	stw	r2,8(sp)
 80107c0:	d8802104 	addi	r2,sp,132
 80107c4:	da400015 	stw	r9,0(sp)
 80107c8:	d8800315 	stw	r2,12(sp)
 80107cc:	880d883a 	mov	r6,r17
 80107d0:	01c000c4 	movi	r7,3
 80107d4:	da004015 	stw	r8,256(sp)
 80107d8:	da403f15 	stw	r9,252(sp)
 80107dc:	80130ec0 	call	80130ec <_dtoa_r>
 80107e0:	da403f17 	ldw	r9,252(sp)
 80107e4:	da004017 	ldw	r8,256(sp)
 80107e8:	d8803115 	stw	r2,196(sp)
 80107ec:	482b883a 	mov	r21,r9
 80107f0:	d8c03117 	ldw	r3,196(sp)
 80107f4:	00801184 	movi	r2,70
 80107f8:	1d55883a 	add	r10,r3,r21
 80107fc:	98bf5b1e 	bne	r19,r2,801056c <__alt_data_end+0xfc01056c>
 8010800:	19000007 	ldb	r4,0(r3)
 8010804:	00800c04 	movi	r2,48
 8010808:	2080d826 	beq	r4,r2,8010b6c <___svfprintf_internal_r+0x1f68>
 801080c:	d8c02617 	ldw	r3,152(sp)
 8010810:	50d5883a 	add	r10,r10,r3
 8010814:	003f5506 	br	801056c <__alt_data_end+0xfc01056c>
 8010818:	010200b4 	movhi	r4,2050
 801081c:	21011cc4 	addi	r4,r4,1139
 8010820:	d9003615 	stw	r4,216(sp)
 8010824:	003a7706 	br	800f204 <__alt_data_end+0xfc00f204>
 8010828:	0023883a 	mov	r17,zero
 801082c:	003da306 	br	800febc <__alt_data_end+0xfc00febc>
 8010830:	d9002f17 	ldw	r4,188(sp)
 8010834:	b00b883a 	mov	r5,r22
 8010838:	b80d883a 	mov	r6,r23
 801083c:	8018c740 	call	8018c74 <__ssprint_r>
 8010840:	1039b91e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010844:	d8c02017 	ldw	r3,128(sp)
 8010848:	da000404 	addi	r8,sp,16
 801084c:	003d9a06 	br	800feb8 <__alt_data_end+0xfc00feb8>
 8010850:	d9002f17 	ldw	r4,188(sp)
 8010854:	b00b883a 	mov	r5,r22
 8010858:	b80d883a 	mov	r6,r23
 801085c:	8018c740 	call	8018c74 <__ssprint_r>
 8010860:	1039b11e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010864:	d8802617 	ldw	r2,152(sp)
 8010868:	d8c02017 	ldw	r3,128(sp)
 801086c:	da000404 	addi	r8,sp,16
 8010870:	003e0c06 	br	80100a4 <__alt_data_end+0xfc0100a4>
 8010874:	010200b4 	movhi	r4,2050
 8010878:	210118c4 	addi	r4,r4,1123
 801087c:	d9002b15 	stw	r4,172(sp)
 8010880:	d9002b17 	ldw	r4,172(sp)
 8010884:	1c07883a 	add	r3,r3,r16
 8010888:	10800044 	addi	r2,r2,1
 801088c:	41000015 	stw	r4,0(r8)
 8010890:	44000115 	stw	r16,4(r8)
 8010894:	d8c02015 	stw	r3,128(sp)
 8010898:	d8801f15 	stw	r2,124(sp)
 801089c:	010001c4 	movi	r4,7
 80108a0:	20bfa716 	blt	r4,r2,8010740 <__alt_data_end+0xfc010740>
 80108a4:	42000204 	addi	r8,r8,8
 80108a8:	003fad06 	br	8010760 <__alt_data_end+0xfc010760>
 80108ac:	d9002f17 	ldw	r4,188(sp)
 80108b0:	b00b883a 	mov	r5,r22
 80108b4:	b80d883a 	mov	r6,r23
 80108b8:	8018c740 	call	8018c74 <__ssprint_r>
 80108bc:	10399a1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 80108c0:	d8802617 	ldw	r2,152(sp)
 80108c4:	d9403317 	ldw	r5,204(sp)
 80108c8:	d8c02017 	ldw	r3,128(sp)
 80108cc:	da000404 	addi	r8,sp,16
 80108d0:	2885c83a 	sub	r2,r5,r2
 80108d4:	003e0406 	br	80100e8 <__alt_data_end+0xfc0100e8>
 80108d8:	00800184 	movi	r2,6
 80108dc:	1240012e 	bgeu	r2,r9,80108e4 <___svfprintf_internal_r+0x1ce0>
 80108e0:	1013883a 	mov	r9,r2
 80108e4:	4823883a 	mov	r17,r9
 80108e8:	4805883a 	mov	r2,r9
 80108ec:	4800b616 	blt	r9,zero,8010bc8 <___svfprintf_internal_r+0x1fc4>
 80108f0:	014200b4 	movhi	r5,2050
 80108f4:	29411704 	addi	r5,r5,1116
 80108f8:	d8802a15 	stw	r2,168(sp)
 80108fc:	dc802d15 	stw	r18,180(sp)
 8010900:	d8003215 	stw	zero,200(sp)
 8010904:	d8003415 	stw	zero,208(sp)
 8010908:	d9403115 	stw	r5,196(sp)
 801090c:	0005883a 	mov	r2,zero
 8010910:	003a0606 	br	800f12c <__alt_data_end+0xfc00f12c>
 8010914:	0021883a 	mov	r16,zero
 8010918:	003df406 	br	80100ec <__alt_data_end+0xfc0100ec>
 801091c:	014200b4 	movhi	r5,2050
 8010920:	29411cc4 	addi	r5,r5,1139
 8010924:	d9403615 	stw	r5,216(sp)
 8010928:	003ac306 	br	800f438 <__alt_data_end+0xfc00f438>
 801092c:	00800b44 	movi	r2,45
 8010930:	d8802785 	stb	r2,158(sp)
 8010934:	df002a15 	stw	fp,168(sp)
 8010938:	d8003215 	stw	zero,200(sp)
 801093c:	df002d17 	ldw	fp,180(sp)
 8010940:	00800b44 	movi	r2,45
 8010944:	dc802d15 	stw	r18,180(sp)
 8010948:	0039f506 	br	800f120 <__alt_data_end+0xfc00f120>
 801094c:	04c00b44 	movi	r19,45
 8010950:	dcc02785 	stb	r19,158(sp)
 8010954:	003af206 	br	800f520 <__alt_data_end+0xfc00f520>
 8010958:	d8c02617 	ldw	r3,152(sp)
 801095c:	00bfff44 	movi	r2,-3
 8010960:	18801816 	blt	r3,r2,80109c4 <___svfprintf_internal_r+0x1dc0>
 8010964:	48c01716 	blt	r9,r3,80109c4 <___svfprintf_internal_r+0x1dc0>
 8010968:	d8c03415 	stw	r3,208(sp)
 801096c:	040019c4 	movi	r16,103
 8010970:	003f1d06 	br	80105e8 <__alt_data_end+0xfc0105e8>
 8010974:	d8c02d17 	ldw	r3,180(sp)
 8010978:	d9003017 	ldw	r4,192(sp)
 801097c:	18800017 	ldw	r2,0(r3)
 8010980:	18c00104 	addi	r3,r3,4
 8010984:	d8c02d15 	stw	r3,180(sp)
 8010988:	11000015 	stw	r4,0(r2)
 801098c:	0038c906 	br	800ecb4 <__alt_data_end+0xfc00ecb4>
 8010990:	5005883a 	mov	r2,r10
 8010994:	003f0906 	br	80105bc <__alt_data_end+0xfc0105bc>
 8010998:	010200b4 	movhi	r4,2050
 801099c:	210118c4 	addi	r4,r4,1123
 80109a0:	d9002b15 	stw	r4,172(sp)
 80109a4:	003c9a06 	br	800fc10 <__alt_data_end+0xfc00fc10>
 80109a8:	da402a15 	stw	r9,168(sp)
 80109ac:	dcc02783 	ldbu	r19,158(sp)
 80109b0:	4823883a 	mov	r17,r9
 80109b4:	dc802d15 	stw	r18,180(sp)
 80109b8:	d8003215 	stw	zero,200(sp)
 80109bc:	d8003415 	stw	zero,208(sp)
 80109c0:	0039d306 	br	800f110 <__alt_data_end+0xfc00f110>
 80109c4:	843fff84 	addi	r16,r16,-2
 80109c8:	1d7fffc4 	addi	r21,r3,-1
 80109cc:	dd402615 	stw	r21,152(sp)
 80109d0:	dc0022c5 	stb	r16,139(sp)
 80109d4:	a8008f16 	blt	r21,zero,8010c14 <___svfprintf_internal_r+0x2010>
 80109d8:	00800ac4 	movi	r2,43
 80109dc:	d8802305 	stb	r2,140(sp)
 80109e0:	00800244 	movi	r2,9
 80109e4:	1540710e 	bge	r2,r21,8010bac <___svfprintf_internal_r+0x1fa8>
 80109e8:	dcc022c4 	addi	r19,sp,139
 80109ec:	dc002b15 	stw	r16,172(sp)
 80109f0:	4023883a 	mov	r17,r8
 80109f4:	9821883a 	mov	r16,r19
 80109f8:	a809883a 	mov	r4,r21
 80109fc:	01400284 	movi	r5,10
 8010a00:	8009f780 	call	8009f78 <__modsi3>
 8010a04:	10800c04 	addi	r2,r2,48
 8010a08:	843fffc4 	addi	r16,r16,-1
 8010a0c:	a809883a 	mov	r4,r21
 8010a10:	01400284 	movi	r5,10
 8010a14:	80800005 	stb	r2,0(r16)
 8010a18:	8009f240 	call	8009f24 <__divsi3>
 8010a1c:	01000244 	movi	r4,9
 8010a20:	102b883a 	mov	r21,r2
 8010a24:	20bff416 	blt	r4,r2,80109f8 <__alt_data_end+0xfc0109f8>
 8010a28:	8811883a 	mov	r8,r17
 8010a2c:	10800c04 	addi	r2,r2,48
 8010a30:	8023883a 	mov	r17,r16
 8010a34:	897fffc4 	addi	r5,r17,-1
 8010a38:	88bfffc5 	stb	r2,-1(r17)
 8010a3c:	dc002b17 	ldw	r16,172(sp)
 8010a40:	2cc08a2e 	bgeu	r5,r19,8010c6c <___svfprintf_internal_r+0x2068>
 8010a44:	d9802384 	addi	r6,sp,142
 8010a48:	344dc83a 	sub	r6,r6,r17
 8010a4c:	d9002344 	addi	r4,sp,141
 8010a50:	998d883a 	add	r6,r19,r6
 8010a54:	00000106 	br	8010a5c <___svfprintf_internal_r+0x1e58>
 8010a58:	28800003 	ldbu	r2,0(r5)
 8010a5c:	20800005 	stb	r2,0(r4)
 8010a60:	21000044 	addi	r4,r4,1
 8010a64:	29400044 	addi	r5,r5,1
 8010a68:	21bffb1e 	bne	r4,r6,8010a58 <__alt_data_end+0xfc010a58>
 8010a6c:	d8802304 	addi	r2,sp,140
 8010a70:	1445c83a 	sub	r2,r2,r17
 8010a74:	d9402344 	addi	r5,sp,141
 8010a78:	2885883a 	add	r2,r5,r2
 8010a7c:	14e7c83a 	sub	r19,r2,r19
 8010a80:	d8803317 	ldw	r2,204(sp)
 8010a84:	d8c03317 	ldw	r3,204(sp)
 8010a88:	dcc03a15 	stw	r19,232(sp)
 8010a8c:	14e3883a 	add	r17,r2,r19
 8010a90:	00800044 	movi	r2,1
 8010a94:	10c0690e 	bge	r2,r3,8010c3c <___svfprintf_internal_r+0x2038>
 8010a98:	8c400044 	addi	r17,r17,1
 8010a9c:	8839883a 	mov	fp,r17
 8010aa0:	88006416 	blt	r17,zero,8010c34 <___svfprintf_internal_r+0x2030>
 8010aa4:	d8003415 	stw	zero,208(sp)
 8010aa8:	003ed806 	br	801060c <__alt_data_end+0xfc01060c>
 8010aac:	d9002f17 	ldw	r4,188(sp)
 8010ab0:	b00b883a 	mov	r5,r22
 8010ab4:	b80d883a 	mov	r6,r23
 8010ab8:	8018c740 	call	8018c74 <__ssprint_r>
 8010abc:	10391a1e 	bne	r2,zero,800ef28 <__alt_data_end+0xfc00ef28>
 8010ac0:	dc002617 	ldw	r16,152(sp)
 8010ac4:	d8c02017 	ldw	r3,128(sp)
 8010ac8:	d8801f17 	ldw	r2,124(sp)
 8010acc:	da000404 	addi	r8,sp,16
 8010ad0:	003e4b06 	br	8010400 <__alt_data_end+0xfc010400>
 8010ad4:	483e7f1e 	bne	r9,zero,80104d4 <__alt_data_end+0xfc0104d4>
 8010ad8:	8813883a 	mov	r9,r17
 8010adc:	003e7d06 	br	80104d4 <__alt_data_end+0xfc0104d4>
 8010ae0:	00c00b44 	movi	r3,45
 8010ae4:	2460003c 	xorhi	r17,r4,32768
 8010ae8:	d8c02a05 	stb	r3,168(sp)
 8010aec:	003e7f06 	br	80104ec <__alt_data_end+0xfc0104ec>
 8010af0:	d8c03417 	ldw	r3,208(sp)
 8010af4:	00c03e0e 	bge	zero,r3,8010bf0 <___svfprintf_internal_r+0x1fec>
 8010af8:	04400044 	movi	r17,1
 8010afc:	d9003317 	ldw	r4,204(sp)
 8010b00:	8923883a 	add	r17,r17,r4
 8010b04:	8839883a 	mov	fp,r17
 8010b08:	883ec00e 	bge	r17,zero,801060c <__alt_data_end+0xfc01060c>
 8010b0c:	0039883a 	mov	fp,zero
 8010b10:	003ebe06 	br	801060c <__alt_data_end+0xfc01060c>
 8010b14:	4d400044 	addi	r21,r9,1
 8010b18:	003e7b06 	br	8010508 <__alt_data_end+0xfc010508>
 8010b1c:	1839883a 	mov	fp,r3
 8010b20:	18004e16 	blt	r3,zero,8010c5c <___svfprintf_internal_r+0x2058>
 8010b24:	dc403417 	ldw	r17,208(sp)
 8010b28:	003eb806 	br	801060c <__alt_data_end+0xfc01060c>
 8010b2c:	d8802117 	ldw	r2,132(sp)
 8010b30:	003ea206 	br	80105bc <__alt_data_end+0xfc0105bc>
 8010b34:	00c0310e 	bge	zero,r3,8010bfc <___svfprintf_internal_r+0x1ff8>
 8010b38:	4800021e 	bne	r9,zero,8010b44 <___svfprintf_internal_r+0x1f40>
 8010b3c:	e080004c 	andi	r2,fp,1
 8010b40:	103ff626 	beq	r2,zero,8010b1c <__alt_data_end+0xfc010b1c>
 8010b44:	d8c03417 	ldw	r3,208(sp)
 8010b48:	4a400044 	addi	r9,r9,1
 8010b4c:	1a63883a 	add	r17,r3,r9
 8010b50:	8839883a 	mov	fp,r17
 8010b54:	883ead0e 	bge	r17,zero,801060c <__alt_data_end+0xfc01060c>
 8010b58:	003fec06 	br	8010b0c <__alt_data_end+0xfc010b0c>
 8010b5c:	010200b4 	movhi	r4,2050
 8010b60:	210118c4 	addi	r4,r4,1123
 8010b64:	d9002b15 	stw	r4,172(sp)
 8010b68:	003d2006 	br	800ffec <__alt_data_end+0xfc00ffec>
 8010b6c:	d9003717 	ldw	r4,220(sp)
 8010b70:	880b883a 	mov	r5,r17
 8010b74:	000d883a 	mov	r6,zero
 8010b78:	000f883a 	mov	r7,zero
 8010b7c:	da004015 	stw	r8,256(sp)
 8010b80:	da403f15 	stw	r9,252(sp)
 8010b84:	da803e15 	stw	r10,248(sp)
 8010b88:	800b7ac0 	call	800b7ac <__eqdf2>
 8010b8c:	da004017 	ldw	r8,256(sp)
 8010b90:	da403f17 	ldw	r9,252(sp)
 8010b94:	da803e17 	ldw	r10,248(sp)
 8010b98:	103f1c26 	beq	r2,zero,801080c <__alt_data_end+0xfc01080c>
 8010b9c:	00800044 	movi	r2,1
 8010ba0:	1547c83a 	sub	r3,r2,r21
 8010ba4:	d8c02615 	stw	r3,152(sp)
 8010ba8:	003f1906 	br	8010810 <__alt_data_end+0xfc010810>
 8010bac:	00800c04 	movi	r2,48
 8010bb0:	a8c00c04 	addi	r3,r21,48
 8010bb4:	d8802345 	stb	r2,141(sp)
 8010bb8:	d8c02385 	stb	r3,142(sp)
 8010bbc:	d88023c4 	addi	r2,sp,143
 8010bc0:	dcc022c4 	addi	r19,sp,139
 8010bc4:	003fad06 	br	8010a7c <__alt_data_end+0xfc010a7c>
 8010bc8:	0005883a 	mov	r2,zero
 8010bcc:	003f4806 	br	80108f0 <__alt_data_end+0xfc0108f0>
 8010bd0:	d9402d17 	ldw	r5,180(sp)
 8010bd4:	2a400017 	ldw	r9,0(r5)
 8010bd8:	28c00104 	addi	r3,r5,4
 8010bdc:	d8c02d15 	stw	r3,180(sp)
 8010be0:	483e2c0e 	bge	r9,zero,8010494 <__alt_data_end+0xfc010494>
 8010be4:	027fffc4 	movi	r9,-1
 8010be8:	e4000047 	ldb	r16,1(fp)
 8010bec:	00385c06 	br	800ed60 <__alt_data_end+0xfc00ed60>
 8010bf0:	04400084 	movi	r17,2
 8010bf4:	88e3c83a 	sub	r17,r17,r3
 8010bf8:	003fc006 	br	8010afc <__alt_data_end+0xfc010afc>
 8010bfc:	4800091e 	bne	r9,zero,8010c24 <___svfprintf_internal_r+0x2020>
 8010c00:	e080004c 	andi	r2,fp,1
 8010c04:	1000071e 	bne	r2,zero,8010c24 <___svfprintf_internal_r+0x2020>
 8010c08:	07000044 	movi	fp,1
 8010c0c:	e023883a 	mov	r17,fp
 8010c10:	003e7e06 	br	801060c <__alt_data_end+0xfc01060c>
 8010c14:	00800b44 	movi	r2,45
 8010c18:	056bc83a 	sub	r21,zero,r21
 8010c1c:	d8802305 	stb	r2,140(sp)
 8010c20:	003f6f06 	br	80109e0 <__alt_data_end+0xfc0109e0>
 8010c24:	4c400084 	addi	r17,r9,2
 8010c28:	8839883a 	mov	fp,r17
 8010c2c:	883e770e 	bge	r17,zero,801060c <__alt_data_end+0xfc01060c>
 8010c30:	003fb606 	br	8010b0c <__alt_data_end+0xfc010b0c>
 8010c34:	0039883a 	mov	fp,zero
 8010c38:	003f9a06 	br	8010aa4 <__alt_data_end+0xfc010aa4>
 8010c3c:	e084703a 	and	r2,fp,r2
 8010c40:	103f9626 	beq	r2,zero,8010a9c <__alt_data_end+0xfc010a9c>
 8010c44:	003f9406 	br	8010a98 <__alt_data_end+0xfc010a98>
 8010c48:	d8c02f17 	ldw	r3,188(sp)
 8010c4c:	00800304 	movi	r2,12
 8010c50:	18800015 	stw	r2,0(r3)
 8010c54:	00bfffc4 	movi	r2,-1
 8010c58:	0038b706 	br	800ef38 <__alt_data_end+0xfc00ef38>
 8010c5c:	0039883a 	mov	fp,zero
 8010c60:	003fb006 	br	8010b24 <__alt_data_end+0xfc010b24>
 8010c64:	d8c02617 	ldw	r3,152(sp)
 8010c68:	003f5706 	br	80109c8 <__alt_data_end+0xfc0109c8>
 8010c6c:	d8802344 	addi	r2,sp,141
 8010c70:	003f8206 	br	8010a7c <__alt_data_end+0xfc010a7c>

08010c74 <___vfprintf_internal_r>:
 8010c74:	defeb604 	addi	sp,sp,-1320
 8010c78:	dfc14915 	stw	ra,1316(sp)
 8010c7c:	ddc14715 	stw	r23,1308(sp)
 8010c80:	dd814615 	stw	r22,1304(sp)
 8010c84:	202f883a 	mov	r23,r4
 8010c88:	282d883a 	mov	r22,r5
 8010c8c:	d9812a15 	stw	r6,1192(sp)
 8010c90:	d9c12d15 	stw	r7,1204(sp)
 8010c94:	df014815 	stw	fp,1312(sp)
 8010c98:	dd414515 	stw	r21,1300(sp)
 8010c9c:	dd014415 	stw	r20,1296(sp)
 8010ca0:	dcc14315 	stw	r19,1292(sp)
 8010ca4:	dc814215 	stw	r18,1288(sp)
 8010ca8:	dc414115 	stw	r17,1284(sp)
 8010cac:	dc014015 	stw	r16,1280(sp)
 8010cb0:	80165640 	call	8016564 <_localeconv_r>
 8010cb4:	10800017 	ldw	r2,0(r2)
 8010cb8:	1009883a 	mov	r4,r2
 8010cbc:	d8813515 	stw	r2,1236(sp)
 8010cc0:	800d1b80 	call	800d1b8 <strlen>
 8010cc4:	d8813815 	stw	r2,1248(sp)
 8010cc8:	b8000226 	beq	r23,zero,8010cd4 <___vfprintf_internal_r+0x60>
 8010ccc:	b8800e17 	ldw	r2,56(r23)
 8010cd0:	10010526 	beq	r2,zero,80110e8 <___vfprintf_internal_r+0x474>
 8010cd4:	b0c0030b 	ldhu	r3,12(r22)
 8010cd8:	1908000c 	andi	r4,r3,8192
 8010cdc:	1805883a 	mov	r2,r3
 8010ce0:	2000071e 	bne	r4,zero,8010d00 <___vfprintf_internal_r+0x8c>
 8010ce4:	b1001917 	ldw	r4,100(r22)
 8010ce8:	18880014 	ori	r2,r3,8192
 8010cec:	00f7ffc4 	movi	r3,-8193
 8010cf0:	20c8703a 	and	r4,r4,r3
 8010cf4:	b080030d 	sth	r2,12(r22)
 8010cf8:	1007883a 	mov	r3,r2
 8010cfc:	b1001915 	stw	r4,100(r22)
 8010d00:	1100020c 	andi	r4,r2,8
 8010d04:	2000a826 	beq	r4,zero,8010fa8 <___vfprintf_internal_r+0x334>
 8010d08:	b1000417 	ldw	r4,16(r22)
 8010d0c:	2000a626 	beq	r4,zero,8010fa8 <___vfprintf_internal_r+0x334>
 8010d10:	1080068c 	andi	r2,r2,26
 8010d14:	01000284 	movi	r4,10
 8010d18:	1100ac26 	beq	r2,r4,8010fcc <___vfprintf_internal_r+0x358>
 8010d1c:	d8c10e04 	addi	r3,sp,1080
 8010d20:	d9010dc4 	addi	r4,sp,1079
 8010d24:	d9400404 	addi	r5,sp,16
 8010d28:	050200b4 	movhi	r20,2050
 8010d2c:	1905c83a 	sub	r2,r3,r4
 8010d30:	a50120c4 	addi	r20,r20,1155
 8010d34:	d8c12815 	stw	r3,1184(sp)
 8010d38:	d9012915 	stw	r4,1188(sp)
 8010d3c:	d9411e15 	stw	r5,1144(sp)
 8010d40:	d8012015 	stw	zero,1152(sp)
 8010d44:	d8011f15 	stw	zero,1148(sp)
 8010d48:	d8013315 	stw	zero,1228(sp)
 8010d4c:	d8013715 	stw	zero,1244(sp)
 8010d50:	d8013915 	stw	zero,1252(sp)
 8010d54:	d8013b15 	stw	zero,1260(sp)
 8010d58:	d8013a15 	stw	zero,1256(sp)
 8010d5c:	d8012f15 	stw	zero,1212(sp)
 8010d60:	2811883a 	mov	r8,r5
 8010d64:	d8813c15 	stw	r2,1264(sp)
 8010d68:	d8c12a17 	ldw	r3,1192(sp)
 8010d6c:	18800007 	ldb	r2,0(r3)
 8010d70:	10021326 	beq	r2,zero,80115c0 <___vfprintf_internal_r+0x94c>
 8010d74:	00c00944 	movi	r3,37
 8010d78:	dc012a17 	ldw	r16,1192(sp)
 8010d7c:	10c0021e 	bne	r2,r3,8010d88 <___vfprintf_internal_r+0x114>
 8010d80:	00001606 	br	8010ddc <___vfprintf_internal_r+0x168>
 8010d84:	10c08526 	beq	r2,r3,8010f9c <___vfprintf_internal_r+0x328>
 8010d88:	84000044 	addi	r16,r16,1
 8010d8c:	80800007 	ldb	r2,0(r16)
 8010d90:	103ffc1e 	bne	r2,zero,8010d84 <__alt_data_end+0xfc010d84>
 8010d94:	d9012a17 	ldw	r4,1192(sp)
 8010d98:	8123c83a 	sub	r17,r16,r4
 8010d9c:	88000f26 	beq	r17,zero,8010ddc <___vfprintf_internal_r+0x168>
 8010da0:	d8812a17 	ldw	r2,1192(sp)
 8010da4:	d8c12017 	ldw	r3,1152(sp)
 8010da8:	44400115 	stw	r17,4(r8)
 8010dac:	40800015 	stw	r2,0(r8)
 8010db0:	d8811f17 	ldw	r2,1148(sp)
 8010db4:	1c47883a 	add	r3,r3,r17
 8010db8:	d8c12015 	stw	r3,1152(sp)
 8010dbc:	10800044 	addi	r2,r2,1
 8010dc0:	d8811f15 	stw	r2,1148(sp)
 8010dc4:	00c001c4 	movi	r3,7
 8010dc8:	1880b516 	blt	r3,r2,80110a0 <___vfprintf_internal_r+0x42c>
 8010dcc:	42000204 	addi	r8,r8,8
 8010dd0:	d8c12f17 	ldw	r3,1212(sp)
 8010dd4:	1c47883a 	add	r3,r3,r17
 8010dd8:	d8c12f15 	stw	r3,1212(sp)
 8010ddc:	80800007 	ldb	r2,0(r16)
 8010de0:	1000b626 	beq	r2,zero,80110bc <___vfprintf_internal_r+0x448>
 8010de4:	80800044 	addi	r2,r16,1
 8010de8:	84000047 	ldb	r16,1(r16)
 8010dec:	0027883a 	mov	r19,zero
 8010df0:	0039883a 	mov	fp,zero
 8010df4:	dcc12b05 	stb	r19,1196(sp)
 8010df8:	d8012785 	stb	zero,1182(sp)
 8010dfc:	027fffc4 	movi	r9,-1
 8010e00:	d8012e15 	stw	zero,1208(sp)
 8010e04:	04401604 	movi	r17,88
 8010e08:	04800244 	movi	r18,9
 8010e0c:	da012a15 	stw	r8,1192(sp)
 8010e10:	e027883a 	mov	r19,fp
 8010e14:	17000044 	addi	fp,r2,1
 8010e18:	80bff804 	addi	r2,r16,-32
 8010e1c:	88831236 	bltu	r17,r2,8011a68 <___vfprintf_internal_r+0xdf4>
 8010e20:	100490ba 	slli	r2,r2,2
 8010e24:	01020074 	movhi	r4,2049
 8010e28:	21038e04 	addi	r4,r4,3640
 8010e2c:	1105883a 	add	r2,r2,r4
 8010e30:	10800017 	ldw	r2,0(r2)
 8010e34:	1000683a 	jmp	r2
 8010e38:	08011984 	addi	zero,at,1126
 8010e3c:	08011a68 	cmpgeui	zero,at,1129
 8010e40:	08011a68 	cmpgeui	zero,at,1129
 8010e44:	080119a0 	cmpeqi	zero,at,1126
 8010e48:	08011a68 	cmpgeui	zero,at,1129
 8010e4c:	08011a68 	cmpgeui	zero,at,1129
 8010e50:	08011a68 	cmpgeui	zero,at,1129
 8010e54:	08011a68 	cmpgeui	zero,at,1129
 8010e58:	08011a68 	cmpgeui	zero,at,1129
 8010e5c:	08011a68 	cmpgeui	zero,at,1129
 8010e60:	080119b0 	cmpltui	zero,at,1126
 8010e64:	080119d8 	cmpnei	zero,at,1127
 8010e68:	08011a68 	cmpgeui	zero,at,1129
 8010e6c:	080110f4 	orhi	zero,at,1091
 8010e70:	08011104 	addi	zero,at,1092
 8010e74:	08011a68 	cmpgeui	zero,at,1129
 8010e78:	08011154 	ori	zero,at,1093
 8010e7c:	08011164 	muli	zero,at,1093
 8010e80:	08011164 	muli	zero,at,1093
 8010e84:	08011164 	muli	zero,at,1093
 8010e88:	08011164 	muli	zero,at,1093
 8010e8c:	08011164 	muli	zero,at,1093
 8010e90:	08011164 	muli	zero,at,1093
 8010e94:	08011164 	muli	zero,at,1093
 8010e98:	08011164 	muli	zero,at,1093
 8010e9c:	08011164 	muli	zero,at,1093
 8010ea0:	08011a68 	cmpgeui	zero,at,1129
 8010ea4:	08011a68 	cmpgeui	zero,at,1129
 8010ea8:	08011a68 	cmpgeui	zero,at,1129
 8010eac:	08011a68 	cmpgeui	zero,at,1129
 8010eb0:	08011a68 	cmpgeui	zero,at,1129
 8010eb4:	08011a68 	cmpgeui	zero,at,1129
 8010eb8:	08011a68 	cmpgeui	zero,at,1129
 8010ebc:	08011a68 	cmpgeui	zero,at,1129
 8010ec0:	08011a68 	cmpgeui	zero,at,1129
 8010ec4:	08011a68 	cmpgeui	zero,at,1129
 8010ec8:	080111a8 	cmpgeui	zero,at,1094
 8010ecc:	080115c8 	cmpgei	zero,at,1111
 8010ed0:	08011a68 	cmpgeui	zero,at,1129
 8010ed4:	080115c8 	cmpgei	zero,at,1111
 8010ed8:	08011a68 	cmpgeui	zero,at,1129
 8010edc:	08011a68 	cmpgeui	zero,at,1129
 8010ee0:	08011a68 	cmpgeui	zero,at,1129
 8010ee4:	08011a68 	cmpgeui	zero,at,1129
 8010ee8:	08011670 	cmpltui	zero,at,1113
 8010eec:	08011a68 	cmpgeui	zero,at,1129
 8010ef0:	08011a68 	cmpgeui	zero,at,1129
 8010ef4:	08011680 	call	801168 <__alt_mem_onchip_memory2_0+0x801168>
 8010ef8:	08011a68 	cmpgeui	zero,at,1129
 8010efc:	08011a68 	cmpgeui	zero,at,1129
 8010f00:	08011a68 	cmpgeui	zero,at,1129
 8010f04:	08011a68 	cmpgeui	zero,at,1129
 8010f08:	08011a68 	cmpgeui	zero,at,1129
 8010f0c:	080116c4 	addi	zero,at,1115
 8010f10:	08011a68 	cmpgeui	zero,at,1129
 8010f14:	08011a68 	cmpgeui	zero,at,1129
 8010f18:	080116fc 	xorhi	zero,at,1115
 8010f1c:	08011a68 	cmpgeui	zero,at,1129
 8010f20:	08011a68 	cmpgeui	zero,at,1129
 8010f24:	08011a68 	cmpgeui	zero,at,1129
 8010f28:	08011a68 	cmpgeui	zero,at,1129
 8010f2c:	08011a68 	cmpgeui	zero,at,1129
 8010f30:	08011a68 	cmpgeui	zero,at,1129
 8010f34:	08011a68 	cmpgeui	zero,at,1129
 8010f38:	08011a68 	cmpgeui	zero,at,1129
 8010f3c:	08011a68 	cmpgeui	zero,at,1129
 8010f40:	08011a68 	cmpgeui	zero,at,1129
 8010f44:	08011938 	rdprs	zero,at,1124
 8010f48:	080118e4 	muli	zero,at,1123
 8010f4c:	080115c8 	cmpgei	zero,at,1111
 8010f50:	080115c8 	cmpgei	zero,at,1111
 8010f54:	080115c8 	cmpgei	zero,at,1111
 8010f58:	08011928 	cmpgeui	zero,at,1124
 8010f5c:	080118e4 	muli	zero,at,1123
 8010f60:	08011a68 	cmpgeui	zero,at,1129
 8010f64:	08011a68 	cmpgeui	zero,at,1129
 8010f68:	08011800 	call	801180 <__alt_mem_onchip_memory2_0+0x801180>
 8010f6c:	08011a68 	cmpgeui	zero,at,1129
 8010f70:	08011818 	cmpnei	zero,at,1120
 8010f74:	08011858 	cmpnei	zero,at,1121
 8010f78:	08011898 	cmpnei	zero,at,1122
 8010f7c:	08011764 	muli	zero,at,1117
 8010f80:	08011a68 	cmpgeui	zero,at,1129
 8010f84:	080119ec 	andhi	zero,at,1127
 8010f88:	08011a68 	cmpgeui	zero,at,1129
 8010f8c:	08011774 	orhi	zero,at,1117
 8010f90:	08011a68 	cmpgeui	zero,at,1129
 8010f94:	08011a68 	cmpgeui	zero,at,1129
 8010f98:	080117b4 	orhi	zero,at,1118
 8010f9c:	d9412a17 	ldw	r5,1192(sp)
 8010fa0:	8163c83a 	sub	r17,r16,r5
 8010fa4:	003f7d06 	br	8010d9c <__alt_data_end+0xfc010d9c>
 8010fa8:	b809883a 	mov	r4,r23
 8010fac:	b00b883a 	mov	r5,r22
 8010fb0:	8012d940 	call	8012d94 <__swsetup_r>
 8010fb4:	10002d1e 	bne	r2,zero,801106c <___vfprintf_internal_r+0x3f8>
 8010fb8:	b0c0030b 	ldhu	r3,12(r22)
 8010fbc:	01000284 	movi	r4,10
 8010fc0:	1805883a 	mov	r2,r3
 8010fc4:	1080068c 	andi	r2,r2,26
 8010fc8:	113f541e 	bne	r2,r4,8010d1c <__alt_data_end+0xfc010d1c>
 8010fcc:	b080038b 	ldhu	r2,14(r22)
 8010fd0:	113fffcc 	andi	r4,r2,65535
 8010fd4:	2120001c 	xori	r4,r4,32768
 8010fd8:	21200004 	addi	r4,r4,-32768
 8010fdc:	203f4f16 	blt	r4,zero,8010d1c <__alt_data_end+0xfc010d1c>
 8010fe0:	b2c01917 	ldw	r11,100(r22)
 8010fe4:	b2800717 	ldw	r10,28(r22)
 8010fe8:	b2400917 	ldw	r9,36(r22)
 8010fec:	d9812a17 	ldw	r6,1192(sp)
 8010ff0:	d9c12d17 	ldw	r7,1204(sp)
 8010ff4:	02010004 	movi	r8,1024
 8010ff8:	18ffff4c 	andi	r3,r3,65533
 8010ffc:	d881078d 	sth	r2,1054(sp)
 8011000:	b809883a 	mov	r4,r23
 8011004:	d8800404 	addi	r2,sp,16
 8011008:	d9410404 	addi	r5,sp,1040
 801100c:	d8c1070d 	sth	r3,1052(sp)
 8011010:	dac11d15 	stw	r11,1140(sp)
 8011014:	da810b15 	stw	r10,1068(sp)
 8011018:	da410d15 	stw	r9,1076(sp)
 801101c:	d8810415 	stw	r2,1040(sp)
 8011020:	d8810815 	stw	r2,1056(sp)
 8011024:	da010615 	stw	r8,1048(sp)
 8011028:	da010915 	stw	r8,1060(sp)
 801102c:	d8010a15 	stw	zero,1064(sp)
 8011030:	8010c740 	call	8010c74 <___vfprintf_internal_r>
 8011034:	1021883a 	mov	r16,r2
 8011038:	10000416 	blt	r2,zero,801104c <___vfprintf_internal_r+0x3d8>
 801103c:	b809883a 	mov	r4,r23
 8011040:	d9410404 	addi	r5,sp,1040
 8011044:	80148140 	call	8014814 <_fflush_r>
 8011048:	1007301e 	bne	r2,zero,8012d0c <___vfprintf_internal_r+0x2098>
 801104c:	d881070b 	ldhu	r2,1052(sp)
 8011050:	1080100c 	andi	r2,r2,64
 8011054:	10000326 	beq	r2,zero,8011064 <___vfprintf_internal_r+0x3f0>
 8011058:	b080030b 	ldhu	r2,12(r22)
 801105c:	10801014 	ori	r2,r2,64
 8011060:	b080030d 	sth	r2,12(r22)
 8011064:	8005883a 	mov	r2,r16
 8011068:	00000106 	br	8011070 <___vfprintf_internal_r+0x3fc>
 801106c:	00bfffc4 	movi	r2,-1
 8011070:	dfc14917 	ldw	ra,1316(sp)
 8011074:	df014817 	ldw	fp,1312(sp)
 8011078:	ddc14717 	ldw	r23,1308(sp)
 801107c:	dd814617 	ldw	r22,1304(sp)
 8011080:	dd414517 	ldw	r21,1300(sp)
 8011084:	dd014417 	ldw	r20,1296(sp)
 8011088:	dcc14317 	ldw	r19,1292(sp)
 801108c:	dc814217 	ldw	r18,1288(sp)
 8011090:	dc414117 	ldw	r17,1284(sp)
 8011094:	dc014017 	ldw	r16,1280(sp)
 8011098:	dec14a04 	addi	sp,sp,1320
 801109c:	f800283a 	ret
 80110a0:	b809883a 	mov	r4,r23
 80110a4:	b00b883a 	mov	r5,r22
 80110a8:	d9811e04 	addi	r6,sp,1144
 80110ac:	801a1080 	call	801a108 <__sprint_r>
 80110b0:	1000081e 	bne	r2,zero,80110d4 <___vfprintf_internal_r+0x460>
 80110b4:	da000404 	addi	r8,sp,16
 80110b8:	003f4506 	br	8010dd0 <__alt_data_end+0xfc010dd0>
 80110bc:	d8812017 	ldw	r2,1152(sp)
 80110c0:	10000426 	beq	r2,zero,80110d4 <___vfprintf_internal_r+0x460>
 80110c4:	b809883a 	mov	r4,r23
 80110c8:	b00b883a 	mov	r5,r22
 80110cc:	d9811e04 	addi	r6,sp,1144
 80110d0:	801a1080 	call	801a108 <__sprint_r>
 80110d4:	b080030b 	ldhu	r2,12(r22)
 80110d8:	1080100c 	andi	r2,r2,64
 80110dc:	103fe31e 	bne	r2,zero,801106c <__alt_data_end+0xfc01106c>
 80110e0:	d8812f17 	ldw	r2,1212(sp)
 80110e4:	003fe206 	br	8011070 <__alt_data_end+0xfc011070>
 80110e8:	b809883a 	mov	r4,r23
 80110ec:	8014dd00 	call	8014dd0 <__sinit>
 80110f0:	003ef806 	br	8010cd4 <__alt_data_end+0xfc010cd4>
 80110f4:	e005883a 	mov	r2,fp
 80110f8:	9cc00114 	ori	r19,r19,4
 80110fc:	e4000007 	ldb	r16,0(fp)
 8011100:	003f4406 	br	8010e14 <__alt_data_end+0xfc010e14>
 8011104:	e4000007 	ldb	r16,0(fp)
 8011108:	01000a84 	movi	r4,42
 801110c:	e0800044 	addi	r2,fp,1
 8011110:	8106f626 	beq	r16,r4,8012cec <___vfprintf_internal_r+0x2078>
 8011114:	857ff404 	addi	r21,r16,-48
 8011118:	1039883a 	mov	fp,r2
 801111c:	0013883a 	mov	r9,zero
 8011120:	957f3d36 	bltu	r18,r21,8010e18 <__alt_data_end+0xfc010e18>
 8011124:	0009883a 	mov	r4,zero
 8011128:	01400284 	movi	r5,10
 801112c:	8009fe40 	call	8009fe4 <__mulsi3>
 8011130:	e4000007 	ldb	r16,0(fp)
 8011134:	a889883a 	add	r4,r21,r2
 8011138:	e7000044 	addi	fp,fp,1
 801113c:	857ff404 	addi	r21,r16,-48
 8011140:	957ff92e 	bgeu	r18,r21,8011128 <__alt_data_end+0xfc011128>
 8011144:	2013883a 	mov	r9,r4
 8011148:	203f330e 	bge	r4,zero,8010e18 <__alt_data_end+0xfc010e18>
 801114c:	027fffc4 	movi	r9,-1
 8011150:	003f3106 	br	8010e18 <__alt_data_end+0xfc010e18>
 8011154:	9cc02014 	ori	r19,r19,128
 8011158:	e005883a 	mov	r2,fp
 801115c:	e4000007 	ldb	r16,0(fp)
 8011160:	003f2c06 	br	8010e14 <__alt_data_end+0xfc010e14>
 8011164:	857ff404 	addi	r21,r16,-48
 8011168:	d8012e15 	stw	zero,1208(sp)
 801116c:	e021883a 	mov	r16,fp
 8011170:	0009883a 	mov	r4,zero
 8011174:	da412c15 	stw	r9,1200(sp)
 8011178:	01400284 	movi	r5,10
 801117c:	8009fe40 	call	8009fe4 <__mulsi3>
 8011180:	81400007 	ldb	r5,0(r16)
 8011184:	1549883a 	add	r4,r2,r21
 8011188:	e7000044 	addi	fp,fp,1
 801118c:	2d7ff404 	addi	r21,r5,-48
 8011190:	e021883a 	mov	r16,fp
 8011194:	957ff82e 	bgeu	r18,r21,8011178 <__alt_data_end+0xfc011178>
 8011198:	2821883a 	mov	r16,r5
 801119c:	d9012e15 	stw	r4,1208(sp)
 80111a0:	da412c17 	ldw	r9,1200(sp)
 80111a4:	003f1c06 	br	8010e18 <__alt_data_end+0xfc010e18>
 80111a8:	da012a17 	ldw	r8,1192(sp)
 80111ac:	df012a15 	stw	fp,1192(sp)
 80111b0:	9839883a 	mov	fp,r19
 80111b4:	dcc12b03 	ldbu	r19,1196(sp)
 80111b8:	e7000414 	ori	fp,fp,16
 80111bc:	e080080c 	andi	r2,fp,32
 80111c0:	dcc12785 	stb	r19,1182(sp)
 80111c4:	d8c12d17 	ldw	r3,1204(sp)
 80111c8:	1001ce26 	beq	r2,zero,8011904 <___vfprintf_internal_r+0xc90>
 80111cc:	d9012d17 	ldw	r4,1204(sp)
 80111d0:	18800117 	ldw	r2,4(r3)
 80111d4:	1c800017 	ldw	r18,0(r3)
 80111d8:	21000204 	addi	r4,r4,8
 80111dc:	d9012d15 	stw	r4,1204(sp)
 80111e0:	102b883a 	mov	r21,r2
 80111e4:	10044916 	blt	r2,zero,801230c <___vfprintf_internal_r+0x1698>
 80111e8:	dcc12783 	ldbu	r19,1182(sp)
 80111ec:	da413215 	stw	r9,1224(sp)
 80111f0:	00800044 	movi	r2,1
 80111f4:	9546b03a 	or	r3,r18,r21
 80111f8:	48000216 	blt	r9,zero,8011204 <___vfprintf_internal_r+0x590>
 80111fc:	013fdfc4 	movi	r4,-129
 8011200:	e138703a 	and	fp,fp,r4
 8011204:	1802251e 	bne	r3,zero,8011a9c <___vfprintf_internal_r+0xe28>
 8011208:	48031726 	beq	r9,zero,8011e68 <___vfprintf_internal_r+0x11f4>
 801120c:	10803fcc 	andi	r2,r2,255
 8011210:	00c00044 	movi	r3,1
 8011214:	10c24526 	beq	r2,r3,8011b2c <___vfprintf_internal_r+0xeb8>
 8011218:	00c00084 	movi	r3,2
 801121c:	10c33426 	beq	r2,r3,8011ef0 <___vfprintf_internal_r+0x127c>
 8011220:	d8c10e04 	addi	r3,sp,1080
 8011224:	9008d0fa 	srli	r4,r18,3
 8011228:	a80a977a 	slli	r5,r21,29
 801122c:	a82ad0fa 	srli	r21,r21,3
 8011230:	948001cc 	andi	r18,r18,7
 8011234:	90800c04 	addi	r2,r18,48
 8011238:	18ffffc4 	addi	r3,r3,-1
 801123c:	2924b03a 	or	r18,r5,r4
 8011240:	18800005 	stb	r2,0(r3)
 8011244:	9548b03a 	or	r4,r18,r21
 8011248:	203ff61e 	bne	r4,zero,8011224 <__alt_data_end+0xfc011224>
 801124c:	e100004c 	andi	r4,fp,1
 8011250:	d8c13115 	stw	r3,1220(sp)
 8011254:	20039a1e 	bne	r4,zero,80120c0 <___vfprintf_internal_r+0x144c>
 8011258:	d8812817 	ldw	r2,1184(sp)
 801125c:	10e3c83a 	sub	r17,r2,r3
 8011260:	8805883a 	mov	r2,r17
 8011264:	8a40010e 	bge	r17,r9,801126c <___vfprintf_internal_r+0x5f8>
 8011268:	4805883a 	mov	r2,r9
 801126c:	d8812b15 	stw	r2,1196(sp)
 8011270:	d8013415 	stw	zero,1232(sp)
 8011274:	98803fcc 	andi	r2,r19,255
 8011278:	1080201c 	xori	r2,r2,128
 801127c:	10bfe004 	addi	r2,r2,-128
 8011280:	10000326 	beq	r2,zero,8011290 <___vfprintf_internal_r+0x61c>
 8011284:	d8c12b17 	ldw	r3,1196(sp)
 8011288:	18c00044 	addi	r3,r3,1
 801128c:	d8c12b15 	stw	r3,1196(sp)
 8011290:	e0c0008c 	andi	r3,fp,2
 8011294:	d8c12c15 	stw	r3,1200(sp)
 8011298:	18000326 	beq	r3,zero,80112a8 <___vfprintf_internal_r+0x634>
 801129c:	d8c12b17 	ldw	r3,1196(sp)
 80112a0:	18c00084 	addi	r3,r3,2
 80112a4:	d8c12b15 	stw	r3,1196(sp)
 80112a8:	e0c0210c 	andi	r3,fp,132
 80112ac:	d8c13015 	stw	r3,1216(sp)
 80112b0:	1801f81e 	bne	r3,zero,8011a94 <___vfprintf_internal_r+0xe20>
 80112b4:	d9012e17 	ldw	r4,1208(sp)
 80112b8:	d8c12b17 	ldw	r3,1196(sp)
 80112bc:	20ebc83a 	sub	r21,r4,r3
 80112c0:	0541f40e 	bge	zero,r21,8011a94 <___vfprintf_internal_r+0xe20>
 80112c4:	02400404 	movi	r9,16
 80112c8:	d8c12017 	ldw	r3,1152(sp)
 80112cc:	d8811f17 	ldw	r2,1148(sp)
 80112d0:	4d45750e 	bge	r9,r21,80128a8 <___vfprintf_internal_r+0x1c34>
 80112d4:	014200b4 	movhi	r5,2050
 80112d8:	294124c4 	addi	r5,r5,1171
 80112dc:	d9413615 	stw	r5,1240(sp)
 80112e0:	4827883a 	mov	r19,r9
 80112e4:	048001c4 	movi	r18,7
 80112e8:	00000306 	br	80112f8 <___vfprintf_internal_r+0x684>
 80112ec:	ad7ffc04 	addi	r21,r21,-16
 80112f0:	42000204 	addi	r8,r8,8
 80112f4:	9d40130e 	bge	r19,r21,8011344 <___vfprintf_internal_r+0x6d0>
 80112f8:	010200b4 	movhi	r4,2050
 80112fc:	18c00404 	addi	r3,r3,16
 8011300:	10800044 	addi	r2,r2,1
 8011304:	210124c4 	addi	r4,r4,1171
 8011308:	41000015 	stw	r4,0(r8)
 801130c:	44c00115 	stw	r19,4(r8)
 8011310:	d8c12015 	stw	r3,1152(sp)
 8011314:	d8811f15 	stw	r2,1148(sp)
 8011318:	90bff40e 	bge	r18,r2,80112ec <__alt_data_end+0xfc0112ec>
 801131c:	b809883a 	mov	r4,r23
 8011320:	b00b883a 	mov	r5,r22
 8011324:	d9811e04 	addi	r6,sp,1144
 8011328:	801a1080 	call	801a108 <__sprint_r>
 801132c:	103f691e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011330:	ad7ffc04 	addi	r21,r21,-16
 8011334:	d8c12017 	ldw	r3,1152(sp)
 8011338:	d8811f17 	ldw	r2,1148(sp)
 801133c:	da000404 	addi	r8,sp,16
 8011340:	9d7fed16 	blt	r19,r21,80112f8 <__alt_data_end+0xfc0112f8>
 8011344:	d9413617 	ldw	r5,1240(sp)
 8011348:	a8c7883a 	add	r3,r21,r3
 801134c:	10800044 	addi	r2,r2,1
 8011350:	41400015 	stw	r5,0(r8)
 8011354:	45400115 	stw	r21,4(r8)
 8011358:	d8c12015 	stw	r3,1152(sp)
 801135c:	d8811f15 	stw	r2,1148(sp)
 8011360:	010001c4 	movi	r4,7
 8011364:	20832b16 	blt	r4,r2,8012014 <___vfprintf_internal_r+0x13a0>
 8011368:	d8812787 	ldb	r2,1182(sp)
 801136c:	42000204 	addi	r8,r8,8
 8011370:	10000c26 	beq	r2,zero,80113a4 <___vfprintf_internal_r+0x730>
 8011374:	d8811f17 	ldw	r2,1148(sp)
 8011378:	d9012784 	addi	r4,sp,1182
 801137c:	18c00044 	addi	r3,r3,1
 8011380:	10800044 	addi	r2,r2,1
 8011384:	41000015 	stw	r4,0(r8)
 8011388:	01000044 	movi	r4,1
 801138c:	41000115 	stw	r4,4(r8)
 8011390:	d8c12015 	stw	r3,1152(sp)
 8011394:	d8811f15 	stw	r2,1148(sp)
 8011398:	010001c4 	movi	r4,7
 801139c:	2082c416 	blt	r4,r2,8011eb0 <___vfprintf_internal_r+0x123c>
 80113a0:	42000204 	addi	r8,r8,8
 80113a4:	d8812c17 	ldw	r2,1200(sp)
 80113a8:	10000c26 	beq	r2,zero,80113dc <___vfprintf_internal_r+0x768>
 80113ac:	d8811f17 	ldw	r2,1148(sp)
 80113b0:	d9012704 	addi	r4,sp,1180
 80113b4:	18c00084 	addi	r3,r3,2
 80113b8:	10800044 	addi	r2,r2,1
 80113bc:	41000015 	stw	r4,0(r8)
 80113c0:	01000084 	movi	r4,2
 80113c4:	41000115 	stw	r4,4(r8)
 80113c8:	d8c12015 	stw	r3,1152(sp)
 80113cc:	d8811f15 	stw	r2,1148(sp)
 80113d0:	010001c4 	movi	r4,7
 80113d4:	2082be16 	blt	r4,r2,8011ed0 <___vfprintf_internal_r+0x125c>
 80113d8:	42000204 	addi	r8,r8,8
 80113dc:	d9013017 	ldw	r4,1216(sp)
 80113e0:	00802004 	movi	r2,128
 80113e4:	20822026 	beq	r4,r2,8011c68 <___vfprintf_internal_r+0xff4>
 80113e8:	d9413217 	ldw	r5,1224(sp)
 80113ec:	2c67c83a 	sub	r19,r5,r17
 80113f0:	04c0260e 	bge	zero,r19,801148c <___vfprintf_internal_r+0x818>
 80113f4:	05400404 	movi	r21,16
 80113f8:	d8811f17 	ldw	r2,1148(sp)
 80113fc:	acc4720e 	bge	r21,r19,80125c8 <___vfprintf_internal_r+0x1954>
 8011400:	014200b4 	movhi	r5,2050
 8011404:	294120c4 	addi	r5,r5,1155
 8011408:	d9412c15 	stw	r5,1200(sp)
 801140c:	048001c4 	movi	r18,7
 8011410:	00000306 	br	8011420 <___vfprintf_internal_r+0x7ac>
 8011414:	9cfffc04 	addi	r19,r19,-16
 8011418:	42000204 	addi	r8,r8,8
 801141c:	acc0110e 	bge	r21,r19,8011464 <___vfprintf_internal_r+0x7f0>
 8011420:	18c00404 	addi	r3,r3,16
 8011424:	10800044 	addi	r2,r2,1
 8011428:	45000015 	stw	r20,0(r8)
 801142c:	45400115 	stw	r21,4(r8)
 8011430:	d8c12015 	stw	r3,1152(sp)
 8011434:	d8811f15 	stw	r2,1148(sp)
 8011438:	90bff60e 	bge	r18,r2,8011414 <__alt_data_end+0xfc011414>
 801143c:	b809883a 	mov	r4,r23
 8011440:	b00b883a 	mov	r5,r22
 8011444:	d9811e04 	addi	r6,sp,1144
 8011448:	801a1080 	call	801a108 <__sprint_r>
 801144c:	103f211e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011450:	9cfffc04 	addi	r19,r19,-16
 8011454:	d8c12017 	ldw	r3,1152(sp)
 8011458:	d8811f17 	ldw	r2,1148(sp)
 801145c:	da000404 	addi	r8,sp,16
 8011460:	acffef16 	blt	r21,r19,8011420 <__alt_data_end+0xfc011420>
 8011464:	d9012c17 	ldw	r4,1200(sp)
 8011468:	1cc7883a 	add	r3,r3,r19
 801146c:	10800044 	addi	r2,r2,1
 8011470:	41000015 	stw	r4,0(r8)
 8011474:	44c00115 	stw	r19,4(r8)
 8011478:	d8c12015 	stw	r3,1152(sp)
 801147c:	d8811f15 	stw	r2,1148(sp)
 8011480:	010001c4 	movi	r4,7
 8011484:	20828216 	blt	r4,r2,8011e90 <___vfprintf_internal_r+0x121c>
 8011488:	42000204 	addi	r8,r8,8
 801148c:	e080400c 	andi	r2,fp,256
 8011490:	1001ac1e 	bne	r2,zero,8011b44 <___vfprintf_internal_r+0xed0>
 8011494:	d8811f17 	ldw	r2,1148(sp)
 8011498:	d9413117 	ldw	r5,1220(sp)
 801149c:	1c47883a 	add	r3,r3,r17
 80114a0:	10800044 	addi	r2,r2,1
 80114a4:	41400015 	stw	r5,0(r8)
 80114a8:	44400115 	stw	r17,4(r8)
 80114ac:	d8c12015 	stw	r3,1152(sp)
 80114b0:	d8811f15 	stw	r2,1148(sp)
 80114b4:	010001c4 	movi	r4,7
 80114b8:	20825d16 	blt	r4,r2,8011e30 <___vfprintf_internal_r+0x11bc>
 80114bc:	42000204 	addi	r8,r8,8
 80114c0:	e080010c 	andi	r2,fp,4
 80114c4:	10003126 	beq	r2,zero,801158c <___vfprintf_internal_r+0x918>
 80114c8:	d8812e17 	ldw	r2,1208(sp)
 80114cc:	d9012b17 	ldw	r4,1196(sp)
 80114d0:	1121c83a 	sub	r16,r2,r4
 80114d4:	04002d0e 	bge	zero,r16,801158c <___vfprintf_internal_r+0x918>
 80114d8:	04400404 	movi	r17,16
 80114dc:	d8811f17 	ldw	r2,1148(sp)
 80114e0:	8c05340e 	bge	r17,r16,80129b4 <___vfprintf_internal_r+0x1d40>
 80114e4:	010200b4 	movhi	r4,2050
 80114e8:	210124c4 	addi	r4,r4,1171
 80114ec:	d9013615 	stw	r4,1240(sp)
 80114f0:	048001c4 	movi	r18,7
 80114f4:	00000306 	br	8011504 <___vfprintf_internal_r+0x890>
 80114f8:	843ffc04 	addi	r16,r16,-16
 80114fc:	42000204 	addi	r8,r8,8
 8011500:	8c00130e 	bge	r17,r16,8011550 <___vfprintf_internal_r+0x8dc>
 8011504:	014200b4 	movhi	r5,2050
 8011508:	18c00404 	addi	r3,r3,16
 801150c:	10800044 	addi	r2,r2,1
 8011510:	294124c4 	addi	r5,r5,1171
 8011514:	41400015 	stw	r5,0(r8)
 8011518:	44400115 	stw	r17,4(r8)
 801151c:	d8c12015 	stw	r3,1152(sp)
 8011520:	d8811f15 	stw	r2,1148(sp)
 8011524:	90bff40e 	bge	r18,r2,80114f8 <__alt_data_end+0xfc0114f8>
 8011528:	b809883a 	mov	r4,r23
 801152c:	b00b883a 	mov	r5,r22
 8011530:	d9811e04 	addi	r6,sp,1144
 8011534:	801a1080 	call	801a108 <__sprint_r>
 8011538:	103ee61e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 801153c:	843ffc04 	addi	r16,r16,-16
 8011540:	d8c12017 	ldw	r3,1152(sp)
 8011544:	d8811f17 	ldw	r2,1148(sp)
 8011548:	da000404 	addi	r8,sp,16
 801154c:	8c3fed16 	blt	r17,r16,8011504 <__alt_data_end+0xfc011504>
 8011550:	d9013617 	ldw	r4,1240(sp)
 8011554:	1c07883a 	add	r3,r3,r16
 8011558:	10800044 	addi	r2,r2,1
 801155c:	41000015 	stw	r4,0(r8)
 8011560:	44000115 	stw	r16,4(r8)
 8011564:	d8c12015 	stw	r3,1152(sp)
 8011568:	d8811f15 	stw	r2,1148(sp)
 801156c:	010001c4 	movi	r4,7
 8011570:	2080060e 	bge	r4,r2,801158c <___vfprintf_internal_r+0x918>
 8011574:	b809883a 	mov	r4,r23
 8011578:	b00b883a 	mov	r5,r22
 801157c:	d9811e04 	addi	r6,sp,1144
 8011580:	801a1080 	call	801a108 <__sprint_r>
 8011584:	103ed31e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011588:	d8c12017 	ldw	r3,1152(sp)
 801158c:	df012b17 	ldw	fp,1196(sp)
 8011590:	d9412e17 	ldw	r5,1208(sp)
 8011594:	e140010e 	bge	fp,r5,801159c <___vfprintf_internal_r+0x928>
 8011598:	2839883a 	mov	fp,r5
 801159c:	d8812f17 	ldw	r2,1212(sp)
 80115a0:	1705883a 	add	r2,r2,fp
 80115a4:	d8812f15 	stw	r2,1212(sp)
 80115a8:	1802291e 	bne	r3,zero,8011e50 <___vfprintf_internal_r+0x11dc>
 80115ac:	d8c12a17 	ldw	r3,1192(sp)
 80115b0:	d8011f15 	stw	zero,1148(sp)
 80115b4:	da000404 	addi	r8,sp,16
 80115b8:	18800007 	ldb	r2,0(r3)
 80115bc:	103ded1e 	bne	r2,zero,8010d74 <__alt_data_end+0xfc010d74>
 80115c0:	dc012a17 	ldw	r16,1192(sp)
 80115c4:	003e0506 	br	8010ddc <__alt_data_end+0xfc010ddc>
 80115c8:	d9012d17 	ldw	r4,1204(sp)
 80115cc:	d9412d17 	ldw	r5,1204(sp)
 80115d0:	da012a17 	ldw	r8,1192(sp)
 80115d4:	21000017 	ldw	r4,0(r4)
 80115d8:	29400117 	ldw	r5,4(r5)
 80115dc:	df012a15 	stw	fp,1192(sp)
 80115e0:	9839883a 	mov	fp,r19
 80115e4:	dcc12b03 	ldbu	r19,1196(sp)
 80115e8:	d9013715 	stw	r4,1244(sp)
 80115ec:	d9413915 	stw	r5,1252(sp)
 80115f0:	da013f15 	stw	r8,1276(sp)
 80115f4:	da413e15 	stw	r9,1272(sp)
 80115f8:	dcc12785 	stb	r19,1182(sp)
 80115fc:	80092d80 	call	80092d8 <__fpclassifyd>
 8011600:	d8c12d17 	ldw	r3,1204(sp)
 8011604:	04400044 	movi	r17,1
 8011608:	da013f17 	ldw	r8,1276(sp)
 801160c:	1c800204 	addi	r18,r3,8
 8011610:	da413e17 	ldw	r9,1272(sp)
 8011614:	d9013717 	ldw	r4,1244(sp)
 8011618:	d9413917 	ldw	r5,1252(sp)
 801161c:	1443451e 	bne	r2,r17,8012334 <___vfprintf_internal_r+0x16c0>
 8011620:	000d883a 	mov	r6,zero
 8011624:	000f883a 	mov	r7,zero
 8011628:	800b9100 	call	800b910 <__ledf2>
 801162c:	da013f17 	ldw	r8,1276(sp)
 8011630:	1004fe16 	blt	r2,zero,8012a2c <___vfprintf_internal_r+0x1db8>
 8011634:	dcc12783 	ldbu	r19,1182(sp)
 8011638:	008011c4 	movi	r2,71
 801163c:	14045d0e 	bge	r2,r16,80127b4 <___vfprintf_internal_r+0x1b40>
 8011640:	014200b4 	movhi	r5,2050
 8011644:	29410a04 	addi	r5,r5,1064
 8011648:	d9413115 	stw	r5,1220(sp)
 801164c:	00c000c4 	movi	r3,3
 8011650:	00bfdfc4 	movi	r2,-129
 8011654:	d8c12b15 	stw	r3,1196(sp)
 8011658:	e0b8703a 	and	fp,fp,r2
 801165c:	dc812d15 	stw	r18,1204(sp)
 8011660:	1823883a 	mov	r17,r3
 8011664:	d8013215 	stw	zero,1224(sp)
 8011668:	d8013415 	stw	zero,1232(sp)
 801166c:	003f0106 	br	8011274 <__alt_data_end+0xfc011274>
 8011670:	9cc00214 	ori	r19,r19,8
 8011674:	e005883a 	mov	r2,fp
 8011678:	e4000007 	ldb	r16,0(fp)
 801167c:	003de506 	br	8010e14 <__alt_data_end+0xfc010e14>
 8011680:	da012a17 	ldw	r8,1192(sp)
 8011684:	df012a15 	stw	fp,1192(sp)
 8011688:	9f000414 	ori	fp,r19,16
 801168c:	e0c0080c 	andi	r3,fp,32
 8011690:	d8812d17 	ldw	r2,1204(sp)
 8011694:	18007626 	beq	r3,zero,8011870 <___vfprintf_internal_r+0xbfc>
 8011698:	d9412d17 	ldw	r5,1204(sp)
 801169c:	14800017 	ldw	r18,0(r2)
 80116a0:	15400117 	ldw	r21,4(r2)
 80116a4:	29400204 	addi	r5,r5,8
 80116a8:	d9412d15 	stw	r5,1204(sp)
 80116ac:	0005883a 	mov	r2,zero
 80116b0:	9546b03a 	or	r3,r18,r21
 80116b4:	d8012785 	stb	zero,1182(sp)
 80116b8:	da413215 	stw	r9,1224(sp)
 80116bc:	0027883a 	mov	r19,zero
 80116c0:	003ecd06 	br	80111f8 <__alt_data_end+0xfc0111f8>
 80116c4:	da012a17 	ldw	r8,1192(sp)
 80116c8:	df012a15 	stw	fp,1192(sp)
 80116cc:	9f000414 	ori	fp,r19,16
 80116d0:	e0c0080c 	andi	r3,fp,32
 80116d4:	d8812d17 	ldw	r2,1204(sp)
 80116d8:	18002c26 	beq	r3,zero,801178c <___vfprintf_internal_r+0xb18>
 80116dc:	d9012d17 	ldw	r4,1204(sp)
 80116e0:	14800017 	ldw	r18,0(r2)
 80116e4:	15400117 	ldw	r21,4(r2)
 80116e8:	21000204 	addi	r4,r4,8
 80116ec:	d9012d15 	stw	r4,1204(sp)
 80116f0:	00800044 	movi	r2,1
 80116f4:	9546b03a 	or	r3,r18,r21
 80116f8:	003fee06 	br	80116b4 <__alt_data_end+0xfc0116b4>
 80116fc:	da012a17 	ldw	r8,1192(sp)
 8011700:	df012a15 	stw	fp,1192(sp)
 8011704:	9839883a 	mov	fp,r19
 8011708:	dcc12b03 	ldbu	r19,1196(sp)
 801170c:	014200b4 	movhi	r5,2050
 8011710:	29410d04 	addi	r5,r5,1076
 8011714:	dcc12785 	stb	r19,1182(sp)
 8011718:	d9413b15 	stw	r5,1260(sp)
 801171c:	e0c0080c 	andi	r3,fp,32
 8011720:	d8812d17 	ldw	r2,1204(sp)
 8011724:	18002e26 	beq	r3,zero,80117e0 <___vfprintf_internal_r+0xb6c>
 8011728:	d9412d17 	ldw	r5,1204(sp)
 801172c:	14800017 	ldw	r18,0(r2)
 8011730:	15400117 	ldw	r21,4(r2)
 8011734:	29400204 	addi	r5,r5,8
 8011738:	d9412d15 	stw	r5,1204(sp)
 801173c:	e080004c 	andi	r2,fp,1
 8011740:	10025c26 	beq	r2,zero,80120b4 <___vfprintf_internal_r+0x1440>
 8011744:	9546b03a 	or	r3,r18,r21
 8011748:	18038f26 	beq	r3,zero,8012588 <___vfprintf_internal_r+0x1914>
 801174c:	00800c04 	movi	r2,48
 8011750:	d8812705 	stb	r2,1180(sp)
 8011754:	dc012745 	stb	r16,1181(sp)
 8011758:	e7000094 	ori	fp,fp,2
 801175c:	00800084 	movi	r2,2
 8011760:	003fd406 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8011764:	9cc00814 	ori	r19,r19,32
 8011768:	e005883a 	mov	r2,fp
 801176c:	e4000007 	ldb	r16,0(fp)
 8011770:	003da806 	br	8010e14 <__alt_data_end+0xfc010e14>
 8011774:	da012a17 	ldw	r8,1192(sp)
 8011778:	df012a15 	stw	fp,1192(sp)
 801177c:	9839883a 	mov	fp,r19
 8011780:	e0c0080c 	andi	r3,fp,32
 8011784:	d8812d17 	ldw	r2,1204(sp)
 8011788:	183fd41e 	bne	r3,zero,80116dc <__alt_data_end+0xfc0116dc>
 801178c:	e0c0040c 	andi	r3,fp,16
 8011790:	18035f26 	beq	r3,zero,8012510 <___vfprintf_internal_r+0x189c>
 8011794:	d9412d17 	ldw	r5,1204(sp)
 8011798:	14800017 	ldw	r18,0(r2)
 801179c:	002b883a 	mov	r21,zero
 80117a0:	29400104 	addi	r5,r5,4
 80117a4:	d9412d15 	stw	r5,1204(sp)
 80117a8:	00800044 	movi	r2,1
 80117ac:	9007883a 	mov	r3,r18
 80117b0:	003fc006 	br	80116b4 <__alt_data_end+0xfc0116b4>
 80117b4:	da012a17 	ldw	r8,1192(sp)
 80117b8:	df012a15 	stw	fp,1192(sp)
 80117bc:	9839883a 	mov	fp,r19
 80117c0:	dcc12b03 	ldbu	r19,1196(sp)
 80117c4:	010200b4 	movhi	r4,2050
 80117c8:	21011204 	addi	r4,r4,1096
 80117cc:	d9013b15 	stw	r4,1260(sp)
 80117d0:	dcc12785 	stb	r19,1182(sp)
 80117d4:	e0c0080c 	andi	r3,fp,32
 80117d8:	d8812d17 	ldw	r2,1204(sp)
 80117dc:	183fd21e 	bne	r3,zero,8011728 <__alt_data_end+0xfc011728>
 80117e0:	e0c0040c 	andi	r3,fp,16
 80117e4:	18035426 	beq	r3,zero,8012538 <___vfprintf_internal_r+0x18c4>
 80117e8:	d8c12d17 	ldw	r3,1204(sp)
 80117ec:	14800017 	ldw	r18,0(r2)
 80117f0:	002b883a 	mov	r21,zero
 80117f4:	18c00104 	addi	r3,r3,4
 80117f8:	d8c12d15 	stw	r3,1204(sp)
 80117fc:	003fcf06 	br	801173c <__alt_data_end+0xfc01173c>
 8011800:	e4000007 	ldb	r16,0(fp)
 8011804:	00801b04 	movi	r2,108
 8011808:	8083f726 	beq	r16,r2,80127e8 <___vfprintf_internal_r+0x1b74>
 801180c:	9cc00414 	ori	r19,r19,16
 8011810:	e005883a 	mov	r2,fp
 8011814:	003d7f06 	br	8010e14 <__alt_data_end+0xfc010e14>
 8011818:	da012a17 	ldw	r8,1192(sp)
 801181c:	df012a15 	stw	fp,1192(sp)
 8011820:	9839883a 	mov	fp,r19
 8011824:	dcc12b03 	ldbu	r19,1196(sp)
 8011828:	e080080c 	andi	r2,fp,32
 801182c:	dcc12785 	stb	r19,1182(sp)
 8011830:	10032226 	beq	r2,zero,80124bc <___vfprintf_internal_r+0x1848>
 8011834:	d9412d17 	ldw	r5,1204(sp)
 8011838:	d9012f17 	ldw	r4,1212(sp)
 801183c:	28800017 	ldw	r2,0(r5)
 8011840:	2007d7fa 	srai	r3,r4,31
 8011844:	29400104 	addi	r5,r5,4
 8011848:	d9412d15 	stw	r5,1204(sp)
 801184c:	11000015 	stw	r4,0(r2)
 8011850:	10c00115 	stw	r3,4(r2)
 8011854:	003d4406 	br	8010d68 <__alt_data_end+0xfc010d68>
 8011858:	da012a17 	ldw	r8,1192(sp)
 801185c:	df012a15 	stw	fp,1192(sp)
 8011860:	9839883a 	mov	fp,r19
 8011864:	e0c0080c 	andi	r3,fp,32
 8011868:	d8812d17 	ldw	r2,1204(sp)
 801186c:	183f8a1e 	bne	r3,zero,8011698 <__alt_data_end+0xfc011698>
 8011870:	e0c0040c 	andi	r3,fp,16
 8011874:	18031c26 	beq	r3,zero,80124e8 <___vfprintf_internal_r+0x1874>
 8011878:	14800017 	ldw	r18,0(r2)
 801187c:	d8812d17 	ldw	r2,1204(sp)
 8011880:	002b883a 	mov	r21,zero
 8011884:	9007883a 	mov	r3,r18
 8011888:	10800104 	addi	r2,r2,4
 801188c:	d8812d15 	stw	r2,1204(sp)
 8011890:	0005883a 	mov	r2,zero
 8011894:	003f8706 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8011898:	d9412d17 	ldw	r5,1204(sp)
 801189c:	00800c04 	movi	r2,48
 80118a0:	d8812705 	stb	r2,1180(sp)
 80118a4:	2c800017 	ldw	r18,0(r5)
 80118a8:	00801e04 	movi	r2,120
 80118ac:	d8812745 	stb	r2,1181(sp)
 80118b0:	008200b4 	movhi	r2,2050
 80118b4:	10811204 	addi	r2,r2,1096
 80118b8:	29400104 	addi	r5,r5,4
 80118bc:	da012a17 	ldw	r8,1192(sp)
 80118c0:	d8813b15 	stw	r2,1260(sp)
 80118c4:	df012a15 	stw	fp,1192(sp)
 80118c8:	002b883a 	mov	r21,zero
 80118cc:	9f000094 	ori	fp,r19,2
 80118d0:	d9412d15 	stw	r5,1204(sp)
 80118d4:	00800084 	movi	r2,2
 80118d8:	04001e04 	movi	r16,120
 80118dc:	9007883a 	mov	r3,r18
 80118e0:	003f7406 	br	80116b4 <__alt_data_end+0xfc0116b4>
 80118e4:	da012a17 	ldw	r8,1192(sp)
 80118e8:	df012a15 	stw	fp,1192(sp)
 80118ec:	9839883a 	mov	fp,r19
 80118f0:	dcc12b03 	ldbu	r19,1196(sp)
 80118f4:	e080080c 	andi	r2,fp,32
 80118f8:	d8c12d17 	ldw	r3,1204(sp)
 80118fc:	dcc12785 	stb	r19,1182(sp)
 8011900:	103e321e 	bne	r2,zero,80111cc <__alt_data_end+0xfc0111cc>
 8011904:	e080040c 	andi	r2,fp,16
 8011908:	10031326 	beq	r2,zero,8012558 <___vfprintf_internal_r+0x18e4>
 801190c:	1c800017 	ldw	r18,0(r3)
 8011910:	d9412d17 	ldw	r5,1204(sp)
 8011914:	902bd7fa 	srai	r21,r18,31
 8011918:	29400104 	addi	r5,r5,4
 801191c:	d9412d15 	stw	r5,1204(sp)
 8011920:	a805883a 	mov	r2,r21
 8011924:	003e2f06 	br	80111e4 <__alt_data_end+0xfc0111e4>
 8011928:	9cc01014 	ori	r19,r19,64
 801192c:	e005883a 	mov	r2,fp
 8011930:	e4000007 	ldb	r16,0(fp)
 8011934:	003d3706 	br	8010e14 <__alt_data_end+0xfc010e14>
 8011938:	d8c12d17 	ldw	r3,1204(sp)
 801193c:	d9012d17 	ldw	r4,1204(sp)
 8011940:	da012a17 	ldw	r8,1192(sp)
 8011944:	18800017 	ldw	r2,0(r3)
 8011948:	21000104 	addi	r4,r4,4
 801194c:	00c00044 	movi	r3,1
 8011950:	df012a15 	stw	fp,1192(sp)
 8011954:	d8c12b15 	stw	r3,1196(sp)
 8011958:	9839883a 	mov	fp,r19
 801195c:	d8012785 	stb	zero,1182(sp)
 8011960:	d8810405 	stb	r2,1040(sp)
 8011964:	d9012d15 	stw	r4,1204(sp)
 8011968:	1823883a 	mov	r17,r3
 801196c:	d8c10404 	addi	r3,sp,1040
 8011970:	d8013215 	stw	zero,1224(sp)
 8011974:	d8013415 	stw	zero,1232(sp)
 8011978:	d8c13115 	stw	r3,1220(sp)
 801197c:	0005883a 	mov	r2,zero
 8011980:	003e4306 	br	8011290 <__alt_data_end+0xfc011290>
 8011984:	d8812b07 	ldb	r2,1196(sp)
 8011988:	1002fc1e 	bne	r2,zero,801257c <___vfprintf_internal_r+0x1908>
 801198c:	00c00804 	movi	r3,32
 8011990:	d8c12b05 	stb	r3,1196(sp)
 8011994:	e005883a 	mov	r2,fp
 8011998:	e4000007 	ldb	r16,0(fp)
 801199c:	003d1d06 	br	8010e14 <__alt_data_end+0xfc010e14>
 80119a0:	9cc00054 	ori	r19,r19,1
 80119a4:	e005883a 	mov	r2,fp
 80119a8:	e4000007 	ldb	r16,0(fp)
 80119ac:	003d1906 	br	8010e14 <__alt_data_end+0xfc010e14>
 80119b0:	d9012d17 	ldw	r4,1204(sp)
 80119b4:	d9412d17 	ldw	r5,1204(sp)
 80119b8:	21000017 	ldw	r4,0(r4)
 80119bc:	28c00104 	addi	r3,r5,4
 80119c0:	d9012e15 	stw	r4,1208(sp)
 80119c4:	20038c16 	blt	r4,zero,80127f8 <___vfprintf_internal_r+0x1b84>
 80119c8:	d8c12d15 	stw	r3,1204(sp)
 80119cc:	e005883a 	mov	r2,fp
 80119d0:	e4000007 	ldb	r16,0(fp)
 80119d4:	003d0f06 	br	8010e14 <__alt_data_end+0xfc010e14>
 80119d8:	00c00ac4 	movi	r3,43
 80119dc:	d8c12b05 	stb	r3,1196(sp)
 80119e0:	e005883a 	mov	r2,fp
 80119e4:	e4000007 	ldb	r16,0(fp)
 80119e8:	003d0a06 	br	8010e14 <__alt_data_end+0xfc010e14>
 80119ec:	d8c12d17 	ldw	r3,1204(sp)
 80119f0:	d9012d17 	ldw	r4,1204(sp)
 80119f4:	da012a17 	ldw	r8,1192(sp)
 80119f8:	18c00017 	ldw	r3,0(r3)
 80119fc:	df012a15 	stw	fp,1192(sp)
 8011a00:	d8012785 	stb	zero,1182(sp)
 8011a04:	d8c13115 	stw	r3,1220(sp)
 8011a08:	9839883a 	mov	fp,r19
 8011a0c:	24800104 	addi	r18,r4,4
 8011a10:	1803f726 	beq	r3,zero,80129f0 <___vfprintf_internal_r+0x1d7c>
 8011a14:	d9013117 	ldw	r4,1220(sp)
 8011a18:	48038916 	blt	r9,zero,8012840 <___vfprintf_internal_r+0x1bcc>
 8011a1c:	480d883a 	mov	r6,r9
 8011a20:	000b883a 	mov	r5,zero
 8011a24:	da013f15 	stw	r8,1276(sp)
 8011a28:	da413e15 	stw	r9,1272(sp)
 8011a2c:	8016ef80 	call	8016ef8 <memchr>
 8011a30:	da013f17 	ldw	r8,1276(sp)
 8011a34:	da413e17 	ldw	r9,1272(sp)
 8011a38:	10045926 	beq	r2,zero,8012ba0 <___vfprintf_internal_r+0x1f2c>
 8011a3c:	d8c13117 	ldw	r3,1220(sp)
 8011a40:	10e3c83a 	sub	r17,r2,r3
 8011a44:	4c433516 	blt	r9,r17,801271c <___vfprintf_internal_r+0x1aa8>
 8011a48:	8805883a 	mov	r2,r17
 8011a4c:	88038116 	blt	r17,zero,8012854 <___vfprintf_internal_r+0x1be0>
 8011a50:	dcc12783 	ldbu	r19,1182(sp)
 8011a54:	d8812b15 	stw	r2,1196(sp)
 8011a58:	dc812d15 	stw	r18,1204(sp)
 8011a5c:	d8013215 	stw	zero,1224(sp)
 8011a60:	d8013415 	stw	zero,1232(sp)
 8011a64:	003e0306 	br	8011274 <__alt_data_end+0xfc011274>
 8011a68:	da012a17 	ldw	r8,1192(sp)
 8011a6c:	df012a15 	stw	fp,1192(sp)
 8011a70:	9839883a 	mov	fp,r19
 8011a74:	dcc12b03 	ldbu	r19,1196(sp)
 8011a78:	dcc12785 	stb	r19,1182(sp)
 8011a7c:	803d8f26 	beq	r16,zero,80110bc <__alt_data_end+0xfc0110bc>
 8011a80:	00c00044 	movi	r3,1
 8011a84:	d8c12b15 	stw	r3,1196(sp)
 8011a88:	dc010405 	stb	r16,1040(sp)
 8011a8c:	d8012785 	stb	zero,1182(sp)
 8011a90:	003fb506 	br	8011968 <__alt_data_end+0xfc011968>
 8011a94:	d8c12017 	ldw	r3,1152(sp)
 8011a98:	003e3506 	br	8011370 <__alt_data_end+0xfc011370>
 8011a9c:	10803fcc 	andi	r2,r2,255
 8011aa0:	00c00044 	movi	r3,1
 8011aa4:	10fddc1e 	bne	r2,r3,8011218 <__alt_data_end+0xfc011218>
 8011aa8:	a800021e 	bne	r21,zero,8011ab4 <___vfprintf_internal_r+0xe40>
 8011aac:	00800244 	movi	r2,9
 8011ab0:	14801e2e 	bgeu	r2,r18,8011b2c <___vfprintf_internal_r+0xeb8>
 8011ab4:	dc012b15 	stw	r16,1196(sp)
 8011ab8:	dc410e04 	addi	r17,sp,1080
 8011abc:	9021883a 	mov	r16,r18
 8011ac0:	da012c15 	stw	r8,1200(sp)
 8011ac4:	a825883a 	mov	r18,r21
 8011ac8:	482b883a 	mov	r21,r9
 8011acc:	8009883a 	mov	r4,r16
 8011ad0:	900b883a 	mov	r5,r18
 8011ad4:	01800284 	movi	r6,10
 8011ad8:	000f883a 	mov	r7,zero
 8011adc:	801c4f40 	call	801c4f4 <__umoddi3>
 8011ae0:	10800c04 	addi	r2,r2,48
 8011ae4:	8c7fffc4 	addi	r17,r17,-1
 8011ae8:	8009883a 	mov	r4,r16
 8011aec:	900b883a 	mov	r5,r18
 8011af0:	01800284 	movi	r6,10
 8011af4:	000f883a 	mov	r7,zero
 8011af8:	88800005 	stb	r2,0(r17)
 8011afc:	801beb40 	call	801beb4 <__udivdi3>
 8011b00:	1021883a 	mov	r16,r2
 8011b04:	10c4b03a 	or	r2,r2,r3
 8011b08:	1825883a 	mov	r18,r3
 8011b0c:	103fef1e 	bne	r2,zero,8011acc <__alt_data_end+0xfc011acc>
 8011b10:	d9012817 	ldw	r4,1184(sp)
 8011b14:	dc413115 	stw	r17,1220(sp)
 8011b18:	dc012b17 	ldw	r16,1196(sp)
 8011b1c:	da012c17 	ldw	r8,1200(sp)
 8011b20:	a813883a 	mov	r9,r21
 8011b24:	2463c83a 	sub	r17,r4,r17
 8011b28:	003dcd06 	br	8011260 <__alt_data_end+0xfc011260>
 8011b2c:	94800c04 	addi	r18,r18,48
 8011b30:	d8c10dc4 	addi	r3,sp,1079
 8011b34:	dc810dc5 	stb	r18,1079(sp)
 8011b38:	dc413c17 	ldw	r17,1264(sp)
 8011b3c:	d8c13115 	stw	r3,1220(sp)
 8011b40:	003dc706 	br	8011260 <__alt_data_end+0xfc011260>
 8011b44:	00801944 	movi	r2,101
 8011b48:	1400720e 	bge	r2,r16,8011d14 <___vfprintf_internal_r+0x10a0>
 8011b4c:	d9013717 	ldw	r4,1244(sp)
 8011b50:	d9413917 	ldw	r5,1252(sp)
 8011b54:	000d883a 	mov	r6,zero
 8011b58:	000f883a 	mov	r7,zero
 8011b5c:	d8c13d15 	stw	r3,1268(sp)
 8011b60:	da013f15 	stw	r8,1276(sp)
 8011b64:	800b7ac0 	call	800b7ac <__eqdf2>
 8011b68:	d8c13d17 	ldw	r3,1268(sp)
 8011b6c:	da013f17 	ldw	r8,1276(sp)
 8011b70:	1000f41e 	bne	r2,zero,8011f44 <___vfprintf_internal_r+0x12d0>
 8011b74:	d8811f17 	ldw	r2,1148(sp)
 8011b78:	010200b4 	movhi	r4,2050
 8011b7c:	21002f04 	addi	r4,r4,188
 8011b80:	18c00044 	addi	r3,r3,1
 8011b84:	10800044 	addi	r2,r2,1
 8011b88:	41000015 	stw	r4,0(r8)
 8011b8c:	01000044 	movi	r4,1
 8011b90:	41000115 	stw	r4,4(r8)
 8011b94:	d8c12015 	stw	r3,1152(sp)
 8011b98:	d8811f15 	stw	r2,1148(sp)
 8011b9c:	010001c4 	movi	r4,7
 8011ba0:	20828d16 	blt	r4,r2,80125d8 <___vfprintf_internal_r+0x1964>
 8011ba4:	42000204 	addi	r8,r8,8
 8011ba8:	d8812617 	ldw	r2,1176(sp)
 8011bac:	d9413317 	ldw	r5,1228(sp)
 8011bb0:	11400216 	blt	r2,r5,8011bbc <___vfprintf_internal_r+0xf48>
 8011bb4:	e080004c 	andi	r2,fp,1
 8011bb8:	103e4126 	beq	r2,zero,80114c0 <__alt_data_end+0xfc0114c0>
 8011bbc:	d8813817 	ldw	r2,1248(sp)
 8011bc0:	d9013517 	ldw	r4,1236(sp)
 8011bc4:	d9413817 	ldw	r5,1248(sp)
 8011bc8:	1887883a 	add	r3,r3,r2
 8011bcc:	d8811f17 	ldw	r2,1148(sp)
 8011bd0:	41000015 	stw	r4,0(r8)
 8011bd4:	41400115 	stw	r5,4(r8)
 8011bd8:	10800044 	addi	r2,r2,1
 8011bdc:	d8c12015 	stw	r3,1152(sp)
 8011be0:	d8811f15 	stw	r2,1148(sp)
 8011be4:	010001c4 	movi	r4,7
 8011be8:	20830916 	blt	r4,r2,8012810 <___vfprintf_internal_r+0x1b9c>
 8011bec:	42000204 	addi	r8,r8,8
 8011bf0:	d8813317 	ldw	r2,1228(sp)
 8011bf4:	143fffc4 	addi	r16,r2,-1
 8011bf8:	043e310e 	bge	zero,r16,80114c0 <__alt_data_end+0xfc0114c0>
 8011bfc:	04400404 	movi	r17,16
 8011c00:	d8811f17 	ldw	r2,1148(sp)
 8011c04:	8c007e0e 	bge	r17,r16,8011e00 <___vfprintf_internal_r+0x118c>
 8011c08:	014200b4 	movhi	r5,2050
 8011c0c:	294120c4 	addi	r5,r5,1155
 8011c10:	d9412c15 	stw	r5,1200(sp)
 8011c14:	04c001c4 	movi	r19,7
 8011c18:	00000306 	br	8011c28 <___vfprintf_internal_r+0xfb4>
 8011c1c:	42000204 	addi	r8,r8,8
 8011c20:	843ffc04 	addi	r16,r16,-16
 8011c24:	8c00790e 	bge	r17,r16,8011e0c <___vfprintf_internal_r+0x1198>
 8011c28:	18c00404 	addi	r3,r3,16
 8011c2c:	10800044 	addi	r2,r2,1
 8011c30:	45000015 	stw	r20,0(r8)
 8011c34:	44400115 	stw	r17,4(r8)
 8011c38:	d8c12015 	stw	r3,1152(sp)
 8011c3c:	d8811f15 	stw	r2,1148(sp)
 8011c40:	98bff60e 	bge	r19,r2,8011c1c <__alt_data_end+0xfc011c1c>
 8011c44:	b809883a 	mov	r4,r23
 8011c48:	b00b883a 	mov	r5,r22
 8011c4c:	d9811e04 	addi	r6,sp,1144
 8011c50:	801a1080 	call	801a108 <__sprint_r>
 8011c54:	103d1f1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011c58:	d8c12017 	ldw	r3,1152(sp)
 8011c5c:	d8811f17 	ldw	r2,1148(sp)
 8011c60:	da000404 	addi	r8,sp,16
 8011c64:	003fee06 	br	8011c20 <__alt_data_end+0xfc011c20>
 8011c68:	d9412e17 	ldw	r5,1208(sp)
 8011c6c:	d8812b17 	ldw	r2,1196(sp)
 8011c70:	28a7c83a 	sub	r19,r5,r2
 8011c74:	04fddc0e 	bge	zero,r19,80113e8 <__alt_data_end+0xfc0113e8>
 8011c78:	05400404 	movi	r21,16
 8011c7c:	d8811f17 	ldw	r2,1148(sp)
 8011c80:	acc3870e 	bge	r21,r19,8012aa0 <___vfprintf_internal_r+0x1e2c>
 8011c84:	014200b4 	movhi	r5,2050
 8011c88:	294120c4 	addi	r5,r5,1155
 8011c8c:	d9412c15 	stw	r5,1200(sp)
 8011c90:	048001c4 	movi	r18,7
 8011c94:	00000306 	br	8011ca4 <___vfprintf_internal_r+0x1030>
 8011c98:	9cfffc04 	addi	r19,r19,-16
 8011c9c:	42000204 	addi	r8,r8,8
 8011ca0:	acc0110e 	bge	r21,r19,8011ce8 <___vfprintf_internal_r+0x1074>
 8011ca4:	18c00404 	addi	r3,r3,16
 8011ca8:	10800044 	addi	r2,r2,1
 8011cac:	45000015 	stw	r20,0(r8)
 8011cb0:	45400115 	stw	r21,4(r8)
 8011cb4:	d8c12015 	stw	r3,1152(sp)
 8011cb8:	d8811f15 	stw	r2,1148(sp)
 8011cbc:	90bff60e 	bge	r18,r2,8011c98 <__alt_data_end+0xfc011c98>
 8011cc0:	b809883a 	mov	r4,r23
 8011cc4:	b00b883a 	mov	r5,r22
 8011cc8:	d9811e04 	addi	r6,sp,1144
 8011ccc:	801a1080 	call	801a108 <__sprint_r>
 8011cd0:	103d001e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011cd4:	9cfffc04 	addi	r19,r19,-16
 8011cd8:	d8c12017 	ldw	r3,1152(sp)
 8011cdc:	d8811f17 	ldw	r2,1148(sp)
 8011ce0:	da000404 	addi	r8,sp,16
 8011ce4:	acffef16 	blt	r21,r19,8011ca4 <__alt_data_end+0xfc011ca4>
 8011ce8:	d9012c17 	ldw	r4,1200(sp)
 8011cec:	1cc7883a 	add	r3,r3,r19
 8011cf0:	10800044 	addi	r2,r2,1
 8011cf4:	41000015 	stw	r4,0(r8)
 8011cf8:	44c00115 	stw	r19,4(r8)
 8011cfc:	d8c12015 	stw	r3,1152(sp)
 8011d00:	d8811f15 	stw	r2,1148(sp)
 8011d04:	010001c4 	movi	r4,7
 8011d08:	20817816 	blt	r4,r2,80122ec <___vfprintf_internal_r+0x1678>
 8011d0c:	42000204 	addi	r8,r8,8
 8011d10:	003db506 	br	80113e8 <__alt_data_end+0xfc0113e8>
 8011d14:	d9413317 	ldw	r5,1228(sp)
 8011d18:	00800044 	movi	r2,1
 8011d1c:	18c00044 	addi	r3,r3,1
 8011d20:	11413e0e 	bge	r2,r5,801221c <___vfprintf_internal_r+0x15a8>
 8011d24:	dc011f17 	ldw	r16,1148(sp)
 8011d28:	d8813117 	ldw	r2,1220(sp)
 8011d2c:	d8c12015 	stw	r3,1152(sp)
 8011d30:	84000044 	addi	r16,r16,1
 8011d34:	40800015 	stw	r2,0(r8)
 8011d38:	00800044 	movi	r2,1
 8011d3c:	40800115 	stw	r2,4(r8)
 8011d40:	dc011f15 	stw	r16,1148(sp)
 8011d44:	008001c4 	movi	r2,7
 8011d48:	14015616 	blt	r2,r16,80122a4 <___vfprintf_internal_r+0x1630>
 8011d4c:	42000204 	addi	r8,r8,8
 8011d50:	d9013817 	ldw	r4,1248(sp)
 8011d54:	d9413517 	ldw	r5,1236(sp)
 8011d58:	84000044 	addi	r16,r16,1
 8011d5c:	1907883a 	add	r3,r3,r4
 8011d60:	41400015 	stw	r5,0(r8)
 8011d64:	41000115 	stw	r4,4(r8)
 8011d68:	d8c12015 	stw	r3,1152(sp)
 8011d6c:	dc011f15 	stw	r16,1148(sp)
 8011d70:	008001c4 	movi	r2,7
 8011d74:	14015416 	blt	r2,r16,80122c8 <___vfprintf_internal_r+0x1654>
 8011d78:	44400204 	addi	r17,r8,8
 8011d7c:	d9013717 	ldw	r4,1244(sp)
 8011d80:	d9413917 	ldw	r5,1252(sp)
 8011d84:	000d883a 	mov	r6,zero
 8011d88:	000f883a 	mov	r7,zero
 8011d8c:	d8c13d15 	stw	r3,1268(sp)
 8011d90:	800b7ac0 	call	800b7ac <__eqdf2>
 8011d94:	d8c13d17 	ldw	r3,1268(sp)
 8011d98:	1000a726 	beq	r2,zero,8012038 <___vfprintf_internal_r+0x13c4>
 8011d9c:	d9013317 	ldw	r4,1228(sp)
 8011da0:	d9413117 	ldw	r5,1220(sp)
 8011da4:	84000044 	addi	r16,r16,1
 8011da8:	20bfffc4 	addi	r2,r4,-1
 8011dac:	1887883a 	add	r3,r3,r2
 8011db0:	29000044 	addi	r4,r5,1
 8011db4:	88800115 	stw	r2,4(r17)
 8011db8:	89000015 	stw	r4,0(r17)
 8011dbc:	d8c12015 	stw	r3,1152(sp)
 8011dc0:	dc011f15 	stw	r16,1148(sp)
 8011dc4:	008001c4 	movi	r2,7
 8011dc8:	14012d16 	blt	r2,r16,8012280 <___vfprintf_internal_r+0x160c>
 8011dcc:	8c400204 	addi	r17,r17,8
 8011dd0:	d9413a17 	ldw	r5,1256(sp)
 8011dd4:	dcc122c4 	addi	r19,sp,1163
 8011dd8:	84000044 	addi	r16,r16,1
 8011ddc:	28c7883a 	add	r3,r5,r3
 8011de0:	8cc00015 	stw	r19,0(r17)
 8011de4:	89400115 	stw	r5,4(r17)
 8011de8:	d8c12015 	stw	r3,1152(sp)
 8011dec:	dc011f15 	stw	r16,1148(sp)
 8011df0:	008001c4 	movi	r2,7
 8011df4:	14000e16 	blt	r2,r16,8011e30 <___vfprintf_internal_r+0x11bc>
 8011df8:	8a000204 	addi	r8,r17,8
 8011dfc:	003db006 	br	80114c0 <__alt_data_end+0xfc0114c0>
 8011e00:	010200b4 	movhi	r4,2050
 8011e04:	210120c4 	addi	r4,r4,1155
 8011e08:	d9012c15 	stw	r4,1200(sp)
 8011e0c:	d9012c17 	ldw	r4,1200(sp)
 8011e10:	1c07883a 	add	r3,r3,r16
 8011e14:	44000115 	stw	r16,4(r8)
 8011e18:	41000015 	stw	r4,0(r8)
 8011e1c:	10800044 	addi	r2,r2,1
 8011e20:	d8c12015 	stw	r3,1152(sp)
 8011e24:	d8811f15 	stw	r2,1148(sp)
 8011e28:	010001c4 	movi	r4,7
 8011e2c:	20bda30e 	bge	r4,r2,80114bc <__alt_data_end+0xfc0114bc>
 8011e30:	b809883a 	mov	r4,r23
 8011e34:	b00b883a 	mov	r5,r22
 8011e38:	d9811e04 	addi	r6,sp,1144
 8011e3c:	801a1080 	call	801a108 <__sprint_r>
 8011e40:	103ca41e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011e44:	d8c12017 	ldw	r3,1152(sp)
 8011e48:	da000404 	addi	r8,sp,16
 8011e4c:	003d9c06 	br	80114c0 <__alt_data_end+0xfc0114c0>
 8011e50:	b809883a 	mov	r4,r23
 8011e54:	b00b883a 	mov	r5,r22
 8011e58:	d9811e04 	addi	r6,sp,1144
 8011e5c:	801a1080 	call	801a108 <__sprint_r>
 8011e60:	103dd226 	beq	r2,zero,80115ac <__alt_data_end+0xfc0115ac>
 8011e64:	003c9b06 	br	80110d4 <__alt_data_end+0xfc0110d4>
 8011e68:	10803fcc 	andi	r2,r2,255
 8011e6c:	1000311e 	bne	r2,zero,8011f34 <___vfprintf_internal_r+0x12c0>
 8011e70:	e080004c 	andi	r2,fp,1
 8011e74:	10002f26 	beq	r2,zero,8011f34 <___vfprintf_internal_r+0x12c0>
 8011e78:	00800c04 	movi	r2,48
 8011e7c:	d8c10dc4 	addi	r3,sp,1079
 8011e80:	d8810dc5 	stb	r2,1079(sp)
 8011e84:	dc413c17 	ldw	r17,1264(sp)
 8011e88:	d8c13115 	stw	r3,1220(sp)
 8011e8c:	003cf406 	br	8011260 <__alt_data_end+0xfc011260>
 8011e90:	b809883a 	mov	r4,r23
 8011e94:	b00b883a 	mov	r5,r22
 8011e98:	d9811e04 	addi	r6,sp,1144
 8011e9c:	801a1080 	call	801a108 <__sprint_r>
 8011ea0:	103c8c1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011ea4:	d8c12017 	ldw	r3,1152(sp)
 8011ea8:	da000404 	addi	r8,sp,16
 8011eac:	003d7706 	br	801148c <__alt_data_end+0xfc01148c>
 8011eb0:	b809883a 	mov	r4,r23
 8011eb4:	b00b883a 	mov	r5,r22
 8011eb8:	d9811e04 	addi	r6,sp,1144
 8011ebc:	801a1080 	call	801a108 <__sprint_r>
 8011ec0:	103c841e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011ec4:	d8c12017 	ldw	r3,1152(sp)
 8011ec8:	da000404 	addi	r8,sp,16
 8011ecc:	003d3506 	br	80113a4 <__alt_data_end+0xfc0113a4>
 8011ed0:	b809883a 	mov	r4,r23
 8011ed4:	b00b883a 	mov	r5,r22
 8011ed8:	d9811e04 	addi	r6,sp,1144
 8011edc:	801a1080 	call	801a108 <__sprint_r>
 8011ee0:	103c7c1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8011ee4:	d8c12017 	ldw	r3,1152(sp)
 8011ee8:	da000404 	addi	r8,sp,16
 8011eec:	003d3b06 	br	80113dc <__alt_data_end+0xfc0113dc>
 8011ef0:	d9413b17 	ldw	r5,1260(sp)
 8011ef4:	d8c10e04 	addi	r3,sp,1080
 8011ef8:	908003cc 	andi	r2,r18,15
 8011efc:	a808973a 	slli	r4,r21,28
 8011f00:	2885883a 	add	r2,r5,r2
 8011f04:	9024d13a 	srli	r18,r18,4
 8011f08:	10800003 	ldbu	r2,0(r2)
 8011f0c:	a82ad13a 	srli	r21,r21,4
 8011f10:	18ffffc4 	addi	r3,r3,-1
 8011f14:	24a4b03a 	or	r18,r4,r18
 8011f18:	18800005 	stb	r2,0(r3)
 8011f1c:	9544b03a 	or	r2,r18,r21
 8011f20:	103ff51e 	bne	r2,zero,8011ef8 <__alt_data_end+0xfc011ef8>
 8011f24:	d9412817 	ldw	r5,1184(sp)
 8011f28:	d8c13115 	stw	r3,1220(sp)
 8011f2c:	28e3c83a 	sub	r17,r5,r3
 8011f30:	003ccb06 	br	8011260 <__alt_data_end+0xfc011260>
 8011f34:	d8c10e04 	addi	r3,sp,1080
 8011f38:	0023883a 	mov	r17,zero
 8011f3c:	d8c13115 	stw	r3,1220(sp)
 8011f40:	003cc706 	br	8011260 <__alt_data_end+0xfc011260>
 8011f44:	dc012617 	ldw	r16,1176(sp)
 8011f48:	0401ab0e 	bge	zero,r16,80125f8 <___vfprintf_internal_r+0x1984>
 8011f4c:	d8813317 	ldw	r2,1228(sp)
 8011f50:	d9413117 	ldw	r5,1220(sp)
 8011f54:	d9013417 	ldw	r4,1232(sp)
 8011f58:	1023883a 	mov	r17,r2
 8011f5c:	28a1883a 	add	r16,r5,r2
 8011f60:	2080010e 	bge	r4,r2,8011f68 <___vfprintf_internal_r+0x12f4>
 8011f64:	2023883a 	mov	r17,r4
 8011f68:	04400b0e 	bge	zero,r17,8011f98 <___vfprintf_internal_r+0x1324>
 8011f6c:	d8811f17 	ldw	r2,1148(sp)
 8011f70:	d9413117 	ldw	r5,1220(sp)
 8011f74:	1c47883a 	add	r3,r3,r17
 8011f78:	10800044 	addi	r2,r2,1
 8011f7c:	41400015 	stw	r5,0(r8)
 8011f80:	44400115 	stw	r17,4(r8)
 8011f84:	d8c12015 	stw	r3,1152(sp)
 8011f88:	d8811f15 	stw	r2,1148(sp)
 8011f8c:	010001c4 	movi	r4,7
 8011f90:	20826716 	blt	r4,r2,8012930 <___vfprintf_internal_r+0x1cbc>
 8011f94:	42000204 	addi	r8,r8,8
 8011f98:	88026316 	blt	r17,zero,8012928 <___vfprintf_internal_r+0x1cb4>
 8011f9c:	d8813417 	ldw	r2,1232(sp)
 8011fa0:	1463c83a 	sub	r17,r2,r17
 8011fa4:	0440590e 	bge	zero,r17,801210c <___vfprintf_internal_r+0x1498>
 8011fa8:	04c00404 	movi	r19,16
 8011fac:	d8811f17 	ldw	r2,1148(sp)
 8011fb0:	9c41770e 	bge	r19,r17,8012590 <___vfprintf_internal_r+0x191c>
 8011fb4:	014200b4 	movhi	r5,2050
 8011fb8:	294120c4 	addi	r5,r5,1155
 8011fbc:	d9412c15 	stw	r5,1200(sp)
 8011fc0:	054001c4 	movi	r21,7
 8011fc4:	00000306 	br	8011fd4 <___vfprintf_internal_r+0x1360>
 8011fc8:	42000204 	addi	r8,r8,8
 8011fcc:	8c7ffc04 	addi	r17,r17,-16
 8011fd0:	9c41720e 	bge	r19,r17,801259c <___vfprintf_internal_r+0x1928>
 8011fd4:	18c00404 	addi	r3,r3,16
 8011fd8:	10800044 	addi	r2,r2,1
 8011fdc:	45000015 	stw	r20,0(r8)
 8011fe0:	44c00115 	stw	r19,4(r8)
 8011fe4:	d8c12015 	stw	r3,1152(sp)
 8011fe8:	d8811f15 	stw	r2,1148(sp)
 8011fec:	a8bff60e 	bge	r21,r2,8011fc8 <__alt_data_end+0xfc011fc8>
 8011ff0:	b809883a 	mov	r4,r23
 8011ff4:	b00b883a 	mov	r5,r22
 8011ff8:	d9811e04 	addi	r6,sp,1144
 8011ffc:	801a1080 	call	801a108 <__sprint_r>
 8012000:	103c341e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012004:	d8c12017 	ldw	r3,1152(sp)
 8012008:	d8811f17 	ldw	r2,1148(sp)
 801200c:	da000404 	addi	r8,sp,16
 8012010:	003fee06 	br	8011fcc <__alt_data_end+0xfc011fcc>
 8012014:	b809883a 	mov	r4,r23
 8012018:	b00b883a 	mov	r5,r22
 801201c:	d9811e04 	addi	r6,sp,1144
 8012020:	801a1080 	call	801a108 <__sprint_r>
 8012024:	103c2b1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012028:	d8c12017 	ldw	r3,1152(sp)
 801202c:	d8812787 	ldb	r2,1182(sp)
 8012030:	da000404 	addi	r8,sp,16
 8012034:	003cce06 	br	8011370 <__alt_data_end+0xfc011370>
 8012038:	d8813317 	ldw	r2,1228(sp)
 801203c:	14ffffc4 	addi	r19,r2,-1
 8012040:	04ff630e 	bge	zero,r19,8011dd0 <__alt_data_end+0xfc011dd0>
 8012044:	05400404 	movi	r21,16
 8012048:	acc0810e 	bge	r21,r19,8012250 <___vfprintf_internal_r+0x15dc>
 801204c:	014200b4 	movhi	r5,2050
 8012050:	294120c4 	addi	r5,r5,1155
 8012054:	d9412c15 	stw	r5,1200(sp)
 8012058:	01c001c4 	movi	r7,7
 801205c:	00000306 	br	801206c <___vfprintf_internal_r+0x13f8>
 8012060:	8c400204 	addi	r17,r17,8
 8012064:	9cfffc04 	addi	r19,r19,-16
 8012068:	acc07c0e 	bge	r21,r19,801225c <___vfprintf_internal_r+0x15e8>
 801206c:	18c00404 	addi	r3,r3,16
 8012070:	84000044 	addi	r16,r16,1
 8012074:	8d000015 	stw	r20,0(r17)
 8012078:	8d400115 	stw	r21,4(r17)
 801207c:	d8c12015 	stw	r3,1152(sp)
 8012080:	dc011f15 	stw	r16,1148(sp)
 8012084:	3c3ff60e 	bge	r7,r16,8012060 <__alt_data_end+0xfc012060>
 8012088:	b809883a 	mov	r4,r23
 801208c:	b00b883a 	mov	r5,r22
 8012090:	d9811e04 	addi	r6,sp,1144
 8012094:	d9c13d15 	stw	r7,1268(sp)
 8012098:	801a1080 	call	801a108 <__sprint_r>
 801209c:	d9c13d17 	ldw	r7,1268(sp)
 80120a0:	103c0c1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80120a4:	d8c12017 	ldw	r3,1152(sp)
 80120a8:	dc011f17 	ldw	r16,1148(sp)
 80120ac:	dc400404 	addi	r17,sp,16
 80120b0:	003fec06 	br	8012064 <__alt_data_end+0xfc012064>
 80120b4:	00800084 	movi	r2,2
 80120b8:	9546b03a 	or	r3,r18,r21
 80120bc:	003d7d06 	br	80116b4 <__alt_data_end+0xfc0116b4>
 80120c0:	10803fcc 	andi	r2,r2,255
 80120c4:	1080201c 	xori	r2,r2,128
 80120c8:	10bfe004 	addi	r2,r2,-128
 80120cc:	01000c04 	movi	r4,48
 80120d0:	1101d726 	beq	r2,r4,8012830 <___vfprintf_internal_r+0x1bbc>
 80120d4:	d9413117 	ldw	r5,1220(sp)
 80120d8:	d8812817 	ldw	r2,1184(sp)
 80120dc:	193fffc5 	stb	r4,-1(r3)
 80120e0:	297fffc4 	addi	r5,r5,-1
 80120e4:	d9413115 	stw	r5,1220(sp)
 80120e8:	1163c83a 	sub	r17,r2,r5
 80120ec:	003c5c06 	br	8011260 <__alt_data_end+0xfc011260>
 80120f0:	b809883a 	mov	r4,r23
 80120f4:	b00b883a 	mov	r5,r22
 80120f8:	d9811e04 	addi	r6,sp,1144
 80120fc:	801a1080 	call	801a108 <__sprint_r>
 8012100:	103bf41e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012104:	d8c12017 	ldw	r3,1152(sp)
 8012108:	da000404 	addi	r8,sp,16
 801210c:	d9413117 	ldw	r5,1220(sp)
 8012110:	d9013417 	ldw	r4,1232(sp)
 8012114:	d8812617 	ldw	r2,1176(sp)
 8012118:	2923883a 	add	r17,r5,r4
 801211c:	d9413317 	ldw	r5,1228(sp)
 8012120:	11400216 	blt	r2,r5,801212c <___vfprintf_internal_r+0x14b8>
 8012124:	e100004c 	andi	r4,fp,1
 8012128:	20000d26 	beq	r4,zero,8012160 <___vfprintf_internal_r+0x14ec>
 801212c:	d9013817 	ldw	r4,1248(sp)
 8012130:	d9413517 	ldw	r5,1236(sp)
 8012134:	1907883a 	add	r3,r3,r4
 8012138:	d9011f17 	ldw	r4,1148(sp)
 801213c:	41400015 	stw	r5,0(r8)
 8012140:	d9413817 	ldw	r5,1248(sp)
 8012144:	21000044 	addi	r4,r4,1
 8012148:	d8c12015 	stw	r3,1152(sp)
 801214c:	41400115 	stw	r5,4(r8)
 8012150:	d9011f15 	stw	r4,1148(sp)
 8012154:	014001c4 	movi	r5,7
 8012158:	2901fd16 	blt	r5,r4,8012950 <___vfprintf_internal_r+0x1cdc>
 801215c:	42000204 	addi	r8,r8,8
 8012160:	d9013317 	ldw	r4,1228(sp)
 8012164:	2085c83a 	sub	r2,r4,r2
 8012168:	8449c83a 	sub	r4,r16,r17
 801216c:	1021883a 	mov	r16,r2
 8012170:	2080010e 	bge	r4,r2,8012178 <___vfprintf_internal_r+0x1504>
 8012174:	2021883a 	mov	r16,r4
 8012178:	04000a0e 	bge	zero,r16,80121a4 <___vfprintf_internal_r+0x1530>
 801217c:	d9011f17 	ldw	r4,1148(sp)
 8012180:	1c07883a 	add	r3,r3,r16
 8012184:	44400015 	stw	r17,0(r8)
 8012188:	21000044 	addi	r4,r4,1
 801218c:	44000115 	stw	r16,4(r8)
 8012190:	d8c12015 	stw	r3,1152(sp)
 8012194:	d9011f15 	stw	r4,1148(sp)
 8012198:	014001c4 	movi	r5,7
 801219c:	29020916 	blt	r5,r4,80129c4 <___vfprintf_internal_r+0x1d50>
 80121a0:	42000204 	addi	r8,r8,8
 80121a4:	80020116 	blt	r16,zero,80129ac <___vfprintf_internal_r+0x1d38>
 80121a8:	1421c83a 	sub	r16,r2,r16
 80121ac:	043cc40e 	bge	zero,r16,80114c0 <__alt_data_end+0xfc0114c0>
 80121b0:	04400404 	movi	r17,16
 80121b4:	d8811f17 	ldw	r2,1148(sp)
 80121b8:	8c3f110e 	bge	r17,r16,8011e00 <__alt_data_end+0xfc011e00>
 80121bc:	014200b4 	movhi	r5,2050
 80121c0:	294120c4 	addi	r5,r5,1155
 80121c4:	d9412c15 	stw	r5,1200(sp)
 80121c8:	04c001c4 	movi	r19,7
 80121cc:	00000306 	br	80121dc <___vfprintf_internal_r+0x1568>
 80121d0:	42000204 	addi	r8,r8,8
 80121d4:	843ffc04 	addi	r16,r16,-16
 80121d8:	8c3f0c0e 	bge	r17,r16,8011e0c <__alt_data_end+0xfc011e0c>
 80121dc:	18c00404 	addi	r3,r3,16
 80121e0:	10800044 	addi	r2,r2,1
 80121e4:	45000015 	stw	r20,0(r8)
 80121e8:	44400115 	stw	r17,4(r8)
 80121ec:	d8c12015 	stw	r3,1152(sp)
 80121f0:	d8811f15 	stw	r2,1148(sp)
 80121f4:	98bff60e 	bge	r19,r2,80121d0 <__alt_data_end+0xfc0121d0>
 80121f8:	b809883a 	mov	r4,r23
 80121fc:	b00b883a 	mov	r5,r22
 8012200:	d9811e04 	addi	r6,sp,1144
 8012204:	801a1080 	call	801a108 <__sprint_r>
 8012208:	103bb21e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 801220c:	d8c12017 	ldw	r3,1152(sp)
 8012210:	d8811f17 	ldw	r2,1148(sp)
 8012214:	da000404 	addi	r8,sp,16
 8012218:	003fee06 	br	80121d4 <__alt_data_end+0xfc0121d4>
 801221c:	e088703a 	and	r4,fp,r2
 8012220:	203ec01e 	bne	r4,zero,8011d24 <__alt_data_end+0xfc011d24>
 8012224:	dc011f17 	ldw	r16,1148(sp)
 8012228:	d9013117 	ldw	r4,1220(sp)
 801222c:	40800115 	stw	r2,4(r8)
 8012230:	84000044 	addi	r16,r16,1
 8012234:	41000015 	stw	r4,0(r8)
 8012238:	d8c12015 	stw	r3,1152(sp)
 801223c:	dc011f15 	stw	r16,1148(sp)
 8012240:	008001c4 	movi	r2,7
 8012244:	14000e16 	blt	r2,r16,8012280 <___vfprintf_internal_r+0x160c>
 8012248:	44400204 	addi	r17,r8,8
 801224c:	003ee006 	br	8011dd0 <__alt_data_end+0xfc011dd0>
 8012250:	010200b4 	movhi	r4,2050
 8012254:	210120c4 	addi	r4,r4,1155
 8012258:	d9012c15 	stw	r4,1200(sp)
 801225c:	d8812c17 	ldw	r2,1200(sp)
 8012260:	1cc7883a 	add	r3,r3,r19
 8012264:	84000044 	addi	r16,r16,1
 8012268:	88800015 	stw	r2,0(r17)
 801226c:	8cc00115 	stw	r19,4(r17)
 8012270:	d8c12015 	stw	r3,1152(sp)
 8012274:	dc011f15 	stw	r16,1148(sp)
 8012278:	008001c4 	movi	r2,7
 801227c:	143ed30e 	bge	r2,r16,8011dcc <__alt_data_end+0xfc011dcc>
 8012280:	b809883a 	mov	r4,r23
 8012284:	b00b883a 	mov	r5,r22
 8012288:	d9811e04 	addi	r6,sp,1144
 801228c:	801a1080 	call	801a108 <__sprint_r>
 8012290:	103b901e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012294:	d8c12017 	ldw	r3,1152(sp)
 8012298:	dc011f17 	ldw	r16,1148(sp)
 801229c:	dc400404 	addi	r17,sp,16
 80122a0:	003ecb06 	br	8011dd0 <__alt_data_end+0xfc011dd0>
 80122a4:	b809883a 	mov	r4,r23
 80122a8:	b00b883a 	mov	r5,r22
 80122ac:	d9811e04 	addi	r6,sp,1144
 80122b0:	801a1080 	call	801a108 <__sprint_r>
 80122b4:	103b871e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80122b8:	d8c12017 	ldw	r3,1152(sp)
 80122bc:	dc011f17 	ldw	r16,1148(sp)
 80122c0:	da000404 	addi	r8,sp,16
 80122c4:	003ea206 	br	8011d50 <__alt_data_end+0xfc011d50>
 80122c8:	b809883a 	mov	r4,r23
 80122cc:	b00b883a 	mov	r5,r22
 80122d0:	d9811e04 	addi	r6,sp,1144
 80122d4:	801a1080 	call	801a108 <__sprint_r>
 80122d8:	103b7e1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80122dc:	d8c12017 	ldw	r3,1152(sp)
 80122e0:	dc011f17 	ldw	r16,1148(sp)
 80122e4:	dc400404 	addi	r17,sp,16
 80122e8:	003ea406 	br	8011d7c <__alt_data_end+0xfc011d7c>
 80122ec:	b809883a 	mov	r4,r23
 80122f0:	b00b883a 	mov	r5,r22
 80122f4:	d9811e04 	addi	r6,sp,1144
 80122f8:	801a1080 	call	801a108 <__sprint_r>
 80122fc:	103b751e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012300:	d8c12017 	ldw	r3,1152(sp)
 8012304:	da000404 	addi	r8,sp,16
 8012308:	003c3706 	br	80113e8 <__alt_data_end+0xfc0113e8>
 801230c:	04a5c83a 	sub	r18,zero,r18
 8012310:	9004c03a 	cmpne	r2,r18,zero
 8012314:	056bc83a 	sub	r21,zero,r21
 8012318:	a8abc83a 	sub	r21,r21,r2
 801231c:	04c00b44 	movi	r19,45
 8012320:	dcc12785 	stb	r19,1182(sp)
 8012324:	da413215 	stw	r9,1224(sp)
 8012328:	00800044 	movi	r2,1
 801232c:	9546b03a 	or	r3,r18,r21
 8012330:	003bb106 	br	80111f8 <__alt_data_end+0xfc0111f8>
 8012334:	da013f15 	stw	r8,1276(sp)
 8012338:	da413e15 	stw	r9,1272(sp)
 801233c:	80092d80 	call	80092d8 <__fpclassifyd>
 8012340:	da013f17 	ldw	r8,1276(sp)
 8012344:	da413e17 	ldw	r9,1272(sp)
 8012348:	1000e526 	beq	r2,zero,80126e0 <___vfprintf_internal_r+0x1a6c>
 801234c:	04fff7c4 	movi	r19,-33
 8012350:	00bfffc4 	movi	r2,-1
 8012354:	84e6703a 	and	r19,r16,r19
 8012358:	48822926 	beq	r9,r2,8012c00 <___vfprintf_internal_r+0x1f8c>
 801235c:	008011c4 	movi	r2,71
 8012360:	98821626 	beq	r19,r2,8012bbc <___vfprintf_internal_r+0x1f48>
 8012364:	d9013917 	ldw	r4,1252(sp)
 8012368:	e0c04014 	ori	r3,fp,256
 801236c:	d8c12d15 	stw	r3,1204(sp)
 8012370:	20021f16 	blt	r4,zero,8012bf0 <___vfprintf_internal_r+0x1f7c>
 8012374:	dc413917 	ldw	r17,1252(sp)
 8012378:	d8012b05 	stb	zero,1196(sp)
 801237c:	00801984 	movi	r2,102
 8012380:	80814d26 	beq	r16,r2,80128b8 <___vfprintf_internal_r+0x1c44>
 8012384:	00801184 	movi	r2,70
 8012388:	80814b26 	beq	r16,r2,80128b8 <___vfprintf_internal_r+0x1c44>
 801238c:	00801144 	movi	r2,69
 8012390:	98821d26 	beq	r19,r2,8012c08 <___vfprintf_internal_r+0x1f94>
 8012394:	482b883a 	mov	r21,r9
 8012398:	d8812604 	addi	r2,sp,1176
 801239c:	d8800115 	stw	r2,4(sp)
 80123a0:	d9413717 	ldw	r5,1244(sp)
 80123a4:	d8812504 	addi	r2,sp,1172
 80123a8:	d8800215 	stw	r2,8(sp)
 80123ac:	d8812104 	addi	r2,sp,1156
 80123b0:	dd400015 	stw	r21,0(sp)
 80123b4:	d8800315 	stw	r2,12(sp)
 80123b8:	b809883a 	mov	r4,r23
 80123bc:	880d883a 	mov	r6,r17
 80123c0:	01c00084 	movi	r7,2
 80123c4:	da013f15 	stw	r8,1276(sp)
 80123c8:	da413e15 	stw	r9,1272(sp)
 80123cc:	80130ec0 	call	80130ec <_dtoa_r>
 80123d0:	d8813115 	stw	r2,1220(sp)
 80123d4:	008019c4 	movi	r2,103
 80123d8:	da013f17 	ldw	r8,1276(sp)
 80123dc:	da413e17 	ldw	r9,1272(sp)
 80123e0:	80800226 	beq	r16,r2,80123ec <___vfprintf_internal_r+0x1778>
 80123e4:	008011c4 	movi	r2,71
 80123e8:	8081451e 	bne	r16,r2,8012900 <___vfprintf_internal_r+0x1c8c>
 80123ec:	e080004c 	andi	r2,fp,1
 80123f0:	10021e26 	beq	r2,zero,8012c6c <___vfprintf_internal_r+0x1ff8>
 80123f4:	d8c13117 	ldw	r3,1220(sp)
 80123f8:	1d55883a 	add	r10,r3,r21
 80123fc:	d9013717 	ldw	r4,1244(sp)
 8012400:	880b883a 	mov	r5,r17
 8012404:	000d883a 	mov	r6,zero
 8012408:	000f883a 	mov	r7,zero
 801240c:	da013f15 	stw	r8,1276(sp)
 8012410:	da413e15 	stw	r9,1272(sp)
 8012414:	da813d15 	stw	r10,1268(sp)
 8012418:	800b7ac0 	call	800b7ac <__eqdf2>
 801241c:	da013f17 	ldw	r8,1276(sp)
 8012420:	da413e17 	ldw	r9,1272(sp)
 8012424:	da813d17 	ldw	r10,1268(sp)
 8012428:	1001a126 	beq	r2,zero,8012ab0 <___vfprintf_internal_r+0x1e3c>
 801242c:	d8812117 	ldw	r2,1156(sp)
 8012430:	1280062e 	bgeu	r2,r10,801244c <___vfprintf_internal_r+0x17d8>
 8012434:	01000c04 	movi	r4,48
 8012438:	10c00044 	addi	r3,r2,1
 801243c:	d8c12115 	stw	r3,1156(sp)
 8012440:	11000005 	stb	r4,0(r2)
 8012444:	d8812117 	ldw	r2,1156(sp)
 8012448:	12bffb36 	bltu	r2,r10,8012438 <__alt_data_end+0xfc012438>
 801244c:	d8c13117 	ldw	r3,1220(sp)
 8012450:	10c5c83a 	sub	r2,r2,r3
 8012454:	d8813315 	stw	r2,1228(sp)
 8012458:	008011c4 	movi	r2,71
 801245c:	98818926 	beq	r19,r2,8012a84 <___vfprintf_internal_r+0x1e10>
 8012460:	00801944 	movi	r2,101
 8012464:	14023c0e 	bge	r2,r16,8012d58 <___vfprintf_internal_r+0x20e4>
 8012468:	d8c12617 	ldw	r3,1176(sp)
 801246c:	00801984 	movi	r2,102
 8012470:	d8c13415 	stw	r3,1232(sp)
 8012474:	8081ef26 	beq	r16,r2,8012c34 <___vfprintf_internal_r+0x1fc0>
 8012478:	d8c13417 	ldw	r3,1232(sp)
 801247c:	d9013317 	ldw	r4,1228(sp)
 8012480:	1901e316 	blt	r3,r4,8012c10 <___vfprintf_internal_r+0x1f9c>
 8012484:	e080004c 	andi	r2,fp,1
 8012488:	1001f426 	beq	r2,zero,8012c5c <___vfprintf_internal_r+0x1fe8>
 801248c:	d8c13417 	ldw	r3,1232(sp)
 8012490:	1c400044 	addi	r17,r3,1
 8012494:	8839883a 	mov	fp,r17
 8012498:	8801e416 	blt	r17,zero,8012c2c <___vfprintf_internal_r+0x1fb8>
 801249c:	dd412b07 	ldb	r21,1196(sp)
 80124a0:	a801701e 	bne	r21,zero,8012a64 <___vfprintf_internal_r+0x1df0>
 80124a4:	df012b15 	stw	fp,1196(sp)
 80124a8:	dcc12783 	ldbu	r19,1182(sp)
 80124ac:	df012d17 	ldw	fp,1204(sp)
 80124b0:	d8013215 	stw	zero,1224(sp)
 80124b4:	dc812d15 	stw	r18,1204(sp)
 80124b8:	003b6e06 	br	8011274 <__alt_data_end+0xfc011274>
 80124bc:	e080040c 	andi	r2,fp,16
 80124c0:	1000b51e 	bne	r2,zero,8012798 <___vfprintf_internal_r+0x1b24>
 80124c4:	e080100c 	andi	r2,fp,64
 80124c8:	10015b26 	beq	r2,zero,8012a38 <___vfprintf_internal_r+0x1dc4>
 80124cc:	d9012d17 	ldw	r4,1204(sp)
 80124d0:	d9412f17 	ldw	r5,1212(sp)
 80124d4:	20800017 	ldw	r2,0(r4)
 80124d8:	21000104 	addi	r4,r4,4
 80124dc:	d9012d15 	stw	r4,1204(sp)
 80124e0:	1140000d 	sth	r5,0(r2)
 80124e4:	003a2006 	br	8010d68 <__alt_data_end+0xfc010d68>
 80124e8:	e0c0100c 	andi	r3,fp,64
 80124ec:	1800a226 	beq	r3,zero,8012778 <___vfprintf_internal_r+0x1b04>
 80124f0:	d8c12d17 	ldw	r3,1204(sp)
 80124f4:	1480000b 	ldhu	r18,0(r2)
 80124f8:	002b883a 	mov	r21,zero
 80124fc:	18c00104 	addi	r3,r3,4
 8012500:	d8c12d15 	stw	r3,1204(sp)
 8012504:	0005883a 	mov	r2,zero
 8012508:	9007883a 	mov	r3,r18
 801250c:	003c6906 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8012510:	e0c0100c 	andi	r3,fp,64
 8012514:	18009026 	beq	r3,zero,8012758 <___vfprintf_internal_r+0x1ae4>
 8012518:	1480000b 	ldhu	r18,0(r2)
 801251c:	d8812d17 	ldw	r2,1204(sp)
 8012520:	002b883a 	mov	r21,zero
 8012524:	9007883a 	mov	r3,r18
 8012528:	10800104 	addi	r2,r2,4
 801252c:	d8812d15 	stw	r2,1204(sp)
 8012530:	00800044 	movi	r2,1
 8012534:	003c5f06 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8012538:	e0c0100c 	andi	r3,fp,64
 801253c:	18008026 	beq	r3,zero,8012740 <___vfprintf_internal_r+0x1acc>
 8012540:	d9012d17 	ldw	r4,1204(sp)
 8012544:	1480000b 	ldhu	r18,0(r2)
 8012548:	002b883a 	mov	r21,zero
 801254c:	21000104 	addi	r4,r4,4
 8012550:	d9012d15 	stw	r4,1204(sp)
 8012554:	003c7906 	br	801173c <__alt_data_end+0xfc01173c>
 8012558:	e080100c 	andi	r2,fp,64
 801255c:	10007126 	beq	r2,zero,8012724 <___vfprintf_internal_r+0x1ab0>
 8012560:	1c80000f 	ldh	r18,0(r3)
 8012564:	d8812d17 	ldw	r2,1204(sp)
 8012568:	902bd7fa 	srai	r21,r18,31
 801256c:	10800104 	addi	r2,r2,4
 8012570:	d8812d15 	stw	r2,1204(sp)
 8012574:	a805883a 	mov	r2,r21
 8012578:	003b1a06 	br	80111e4 <__alt_data_end+0xfc0111e4>
 801257c:	e4000007 	ldb	r16,0(fp)
 8012580:	e005883a 	mov	r2,fp
 8012584:	003a2306 	br	8010e14 <__alt_data_end+0xfc010e14>
 8012588:	00800084 	movi	r2,2
 801258c:	003c4906 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8012590:	010200b4 	movhi	r4,2050
 8012594:	210120c4 	addi	r4,r4,1155
 8012598:	d9012c15 	stw	r4,1200(sp)
 801259c:	d9012c17 	ldw	r4,1200(sp)
 80125a0:	1c47883a 	add	r3,r3,r17
 80125a4:	10800044 	addi	r2,r2,1
 80125a8:	41000015 	stw	r4,0(r8)
 80125ac:	44400115 	stw	r17,4(r8)
 80125b0:	d8c12015 	stw	r3,1152(sp)
 80125b4:	d8811f15 	stw	r2,1148(sp)
 80125b8:	010001c4 	movi	r4,7
 80125bc:	20becc16 	blt	r4,r2,80120f0 <__alt_data_end+0xfc0120f0>
 80125c0:	42000204 	addi	r8,r8,8
 80125c4:	003ed106 	br	801210c <__alt_data_end+0xfc01210c>
 80125c8:	010200b4 	movhi	r4,2050
 80125cc:	210120c4 	addi	r4,r4,1155
 80125d0:	d9012c15 	stw	r4,1200(sp)
 80125d4:	003ba306 	br	8011464 <__alt_data_end+0xfc011464>
 80125d8:	b809883a 	mov	r4,r23
 80125dc:	b00b883a 	mov	r5,r22
 80125e0:	d9811e04 	addi	r6,sp,1144
 80125e4:	801a1080 	call	801a108 <__sprint_r>
 80125e8:	103aba1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80125ec:	d8c12017 	ldw	r3,1152(sp)
 80125f0:	da000404 	addi	r8,sp,16
 80125f4:	003d6c06 	br	8011ba8 <__alt_data_end+0xfc011ba8>
 80125f8:	d8811f17 	ldw	r2,1148(sp)
 80125fc:	014200b4 	movhi	r5,2050
 8012600:	01000044 	movi	r4,1
 8012604:	18c00044 	addi	r3,r3,1
 8012608:	10800044 	addi	r2,r2,1
 801260c:	29402f04 	addi	r5,r5,188
 8012610:	41000115 	stw	r4,4(r8)
 8012614:	41400015 	stw	r5,0(r8)
 8012618:	d8c12015 	stw	r3,1152(sp)
 801261c:	d8811f15 	stw	r2,1148(sp)
 8012620:	010001c4 	movi	r4,7
 8012624:	20806716 	blt	r4,r2,80127c4 <___vfprintf_internal_r+0x1b50>
 8012628:	42000204 	addi	r8,r8,8
 801262c:	8000041e 	bne	r16,zero,8012640 <___vfprintf_internal_r+0x19cc>
 8012630:	d8813317 	ldw	r2,1228(sp)
 8012634:	1000021e 	bne	r2,zero,8012640 <___vfprintf_internal_r+0x19cc>
 8012638:	e080004c 	andi	r2,fp,1
 801263c:	103ba026 	beq	r2,zero,80114c0 <__alt_data_end+0xfc0114c0>
 8012640:	d9013817 	ldw	r4,1248(sp)
 8012644:	d8811f17 	ldw	r2,1148(sp)
 8012648:	d9413517 	ldw	r5,1236(sp)
 801264c:	1907883a 	add	r3,r3,r4
 8012650:	10800044 	addi	r2,r2,1
 8012654:	41000115 	stw	r4,4(r8)
 8012658:	41400015 	stw	r5,0(r8)
 801265c:	d8c12015 	stw	r3,1152(sp)
 8012660:	d8811f15 	stw	r2,1148(sp)
 8012664:	010001c4 	movi	r4,7
 8012668:	20815716 	blt	r4,r2,8012bc8 <___vfprintf_internal_r+0x1f54>
 801266c:	42000204 	addi	r8,r8,8
 8012670:	0421c83a 	sub	r16,zero,r16
 8012674:	0400810e 	bge	zero,r16,801287c <___vfprintf_internal_r+0x1c08>
 8012678:	04400404 	movi	r17,16
 801267c:	8c00bd0e 	bge	r17,r16,8012974 <___vfprintf_internal_r+0x1d00>
 8012680:	014200b4 	movhi	r5,2050
 8012684:	294120c4 	addi	r5,r5,1155
 8012688:	d9412c15 	stw	r5,1200(sp)
 801268c:	04c001c4 	movi	r19,7
 8012690:	00000306 	br	80126a0 <___vfprintf_internal_r+0x1a2c>
 8012694:	42000204 	addi	r8,r8,8
 8012698:	843ffc04 	addi	r16,r16,-16
 801269c:	8c00b80e 	bge	r17,r16,8012980 <___vfprintf_internal_r+0x1d0c>
 80126a0:	18c00404 	addi	r3,r3,16
 80126a4:	10800044 	addi	r2,r2,1
 80126a8:	45000015 	stw	r20,0(r8)
 80126ac:	44400115 	stw	r17,4(r8)
 80126b0:	d8c12015 	stw	r3,1152(sp)
 80126b4:	d8811f15 	stw	r2,1148(sp)
 80126b8:	98bff60e 	bge	r19,r2,8012694 <__alt_data_end+0xfc012694>
 80126bc:	b809883a 	mov	r4,r23
 80126c0:	b00b883a 	mov	r5,r22
 80126c4:	d9811e04 	addi	r6,sp,1144
 80126c8:	801a1080 	call	801a108 <__sprint_r>
 80126cc:	103a811e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80126d0:	d8c12017 	ldw	r3,1152(sp)
 80126d4:	d8811f17 	ldw	r2,1148(sp)
 80126d8:	da000404 	addi	r8,sp,16
 80126dc:	003fee06 	br	8012698 <__alt_data_end+0xfc012698>
 80126e0:	008011c4 	movi	r2,71
 80126e4:	1400db16 	blt	r2,r16,8012a54 <___vfprintf_internal_r+0x1de0>
 80126e8:	010200b4 	movhi	r4,2050
 80126ec:	21010b04 	addi	r4,r4,1068
 80126f0:	d9013115 	stw	r4,1220(sp)
 80126f4:	00c000c4 	movi	r3,3
 80126f8:	00bfdfc4 	movi	r2,-129
 80126fc:	d8c12b15 	stw	r3,1196(sp)
 8012700:	e0b8703a 	and	fp,fp,r2
 8012704:	dcc12783 	ldbu	r19,1182(sp)
 8012708:	dc812d15 	stw	r18,1204(sp)
 801270c:	1823883a 	mov	r17,r3
 8012710:	d8013215 	stw	zero,1224(sp)
 8012714:	d8013415 	stw	zero,1232(sp)
 8012718:	003ad606 	br	8011274 <__alt_data_end+0xfc011274>
 801271c:	4823883a 	mov	r17,r9
 8012720:	003cc906 	br	8011a48 <__alt_data_end+0xfc011a48>
 8012724:	1c800017 	ldw	r18,0(r3)
 8012728:	d8c12d17 	ldw	r3,1204(sp)
 801272c:	902bd7fa 	srai	r21,r18,31
 8012730:	18c00104 	addi	r3,r3,4
 8012734:	d8c12d15 	stw	r3,1204(sp)
 8012738:	a805883a 	mov	r2,r21
 801273c:	003aa906 	br	80111e4 <__alt_data_end+0xfc0111e4>
 8012740:	d9412d17 	ldw	r5,1204(sp)
 8012744:	14800017 	ldw	r18,0(r2)
 8012748:	002b883a 	mov	r21,zero
 801274c:	29400104 	addi	r5,r5,4
 8012750:	d9412d15 	stw	r5,1204(sp)
 8012754:	003bf906 	br	801173c <__alt_data_end+0xfc01173c>
 8012758:	d8c12d17 	ldw	r3,1204(sp)
 801275c:	14800017 	ldw	r18,0(r2)
 8012760:	002b883a 	mov	r21,zero
 8012764:	18c00104 	addi	r3,r3,4
 8012768:	d8c12d15 	stw	r3,1204(sp)
 801276c:	00800044 	movi	r2,1
 8012770:	9007883a 	mov	r3,r18
 8012774:	003bcf06 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8012778:	d9012d17 	ldw	r4,1204(sp)
 801277c:	14800017 	ldw	r18,0(r2)
 8012780:	002b883a 	mov	r21,zero
 8012784:	21000104 	addi	r4,r4,4
 8012788:	d9012d15 	stw	r4,1204(sp)
 801278c:	0005883a 	mov	r2,zero
 8012790:	9007883a 	mov	r3,r18
 8012794:	003bc706 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8012798:	d9412d17 	ldw	r5,1204(sp)
 801279c:	d8c12f17 	ldw	r3,1212(sp)
 80127a0:	28800017 	ldw	r2,0(r5)
 80127a4:	29400104 	addi	r5,r5,4
 80127a8:	d9412d15 	stw	r5,1204(sp)
 80127ac:	10c00015 	stw	r3,0(r2)
 80127b0:	00396d06 	br	8010d68 <__alt_data_end+0xfc010d68>
 80127b4:	010200b4 	movhi	r4,2050
 80127b8:	21010904 	addi	r4,r4,1060
 80127bc:	d9013115 	stw	r4,1220(sp)
 80127c0:	003ba206 	br	801164c <__alt_data_end+0xfc01164c>
 80127c4:	b809883a 	mov	r4,r23
 80127c8:	b00b883a 	mov	r5,r22
 80127cc:	d9811e04 	addi	r6,sp,1144
 80127d0:	801a1080 	call	801a108 <__sprint_r>
 80127d4:	103a3f1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80127d8:	dc012617 	ldw	r16,1176(sp)
 80127dc:	d8c12017 	ldw	r3,1152(sp)
 80127e0:	da000404 	addi	r8,sp,16
 80127e4:	003f9106 	br	801262c <__alt_data_end+0xfc01262c>
 80127e8:	e0800044 	addi	r2,fp,1
 80127ec:	9cc00814 	ori	r19,r19,32
 80127f0:	e4000047 	ldb	r16,1(fp)
 80127f4:	00398706 	br	8010e14 <__alt_data_end+0xfc010e14>
 80127f8:	d8812e17 	ldw	r2,1208(sp)
 80127fc:	d8c12d15 	stw	r3,1204(sp)
 8012800:	0085c83a 	sub	r2,zero,r2
 8012804:	d8812e15 	stw	r2,1208(sp)
 8012808:	e005883a 	mov	r2,fp
 801280c:	003a3a06 	br	80110f8 <__alt_data_end+0xfc0110f8>
 8012810:	b809883a 	mov	r4,r23
 8012814:	b00b883a 	mov	r5,r22
 8012818:	d9811e04 	addi	r6,sp,1144
 801281c:	801a1080 	call	801a108 <__sprint_r>
 8012820:	103a2c1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012824:	d8c12017 	ldw	r3,1152(sp)
 8012828:	da000404 	addi	r8,sp,16
 801282c:	003cf006 	br	8011bf0 <__alt_data_end+0xfc011bf0>
 8012830:	d8c12817 	ldw	r3,1184(sp)
 8012834:	d9013117 	ldw	r4,1220(sp)
 8012838:	1923c83a 	sub	r17,r3,r4
 801283c:	003a8806 	br	8011260 <__alt_data_end+0xfc011260>
 8012840:	da013f15 	stw	r8,1276(sp)
 8012844:	800d1b80 	call	800d1b8 <strlen>
 8012848:	1023883a 	mov	r17,r2
 801284c:	da013f17 	ldw	r8,1276(sp)
 8012850:	883c7f0e 	bge	r17,zero,8011a50 <__alt_data_end+0xfc011a50>
 8012854:	0005883a 	mov	r2,zero
 8012858:	003c7d06 	br	8011a50 <__alt_data_end+0xfc011a50>
 801285c:	b809883a 	mov	r4,r23
 8012860:	b00b883a 	mov	r5,r22
 8012864:	d9811e04 	addi	r6,sp,1144
 8012868:	801a1080 	call	801a108 <__sprint_r>
 801286c:	103a191e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012870:	d8c12017 	ldw	r3,1152(sp)
 8012874:	d8811f17 	ldw	r2,1148(sp)
 8012878:	da000404 	addi	r8,sp,16
 801287c:	d9413317 	ldw	r5,1228(sp)
 8012880:	d9013117 	ldw	r4,1220(sp)
 8012884:	10800044 	addi	r2,r2,1
 8012888:	28c7883a 	add	r3,r5,r3
 801288c:	41000015 	stw	r4,0(r8)
 8012890:	41400115 	stw	r5,4(r8)
 8012894:	d8c12015 	stw	r3,1152(sp)
 8012898:	d8811f15 	stw	r2,1148(sp)
 801289c:	010001c4 	movi	r4,7
 80128a0:	20bb060e 	bge	r4,r2,80114bc <__alt_data_end+0xfc0114bc>
 80128a4:	003d6206 	br	8011e30 <__alt_data_end+0xfc011e30>
 80128a8:	010200b4 	movhi	r4,2050
 80128ac:	210124c4 	addi	r4,r4,1171
 80128b0:	d9013615 	stw	r4,1240(sp)
 80128b4:	003aa306 	br	8011344 <__alt_data_end+0xfc011344>
 80128b8:	d8812604 	addi	r2,sp,1176
 80128bc:	d8800115 	stw	r2,4(sp)
 80128c0:	d9413717 	ldw	r5,1244(sp)
 80128c4:	d8812504 	addi	r2,sp,1172
 80128c8:	d8800215 	stw	r2,8(sp)
 80128cc:	d8812104 	addi	r2,sp,1156
 80128d0:	da400015 	stw	r9,0(sp)
 80128d4:	d8800315 	stw	r2,12(sp)
 80128d8:	b809883a 	mov	r4,r23
 80128dc:	880d883a 	mov	r6,r17
 80128e0:	01c000c4 	movi	r7,3
 80128e4:	da013f15 	stw	r8,1276(sp)
 80128e8:	da413e15 	stw	r9,1272(sp)
 80128ec:	80130ec0 	call	80130ec <_dtoa_r>
 80128f0:	da413e17 	ldw	r9,1272(sp)
 80128f4:	da013f17 	ldw	r8,1276(sp)
 80128f8:	d8813115 	stw	r2,1220(sp)
 80128fc:	482b883a 	mov	r21,r9
 8012900:	d8c13117 	ldw	r3,1220(sp)
 8012904:	00801184 	movi	r2,70
 8012908:	1d55883a 	add	r10,r3,r21
 801290c:	98bebb1e 	bne	r19,r2,80123fc <__alt_data_end+0xfc0123fc>
 8012910:	19000007 	ldb	r4,0(r3)
 8012914:	00800c04 	movi	r2,48
 8012918:	2080dd26 	beq	r4,r2,8012c90 <___vfprintf_internal_r+0x201c>
 801291c:	d8c12617 	ldw	r3,1176(sp)
 8012920:	50d5883a 	add	r10,r10,r3
 8012924:	003eb506 	br	80123fc <__alt_data_end+0xfc0123fc>
 8012928:	0023883a 	mov	r17,zero
 801292c:	003d9b06 	br	8011f9c <__alt_data_end+0xfc011f9c>
 8012930:	b809883a 	mov	r4,r23
 8012934:	b00b883a 	mov	r5,r22
 8012938:	d9811e04 	addi	r6,sp,1144
 801293c:	801a1080 	call	801a108 <__sprint_r>
 8012940:	1039e41e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012944:	d8c12017 	ldw	r3,1152(sp)
 8012948:	da000404 	addi	r8,sp,16
 801294c:	003d9206 	br	8011f98 <__alt_data_end+0xfc011f98>
 8012950:	b809883a 	mov	r4,r23
 8012954:	b00b883a 	mov	r5,r22
 8012958:	d9811e04 	addi	r6,sp,1144
 801295c:	801a1080 	call	801a108 <__sprint_r>
 8012960:	1039dc1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012964:	d8812617 	ldw	r2,1176(sp)
 8012968:	d8c12017 	ldw	r3,1152(sp)
 801296c:	da000404 	addi	r8,sp,16
 8012970:	003dfb06 	br	8012160 <__alt_data_end+0xfc012160>
 8012974:	010200b4 	movhi	r4,2050
 8012978:	210120c4 	addi	r4,r4,1155
 801297c:	d9012c15 	stw	r4,1200(sp)
 8012980:	d9012c17 	ldw	r4,1200(sp)
 8012984:	1c07883a 	add	r3,r3,r16
 8012988:	10800044 	addi	r2,r2,1
 801298c:	41000015 	stw	r4,0(r8)
 8012990:	44000115 	stw	r16,4(r8)
 8012994:	d8c12015 	stw	r3,1152(sp)
 8012998:	d8811f15 	stw	r2,1148(sp)
 801299c:	010001c4 	movi	r4,7
 80129a0:	20bfae16 	blt	r4,r2,801285c <__alt_data_end+0xfc01285c>
 80129a4:	42000204 	addi	r8,r8,8
 80129a8:	003fb406 	br	801287c <__alt_data_end+0xfc01287c>
 80129ac:	0021883a 	mov	r16,zero
 80129b0:	003dfd06 	br	80121a8 <__alt_data_end+0xfc0121a8>
 80129b4:	014200b4 	movhi	r5,2050
 80129b8:	294124c4 	addi	r5,r5,1171
 80129bc:	d9413615 	stw	r5,1240(sp)
 80129c0:	003ae306 	br	8011550 <__alt_data_end+0xfc011550>
 80129c4:	b809883a 	mov	r4,r23
 80129c8:	b00b883a 	mov	r5,r22
 80129cc:	d9811e04 	addi	r6,sp,1144
 80129d0:	801a1080 	call	801a108 <__sprint_r>
 80129d4:	1039bf1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 80129d8:	d8812617 	ldw	r2,1176(sp)
 80129dc:	d9413317 	ldw	r5,1228(sp)
 80129e0:	d8c12017 	ldw	r3,1152(sp)
 80129e4:	da000404 	addi	r8,sp,16
 80129e8:	2885c83a 	sub	r2,r5,r2
 80129ec:	003ded06 	br	80121a4 <__alt_data_end+0xfc0121a4>
 80129f0:	00800184 	movi	r2,6
 80129f4:	1240012e 	bgeu	r2,r9,80129fc <___vfprintf_internal_r+0x1d88>
 80129f8:	1013883a 	mov	r9,r2
 80129fc:	4823883a 	mov	r17,r9
 8012a00:	4805883a 	mov	r2,r9
 8012a04:	4800b216 	blt	r9,zero,8012cd0 <___vfprintf_internal_r+0x205c>
 8012a08:	014200b4 	movhi	r5,2050
 8012a0c:	29411704 	addi	r5,r5,1116
 8012a10:	d8812b15 	stw	r2,1196(sp)
 8012a14:	dc812d15 	stw	r18,1204(sp)
 8012a18:	d8013215 	stw	zero,1224(sp)
 8012a1c:	d8013415 	stw	zero,1232(sp)
 8012a20:	d9413115 	stw	r5,1220(sp)
 8012a24:	0005883a 	mov	r2,zero
 8012a28:	003a1906 	br	8011290 <__alt_data_end+0xfc011290>
 8012a2c:	04c00b44 	movi	r19,45
 8012a30:	dcc12785 	stb	r19,1182(sp)
 8012a34:	003b0006 	br	8011638 <__alt_data_end+0xfc011638>
 8012a38:	d8c12d17 	ldw	r3,1204(sp)
 8012a3c:	d9012f17 	ldw	r4,1212(sp)
 8012a40:	18800017 	ldw	r2,0(r3)
 8012a44:	18c00104 	addi	r3,r3,4
 8012a48:	d8c12d15 	stw	r3,1204(sp)
 8012a4c:	11000015 	stw	r4,0(r2)
 8012a50:	0038c506 	br	8010d68 <__alt_data_end+0xfc010d68>
 8012a54:	014200b4 	movhi	r5,2050
 8012a58:	29410c04 	addi	r5,r5,1072
 8012a5c:	d9413115 	stw	r5,1220(sp)
 8012a60:	003f2406 	br	80126f4 <__alt_data_end+0xfc0126f4>
 8012a64:	00800b44 	movi	r2,45
 8012a68:	d8812785 	stb	r2,1182(sp)
 8012a6c:	df012b15 	stw	fp,1196(sp)
 8012a70:	d8013215 	stw	zero,1224(sp)
 8012a74:	df012d17 	ldw	fp,1204(sp)
 8012a78:	00800b44 	movi	r2,45
 8012a7c:	dc812d15 	stw	r18,1204(sp)
 8012a80:	003a0006 	br	8011284 <__alt_data_end+0xfc011284>
 8012a84:	d8c12617 	ldw	r3,1176(sp)
 8012a88:	00bfff44 	movi	r2,-3
 8012a8c:	18800a16 	blt	r3,r2,8012ab8 <___vfprintf_internal_r+0x1e44>
 8012a90:	48c00916 	blt	r9,r3,8012ab8 <___vfprintf_internal_r+0x1e44>
 8012a94:	d8c13415 	stw	r3,1232(sp)
 8012a98:	040019c4 	movi	r16,103
 8012a9c:	003e7606 	br	8012478 <__alt_data_end+0xfc012478>
 8012aa0:	010200b4 	movhi	r4,2050
 8012aa4:	210120c4 	addi	r4,r4,1155
 8012aa8:	d9012c15 	stw	r4,1200(sp)
 8012aac:	003c8e06 	br	8011ce8 <__alt_data_end+0xfc011ce8>
 8012ab0:	5005883a 	mov	r2,r10
 8012ab4:	003e6506 	br	801244c <__alt_data_end+0xfc01244c>
 8012ab8:	843fff84 	addi	r16,r16,-2
 8012abc:	1d7fffc4 	addi	r21,r3,-1
 8012ac0:	dd412615 	stw	r21,1176(sp)
 8012ac4:	dc0122c5 	stb	r16,1163(sp)
 8012ac8:	a8009216 	blt	r21,zero,8012d14 <___vfprintf_internal_r+0x20a0>
 8012acc:	00800ac4 	movi	r2,43
 8012ad0:	d8812305 	stb	r2,1164(sp)
 8012ad4:	00800244 	movi	r2,9
 8012ad8:	1540660e 	bge	r2,r21,8012c74 <___vfprintf_internal_r+0x2000>
 8012adc:	dcc122c4 	addi	r19,sp,1163
 8012ae0:	dc012c15 	stw	r16,1200(sp)
 8012ae4:	4023883a 	mov	r17,r8
 8012ae8:	9821883a 	mov	r16,r19
 8012aec:	a809883a 	mov	r4,r21
 8012af0:	01400284 	movi	r5,10
 8012af4:	8009f780 	call	8009f78 <__modsi3>
 8012af8:	10800c04 	addi	r2,r2,48
 8012afc:	843fffc4 	addi	r16,r16,-1
 8012b00:	a809883a 	mov	r4,r21
 8012b04:	01400284 	movi	r5,10
 8012b08:	80800005 	stb	r2,0(r16)
 8012b0c:	8009f240 	call	8009f24 <__divsi3>
 8012b10:	01000244 	movi	r4,9
 8012b14:	102b883a 	mov	r21,r2
 8012b18:	20bff416 	blt	r4,r2,8012aec <__alt_data_end+0xfc012aec>
 8012b1c:	8811883a 	mov	r8,r17
 8012b20:	10800c04 	addi	r2,r2,48
 8012b24:	8023883a 	mov	r17,r16
 8012b28:	897fffc4 	addi	r5,r17,-1
 8012b2c:	88bfffc5 	stb	r2,-1(r17)
 8012b30:	dc012c17 	ldw	r16,1200(sp)
 8012b34:	2cc08a2e 	bgeu	r5,r19,8012d60 <___vfprintf_internal_r+0x20ec>
 8012b38:	d9812384 	addi	r6,sp,1166
 8012b3c:	344dc83a 	sub	r6,r6,r17
 8012b40:	d9012344 	addi	r4,sp,1165
 8012b44:	998d883a 	add	r6,r19,r6
 8012b48:	00000106 	br	8012b50 <___vfprintf_internal_r+0x1edc>
 8012b4c:	28800003 	ldbu	r2,0(r5)
 8012b50:	20800005 	stb	r2,0(r4)
 8012b54:	21000044 	addi	r4,r4,1
 8012b58:	29400044 	addi	r5,r5,1
 8012b5c:	21bffb1e 	bne	r4,r6,8012b4c <__alt_data_end+0xfc012b4c>
 8012b60:	d8812304 	addi	r2,sp,1164
 8012b64:	1445c83a 	sub	r2,r2,r17
 8012b68:	d9412344 	addi	r5,sp,1165
 8012b6c:	2885883a 	add	r2,r5,r2
 8012b70:	14e7c83a 	sub	r19,r2,r19
 8012b74:	d8813317 	ldw	r2,1228(sp)
 8012b78:	d8c13317 	ldw	r3,1228(sp)
 8012b7c:	dcc13a15 	stw	r19,1256(sp)
 8012b80:	14e3883a 	add	r17,r2,r19
 8012b84:	00800044 	movi	r2,1
 8012b88:	10c0550e 	bge	r2,r3,8012ce0 <___vfprintf_internal_r+0x206c>
 8012b8c:	8c400044 	addi	r17,r17,1
 8012b90:	8839883a 	mov	fp,r17
 8012b94:	88005016 	blt	r17,zero,8012cd8 <___vfprintf_internal_r+0x2064>
 8012b98:	d8013415 	stw	zero,1232(sp)
 8012b9c:	003e3f06 	br	801249c <__alt_data_end+0xfc01249c>
 8012ba0:	da412b15 	stw	r9,1196(sp)
 8012ba4:	dcc12783 	ldbu	r19,1182(sp)
 8012ba8:	4823883a 	mov	r17,r9
 8012bac:	dc812d15 	stw	r18,1204(sp)
 8012bb0:	d8013215 	stw	zero,1224(sp)
 8012bb4:	d8013415 	stw	zero,1232(sp)
 8012bb8:	0039ae06 	br	8011274 <__alt_data_end+0xfc011274>
 8012bbc:	483de91e 	bne	r9,zero,8012364 <__alt_data_end+0xfc012364>
 8012bc0:	8813883a 	mov	r9,r17
 8012bc4:	003de706 	br	8012364 <__alt_data_end+0xfc012364>
 8012bc8:	b809883a 	mov	r4,r23
 8012bcc:	b00b883a 	mov	r5,r22
 8012bd0:	d9811e04 	addi	r6,sp,1144
 8012bd4:	801a1080 	call	801a108 <__sprint_r>
 8012bd8:	10393e1e 	bne	r2,zero,80110d4 <__alt_data_end+0xfc0110d4>
 8012bdc:	dc012617 	ldw	r16,1176(sp)
 8012be0:	d8c12017 	ldw	r3,1152(sp)
 8012be4:	d8811f17 	ldw	r2,1148(sp)
 8012be8:	da000404 	addi	r8,sp,16
 8012bec:	003ea006 	br	8012670 <__alt_data_end+0xfc012670>
 8012bf0:	00c00b44 	movi	r3,45
 8012bf4:	2460003c 	xorhi	r17,r4,32768
 8012bf8:	d8c12b05 	stb	r3,1196(sp)
 8012bfc:	003ddf06 	br	801237c <__alt_data_end+0xfc01237c>
 8012c00:	02400184 	movi	r9,6
 8012c04:	003dd706 	br	8012364 <__alt_data_end+0xfc012364>
 8012c08:	4d400044 	addi	r21,r9,1
 8012c0c:	003de206 	br	8012398 <__alt_data_end+0xfc012398>
 8012c10:	d8c13417 	ldw	r3,1232(sp)
 8012c14:	00c0490e 	bge	zero,r3,8012d3c <___vfprintf_internal_r+0x20c8>
 8012c18:	04400044 	movi	r17,1
 8012c1c:	d9013317 	ldw	r4,1228(sp)
 8012c20:	8923883a 	add	r17,r17,r4
 8012c24:	8839883a 	mov	fp,r17
 8012c28:	883e1c0e 	bge	r17,zero,801249c <__alt_data_end+0xfc01249c>
 8012c2c:	0039883a 	mov	fp,zero
 8012c30:	003e1a06 	br	801249c <__alt_data_end+0xfc01249c>
 8012c34:	00c03b0e 	bge	zero,r3,8012d24 <___vfprintf_internal_r+0x20b0>
 8012c38:	4800021e 	bne	r9,zero,8012c44 <___vfprintf_internal_r+0x1fd0>
 8012c3c:	e080004c 	andi	r2,fp,1
 8012c40:	10000626 	beq	r2,zero,8012c5c <___vfprintf_internal_r+0x1fe8>
 8012c44:	d8c13417 	ldw	r3,1232(sp)
 8012c48:	4a400044 	addi	r9,r9,1
 8012c4c:	1a63883a 	add	r17,r3,r9
 8012c50:	8839883a 	mov	fp,r17
 8012c54:	883e110e 	bge	r17,zero,801249c <__alt_data_end+0xfc01249c>
 8012c58:	003ff406 	br	8012c2c <__alt_data_end+0xfc012c2c>
 8012c5c:	1839883a 	mov	fp,r3
 8012c60:	18004116 	blt	r3,zero,8012d68 <___vfprintf_internal_r+0x20f4>
 8012c64:	dc413417 	ldw	r17,1232(sp)
 8012c68:	003e0c06 	br	801249c <__alt_data_end+0xfc01249c>
 8012c6c:	d8812117 	ldw	r2,1156(sp)
 8012c70:	003df606 	br	801244c <__alt_data_end+0xfc01244c>
 8012c74:	00800c04 	movi	r2,48
 8012c78:	a8c00c04 	addi	r3,r21,48
 8012c7c:	d8812345 	stb	r2,1165(sp)
 8012c80:	d8c12385 	stb	r3,1166(sp)
 8012c84:	d88123c4 	addi	r2,sp,1167
 8012c88:	dcc122c4 	addi	r19,sp,1163
 8012c8c:	003fb806 	br	8012b70 <__alt_data_end+0xfc012b70>
 8012c90:	d9013717 	ldw	r4,1244(sp)
 8012c94:	880b883a 	mov	r5,r17
 8012c98:	000d883a 	mov	r6,zero
 8012c9c:	000f883a 	mov	r7,zero
 8012ca0:	da013f15 	stw	r8,1276(sp)
 8012ca4:	da413e15 	stw	r9,1272(sp)
 8012ca8:	da813d15 	stw	r10,1268(sp)
 8012cac:	800b7ac0 	call	800b7ac <__eqdf2>
 8012cb0:	da013f17 	ldw	r8,1276(sp)
 8012cb4:	da413e17 	ldw	r9,1272(sp)
 8012cb8:	da813d17 	ldw	r10,1268(sp)
 8012cbc:	103f1726 	beq	r2,zero,801291c <__alt_data_end+0xfc01291c>
 8012cc0:	00800044 	movi	r2,1
 8012cc4:	1547c83a 	sub	r3,r2,r21
 8012cc8:	d8c12615 	stw	r3,1176(sp)
 8012ccc:	003f1406 	br	8012920 <__alt_data_end+0xfc012920>
 8012cd0:	0005883a 	mov	r2,zero
 8012cd4:	003f4c06 	br	8012a08 <__alt_data_end+0xfc012a08>
 8012cd8:	0039883a 	mov	fp,zero
 8012cdc:	003fae06 	br	8012b98 <__alt_data_end+0xfc012b98>
 8012ce0:	e084703a 	and	r2,fp,r2
 8012ce4:	103faa26 	beq	r2,zero,8012b90 <__alt_data_end+0xfc012b90>
 8012ce8:	003fa806 	br	8012b8c <__alt_data_end+0xfc012b8c>
 8012cec:	d9412d17 	ldw	r5,1204(sp)
 8012cf0:	2a400017 	ldw	r9,0(r5)
 8012cf4:	28c00104 	addi	r3,r5,4
 8012cf8:	d8c12d15 	stw	r3,1204(sp)
 8012cfc:	483ebc0e 	bge	r9,zero,80127f0 <__alt_data_end+0xfc0127f0>
 8012d00:	027fffc4 	movi	r9,-1
 8012d04:	e4000047 	ldb	r16,1(fp)
 8012d08:	00384206 	br	8010e14 <__alt_data_end+0xfc010e14>
 8012d0c:	043fffc4 	movi	r16,-1
 8012d10:	0038ce06 	br	801104c <__alt_data_end+0xfc01104c>
 8012d14:	00800b44 	movi	r2,45
 8012d18:	056bc83a 	sub	r21,zero,r21
 8012d1c:	d8812305 	stb	r2,1164(sp)
 8012d20:	003f6c06 	br	8012ad4 <__alt_data_end+0xfc012ad4>
 8012d24:	4800081e 	bne	r9,zero,8012d48 <___vfprintf_internal_r+0x20d4>
 8012d28:	e080004c 	andi	r2,fp,1
 8012d2c:	1000061e 	bne	r2,zero,8012d48 <___vfprintf_internal_r+0x20d4>
 8012d30:	07000044 	movi	fp,1
 8012d34:	e023883a 	mov	r17,fp
 8012d38:	003dd806 	br	801249c <__alt_data_end+0xfc01249c>
 8012d3c:	04400084 	movi	r17,2
 8012d40:	88e3c83a 	sub	r17,r17,r3
 8012d44:	003fb506 	br	8012c1c <__alt_data_end+0xfc012c1c>
 8012d48:	4c400084 	addi	r17,r9,2
 8012d4c:	8839883a 	mov	fp,r17
 8012d50:	883dd20e 	bge	r17,zero,801249c <__alt_data_end+0xfc01249c>
 8012d54:	003fb506 	br	8012c2c <__alt_data_end+0xfc012c2c>
 8012d58:	d8c12617 	ldw	r3,1176(sp)
 8012d5c:	003f5706 	br	8012abc <__alt_data_end+0xfc012abc>
 8012d60:	d8812344 	addi	r2,sp,1165
 8012d64:	003f8206 	br	8012b70 <__alt_data_end+0xfc012b70>
 8012d68:	0039883a 	mov	fp,zero
 8012d6c:	003fbd06 	br	8012c64 <__alt_data_end+0xfc012c64>

08012d70 <__vfprintf_internal>:
 8012d70:	2007883a 	mov	r3,r4
 8012d74:	010200b4 	movhi	r4,2050
 8012d78:	2108f804 	addi	r4,r4,9184
 8012d7c:	21000017 	ldw	r4,0(r4)
 8012d80:	2805883a 	mov	r2,r5
 8012d84:	300f883a 	mov	r7,r6
 8012d88:	180b883a 	mov	r5,r3
 8012d8c:	100d883a 	mov	r6,r2
 8012d90:	8010c741 	jmpi	8010c74 <___vfprintf_internal_r>

08012d94 <__swsetup_r>:
 8012d94:	008200b4 	movhi	r2,2050
 8012d98:	defffd04 	addi	sp,sp,-12
 8012d9c:	1088f804 	addi	r2,r2,9184
 8012da0:	dc400115 	stw	r17,4(sp)
 8012da4:	2023883a 	mov	r17,r4
 8012da8:	11000017 	ldw	r4,0(r2)
 8012dac:	dc000015 	stw	r16,0(sp)
 8012db0:	dfc00215 	stw	ra,8(sp)
 8012db4:	2821883a 	mov	r16,r5
 8012db8:	20000226 	beq	r4,zero,8012dc4 <__swsetup_r+0x30>
 8012dbc:	20c00e17 	ldw	r3,56(r4)
 8012dc0:	18002e26 	beq	r3,zero,8012e7c <__swsetup_r+0xe8>
 8012dc4:	8080030b 	ldhu	r2,12(r16)
 8012dc8:	10c0020c 	andi	r3,r2,8
 8012dcc:	100d883a 	mov	r6,r2
 8012dd0:	18000f26 	beq	r3,zero,8012e10 <__swsetup_r+0x7c>
 8012dd4:	80c00417 	ldw	r3,16(r16)
 8012dd8:	18001526 	beq	r3,zero,8012e30 <__swsetup_r+0x9c>
 8012ddc:	1100004c 	andi	r4,r2,1
 8012de0:	20001c1e 	bne	r4,zero,8012e54 <__swsetup_r+0xc0>
 8012de4:	1080008c 	andi	r2,r2,2
 8012de8:	1000261e 	bne	r2,zero,8012e84 <__swsetup_r+0xf0>
 8012dec:	80800517 	ldw	r2,20(r16)
 8012df0:	80800215 	stw	r2,8(r16)
 8012df4:	18001c26 	beq	r3,zero,8012e68 <__swsetup_r+0xd4>
 8012df8:	0005883a 	mov	r2,zero
 8012dfc:	dfc00217 	ldw	ra,8(sp)
 8012e00:	dc400117 	ldw	r17,4(sp)
 8012e04:	dc000017 	ldw	r16,0(sp)
 8012e08:	dec00304 	addi	sp,sp,12
 8012e0c:	f800283a 	ret
 8012e10:	3080040c 	andi	r2,r6,16
 8012e14:	10001726 	beq	r2,zero,8012e74 <__swsetup_r+0xe0>
 8012e18:	3080010c 	andi	r2,r6,4
 8012e1c:	10001b1e 	bne	r2,zero,8012e8c <__swsetup_r+0xf8>
 8012e20:	80c00417 	ldw	r3,16(r16)
 8012e24:	30800214 	ori	r2,r6,8
 8012e28:	8080030d 	sth	r2,12(r16)
 8012e2c:	183feb1e 	bne	r3,zero,8012ddc <__alt_data_end+0xfc012ddc>
 8012e30:	1140a00c 	andi	r5,r2,640
 8012e34:	01008004 	movi	r4,512
 8012e38:	293fe826 	beq	r5,r4,8012ddc <__alt_data_end+0xfc012ddc>
 8012e3c:	8809883a 	mov	r4,r17
 8012e40:	800b883a 	mov	r5,r16
 8012e44:	80165980 	call	8016598 <__smakebuf_r>
 8012e48:	8080030b 	ldhu	r2,12(r16)
 8012e4c:	80c00417 	ldw	r3,16(r16)
 8012e50:	003fe206 	br	8012ddc <__alt_data_end+0xfc012ddc>
 8012e54:	80800517 	ldw	r2,20(r16)
 8012e58:	80000215 	stw	zero,8(r16)
 8012e5c:	0085c83a 	sub	r2,zero,r2
 8012e60:	80800615 	stw	r2,24(r16)
 8012e64:	183fe41e 	bne	r3,zero,8012df8 <__alt_data_end+0xfc012df8>
 8012e68:	8080030b 	ldhu	r2,12(r16)
 8012e6c:	1080200c 	andi	r2,r2,128
 8012e70:	103fe226 	beq	r2,zero,8012dfc <__alt_data_end+0xfc012dfc>
 8012e74:	00bfffc4 	movi	r2,-1
 8012e78:	003fe006 	br	8012dfc <__alt_data_end+0xfc012dfc>
 8012e7c:	8014dd00 	call	8014dd0 <__sinit>
 8012e80:	003fd006 	br	8012dc4 <__alt_data_end+0xfc012dc4>
 8012e84:	0005883a 	mov	r2,zero
 8012e88:	003fd906 	br	8012df0 <__alt_data_end+0xfc012df0>
 8012e8c:	81400c17 	ldw	r5,48(r16)
 8012e90:	28000626 	beq	r5,zero,8012eac <__swsetup_r+0x118>
 8012e94:	80801004 	addi	r2,r16,64
 8012e98:	28800326 	beq	r5,r2,8012ea8 <__swsetup_r+0x114>
 8012e9c:	8809883a 	mov	r4,r17
 8012ea0:	8014f440 	call	8014f44 <_free_r>
 8012ea4:	8180030b 	ldhu	r6,12(r16)
 8012ea8:	80000c15 	stw	zero,48(r16)
 8012eac:	80c00417 	ldw	r3,16(r16)
 8012eb0:	00bff6c4 	movi	r2,-37
 8012eb4:	118c703a 	and	r6,r2,r6
 8012eb8:	80000115 	stw	zero,4(r16)
 8012ebc:	80c00015 	stw	r3,0(r16)
 8012ec0:	003fd806 	br	8012e24 <__alt_data_end+0xfc012e24>

08012ec4 <quorem>:
 8012ec4:	defff204 	addi	sp,sp,-56
 8012ec8:	ddc00b15 	stw	r23,44(sp)
 8012ecc:	20800417 	ldw	r2,16(r4)
 8012ed0:	2dc00417 	ldw	r23,16(r5)
 8012ed4:	dfc00d15 	stw	ra,52(sp)
 8012ed8:	df000c15 	stw	fp,48(sp)
 8012edc:	dd800a15 	stw	r22,40(sp)
 8012ee0:	dd400915 	stw	r21,36(sp)
 8012ee4:	dd000815 	stw	r20,32(sp)
 8012ee8:	dcc00715 	stw	r19,28(sp)
 8012eec:	dc800615 	stw	r18,24(sp)
 8012ef0:	dc400515 	stw	r17,20(sp)
 8012ef4:	dc000415 	stw	r16,16(sp)
 8012ef8:	15c07a16 	blt	r2,r23,80130e4 <quorem+0x220>
 8012efc:	bdffffc4 	addi	r23,r23,-1
 8012f00:	bde9883a 	add	r20,r23,r23
 8012f04:	28c00504 	addi	r3,r5,20
 8012f08:	a529883a 	add	r20,r20,r20
 8012f0c:	1d39883a 	add	fp,r3,r20
 8012f10:	24c00504 	addi	r19,r4,20
 8012f14:	d9400215 	stw	r5,8(sp)
 8012f18:	9d29883a 	add	r20,r19,r20
 8012f1c:	e1400017 	ldw	r5,0(fp)
 8012f20:	d9000015 	stw	r4,0(sp)
 8012f24:	a1000017 	ldw	r4,0(r20)
 8012f28:	29400044 	addi	r5,r5,1
 8012f2c:	d8c00115 	stw	r3,4(sp)
 8012f30:	dd000315 	stw	r20,12(sp)
 8012f34:	8009fd40 	call	8009fd4 <__udivsi3>
 8012f38:	1025883a 	mov	r18,r2
 8012f3c:	10003026 	beq	r2,zero,8013000 <quorem+0x13c>
 8012f40:	dc400117 	ldw	r17,4(sp)
 8012f44:	9829883a 	mov	r20,r19
 8012f48:	002d883a 	mov	r22,zero
 8012f4c:	0021883a 	mov	r16,zero
 8012f50:	8d400017 	ldw	r21,0(r17)
 8012f54:	900b883a 	mov	r5,r18
 8012f58:	8c400104 	addi	r17,r17,4
 8012f5c:	a93fffcc 	andi	r4,r21,65535
 8012f60:	8009fe40 	call	8009fe4 <__mulsi3>
 8012f64:	a808d43a 	srli	r4,r21,16
 8012f68:	900b883a 	mov	r5,r18
 8012f6c:	b0ad883a 	add	r22,r22,r2
 8012f70:	8009fe40 	call	8009fe4 <__mulsi3>
 8012f74:	a1000017 	ldw	r4,0(r20)
 8012f78:	b00cd43a 	srli	r6,r22,16
 8012f7c:	b0ffffcc 	andi	r3,r22,65535
 8012f80:	217fffcc 	andi	r5,r4,65535
 8012f84:	2c21883a 	add	r16,r5,r16
 8012f88:	80c7c83a 	sub	r3,r16,r3
 8012f8c:	2008d43a 	srli	r4,r4,16
 8012f90:	3085883a 	add	r2,r6,r2
 8012f94:	1821d43a 	srai	r16,r3,16
 8012f98:	117fffcc 	andi	r5,r2,65535
 8012f9c:	2149c83a 	sub	r4,r4,r5
 8012fa0:	2421883a 	add	r16,r4,r16
 8012fa4:	8008943a 	slli	r4,r16,16
 8012fa8:	18ffffcc 	andi	r3,r3,65535
 8012fac:	102cd43a 	srli	r22,r2,16
 8012fb0:	20c8b03a 	or	r4,r4,r3
 8012fb4:	a1000015 	stw	r4,0(r20)
 8012fb8:	8021d43a 	srai	r16,r16,16
 8012fbc:	a5000104 	addi	r20,r20,4
 8012fc0:	e47fe32e 	bgeu	fp,r17,8012f50 <__alt_data_end+0xfc012f50>
 8012fc4:	d8c00317 	ldw	r3,12(sp)
 8012fc8:	18800017 	ldw	r2,0(r3)
 8012fcc:	10000c1e 	bne	r2,zero,8013000 <quorem+0x13c>
 8012fd0:	18bfff04 	addi	r2,r3,-4
 8012fd4:	9880082e 	bgeu	r19,r2,8012ff8 <quorem+0x134>
 8012fd8:	18ffff17 	ldw	r3,-4(r3)
 8012fdc:	18000326 	beq	r3,zero,8012fec <quorem+0x128>
 8012fe0:	00000506 	br	8012ff8 <quorem+0x134>
 8012fe4:	10c00017 	ldw	r3,0(r2)
 8012fe8:	1800031e 	bne	r3,zero,8012ff8 <quorem+0x134>
 8012fec:	10bfff04 	addi	r2,r2,-4
 8012ff0:	bdffffc4 	addi	r23,r23,-1
 8012ff4:	98bffb36 	bltu	r19,r2,8012fe4 <__alt_data_end+0xfc012fe4>
 8012ff8:	d8c00017 	ldw	r3,0(sp)
 8012ffc:	1dc00415 	stw	r23,16(r3)
 8013000:	d9000017 	ldw	r4,0(sp)
 8013004:	d9400217 	ldw	r5,8(sp)
 8013008:	8017d140 	call	8017d14 <__mcmp>
 801300c:	10002816 	blt	r2,zero,80130b0 <quorem+0x1ec>
 8013010:	dc400117 	ldw	r17,4(sp)
 8013014:	94800044 	addi	r18,r18,1
 8013018:	980d883a 	mov	r6,r19
 801301c:	0007883a 	mov	r3,zero
 8013020:	31000017 	ldw	r4,0(r6)
 8013024:	89400017 	ldw	r5,0(r17)
 8013028:	31800104 	addi	r6,r6,4
 801302c:	20bfffcc 	andi	r2,r4,65535
 8013030:	10c7883a 	add	r3,r2,r3
 8013034:	28bfffcc 	andi	r2,r5,65535
 8013038:	1885c83a 	sub	r2,r3,r2
 801303c:	280ad43a 	srli	r5,r5,16
 8013040:	2008d43a 	srli	r4,r4,16
 8013044:	1007d43a 	srai	r3,r2,16
 8013048:	10bfffcc 	andi	r2,r2,65535
 801304c:	2149c83a 	sub	r4,r4,r5
 8013050:	20c9883a 	add	r4,r4,r3
 8013054:	200a943a 	slli	r5,r4,16
 8013058:	8c400104 	addi	r17,r17,4
 801305c:	2007d43a 	srai	r3,r4,16
 8013060:	2884b03a 	or	r2,r5,r2
 8013064:	30bfff15 	stw	r2,-4(r6)
 8013068:	e47fed2e 	bgeu	fp,r17,8013020 <__alt_data_end+0xfc013020>
 801306c:	bdc5883a 	add	r2,r23,r23
 8013070:	1085883a 	add	r2,r2,r2
 8013074:	9887883a 	add	r3,r19,r2
 8013078:	18800017 	ldw	r2,0(r3)
 801307c:	10000c1e 	bne	r2,zero,80130b0 <quorem+0x1ec>
 8013080:	18bfff04 	addi	r2,r3,-4
 8013084:	9880082e 	bgeu	r19,r2,80130a8 <quorem+0x1e4>
 8013088:	18ffff17 	ldw	r3,-4(r3)
 801308c:	18000326 	beq	r3,zero,801309c <quorem+0x1d8>
 8013090:	00000506 	br	80130a8 <quorem+0x1e4>
 8013094:	10c00017 	ldw	r3,0(r2)
 8013098:	1800031e 	bne	r3,zero,80130a8 <quorem+0x1e4>
 801309c:	10bfff04 	addi	r2,r2,-4
 80130a0:	bdffffc4 	addi	r23,r23,-1
 80130a4:	98bffb36 	bltu	r19,r2,8013094 <__alt_data_end+0xfc013094>
 80130a8:	d8c00017 	ldw	r3,0(sp)
 80130ac:	1dc00415 	stw	r23,16(r3)
 80130b0:	9005883a 	mov	r2,r18
 80130b4:	dfc00d17 	ldw	ra,52(sp)
 80130b8:	df000c17 	ldw	fp,48(sp)
 80130bc:	ddc00b17 	ldw	r23,44(sp)
 80130c0:	dd800a17 	ldw	r22,40(sp)
 80130c4:	dd400917 	ldw	r21,36(sp)
 80130c8:	dd000817 	ldw	r20,32(sp)
 80130cc:	dcc00717 	ldw	r19,28(sp)
 80130d0:	dc800617 	ldw	r18,24(sp)
 80130d4:	dc400517 	ldw	r17,20(sp)
 80130d8:	dc000417 	ldw	r16,16(sp)
 80130dc:	dec00e04 	addi	sp,sp,56
 80130e0:	f800283a 	ret
 80130e4:	0005883a 	mov	r2,zero
 80130e8:	003ff206 	br	80130b4 <__alt_data_end+0xfc0130b4>

080130ec <_dtoa_r>:
 80130ec:	20801017 	ldw	r2,64(r4)
 80130f0:	deffde04 	addi	sp,sp,-136
 80130f4:	dd401d15 	stw	r21,116(sp)
 80130f8:	dcc01b15 	stw	r19,108(sp)
 80130fc:	dc801a15 	stw	r18,104(sp)
 8013100:	dc401915 	stw	r17,100(sp)
 8013104:	dc001815 	stw	r16,96(sp)
 8013108:	dfc02115 	stw	ra,132(sp)
 801310c:	df002015 	stw	fp,128(sp)
 8013110:	ddc01f15 	stw	r23,124(sp)
 8013114:	dd801e15 	stw	r22,120(sp)
 8013118:	dd001c15 	stw	r20,112(sp)
 801311c:	d9c00315 	stw	r7,12(sp)
 8013120:	2021883a 	mov	r16,r4
 8013124:	302b883a 	mov	r21,r6
 8013128:	2825883a 	mov	r18,r5
 801312c:	dc402417 	ldw	r17,144(sp)
 8013130:	3027883a 	mov	r19,r6
 8013134:	10000826 	beq	r2,zero,8013158 <_dtoa_r+0x6c>
 8013138:	21801117 	ldw	r6,68(r4)
 801313c:	00c00044 	movi	r3,1
 8013140:	100b883a 	mov	r5,r2
 8013144:	1986983a 	sll	r3,r3,r6
 8013148:	11800115 	stw	r6,4(r2)
 801314c:	10c00215 	stw	r3,8(r2)
 8013150:	80174400 	call	8017440 <_Bfree>
 8013154:	80001015 	stw	zero,64(r16)
 8013158:	a8002d16 	blt	r21,zero,8013210 <_dtoa_r+0x124>
 801315c:	88000015 	stw	zero,0(r17)
 8013160:	a8dffc2c 	andhi	r3,r21,32752
 8013164:	009ffc34 	movhi	r2,32752
 8013168:	18801b26 	beq	r3,r2,80131d8 <_dtoa_r+0xec>
 801316c:	9009883a 	mov	r4,r18
 8013170:	980b883a 	mov	r5,r19
 8013174:	000d883a 	mov	r6,zero
 8013178:	000f883a 	mov	r7,zero
 801317c:	800b7ac0 	call	800b7ac <__eqdf2>
 8013180:	10002a1e 	bne	r2,zero,801322c <_dtoa_r+0x140>
 8013184:	d8c02317 	ldw	r3,140(sp)
 8013188:	d9002517 	ldw	r4,148(sp)
 801318c:	00800044 	movi	r2,1
 8013190:	18800015 	stw	r2,0(r3)
 8013194:	2001a226 	beq	r4,zero,8013820 <_dtoa_r+0x734>
 8013198:	008200b4 	movhi	r2,2050
 801319c:	10802f44 	addi	r2,r2,189
 80131a0:	20800015 	stw	r2,0(r4)
 80131a4:	10bfffc4 	addi	r2,r2,-1
 80131a8:	dfc02117 	ldw	ra,132(sp)
 80131ac:	df002017 	ldw	fp,128(sp)
 80131b0:	ddc01f17 	ldw	r23,124(sp)
 80131b4:	dd801e17 	ldw	r22,120(sp)
 80131b8:	dd401d17 	ldw	r21,116(sp)
 80131bc:	dd001c17 	ldw	r20,112(sp)
 80131c0:	dcc01b17 	ldw	r19,108(sp)
 80131c4:	dc801a17 	ldw	r18,104(sp)
 80131c8:	dc401917 	ldw	r17,100(sp)
 80131cc:	dc001817 	ldw	r16,96(sp)
 80131d0:	dec02204 	addi	sp,sp,136
 80131d4:	f800283a 	ret
 80131d8:	d8c02317 	ldw	r3,140(sp)
 80131dc:	0089c3c4 	movi	r2,9999
 80131e0:	18800015 	stw	r2,0(r3)
 80131e4:	90017c26 	beq	r18,zero,80137d8 <_dtoa_r+0x6ec>
 80131e8:	008200b4 	movhi	r2,2050
 80131ec:	1081cc04 	addi	r2,r2,1840
 80131f0:	d9002517 	ldw	r4,148(sp)
 80131f4:	203fec26 	beq	r4,zero,80131a8 <__alt_data_end+0xfc0131a8>
 80131f8:	10c000c7 	ldb	r3,3(r2)
 80131fc:	18017d1e 	bne	r3,zero,80137f4 <_dtoa_r+0x708>
 8013200:	10c000c4 	addi	r3,r2,3
 8013204:	d9802517 	ldw	r6,148(sp)
 8013208:	30c00015 	stw	r3,0(r6)
 801320c:	003fe606 	br	80131a8 <__alt_data_end+0xfc0131a8>
 8013210:	04e00034 	movhi	r19,32768
 8013214:	9cffffc4 	addi	r19,r19,-1
 8013218:	00800044 	movi	r2,1
 801321c:	ace6703a 	and	r19,r21,r19
 8013220:	88800015 	stw	r2,0(r17)
 8013224:	982b883a 	mov	r21,r19
 8013228:	003fcd06 	br	8013160 <__alt_data_end+0xfc013160>
 801322c:	d8800204 	addi	r2,sp,8
 8013230:	a822d53a 	srli	r17,r21,20
 8013234:	d8800015 	stw	r2,0(sp)
 8013238:	8009883a 	mov	r4,r16
 801323c:	900b883a 	mov	r5,r18
 8013240:	980d883a 	mov	r6,r19
 8013244:	d9c00104 	addi	r7,sp,4
 8013248:	80180880 	call	8018088 <__d2b>
 801324c:	1039883a 	mov	fp,r2
 8013250:	88016a1e 	bne	r17,zero,80137fc <_dtoa_r+0x710>
 8013254:	dd000217 	ldw	r20,8(sp)
 8013258:	dc400117 	ldw	r17,4(sp)
 801325c:	00befbc4 	movi	r2,-1041
 8013260:	a463883a 	add	r17,r20,r17
 8013264:	8882ea16 	blt	r17,r2,8013e10 <_dtoa_r+0xd24>
 8013268:	00bf0384 	movi	r2,-1010
 801326c:	1445c83a 	sub	r2,r2,r17
 8013270:	89010484 	addi	r4,r17,1042
 8013274:	a8aa983a 	sll	r21,r21,r2
 8013278:	9108d83a 	srl	r4,r18,r4
 801327c:	a908b03a 	or	r4,r21,r4
 8013280:	801ccf40 	call	801ccf4 <__floatunsidf>
 8013284:	017f8434 	movhi	r5,65040
 8013288:	01800044 	movi	r6,1
 801328c:	1009883a 	mov	r4,r2
 8013290:	194b883a 	add	r5,r3,r5
 8013294:	8c7fffc4 	addi	r17,r17,-1
 8013298:	d9800f15 	stw	r6,60(sp)
 801329c:	000d883a 	mov	r6,zero
 80132a0:	01cffe34 	movhi	r7,16376
 80132a4:	800c25c0 	call	800c25c <__subdf3>
 80132a8:	0198dbf4 	movhi	r6,25455
 80132ac:	01cff4f4 	movhi	r7,16339
 80132b0:	1009883a 	mov	r4,r2
 80132b4:	180b883a 	mov	r5,r3
 80132b8:	3190d844 	addi	r6,r6,17249
 80132bc:	39e1e9c4 	addi	r7,r7,-30809
 80132c0:	800b9f00 	call	800b9f0 <__muldf3>
 80132c4:	01a2d874 	movhi	r6,35681
 80132c8:	01cff1f4 	movhi	r7,16327
 80132cc:	180b883a 	mov	r5,r3
 80132d0:	31b22cc4 	addi	r6,r6,-14157
 80132d4:	39e28a04 	addi	r7,r7,-30168
 80132d8:	1009883a 	mov	r4,r2
 80132dc:	800a5900 	call	800a590 <__adddf3>
 80132e0:	8809883a 	mov	r4,r17
 80132e4:	102d883a 	mov	r22,r2
 80132e8:	182b883a 	mov	r21,r3
 80132ec:	800cbb40 	call	800cbb4 <__floatsidf>
 80132f0:	019427f4 	movhi	r6,20639
 80132f4:	01cff4f4 	movhi	r7,16339
 80132f8:	1009883a 	mov	r4,r2
 80132fc:	180b883a 	mov	r5,r3
 8013300:	319e7ec4 	addi	r6,r6,31227
 8013304:	39d104c4 	addi	r7,r7,17427
 8013308:	800b9f00 	call	800b9f0 <__muldf3>
 801330c:	b009883a 	mov	r4,r22
 8013310:	a80b883a 	mov	r5,r21
 8013314:	100d883a 	mov	r6,r2
 8013318:	180f883a 	mov	r7,r3
 801331c:	800a5900 	call	800a590 <__adddf3>
 8013320:	1009883a 	mov	r4,r2
 8013324:	180b883a 	mov	r5,r3
 8013328:	102d883a 	mov	r22,r2
 801332c:	182b883a 	mov	r21,r3
 8013330:	800cb2c0 	call	800cb2c <__fixdfsi>
 8013334:	b009883a 	mov	r4,r22
 8013338:	a80b883a 	mov	r5,r21
 801333c:	000d883a 	mov	r6,zero
 8013340:	000f883a 	mov	r7,zero
 8013344:	d8800515 	stw	r2,20(sp)
 8013348:	800b9100 	call	800b910 <__ledf2>
 801334c:	10023116 	blt	r2,zero,8013c14 <_dtoa_r+0xb28>
 8013350:	d8c00517 	ldw	r3,20(sp)
 8013354:	00800584 	movi	r2,22
 8013358:	10c21f36 	bltu	r2,r3,8013bd8 <_dtoa_r+0xaec>
 801335c:	180490fa 	slli	r2,r3,3
 8013360:	00c200b4 	movhi	r3,2050
 8013364:	18c1ee04 	addi	r3,r3,1976
 8013368:	1885883a 	add	r2,r3,r2
 801336c:	11000017 	ldw	r4,0(r2)
 8013370:	11400117 	ldw	r5,4(r2)
 8013374:	900d883a 	mov	r6,r18
 8013378:	980f883a 	mov	r7,r19
 801337c:	800b8300 	call	800b830 <__gedf2>
 8013380:	0082a70e 	bge	zero,r2,8013e20 <_dtoa_r+0xd34>
 8013384:	d9000517 	ldw	r4,20(sp)
 8013388:	d8000c15 	stw	zero,48(sp)
 801338c:	213fffc4 	addi	r4,r4,-1
 8013390:	d9000515 	stw	r4,20(sp)
 8013394:	a463c83a 	sub	r17,r20,r17
 8013398:	8dbfffc4 	addi	r22,r17,-1
 801339c:	b0021916 	blt	r22,zero,8013c04 <_dtoa_r+0xb18>
 80133a0:	d8000815 	stw	zero,32(sp)
 80133a4:	d8800517 	ldw	r2,20(sp)
 80133a8:	10020e16 	blt	r2,zero,8013be4 <_dtoa_r+0xaf8>
 80133ac:	b0ad883a 	add	r22,r22,r2
 80133b0:	d8800a15 	stw	r2,40(sp)
 80133b4:	d8000915 	stw	zero,36(sp)
 80133b8:	d8c00317 	ldw	r3,12(sp)
 80133bc:	00800244 	movi	r2,9
 80133c0:	10c11a36 	bltu	r2,r3,801382c <_dtoa_r+0x740>
 80133c4:	00800144 	movi	r2,5
 80133c8:	10c4fc0e 	bge	r2,r3,80147bc <_dtoa_r+0x16d0>
 80133cc:	18ffff04 	addi	r3,r3,-4
 80133d0:	d8c00315 	stw	r3,12(sp)
 80133d4:	0029883a 	mov	r20,zero
 80133d8:	d9800317 	ldw	r6,12(sp)
 80133dc:	008000c4 	movi	r2,3
 80133e0:	3083bd26 	beq	r6,r2,80142d8 <_dtoa_r+0x11ec>
 80133e4:	1183670e 	bge	r2,r6,8014184 <_dtoa_r+0x1098>
 80133e8:	d8c00317 	ldw	r3,12(sp)
 80133ec:	00800104 	movi	r2,4
 80133f0:	1882e726 	beq	r3,r2,8013f90 <_dtoa_r+0xea4>
 80133f4:	00800144 	movi	r2,5
 80133f8:	1884f21e 	bne	r3,r2,80147c4 <_dtoa_r+0x16d8>
 80133fc:	00800044 	movi	r2,1
 8013400:	d8800b15 	stw	r2,44(sp)
 8013404:	d8c02217 	ldw	r3,136(sp)
 8013408:	d9000517 	ldw	r4,20(sp)
 801340c:	1907883a 	add	r3,r3,r4
 8013410:	19800044 	addi	r6,r3,1
 8013414:	d8c00d15 	stw	r3,52(sp)
 8013418:	d9800615 	stw	r6,24(sp)
 801341c:	0183c30e 	bge	zero,r6,801432c <_dtoa_r+0x1240>
 8013420:	d9800617 	ldw	r6,24(sp)
 8013424:	3023883a 	mov	r17,r6
 8013428:	80001115 	stw	zero,68(r16)
 801342c:	008005c4 	movi	r2,23
 8013430:	1184f62e 	bgeu	r2,r6,801480c <_dtoa_r+0x1720>
 8013434:	00c00044 	movi	r3,1
 8013438:	00800104 	movi	r2,4
 801343c:	1085883a 	add	r2,r2,r2
 8013440:	11000504 	addi	r4,r2,20
 8013444:	180b883a 	mov	r5,r3
 8013448:	18c00044 	addi	r3,r3,1
 801344c:	313ffb2e 	bgeu	r6,r4,801343c <__alt_data_end+0xfc01343c>
 8013450:	81401115 	stw	r5,68(r16)
 8013454:	8009883a 	mov	r4,r16
 8013458:	80173980 	call	8017398 <_Balloc>
 801345c:	d8800715 	stw	r2,28(sp)
 8013460:	80801015 	stw	r2,64(r16)
 8013464:	00800384 	movi	r2,14
 8013468:	1440fd36 	bltu	r2,r17,8013860 <_dtoa_r+0x774>
 801346c:	a000fc26 	beq	r20,zero,8013860 <_dtoa_r+0x774>
 8013470:	d8800517 	ldw	r2,20(sp)
 8013474:	0083b90e 	bge	zero,r2,801435c <_dtoa_r+0x1270>
 8013478:	d8c00517 	ldw	r3,20(sp)
 801347c:	108003cc 	andi	r2,r2,15
 8013480:	100490fa 	slli	r2,r2,3
 8013484:	182fd13a 	srai	r23,r3,4
 8013488:	00c200b4 	movhi	r3,2050
 801348c:	18c1ee04 	addi	r3,r3,1976
 8013490:	1885883a 	add	r2,r3,r2
 8013494:	b8c0040c 	andi	r3,r23,16
 8013498:	12c00017 	ldw	r11,0(r2)
 801349c:	12800117 	ldw	r10,4(r2)
 80134a0:	18039726 	beq	r3,zero,8014300 <_dtoa_r+0x1214>
 80134a4:	008200b4 	movhi	r2,2050
 80134a8:	1081e404 	addi	r2,r2,1936
 80134ac:	11800817 	ldw	r6,32(r2)
 80134b0:	11c00917 	ldw	r7,36(r2)
 80134b4:	9009883a 	mov	r4,r18
 80134b8:	980b883a 	mov	r5,r19
 80134bc:	da801615 	stw	r10,88(sp)
 80134c0:	dac01515 	stw	r11,84(sp)
 80134c4:	800ae2c0 	call	800ae2c <__divdf3>
 80134c8:	da801617 	ldw	r10,88(sp)
 80134cc:	dac01517 	ldw	r11,84(sp)
 80134d0:	bdc003cc 	andi	r23,r23,15
 80134d4:	044000c4 	movi	r17,3
 80134d8:	d8800e15 	stw	r2,56(sp)
 80134dc:	182b883a 	mov	r21,r3
 80134e0:	b8001126 	beq	r23,zero,8013528 <_dtoa_r+0x43c>
 80134e4:	050200b4 	movhi	r20,2050
 80134e8:	a501e404 	addi	r20,r20,1936
 80134ec:	5805883a 	mov	r2,r11
 80134f0:	5007883a 	mov	r3,r10
 80134f4:	b980004c 	andi	r6,r23,1
 80134f8:	1009883a 	mov	r4,r2
 80134fc:	b82fd07a 	srai	r23,r23,1
 8013500:	180b883a 	mov	r5,r3
 8013504:	30000426 	beq	r6,zero,8013518 <_dtoa_r+0x42c>
 8013508:	a1800017 	ldw	r6,0(r20)
 801350c:	a1c00117 	ldw	r7,4(r20)
 8013510:	8c400044 	addi	r17,r17,1
 8013514:	800b9f00 	call	800b9f0 <__muldf3>
 8013518:	a5000204 	addi	r20,r20,8
 801351c:	b83ff51e 	bne	r23,zero,80134f4 <__alt_data_end+0xfc0134f4>
 8013520:	1017883a 	mov	r11,r2
 8013524:	1815883a 	mov	r10,r3
 8013528:	d9000e17 	ldw	r4,56(sp)
 801352c:	a80b883a 	mov	r5,r21
 8013530:	580d883a 	mov	r6,r11
 8013534:	500f883a 	mov	r7,r10
 8013538:	800ae2c0 	call	800ae2c <__divdf3>
 801353c:	1029883a 	mov	r20,r2
 8013540:	182b883a 	mov	r21,r3
 8013544:	d9800c17 	ldw	r6,48(sp)
 8013548:	30000626 	beq	r6,zero,8013564 <_dtoa_r+0x478>
 801354c:	a009883a 	mov	r4,r20
 8013550:	a80b883a 	mov	r5,r21
 8013554:	000d883a 	mov	r6,zero
 8013558:	01cffc34 	movhi	r7,16368
 801355c:	800b9100 	call	800b910 <__ledf2>
 8013560:	10043216 	blt	r2,zero,801462c <_dtoa_r+0x1540>
 8013564:	8809883a 	mov	r4,r17
 8013568:	800cbb40 	call	800cbb4 <__floatsidf>
 801356c:	1009883a 	mov	r4,r2
 8013570:	180b883a 	mov	r5,r3
 8013574:	a00d883a 	mov	r6,r20
 8013578:	a80f883a 	mov	r7,r21
 801357c:	800b9f00 	call	800b9f0 <__muldf3>
 8013580:	000d883a 	mov	r6,zero
 8013584:	1009883a 	mov	r4,r2
 8013588:	180b883a 	mov	r5,r3
 801358c:	01d00734 	movhi	r7,16412
 8013590:	800a5900 	call	800a590 <__adddf3>
 8013594:	1023883a 	mov	r17,r2
 8013598:	d9800617 	ldw	r6,24(sp)
 801359c:	00bf3034 	movhi	r2,64704
 80135a0:	1885883a 	add	r2,r3,r2
 80135a4:	d8800e15 	stw	r2,56(sp)
 80135a8:	30032e26 	beq	r6,zero,8014264 <_dtoa_r+0x1178>
 80135ac:	d8c00517 	ldw	r3,20(sp)
 80135b0:	da800617 	ldw	r10,24(sp)
 80135b4:	d8c01215 	stw	r3,72(sp)
 80135b8:	d9000b17 	ldw	r4,44(sp)
 80135bc:	2003b026 	beq	r4,zero,8014480 <_dtoa_r+0x1394>
 80135c0:	50bfffc4 	addi	r2,r10,-1
 80135c4:	100490fa 	slli	r2,r2,3
 80135c8:	00c200b4 	movhi	r3,2050
 80135cc:	18c1ee04 	addi	r3,r3,1976
 80135d0:	1885883a 	add	r2,r3,r2
 80135d4:	11800017 	ldw	r6,0(r2)
 80135d8:	11c00117 	ldw	r7,4(r2)
 80135dc:	d8800717 	ldw	r2,28(sp)
 80135e0:	0009883a 	mov	r4,zero
 80135e4:	014ff834 	movhi	r5,16352
 80135e8:	da801615 	stw	r10,88(sp)
 80135ec:	15c00044 	addi	r23,r2,1
 80135f0:	800ae2c0 	call	800ae2c <__divdf3>
 80135f4:	d9c00e17 	ldw	r7,56(sp)
 80135f8:	880d883a 	mov	r6,r17
 80135fc:	1009883a 	mov	r4,r2
 8013600:	180b883a 	mov	r5,r3
 8013604:	800c25c0 	call	800c25c <__subdf3>
 8013608:	a80b883a 	mov	r5,r21
 801360c:	a009883a 	mov	r4,r20
 8013610:	d8c01015 	stw	r3,64(sp)
 8013614:	d8800e15 	stw	r2,56(sp)
 8013618:	800cb2c0 	call	800cb2c <__fixdfsi>
 801361c:	1009883a 	mov	r4,r2
 8013620:	d8801715 	stw	r2,92(sp)
 8013624:	800cbb40 	call	800cbb4 <__floatsidf>
 8013628:	a009883a 	mov	r4,r20
 801362c:	a80b883a 	mov	r5,r21
 8013630:	100d883a 	mov	r6,r2
 8013634:	180f883a 	mov	r7,r3
 8013638:	800c25c0 	call	800c25c <__subdf3>
 801363c:	da001717 	ldw	r8,92(sp)
 8013640:	1829883a 	mov	r20,r3
 8013644:	d8c00717 	ldw	r3,28(sp)
 8013648:	d9000e17 	ldw	r4,56(sp)
 801364c:	d9401017 	ldw	r5,64(sp)
 8013650:	42000c04 	addi	r8,r8,48
 8013654:	1023883a 	mov	r17,r2
 8013658:	1a000005 	stb	r8,0(r3)
 801365c:	880d883a 	mov	r6,r17
 8013660:	a00f883a 	mov	r7,r20
 8013664:	402b883a 	mov	r21,r8
 8013668:	800b8300 	call	800b830 <__gedf2>
 801366c:	00844516 	blt	zero,r2,8014784 <_dtoa_r+0x1698>
 8013670:	0009883a 	mov	r4,zero
 8013674:	014ffc34 	movhi	r5,16368
 8013678:	880d883a 	mov	r6,r17
 801367c:	a00f883a 	mov	r7,r20
 8013680:	800c25c0 	call	800c25c <__subdf3>
 8013684:	d9000e17 	ldw	r4,56(sp)
 8013688:	d9401017 	ldw	r5,64(sp)
 801368c:	100d883a 	mov	r6,r2
 8013690:	180f883a 	mov	r7,r3
 8013694:	800b8300 	call	800b830 <__gedf2>
 8013698:	da801617 	ldw	r10,88(sp)
 801369c:	00843616 	blt	zero,r2,8014778 <_dtoa_r+0x168c>
 80136a0:	00800044 	movi	r2,1
 80136a4:	12806e0e 	bge	r2,r10,8013860 <_dtoa_r+0x774>
 80136a8:	d9000717 	ldw	r4,28(sp)
 80136ac:	dd801315 	stw	r22,76(sp)
 80136b0:	dc001115 	stw	r16,68(sp)
 80136b4:	2295883a 	add	r10,r4,r10
 80136b8:	dcc01415 	stw	r19,80(sp)
 80136bc:	502d883a 	mov	r22,r10
 80136c0:	dcc01017 	ldw	r19,64(sp)
 80136c4:	b821883a 	mov	r16,r23
 80136c8:	dc801015 	stw	r18,64(sp)
 80136cc:	dc800e17 	ldw	r18,56(sp)
 80136d0:	00000906 	br	80136f8 <_dtoa_r+0x60c>
 80136d4:	800c25c0 	call	800c25c <__subdf3>
 80136d8:	1009883a 	mov	r4,r2
 80136dc:	180b883a 	mov	r5,r3
 80136e0:	900d883a 	mov	r6,r18
 80136e4:	980f883a 	mov	r7,r19
 80136e8:	800b9100 	call	800b910 <__ledf2>
 80136ec:	10040e16 	blt	r2,zero,8014728 <_dtoa_r+0x163c>
 80136f0:	b821883a 	mov	r16,r23
 80136f4:	bd841026 	beq	r23,r22,8014738 <_dtoa_r+0x164c>
 80136f8:	9009883a 	mov	r4,r18
 80136fc:	980b883a 	mov	r5,r19
 8013700:	000d883a 	mov	r6,zero
 8013704:	01d00934 	movhi	r7,16420
 8013708:	800b9f00 	call	800b9f0 <__muldf3>
 801370c:	000d883a 	mov	r6,zero
 8013710:	01d00934 	movhi	r7,16420
 8013714:	8809883a 	mov	r4,r17
 8013718:	a00b883a 	mov	r5,r20
 801371c:	1025883a 	mov	r18,r2
 8013720:	1827883a 	mov	r19,r3
 8013724:	800b9f00 	call	800b9f0 <__muldf3>
 8013728:	180b883a 	mov	r5,r3
 801372c:	1009883a 	mov	r4,r2
 8013730:	1823883a 	mov	r17,r3
 8013734:	1029883a 	mov	r20,r2
 8013738:	800cb2c0 	call	800cb2c <__fixdfsi>
 801373c:	1009883a 	mov	r4,r2
 8013740:	102b883a 	mov	r21,r2
 8013744:	800cbb40 	call	800cbb4 <__floatsidf>
 8013748:	a009883a 	mov	r4,r20
 801374c:	880b883a 	mov	r5,r17
 8013750:	100d883a 	mov	r6,r2
 8013754:	180f883a 	mov	r7,r3
 8013758:	800c25c0 	call	800c25c <__subdf3>
 801375c:	ad400c04 	addi	r21,r21,48
 8013760:	1009883a 	mov	r4,r2
 8013764:	180b883a 	mov	r5,r3
 8013768:	900d883a 	mov	r6,r18
 801376c:	980f883a 	mov	r7,r19
 8013770:	85400005 	stb	r21,0(r16)
 8013774:	1023883a 	mov	r17,r2
 8013778:	1829883a 	mov	r20,r3
 801377c:	800b9100 	call	800b910 <__ledf2>
 8013780:	bdc00044 	addi	r23,r23,1
 8013784:	0009883a 	mov	r4,zero
 8013788:	014ffc34 	movhi	r5,16368
 801378c:	880d883a 	mov	r6,r17
 8013790:	a00f883a 	mov	r7,r20
 8013794:	103fcf0e 	bge	r2,zero,80136d4 <__alt_data_end+0xfc0136d4>
 8013798:	d9801217 	ldw	r6,72(sp)
 801379c:	dc001117 	ldw	r16,68(sp)
 80137a0:	d9800515 	stw	r6,20(sp)
 80137a4:	8009883a 	mov	r4,r16
 80137a8:	e00b883a 	mov	r5,fp
 80137ac:	80174400 	call	8017440 <_Bfree>
 80137b0:	d8c00517 	ldw	r3,20(sp)
 80137b4:	d9002317 	ldw	r4,140(sp)
 80137b8:	d9802517 	ldw	r6,148(sp)
 80137bc:	b8000005 	stb	zero,0(r23)
 80137c0:	18800044 	addi	r2,r3,1
 80137c4:	20800015 	stw	r2,0(r4)
 80137c8:	30027226 	beq	r6,zero,8014194 <_dtoa_r+0x10a8>
 80137cc:	35c00015 	stw	r23,0(r6)
 80137d0:	d8800717 	ldw	r2,28(sp)
 80137d4:	003e7406 	br	80131a8 <__alt_data_end+0xfc0131a8>
 80137d8:	00800434 	movhi	r2,16
 80137dc:	10bfffc4 	addi	r2,r2,-1
 80137e0:	a8aa703a 	and	r21,r21,r2
 80137e4:	a83e801e 	bne	r21,zero,80131e8 <__alt_data_end+0xfc0131e8>
 80137e8:	008200b4 	movhi	r2,2050
 80137ec:	1081c904 	addi	r2,r2,1828
 80137f0:	003e7f06 	br	80131f0 <__alt_data_end+0xfc0131f0>
 80137f4:	10c00204 	addi	r3,r2,8
 80137f8:	003e8206 	br	8013204 <__alt_data_end+0xfc013204>
 80137fc:	01400434 	movhi	r5,16
 8013800:	297fffc4 	addi	r5,r5,-1
 8013804:	994a703a 	and	r5,r19,r5
 8013808:	9009883a 	mov	r4,r18
 801380c:	8c7f0044 	addi	r17,r17,-1023
 8013810:	294ffc34 	orhi	r5,r5,16368
 8013814:	dd000217 	ldw	r20,8(sp)
 8013818:	d8000f15 	stw	zero,60(sp)
 801381c:	003e9f06 	br	801329c <__alt_data_end+0xfc01329c>
 8013820:	008200b4 	movhi	r2,2050
 8013824:	10802f04 	addi	r2,r2,188
 8013828:	003e5f06 	br	80131a8 <__alt_data_end+0xfc0131a8>
 801382c:	80001115 	stw	zero,68(r16)
 8013830:	8009883a 	mov	r4,r16
 8013834:	000b883a 	mov	r5,zero
 8013838:	80173980 	call	8017398 <_Balloc>
 801383c:	01bfffc4 	movi	r6,-1
 8013840:	d8800715 	stw	r2,28(sp)
 8013844:	80801015 	stw	r2,64(r16)
 8013848:	00800044 	movi	r2,1
 801384c:	d9800615 	stw	r6,24(sp)
 8013850:	d8800b15 	stw	r2,44(sp)
 8013854:	d8002215 	stw	zero,136(sp)
 8013858:	d9800d15 	stw	r6,52(sp)
 801385c:	d8000315 	stw	zero,12(sp)
 8013860:	d8800117 	ldw	r2,4(sp)
 8013864:	10008e16 	blt	r2,zero,8013aa0 <_dtoa_r+0x9b4>
 8013868:	d9000517 	ldw	r4,20(sp)
 801386c:	00c00384 	movi	r3,14
 8013870:	19008b16 	blt	r3,r4,8013aa0 <_dtoa_r+0x9b4>
 8013874:	200490fa 	slli	r2,r4,3
 8013878:	00c200b4 	movhi	r3,2050
 801387c:	d9802217 	ldw	r6,136(sp)
 8013880:	18c1ee04 	addi	r3,r3,1976
 8013884:	1885883a 	add	r2,r3,r2
 8013888:	14400017 	ldw	r17,0(r2)
 801388c:	15000117 	ldw	r20,4(r2)
 8013890:	3001c716 	blt	r6,zero,8013fb0 <_dtoa_r+0xec4>
 8013894:	880d883a 	mov	r6,r17
 8013898:	a00f883a 	mov	r7,r20
 801389c:	9009883a 	mov	r4,r18
 80138a0:	980b883a 	mov	r5,r19
 80138a4:	800ae2c0 	call	800ae2c <__divdf3>
 80138a8:	180b883a 	mov	r5,r3
 80138ac:	1009883a 	mov	r4,r2
 80138b0:	800cb2c0 	call	800cb2c <__fixdfsi>
 80138b4:	1009883a 	mov	r4,r2
 80138b8:	102d883a 	mov	r22,r2
 80138bc:	800cbb40 	call	800cbb4 <__floatsidf>
 80138c0:	1009883a 	mov	r4,r2
 80138c4:	180b883a 	mov	r5,r3
 80138c8:	880d883a 	mov	r6,r17
 80138cc:	a00f883a 	mov	r7,r20
 80138d0:	800b9f00 	call	800b9f0 <__muldf3>
 80138d4:	9009883a 	mov	r4,r18
 80138d8:	980b883a 	mov	r5,r19
 80138dc:	100d883a 	mov	r6,r2
 80138e0:	180f883a 	mov	r7,r3
 80138e4:	800c25c0 	call	800c25c <__subdf3>
 80138e8:	d9000717 	ldw	r4,28(sp)
 80138ec:	d9800617 	ldw	r6,24(sp)
 80138f0:	180b883a 	mov	r5,r3
 80138f4:	b0c00c04 	addi	r3,r22,48
 80138f8:	20c00005 	stb	r3,0(r4)
 80138fc:	25c00044 	addi	r23,r4,1
 8013900:	01000044 	movi	r4,1
 8013904:	1011883a 	mov	r8,r2
 8013908:	2807883a 	mov	r3,r5
 801390c:	31003d26 	beq	r6,r4,8013a04 <_dtoa_r+0x918>
 8013910:	000d883a 	mov	r6,zero
 8013914:	01d00934 	movhi	r7,16420
 8013918:	1009883a 	mov	r4,r2
 801391c:	800b9f00 	call	800b9f0 <__muldf3>
 8013920:	1009883a 	mov	r4,r2
 8013924:	180b883a 	mov	r5,r3
 8013928:	000d883a 	mov	r6,zero
 801392c:	000f883a 	mov	r7,zero
 8013930:	1027883a 	mov	r19,r2
 8013934:	182b883a 	mov	r21,r3
 8013938:	800b7ac0 	call	800b7ac <__eqdf2>
 801393c:	103f9926 	beq	r2,zero,80137a4 <__alt_data_end+0xfc0137a4>
 8013940:	d8c00617 	ldw	r3,24(sp)
 8013944:	d9000717 	ldw	r4,28(sp)
 8013948:	b825883a 	mov	r18,r23
 801394c:	18bfffc4 	addi	r2,r3,-1
 8013950:	20ad883a 	add	r22,r4,r2
 8013954:	dc000315 	stw	r16,12(sp)
 8013958:	00000a06 	br	8013984 <_dtoa_r+0x898>
 801395c:	800b9f00 	call	800b9f0 <__muldf3>
 8013960:	1009883a 	mov	r4,r2
 8013964:	180b883a 	mov	r5,r3
 8013968:	000d883a 	mov	r6,zero
 801396c:	000f883a 	mov	r7,zero
 8013970:	1027883a 	mov	r19,r2
 8013974:	182b883a 	mov	r21,r3
 8013978:	b825883a 	mov	r18,r23
 801397c:	800b7ac0 	call	800b7ac <__eqdf2>
 8013980:	10022626 	beq	r2,zero,801421c <_dtoa_r+0x1130>
 8013984:	880d883a 	mov	r6,r17
 8013988:	a00f883a 	mov	r7,r20
 801398c:	9809883a 	mov	r4,r19
 8013990:	a80b883a 	mov	r5,r21
 8013994:	800ae2c0 	call	800ae2c <__divdf3>
 8013998:	180b883a 	mov	r5,r3
 801399c:	1009883a 	mov	r4,r2
 80139a0:	800cb2c0 	call	800cb2c <__fixdfsi>
 80139a4:	1009883a 	mov	r4,r2
 80139a8:	1021883a 	mov	r16,r2
 80139ac:	800cbb40 	call	800cbb4 <__floatsidf>
 80139b0:	1009883a 	mov	r4,r2
 80139b4:	180b883a 	mov	r5,r3
 80139b8:	880d883a 	mov	r6,r17
 80139bc:	a00f883a 	mov	r7,r20
 80139c0:	800b9f00 	call	800b9f0 <__muldf3>
 80139c4:	9809883a 	mov	r4,r19
 80139c8:	a80b883a 	mov	r5,r21
 80139cc:	100d883a 	mov	r6,r2
 80139d0:	180f883a 	mov	r7,r3
 80139d4:	800c25c0 	call	800c25c <__subdf3>
 80139d8:	82000c04 	addi	r8,r16,48
 80139dc:	92000005 	stb	r8,0(r18)
 80139e0:	1009883a 	mov	r4,r2
 80139e4:	180b883a 	mov	r5,r3
 80139e8:	000d883a 	mov	r6,zero
 80139ec:	01d00934 	movhi	r7,16420
 80139f0:	1011883a 	mov	r8,r2
 80139f4:	bdc00044 	addi	r23,r23,1
 80139f8:	95bfd81e 	bne	r18,r22,801395c <__alt_data_end+0xfc01395c>
 80139fc:	802d883a 	mov	r22,r16
 8013a00:	dc000317 	ldw	r16,12(sp)
 8013a04:	4009883a 	mov	r4,r8
 8013a08:	180b883a 	mov	r5,r3
 8013a0c:	400d883a 	mov	r6,r8
 8013a10:	180f883a 	mov	r7,r3
 8013a14:	800a5900 	call	800a590 <__adddf3>
 8013a18:	8809883a 	mov	r4,r17
 8013a1c:	a00b883a 	mov	r5,r20
 8013a20:	100d883a 	mov	r6,r2
 8013a24:	180f883a 	mov	r7,r3
 8013a28:	1027883a 	mov	r19,r2
 8013a2c:	1825883a 	mov	r18,r3
 8013a30:	800b9100 	call	800b910 <__ledf2>
 8013a34:	10000816 	blt	r2,zero,8013a58 <_dtoa_r+0x96c>
 8013a38:	8809883a 	mov	r4,r17
 8013a3c:	a00b883a 	mov	r5,r20
 8013a40:	980d883a 	mov	r6,r19
 8013a44:	900f883a 	mov	r7,r18
 8013a48:	800b7ac0 	call	800b7ac <__eqdf2>
 8013a4c:	103f551e 	bne	r2,zero,80137a4 <__alt_data_end+0xfc0137a4>
 8013a50:	b580004c 	andi	r22,r22,1
 8013a54:	b03f5326 	beq	r22,zero,80137a4 <__alt_data_end+0xfc0137a4>
 8013a58:	bd7fffc3 	ldbu	r21,-1(r23)
 8013a5c:	b8bfffc4 	addi	r2,r23,-1
 8013a60:	1007883a 	mov	r3,r2
 8013a64:	01400e44 	movi	r5,57
 8013a68:	d9800717 	ldw	r6,28(sp)
 8013a6c:	00000506 	br	8013a84 <_dtoa_r+0x998>
 8013a70:	18ffffc4 	addi	r3,r3,-1
 8013a74:	30825e26 	beq	r6,r2,80143f0 <_dtoa_r+0x1304>
 8013a78:	1d400003 	ldbu	r21,0(r3)
 8013a7c:	102f883a 	mov	r23,r2
 8013a80:	10bfffc4 	addi	r2,r2,-1
 8013a84:	a9003fcc 	andi	r4,r21,255
 8013a88:	2100201c 	xori	r4,r4,128
 8013a8c:	213fe004 	addi	r4,r4,-128
 8013a90:	217ff726 	beq	r4,r5,8013a70 <__alt_data_end+0xfc013a70>
 8013a94:	aa000044 	addi	r8,r21,1
 8013a98:	12000005 	stb	r8,0(r2)
 8013a9c:	003f4106 	br	80137a4 <__alt_data_end+0xfc0137a4>
 8013aa0:	d8c00b17 	ldw	r3,44(sp)
 8013aa4:	18006726 	beq	r3,zero,8013c44 <_dtoa_r+0xb58>
 8013aa8:	d9000317 	ldw	r4,12(sp)
 8013aac:	00c00044 	movi	r3,1
 8013ab0:	19016a0e 	bge	r3,r4,801405c <_dtoa_r+0xf70>
 8013ab4:	d8800617 	ldw	r2,24(sp)
 8013ab8:	d8c00917 	ldw	r3,36(sp)
 8013abc:	157fffc4 	addi	r21,r2,-1
 8013ac0:	1d420716 	blt	r3,r21,80142e0 <_dtoa_r+0x11f4>
 8013ac4:	1d6bc83a 	sub	r21,r3,r21
 8013ac8:	d8800617 	ldw	r2,24(sp)
 8013acc:	1002c716 	blt	r2,zero,80145ec <_dtoa_r+0x1500>
 8013ad0:	dd000817 	ldw	r20,32(sp)
 8013ad4:	d8800617 	ldw	r2,24(sp)
 8013ad8:	d9800817 	ldw	r6,32(sp)
 8013adc:	8009883a 	mov	r4,r16
 8013ae0:	01400044 	movi	r5,1
 8013ae4:	308d883a 	add	r6,r6,r2
 8013ae8:	d9800815 	stw	r6,32(sp)
 8013aec:	b0ad883a 	add	r22,r22,r2
 8013af0:	80177c00 	call	80177c0 <__i2b>
 8013af4:	1023883a 	mov	r17,r2
 8013af8:	a0000826 	beq	r20,zero,8013b1c <_dtoa_r+0xa30>
 8013afc:	0580070e 	bge	zero,r22,8013b1c <_dtoa_r+0xa30>
 8013b00:	b005883a 	mov	r2,r22
 8013b04:	a5812016 	blt	r20,r22,8013f88 <_dtoa_r+0xe9c>
 8013b08:	d8c00817 	ldw	r3,32(sp)
 8013b0c:	a0a9c83a 	sub	r20,r20,r2
 8013b10:	b0adc83a 	sub	r22,r22,r2
 8013b14:	1887c83a 	sub	r3,r3,r2
 8013b18:	d8c00815 	stw	r3,32(sp)
 8013b1c:	d9000917 	ldw	r4,36(sp)
 8013b20:	0100140e 	bge	zero,r4,8013b74 <_dtoa_r+0xa88>
 8013b24:	d9800b17 	ldw	r6,44(sp)
 8013b28:	3001e526 	beq	r6,zero,80142c0 <_dtoa_r+0x11d4>
 8013b2c:	05400e0e 	bge	zero,r21,8013b68 <_dtoa_r+0xa7c>
 8013b30:	880b883a 	mov	r5,r17
 8013b34:	8009883a 	mov	r4,r16
 8013b38:	a80d883a 	mov	r6,r21
 8013b3c:	8017a8c0 	call	8017a8c <__pow5mult>
 8013b40:	e00d883a 	mov	r6,fp
 8013b44:	8009883a 	mov	r4,r16
 8013b48:	100b883a 	mov	r5,r2
 8013b4c:	1023883a 	mov	r17,r2
 8013b50:	80177fc0 	call	80177fc <__multiply>
 8013b54:	102f883a 	mov	r23,r2
 8013b58:	e00b883a 	mov	r5,fp
 8013b5c:	8009883a 	mov	r4,r16
 8013b60:	80174400 	call	8017440 <_Bfree>
 8013b64:	b839883a 	mov	fp,r23
 8013b68:	d8800917 	ldw	r2,36(sp)
 8013b6c:	154dc83a 	sub	r6,r2,r21
 8013b70:	3001281e 	bne	r6,zero,8014014 <_dtoa_r+0xf28>
 8013b74:	05c00044 	movi	r23,1
 8013b78:	8009883a 	mov	r4,r16
 8013b7c:	b80b883a 	mov	r5,r23
 8013b80:	80177c00 	call	80177c0 <__i2b>
 8013b84:	d8c00a17 	ldw	r3,40(sp)
 8013b88:	102b883a 	mov	r21,r2
 8013b8c:	00c0310e 	bge	zero,r3,8013c54 <_dtoa_r+0xb68>
 8013b90:	8009883a 	mov	r4,r16
 8013b94:	100b883a 	mov	r5,r2
 8013b98:	180d883a 	mov	r6,r3
 8013b9c:	8017a8c0 	call	8017a8c <__pow5mult>
 8013ba0:	d9000317 	ldw	r4,12(sp)
 8013ba4:	102b883a 	mov	r21,r2
 8013ba8:	b9011f0e 	bge	r23,r4,8014028 <_dtoa_r+0xf3c>
 8013bac:	0027883a 	mov	r19,zero
 8013bb0:	a8800417 	ldw	r2,16(r21)
 8013bb4:	10800104 	addi	r2,r2,4
 8013bb8:	1085883a 	add	r2,r2,r2
 8013bbc:	1085883a 	add	r2,r2,r2
 8013bc0:	a885883a 	add	r2,r21,r2
 8013bc4:	11000017 	ldw	r4,0(r2)
 8013bc8:	80176a80 	call	80176a8 <__hi0bits>
 8013bcc:	00c00804 	movi	r3,32
 8013bd0:	1885c83a 	sub	r2,r3,r2
 8013bd4:	00002506 	br	8013c6c <_dtoa_r+0xb80>
 8013bd8:	01800044 	movi	r6,1
 8013bdc:	d9800c15 	stw	r6,48(sp)
 8013be0:	003dec06 	br	8013394 <__alt_data_end+0xfc013394>
 8013be4:	d8c00817 	ldw	r3,32(sp)
 8013be8:	d9000517 	ldw	r4,20(sp)
 8013bec:	d8000a15 	stw	zero,40(sp)
 8013bf0:	1907c83a 	sub	r3,r3,r4
 8013bf4:	010dc83a 	sub	r6,zero,r4
 8013bf8:	d8c00815 	stw	r3,32(sp)
 8013bfc:	d9800915 	stw	r6,36(sp)
 8013c00:	003ded06 	br	80133b8 <__alt_data_end+0xfc0133b8>
 8013c04:	05adc83a 	sub	r22,zero,r22
 8013c08:	dd800815 	stw	r22,32(sp)
 8013c0c:	002d883a 	mov	r22,zero
 8013c10:	003de406 	br	80133a4 <__alt_data_end+0xfc0133a4>
 8013c14:	d9000517 	ldw	r4,20(sp)
 8013c18:	800cbb40 	call	800cbb4 <__floatsidf>
 8013c1c:	1009883a 	mov	r4,r2
 8013c20:	180b883a 	mov	r5,r3
 8013c24:	b00d883a 	mov	r6,r22
 8013c28:	a80f883a 	mov	r7,r21
 8013c2c:	800b7ac0 	call	800b7ac <__eqdf2>
 8013c30:	103dc726 	beq	r2,zero,8013350 <__alt_data_end+0xfc013350>
 8013c34:	d8800517 	ldw	r2,20(sp)
 8013c38:	10bfffc4 	addi	r2,r2,-1
 8013c3c:	d8800515 	stw	r2,20(sp)
 8013c40:	003dc306 	br	8013350 <__alt_data_end+0xfc013350>
 8013c44:	dd400917 	ldw	r21,36(sp)
 8013c48:	dd000817 	ldw	r20,32(sp)
 8013c4c:	0023883a 	mov	r17,zero
 8013c50:	003fa906 	br	8013af8 <__alt_data_end+0xfc013af8>
 8013c54:	d9800317 	ldw	r6,12(sp)
 8013c58:	b981670e 	bge	r23,r6,80141f8 <_dtoa_r+0x110c>
 8013c5c:	0027883a 	mov	r19,zero
 8013c60:	d8c00a17 	ldw	r3,40(sp)
 8013c64:	183fd21e 	bne	r3,zero,8013bb0 <__alt_data_end+0xfc013bb0>
 8013c68:	00800044 	movi	r2,1
 8013c6c:	1585883a 	add	r2,r2,r22
 8013c70:	108007cc 	andi	r2,r2,31
 8013c74:	10005f26 	beq	r2,zero,8013df4 <_dtoa_r+0xd08>
 8013c78:	00c00804 	movi	r3,32
 8013c7c:	1887c83a 	sub	r3,r3,r2
 8013c80:	01000104 	movi	r4,4
 8013c84:	20c2dd0e 	bge	r4,r3,80147fc <_dtoa_r+0x1710>
 8013c88:	d9000817 	ldw	r4,32(sp)
 8013c8c:	00c00704 	movi	r3,28
 8013c90:	1885c83a 	sub	r2,r3,r2
 8013c94:	2089883a 	add	r4,r4,r2
 8013c98:	d9000815 	stw	r4,32(sp)
 8013c9c:	a0a9883a 	add	r20,r20,r2
 8013ca0:	b0ad883a 	add	r22,r22,r2
 8013ca4:	d8800817 	ldw	r2,32(sp)
 8013ca8:	0080050e 	bge	zero,r2,8013cc0 <_dtoa_r+0xbd4>
 8013cac:	e00b883a 	mov	r5,fp
 8013cb0:	8009883a 	mov	r4,r16
 8013cb4:	100d883a 	mov	r6,r2
 8013cb8:	8017bcc0 	call	8017bcc <__lshift>
 8013cbc:	1039883a 	mov	fp,r2
 8013cc0:	0580050e 	bge	zero,r22,8013cd8 <_dtoa_r+0xbec>
 8013cc4:	a80b883a 	mov	r5,r21
 8013cc8:	8009883a 	mov	r4,r16
 8013ccc:	b00d883a 	mov	r6,r22
 8013cd0:	8017bcc0 	call	8017bcc <__lshift>
 8013cd4:	102b883a 	mov	r21,r2
 8013cd8:	d8c00c17 	ldw	r3,48(sp)
 8013cdc:	1801161e 	bne	r3,zero,8014138 <_dtoa_r+0x104c>
 8013ce0:	d8c00617 	ldw	r3,24(sp)
 8013ce4:	00c12d0e 	bge	zero,r3,801419c <_dtoa_r+0x10b0>
 8013ce8:	d8c00b17 	ldw	r3,44(sp)
 8013cec:	1800571e 	bne	r3,zero,8013e4c <_dtoa_r+0xd60>
 8013cf0:	dc800717 	ldw	r18,28(sp)
 8013cf4:	dcc00617 	ldw	r19,24(sp)
 8013cf8:	9029883a 	mov	r20,r18
 8013cfc:	00000206 	br	8013d08 <_dtoa_r+0xc1c>
 8013d00:	80174680 	call	8017468 <__multadd>
 8013d04:	1039883a 	mov	fp,r2
 8013d08:	e009883a 	mov	r4,fp
 8013d0c:	a80b883a 	mov	r5,r21
 8013d10:	8012ec40 	call	8012ec4 <quorem>
 8013d14:	10800c04 	addi	r2,r2,48
 8013d18:	90800005 	stb	r2,0(r18)
 8013d1c:	94800044 	addi	r18,r18,1
 8013d20:	9507c83a 	sub	r3,r18,r20
 8013d24:	8009883a 	mov	r4,r16
 8013d28:	e00b883a 	mov	r5,fp
 8013d2c:	01800284 	movi	r6,10
 8013d30:	000f883a 	mov	r7,zero
 8013d34:	1cfff216 	blt	r3,r19,8013d00 <__alt_data_end+0xfc013d00>
 8013d38:	1011883a 	mov	r8,r2
 8013d3c:	d8800617 	ldw	r2,24(sp)
 8013d40:	00822e0e 	bge	zero,r2,80145fc <_dtoa_r+0x1510>
 8013d44:	d9000717 	ldw	r4,28(sp)
 8013d48:	0025883a 	mov	r18,zero
 8013d4c:	20af883a 	add	r23,r4,r2
 8013d50:	e00b883a 	mov	r5,fp
 8013d54:	01800044 	movi	r6,1
 8013d58:	8009883a 	mov	r4,r16
 8013d5c:	da001715 	stw	r8,92(sp)
 8013d60:	8017bcc0 	call	8017bcc <__lshift>
 8013d64:	1009883a 	mov	r4,r2
 8013d68:	a80b883a 	mov	r5,r21
 8013d6c:	1039883a 	mov	fp,r2
 8013d70:	8017d140 	call	8017d14 <__mcmp>
 8013d74:	da001717 	ldw	r8,92(sp)
 8013d78:	00816e0e 	bge	zero,r2,8014334 <_dtoa_r+0x1248>
 8013d7c:	b93fffc3 	ldbu	r4,-1(r23)
 8013d80:	b8bfffc4 	addi	r2,r23,-1
 8013d84:	1007883a 	mov	r3,r2
 8013d88:	01800e44 	movi	r6,57
 8013d8c:	d9c00717 	ldw	r7,28(sp)
 8013d90:	00000506 	br	8013da8 <_dtoa_r+0xcbc>
 8013d94:	18ffffc4 	addi	r3,r3,-1
 8013d98:	38811926 	beq	r7,r2,8014200 <_dtoa_r+0x1114>
 8013d9c:	19000003 	ldbu	r4,0(r3)
 8013da0:	102f883a 	mov	r23,r2
 8013da4:	10bfffc4 	addi	r2,r2,-1
 8013da8:	21403fcc 	andi	r5,r4,255
 8013dac:	2940201c 	xori	r5,r5,128
 8013db0:	297fe004 	addi	r5,r5,-128
 8013db4:	29bff726 	beq	r5,r6,8013d94 <__alt_data_end+0xfc013d94>
 8013db8:	21000044 	addi	r4,r4,1
 8013dbc:	11000005 	stb	r4,0(r2)
 8013dc0:	8009883a 	mov	r4,r16
 8013dc4:	a80b883a 	mov	r5,r21
 8013dc8:	80174400 	call	8017440 <_Bfree>
 8013dcc:	883e7526 	beq	r17,zero,80137a4 <__alt_data_end+0xfc0137a4>
 8013dd0:	90000426 	beq	r18,zero,8013de4 <_dtoa_r+0xcf8>
 8013dd4:	94400326 	beq	r18,r17,8013de4 <_dtoa_r+0xcf8>
 8013dd8:	8009883a 	mov	r4,r16
 8013ddc:	900b883a 	mov	r5,r18
 8013de0:	80174400 	call	8017440 <_Bfree>
 8013de4:	8009883a 	mov	r4,r16
 8013de8:	880b883a 	mov	r5,r17
 8013dec:	80174400 	call	8017440 <_Bfree>
 8013df0:	003e6c06 	br	80137a4 <__alt_data_end+0xfc0137a4>
 8013df4:	00800704 	movi	r2,28
 8013df8:	d9800817 	ldw	r6,32(sp)
 8013dfc:	a0a9883a 	add	r20,r20,r2
 8013e00:	b0ad883a 	add	r22,r22,r2
 8013e04:	308d883a 	add	r6,r6,r2
 8013e08:	d9800815 	stw	r6,32(sp)
 8013e0c:	003fa506 	br	8013ca4 <__alt_data_end+0xfc013ca4>
 8013e10:	013efb84 	movi	r4,-1042
 8013e14:	246bc83a 	sub	r21,r4,r17
 8013e18:	9548983a 	sll	r4,r18,r21
 8013e1c:	003d1806 	br	8013280 <__alt_data_end+0xfc013280>
 8013e20:	d8000c15 	stw	zero,48(sp)
 8013e24:	003d5b06 	br	8013394 <__alt_data_end+0xfc013394>
 8013e28:	880b883a 	mov	r5,r17
 8013e2c:	8009883a 	mov	r4,r16
 8013e30:	01800284 	movi	r6,10
 8013e34:	000f883a 	mov	r7,zero
 8013e38:	80174680 	call	8017468 <__multadd>
 8013e3c:	1023883a 	mov	r17,r2
 8013e40:	d8800d17 	ldw	r2,52(sp)
 8013e44:	0082550e 	bge	zero,r2,801479c <_dtoa_r+0x16b0>
 8013e48:	d8800615 	stw	r2,24(sp)
 8013e4c:	0500050e 	bge	zero,r20,8013e64 <_dtoa_r+0xd78>
 8013e50:	880b883a 	mov	r5,r17
 8013e54:	8009883a 	mov	r4,r16
 8013e58:	a00d883a 	mov	r6,r20
 8013e5c:	8017bcc0 	call	8017bcc <__lshift>
 8013e60:	1023883a 	mov	r17,r2
 8013e64:	98016a1e 	bne	r19,zero,8014410 <_dtoa_r+0x1324>
 8013e68:	8829883a 	mov	r20,r17
 8013e6c:	d9000617 	ldw	r4,24(sp)
 8013e70:	dcc00717 	ldw	r19,28(sp)
 8013e74:	9480004c 	andi	r18,r18,1
 8013e78:	20bfffc4 	addi	r2,r4,-1
 8013e7c:	9885883a 	add	r2,r19,r2
 8013e80:	d8800415 	stw	r2,16(sp)
 8013e84:	dc800615 	stw	r18,24(sp)
 8013e88:	e009883a 	mov	r4,fp
 8013e8c:	a80b883a 	mov	r5,r21
 8013e90:	8012ec40 	call	8012ec4 <quorem>
 8013e94:	e009883a 	mov	r4,fp
 8013e98:	880b883a 	mov	r5,r17
 8013e9c:	102f883a 	mov	r23,r2
 8013ea0:	8017d140 	call	8017d14 <__mcmp>
 8013ea4:	8009883a 	mov	r4,r16
 8013ea8:	a80b883a 	mov	r5,r21
 8013eac:	a00d883a 	mov	r6,r20
 8013eb0:	102d883a 	mov	r22,r2
 8013eb4:	8017d740 	call	8017d74 <__mdiff>
 8013eb8:	1007883a 	mov	r3,r2
 8013ebc:	10800317 	ldw	r2,12(r2)
 8013ec0:	bc800c04 	addi	r18,r23,48
 8013ec4:	1000971e 	bne	r2,zero,8014124 <_dtoa_r+0x1038>
 8013ec8:	180b883a 	mov	r5,r3
 8013ecc:	e009883a 	mov	r4,fp
 8013ed0:	d8c01515 	stw	r3,84(sp)
 8013ed4:	8017d140 	call	8017d14 <__mcmp>
 8013ed8:	d8c01517 	ldw	r3,84(sp)
 8013edc:	8009883a 	mov	r4,r16
 8013ee0:	d8801515 	stw	r2,84(sp)
 8013ee4:	180b883a 	mov	r5,r3
 8013ee8:	80174400 	call	8017440 <_Bfree>
 8013eec:	d8801517 	ldw	r2,84(sp)
 8013ef0:	1000041e 	bne	r2,zero,8013f04 <_dtoa_r+0xe18>
 8013ef4:	d9800317 	ldw	r6,12(sp)
 8013ef8:	3000021e 	bne	r6,zero,8013f04 <_dtoa_r+0xe18>
 8013efc:	d8c00617 	ldw	r3,24(sp)
 8013f00:	18007626 	beq	r3,zero,80140dc <_dtoa_r+0xff0>
 8013f04:	b0005b16 	blt	r22,zero,8014074 <_dtoa_r+0xf88>
 8013f08:	b000041e 	bne	r22,zero,8013f1c <_dtoa_r+0xe30>
 8013f0c:	d9000317 	ldw	r4,12(sp)
 8013f10:	2000021e 	bne	r4,zero,8013f1c <_dtoa_r+0xe30>
 8013f14:	d8c00617 	ldw	r3,24(sp)
 8013f18:	18005626 	beq	r3,zero,8014074 <_dtoa_r+0xf88>
 8013f1c:	00814d16 	blt	zero,r2,8014454 <_dtoa_r+0x1368>
 8013f20:	d8c00417 	ldw	r3,16(sp)
 8013f24:	9d800044 	addi	r22,r19,1
 8013f28:	9c800005 	stb	r18,0(r19)
 8013f2c:	b02f883a 	mov	r23,r22
 8013f30:	98c14c26 	beq	r19,r3,8014464 <_dtoa_r+0x1378>
 8013f34:	e00b883a 	mov	r5,fp
 8013f38:	8009883a 	mov	r4,r16
 8013f3c:	01800284 	movi	r6,10
 8013f40:	000f883a 	mov	r7,zero
 8013f44:	80174680 	call	8017468 <__multadd>
 8013f48:	1039883a 	mov	fp,r2
 8013f4c:	8d006d26 	beq	r17,r20,8014104 <_dtoa_r+0x1018>
 8013f50:	880b883a 	mov	r5,r17
 8013f54:	01800284 	movi	r6,10
 8013f58:	000f883a 	mov	r7,zero
 8013f5c:	8009883a 	mov	r4,r16
 8013f60:	80174680 	call	8017468 <__multadd>
 8013f64:	a00b883a 	mov	r5,r20
 8013f68:	8009883a 	mov	r4,r16
 8013f6c:	01800284 	movi	r6,10
 8013f70:	000f883a 	mov	r7,zero
 8013f74:	1023883a 	mov	r17,r2
 8013f78:	80174680 	call	8017468 <__multadd>
 8013f7c:	1029883a 	mov	r20,r2
 8013f80:	b027883a 	mov	r19,r22
 8013f84:	003fc006 	br	8013e88 <__alt_data_end+0xfc013e88>
 8013f88:	a005883a 	mov	r2,r20
 8013f8c:	003ede06 	br	8013b08 <__alt_data_end+0xfc013b08>
 8013f90:	01000044 	movi	r4,1
 8013f94:	d9000b15 	stw	r4,44(sp)
 8013f98:	d9802217 	ldw	r6,136(sp)
 8013f9c:	0180dc0e 	bge	zero,r6,8014310 <_dtoa_r+0x1224>
 8013fa0:	3023883a 	mov	r17,r6
 8013fa4:	d9800d15 	stw	r6,52(sp)
 8013fa8:	d9800615 	stw	r6,24(sp)
 8013fac:	003d1e06 	br	8013428 <__alt_data_end+0xfc013428>
 8013fb0:	d8800617 	ldw	r2,24(sp)
 8013fb4:	00be3716 	blt	zero,r2,8013894 <__alt_data_end+0xfc013894>
 8013fb8:	1000be1e 	bne	r2,zero,80142b4 <_dtoa_r+0x11c8>
 8013fbc:	8809883a 	mov	r4,r17
 8013fc0:	a00b883a 	mov	r5,r20
 8013fc4:	000d883a 	mov	r6,zero
 8013fc8:	01d00534 	movhi	r7,16404
 8013fcc:	800b9f00 	call	800b9f0 <__muldf3>
 8013fd0:	1009883a 	mov	r4,r2
 8013fd4:	180b883a 	mov	r5,r3
 8013fd8:	900d883a 	mov	r6,r18
 8013fdc:	980f883a 	mov	r7,r19
 8013fe0:	800b8300 	call	800b830 <__gedf2>
 8013fe4:	002b883a 	mov	r21,zero
 8013fe8:	0023883a 	mov	r17,zero
 8013fec:	10007a16 	blt	r2,zero,80141d8 <_dtoa_r+0x10ec>
 8013ff0:	d9002217 	ldw	r4,136(sp)
 8013ff4:	ddc00717 	ldw	r23,28(sp)
 8013ff8:	0108303a 	nor	r4,zero,r4
 8013ffc:	d9000515 	stw	r4,20(sp)
 8014000:	8009883a 	mov	r4,r16
 8014004:	a80b883a 	mov	r5,r21
 8014008:	80174400 	call	8017440 <_Bfree>
 801400c:	883f751e 	bne	r17,zero,8013de4 <__alt_data_end+0xfc013de4>
 8014010:	003de406 	br	80137a4 <__alt_data_end+0xfc0137a4>
 8014014:	e00b883a 	mov	r5,fp
 8014018:	8009883a 	mov	r4,r16
 801401c:	8017a8c0 	call	8017a8c <__pow5mult>
 8014020:	1039883a 	mov	fp,r2
 8014024:	003ed306 	br	8013b74 <__alt_data_end+0xfc013b74>
 8014028:	903ee01e 	bne	r18,zero,8013bac <__alt_data_end+0xfc013bac>
 801402c:	00800434 	movhi	r2,16
 8014030:	10bfffc4 	addi	r2,r2,-1
 8014034:	9884703a 	and	r2,r19,r2
 8014038:	103f081e 	bne	r2,zero,8013c5c <__alt_data_end+0xfc013c5c>
 801403c:	9cdffc2c 	andhi	r19,r19,32752
 8014040:	983f0626 	beq	r19,zero,8013c5c <__alt_data_end+0xfc013c5c>
 8014044:	d8800817 	ldw	r2,32(sp)
 8014048:	b5800044 	addi	r22,r22,1
 801404c:	04c00044 	movi	r19,1
 8014050:	10800044 	addi	r2,r2,1
 8014054:	d8800815 	stw	r2,32(sp)
 8014058:	003f0106 	br	8013c60 <__alt_data_end+0xfc013c60>
 801405c:	d9800f17 	ldw	r6,60(sp)
 8014060:	30016826 	beq	r6,zero,8014604 <_dtoa_r+0x1518>
 8014064:	10810cc4 	addi	r2,r2,1075
 8014068:	dd400917 	ldw	r21,36(sp)
 801406c:	dd000817 	ldw	r20,32(sp)
 8014070:	003e9906 	br	8013ad8 <__alt_data_end+0xfc013ad8>
 8014074:	9011883a 	mov	r8,r18
 8014078:	4007883a 	mov	r3,r8
 801407c:	e02d883a 	mov	r22,fp
 8014080:	0080100e 	bge	zero,r2,80140c4 <_dtoa_r+0xfd8>
 8014084:	01800044 	movi	r6,1
 8014088:	8009883a 	mov	r4,r16
 801408c:	e00b883a 	mov	r5,fp
 8014090:	da001515 	stw	r8,84(sp)
 8014094:	da001715 	stw	r8,92(sp)
 8014098:	8017bcc0 	call	8017bcc <__lshift>
 801409c:	1009883a 	mov	r4,r2
 80140a0:	a80b883a 	mov	r5,r21
 80140a4:	102d883a 	mov	r22,r2
 80140a8:	8017d140 	call	8017d14 <__mcmp>
 80140ac:	d8c01517 	ldw	r3,84(sp)
 80140b0:	da001717 	ldw	r8,92(sp)
 80140b4:	0081a50e 	bge	zero,r2,801474c <_dtoa_r+0x1660>
 80140b8:	00800e44 	movi	r2,57
 80140bc:	40817b26 	beq	r8,r2,80146ac <_dtoa_r+0x15c0>
 80140c0:	40c00044 	addi	r3,r8,1
 80140c4:	8825883a 	mov	r18,r17
 80140c8:	9dc00044 	addi	r23,r19,1
 80140cc:	98c00005 	stb	r3,0(r19)
 80140d0:	a023883a 	mov	r17,r20
 80140d4:	b039883a 	mov	fp,r22
 80140d8:	003f3906 	br	8013dc0 <__alt_data_end+0xfc013dc0>
 80140dc:	00800e44 	movi	r2,57
 80140e0:	9011883a 	mov	r8,r18
 80140e4:	90817226 	beq	r18,r2,80146b0 <_dtoa_r+0x15c4>
 80140e8:	0580010e 	bge	zero,r22,80140f0 <_dtoa_r+0x1004>
 80140ec:	ba000c44 	addi	r8,r23,49
 80140f0:	8825883a 	mov	r18,r17
 80140f4:	9dc00044 	addi	r23,r19,1
 80140f8:	9a000005 	stb	r8,0(r19)
 80140fc:	a023883a 	mov	r17,r20
 8014100:	003f2f06 	br	8013dc0 <__alt_data_end+0xfc013dc0>
 8014104:	880b883a 	mov	r5,r17
 8014108:	8009883a 	mov	r4,r16
 801410c:	01800284 	movi	r6,10
 8014110:	000f883a 	mov	r7,zero
 8014114:	80174680 	call	8017468 <__multadd>
 8014118:	1023883a 	mov	r17,r2
 801411c:	1029883a 	mov	r20,r2
 8014120:	003f9706 	br	8013f80 <__alt_data_end+0xfc013f80>
 8014124:	8009883a 	mov	r4,r16
 8014128:	180b883a 	mov	r5,r3
 801412c:	80174400 	call	8017440 <_Bfree>
 8014130:	00800044 	movi	r2,1
 8014134:	003f7306 	br	8013f04 <__alt_data_end+0xfc013f04>
 8014138:	e009883a 	mov	r4,fp
 801413c:	a80b883a 	mov	r5,r21
 8014140:	8017d140 	call	8017d14 <__mcmp>
 8014144:	103ee60e 	bge	r2,zero,8013ce0 <__alt_data_end+0xfc013ce0>
 8014148:	8009883a 	mov	r4,r16
 801414c:	e00b883a 	mov	r5,fp
 8014150:	01800284 	movi	r6,10
 8014154:	000f883a 	mov	r7,zero
 8014158:	80174680 	call	8017468 <__multadd>
 801415c:	d9000517 	ldw	r4,20(sp)
 8014160:	d9800b17 	ldw	r6,44(sp)
 8014164:	1039883a 	mov	fp,r2
 8014168:	213fffc4 	addi	r4,r4,-1
 801416c:	d9000515 	stw	r4,20(sp)
 8014170:	303f2d1e 	bne	r6,zero,8013e28 <__alt_data_end+0xfc013e28>
 8014174:	d9000d17 	ldw	r4,52(sp)
 8014178:	0101780e 	bge	zero,r4,801475c <_dtoa_r+0x1670>
 801417c:	d9000615 	stw	r4,24(sp)
 8014180:	003edb06 	br	8013cf0 <__alt_data_end+0xfc013cf0>
 8014184:	00800084 	movi	r2,2
 8014188:	30818e1e 	bne	r6,r2,80147c4 <_dtoa_r+0x16d8>
 801418c:	d8000b15 	stw	zero,44(sp)
 8014190:	003f8106 	br	8013f98 <__alt_data_end+0xfc013f98>
 8014194:	d8800717 	ldw	r2,28(sp)
 8014198:	003c0306 	br	80131a8 <__alt_data_end+0xfc0131a8>
 801419c:	d9000317 	ldw	r4,12(sp)
 80141a0:	00800084 	movi	r2,2
 80141a4:	113ed00e 	bge	r2,r4,8013ce8 <__alt_data_end+0xfc013ce8>
 80141a8:	d8c00617 	ldw	r3,24(sp)
 80141ac:	183f901e 	bne	r3,zero,8013ff0 <__alt_data_end+0xfc013ff0>
 80141b0:	a80b883a 	mov	r5,r21
 80141b4:	8009883a 	mov	r4,r16
 80141b8:	01800144 	movi	r6,5
 80141bc:	000f883a 	mov	r7,zero
 80141c0:	80174680 	call	8017468 <__multadd>
 80141c4:	e009883a 	mov	r4,fp
 80141c8:	100b883a 	mov	r5,r2
 80141cc:	102b883a 	mov	r21,r2
 80141d0:	8017d140 	call	8017d14 <__mcmp>
 80141d4:	00bf860e 	bge	zero,r2,8013ff0 <__alt_data_end+0xfc013ff0>
 80141d8:	d9800717 	ldw	r6,28(sp)
 80141dc:	00800c44 	movi	r2,49
 80141e0:	30800005 	stb	r2,0(r6)
 80141e4:	d8800517 	ldw	r2,20(sp)
 80141e8:	35c00044 	addi	r23,r6,1
 80141ec:	10800044 	addi	r2,r2,1
 80141f0:	d8800515 	stw	r2,20(sp)
 80141f4:	003f8206 	br	8014000 <__alt_data_end+0xfc014000>
 80141f8:	903e981e 	bne	r18,zero,8013c5c <__alt_data_end+0xfc013c5c>
 80141fc:	003f8b06 	br	801402c <__alt_data_end+0xfc01402c>
 8014200:	d9800517 	ldw	r6,20(sp)
 8014204:	d8c00717 	ldw	r3,28(sp)
 8014208:	00800c44 	movi	r2,49
 801420c:	31800044 	addi	r6,r6,1
 8014210:	d9800515 	stw	r6,20(sp)
 8014214:	18800005 	stb	r2,0(r3)
 8014218:	003ee906 	br	8013dc0 <__alt_data_end+0xfc013dc0>
 801421c:	dc000317 	ldw	r16,12(sp)
 8014220:	003d6006 	br	80137a4 <__alt_data_end+0xfc0137a4>
 8014224:	8809883a 	mov	r4,r17
 8014228:	800cbb40 	call	800cbb4 <__floatsidf>
 801422c:	a009883a 	mov	r4,r20
 8014230:	a80b883a 	mov	r5,r21
 8014234:	100d883a 	mov	r6,r2
 8014238:	180f883a 	mov	r7,r3
 801423c:	800b9f00 	call	800b9f0 <__muldf3>
 8014240:	1009883a 	mov	r4,r2
 8014244:	180b883a 	mov	r5,r3
 8014248:	000d883a 	mov	r6,zero
 801424c:	01d00734 	movhi	r7,16412
 8014250:	800a5900 	call	800a590 <__adddf3>
 8014254:	1023883a 	mov	r17,r2
 8014258:	00bf3034 	movhi	r2,64704
 801425c:	1885883a 	add	r2,r3,r2
 8014260:	d8800e15 	stw	r2,56(sp)
 8014264:	a009883a 	mov	r4,r20
 8014268:	a80b883a 	mov	r5,r21
 801426c:	000d883a 	mov	r6,zero
 8014270:	01d00534 	movhi	r7,16404
 8014274:	800c25c0 	call	800c25c <__subdf3>
 8014278:	d9c00e17 	ldw	r7,56(sp)
 801427c:	1009883a 	mov	r4,r2
 8014280:	180b883a 	mov	r5,r3
 8014284:	880d883a 	mov	r6,r17
 8014288:	102b883a 	mov	r21,r2
 801428c:	1829883a 	mov	r20,r3
 8014290:	800b8300 	call	800b830 <__gedf2>
 8014294:	00807716 	blt	zero,r2,8014474 <_dtoa_r+0x1388>
 8014298:	d8800e17 	ldw	r2,56(sp)
 801429c:	a809883a 	mov	r4,r21
 80142a0:	a00b883a 	mov	r5,r20
 80142a4:	11e0003c 	xorhi	r7,r2,32768
 80142a8:	880d883a 	mov	r6,r17
 80142ac:	800b9100 	call	800b910 <__ledf2>
 80142b0:	103d6b0e 	bge	r2,zero,8013860 <__alt_data_end+0xfc013860>
 80142b4:	002b883a 	mov	r21,zero
 80142b8:	0023883a 	mov	r17,zero
 80142bc:	003f4c06 	br	8013ff0 <__alt_data_end+0xfc013ff0>
 80142c0:	d9800917 	ldw	r6,36(sp)
 80142c4:	e00b883a 	mov	r5,fp
 80142c8:	8009883a 	mov	r4,r16
 80142cc:	8017a8c0 	call	8017a8c <__pow5mult>
 80142d0:	1039883a 	mov	fp,r2
 80142d4:	003e2706 	br	8013b74 <__alt_data_end+0xfc013b74>
 80142d8:	d8000b15 	stw	zero,44(sp)
 80142dc:	003c4906 	br	8013404 <__alt_data_end+0xfc013404>
 80142e0:	d9000917 	ldw	r4,36(sp)
 80142e4:	d9800a17 	ldw	r6,40(sp)
 80142e8:	dd400915 	stw	r21,36(sp)
 80142ec:	a905c83a 	sub	r2,r21,r4
 80142f0:	308d883a 	add	r6,r6,r2
 80142f4:	d9800a15 	stw	r6,40(sp)
 80142f8:	002b883a 	mov	r21,zero
 80142fc:	003df206 	br	8013ac8 <__alt_data_end+0xfc013ac8>
 8014300:	dc800e15 	stw	r18,56(sp)
 8014304:	982b883a 	mov	r21,r19
 8014308:	04400084 	movi	r17,2
 801430c:	003c7406 	br	80134e0 <__alt_data_end+0xfc0134e0>
 8014310:	04400044 	movi	r17,1
 8014314:	dc400d15 	stw	r17,52(sp)
 8014318:	dc400615 	stw	r17,24(sp)
 801431c:	dc402215 	stw	r17,136(sp)
 8014320:	80001115 	stw	zero,68(r16)
 8014324:	000b883a 	mov	r5,zero
 8014328:	003c4a06 	br	8013454 <__alt_data_end+0xfc013454>
 801432c:	3023883a 	mov	r17,r6
 8014330:	003ffb06 	br	8014320 <__alt_data_end+0xfc014320>
 8014334:	1000021e 	bne	r2,zero,8014340 <_dtoa_r+0x1254>
 8014338:	4200004c 	andi	r8,r8,1
 801433c:	403e8f1e 	bne	r8,zero,8013d7c <__alt_data_end+0xfc013d7c>
 8014340:	01000c04 	movi	r4,48
 8014344:	00000106 	br	801434c <_dtoa_r+0x1260>
 8014348:	102f883a 	mov	r23,r2
 801434c:	b8bfffc4 	addi	r2,r23,-1
 8014350:	10c00007 	ldb	r3,0(r2)
 8014354:	193ffc26 	beq	r3,r4,8014348 <__alt_data_end+0xfc014348>
 8014358:	003e9906 	br	8013dc0 <__alt_data_end+0xfc013dc0>
 801435c:	d9000517 	ldw	r4,20(sp)
 8014360:	012fc83a 	sub	r23,zero,r4
 8014364:	b800ad26 	beq	r23,zero,801461c <_dtoa_r+0x1530>
 8014368:	b88003cc 	andi	r2,r23,15
 801436c:	100490fa 	slli	r2,r2,3
 8014370:	00c200b4 	movhi	r3,2050
 8014374:	18c1ee04 	addi	r3,r3,1976
 8014378:	1885883a 	add	r2,r3,r2
 801437c:	11800017 	ldw	r6,0(r2)
 8014380:	11c00117 	ldw	r7,4(r2)
 8014384:	b82fd13a 	srai	r23,r23,4
 8014388:	9009883a 	mov	r4,r18
 801438c:	980b883a 	mov	r5,r19
 8014390:	800b9f00 	call	800b9f0 <__muldf3>
 8014394:	1029883a 	mov	r20,r2
 8014398:	182b883a 	mov	r21,r3
 801439c:	b800f426 	beq	r23,zero,8014770 <_dtoa_r+0x1684>
 80143a0:	020200b4 	movhi	r8,2050
 80143a4:	4201e404 	addi	r8,r8,1936
 80143a8:	8029883a 	mov	r20,r16
 80143ac:	04400084 	movi	r17,2
 80143b0:	4021883a 	mov	r16,r8
 80143b4:	b980004c 	andi	r6,r23,1
 80143b8:	1009883a 	mov	r4,r2
 80143bc:	b82fd07a 	srai	r23,r23,1
 80143c0:	180b883a 	mov	r5,r3
 80143c4:	30000426 	beq	r6,zero,80143d8 <_dtoa_r+0x12ec>
 80143c8:	81800017 	ldw	r6,0(r16)
 80143cc:	81c00117 	ldw	r7,4(r16)
 80143d0:	8c400044 	addi	r17,r17,1
 80143d4:	800b9f00 	call	800b9f0 <__muldf3>
 80143d8:	84000204 	addi	r16,r16,8
 80143dc:	b83ff51e 	bne	r23,zero,80143b4 <__alt_data_end+0xfc0143b4>
 80143e0:	a021883a 	mov	r16,r20
 80143e4:	182b883a 	mov	r21,r3
 80143e8:	1029883a 	mov	r20,r2
 80143ec:	003c5506 	br	8013544 <__alt_data_end+0xfc013544>
 80143f0:	d9800517 	ldw	r6,20(sp)
 80143f4:	d9000717 	ldw	r4,28(sp)
 80143f8:	00c00c04 	movi	r3,48
 80143fc:	31800044 	addi	r6,r6,1
 8014400:	d9800515 	stw	r6,20(sp)
 8014404:	20c00005 	stb	r3,0(r4)
 8014408:	02000c44 	movi	r8,49
 801440c:	003da206 	br	8013a98 <__alt_data_end+0xfc013a98>
 8014410:	89400117 	ldw	r5,4(r17)
 8014414:	8009883a 	mov	r4,r16
 8014418:	80173980 	call	8017398 <_Balloc>
 801441c:	89800417 	ldw	r6,16(r17)
 8014420:	11000304 	addi	r4,r2,12
 8014424:	89400304 	addi	r5,r17,12
 8014428:	31800084 	addi	r6,r6,2
 801442c:	318d883a 	add	r6,r6,r6
 8014430:	318d883a 	add	r6,r6,r6
 8014434:	1027883a 	mov	r19,r2
 8014438:	8016fe00 	call	8016fe0 <memcpy>
 801443c:	8009883a 	mov	r4,r16
 8014440:	980b883a 	mov	r5,r19
 8014444:	01800044 	movi	r6,1
 8014448:	8017bcc0 	call	8017bcc <__lshift>
 801444c:	1029883a 	mov	r20,r2
 8014450:	003e8606 	br	8013e6c <__alt_data_end+0xfc013e6c>
 8014454:	00800e44 	movi	r2,57
 8014458:	90809526 	beq	r18,r2,80146b0 <_dtoa_r+0x15c4>
 801445c:	92000044 	addi	r8,r18,1
 8014460:	003f2306 	br	80140f0 <__alt_data_end+0xfc0140f0>
 8014464:	9011883a 	mov	r8,r18
 8014468:	8825883a 	mov	r18,r17
 801446c:	a023883a 	mov	r17,r20
 8014470:	003e3706 	br	8013d50 <__alt_data_end+0xfc013d50>
 8014474:	002b883a 	mov	r21,zero
 8014478:	0023883a 	mov	r17,zero
 801447c:	003f5606 	br	80141d8 <__alt_data_end+0xfc0141d8>
 8014480:	51bfffc4 	addi	r6,r10,-1
 8014484:	300490fa 	slli	r2,r6,3
 8014488:	00c200b4 	movhi	r3,2050
 801448c:	18c1ee04 	addi	r3,r3,1976
 8014490:	1885883a 	add	r2,r3,r2
 8014494:	d9c00e17 	ldw	r7,56(sp)
 8014498:	11000017 	ldw	r4,0(r2)
 801449c:	11400117 	ldw	r5,4(r2)
 80144a0:	d8800717 	ldw	r2,28(sp)
 80144a4:	d9801015 	stw	r6,64(sp)
 80144a8:	880d883a 	mov	r6,r17
 80144ac:	da801615 	stw	r10,88(sp)
 80144b0:	15c00044 	addi	r23,r2,1
 80144b4:	800b9f00 	call	800b9f0 <__muldf3>
 80144b8:	a80b883a 	mov	r5,r21
 80144bc:	a009883a 	mov	r4,r20
 80144c0:	d8c01115 	stw	r3,68(sp)
 80144c4:	d8800e15 	stw	r2,56(sp)
 80144c8:	800cb2c0 	call	800cb2c <__fixdfsi>
 80144cc:	1009883a 	mov	r4,r2
 80144d0:	1023883a 	mov	r17,r2
 80144d4:	800cbb40 	call	800cbb4 <__floatsidf>
 80144d8:	a009883a 	mov	r4,r20
 80144dc:	a80b883a 	mov	r5,r21
 80144e0:	100d883a 	mov	r6,r2
 80144e4:	180f883a 	mov	r7,r3
 80144e8:	800c25c0 	call	800c25c <__subdf3>
 80144ec:	1813883a 	mov	r9,r3
 80144f0:	d8c00717 	ldw	r3,28(sp)
 80144f4:	8c400c04 	addi	r17,r17,48
 80144f8:	1011883a 	mov	r8,r2
 80144fc:	1c400005 	stb	r17,0(r3)
 8014500:	da801617 	ldw	r10,88(sp)
 8014504:	00800044 	movi	r2,1
 8014508:	50802326 	beq	r10,r2,8014598 <_dtoa_r+0x14ac>
 801450c:	d8800717 	ldw	r2,28(sp)
 8014510:	b82b883a 	mov	r21,r23
 8014514:	dc001315 	stw	r16,76(sp)
 8014518:	12a9883a 	add	r20,r2,r10
 801451c:	4807883a 	mov	r3,r9
 8014520:	4005883a 	mov	r2,r8
 8014524:	dc801415 	stw	r18,80(sp)
 8014528:	000d883a 	mov	r6,zero
 801452c:	01d00934 	movhi	r7,16420
 8014530:	1009883a 	mov	r4,r2
 8014534:	180b883a 	mov	r5,r3
 8014538:	800b9f00 	call	800b9f0 <__muldf3>
 801453c:	180b883a 	mov	r5,r3
 8014540:	1009883a 	mov	r4,r2
 8014544:	1821883a 	mov	r16,r3
 8014548:	1025883a 	mov	r18,r2
 801454c:	800cb2c0 	call	800cb2c <__fixdfsi>
 8014550:	1009883a 	mov	r4,r2
 8014554:	1023883a 	mov	r17,r2
 8014558:	800cbb40 	call	800cbb4 <__floatsidf>
 801455c:	9009883a 	mov	r4,r18
 8014560:	800b883a 	mov	r5,r16
 8014564:	100d883a 	mov	r6,r2
 8014568:	180f883a 	mov	r7,r3
 801456c:	8c400c04 	addi	r17,r17,48
 8014570:	800c25c0 	call	800c25c <__subdf3>
 8014574:	ad400044 	addi	r21,r21,1
 8014578:	ac7fffc5 	stb	r17,-1(r21)
 801457c:	ad3fea1e 	bne	r21,r20,8014528 <__alt_data_end+0xfc014528>
 8014580:	1813883a 	mov	r9,r3
 8014584:	d8c01017 	ldw	r3,64(sp)
 8014588:	dc001317 	ldw	r16,76(sp)
 801458c:	dc801417 	ldw	r18,80(sp)
 8014590:	1011883a 	mov	r8,r2
 8014594:	b8ef883a 	add	r23,r23,r3
 8014598:	d9000e17 	ldw	r4,56(sp)
 801459c:	d9401117 	ldw	r5,68(sp)
 80145a0:	000d883a 	mov	r6,zero
 80145a4:	01cff834 	movhi	r7,16352
 80145a8:	da001715 	stw	r8,92(sp)
 80145ac:	da401515 	stw	r9,84(sp)
 80145b0:	800a5900 	call	800a590 <__adddf3>
 80145b4:	da001717 	ldw	r8,92(sp)
 80145b8:	da401517 	ldw	r9,84(sp)
 80145bc:	1009883a 	mov	r4,r2
 80145c0:	400d883a 	mov	r6,r8
 80145c4:	480f883a 	mov	r7,r9
 80145c8:	180b883a 	mov	r5,r3
 80145cc:	800b9100 	call	800b910 <__ledf2>
 80145d0:	da001717 	ldw	r8,92(sp)
 80145d4:	da401517 	ldw	r9,84(sp)
 80145d8:	10003b0e 	bge	r2,zero,80146c8 <_dtoa_r+0x15dc>
 80145dc:	d9001217 	ldw	r4,72(sp)
 80145e0:	bd7fffc3 	ldbu	r21,-1(r23)
 80145e4:	d9000515 	stw	r4,20(sp)
 80145e8:	003d1c06 	br	8013a5c <__alt_data_end+0xfc013a5c>
 80145ec:	d8c00817 	ldw	r3,32(sp)
 80145f0:	18a9c83a 	sub	r20,r3,r2
 80145f4:	0005883a 	mov	r2,zero
 80145f8:	003d3706 	br	8013ad8 <__alt_data_end+0xfc013ad8>
 80145fc:	00800044 	movi	r2,1
 8014600:	003dd006 	br	8013d44 <__alt_data_end+0xfc013d44>
 8014604:	d8c00217 	ldw	r3,8(sp)
 8014608:	00800d84 	movi	r2,54
 801460c:	dd400917 	ldw	r21,36(sp)
 8014610:	10c5c83a 	sub	r2,r2,r3
 8014614:	dd000817 	ldw	r20,32(sp)
 8014618:	003d2f06 	br	8013ad8 <__alt_data_end+0xfc013ad8>
 801461c:	9029883a 	mov	r20,r18
 8014620:	982b883a 	mov	r21,r19
 8014624:	04400084 	movi	r17,2
 8014628:	003bc606 	br	8013544 <__alt_data_end+0xfc013544>
 801462c:	d8800617 	ldw	r2,24(sp)
 8014630:	103efc26 	beq	r2,zero,8014224 <__alt_data_end+0xfc014224>
 8014634:	d8c00d17 	ldw	r3,52(sp)
 8014638:	00fc890e 	bge	zero,r3,8013860 <__alt_data_end+0xfc013860>
 801463c:	a80b883a 	mov	r5,r21
 8014640:	a009883a 	mov	r4,r20
 8014644:	000d883a 	mov	r6,zero
 8014648:	01d00934 	movhi	r7,16420
 801464c:	800b9f00 	call	800b9f0 <__muldf3>
 8014650:	89000044 	addi	r4,r17,1
 8014654:	1029883a 	mov	r20,r2
 8014658:	182b883a 	mov	r21,r3
 801465c:	800cbb40 	call	800cbb4 <__floatsidf>
 8014660:	a009883a 	mov	r4,r20
 8014664:	a80b883a 	mov	r5,r21
 8014668:	100d883a 	mov	r6,r2
 801466c:	180f883a 	mov	r7,r3
 8014670:	800b9f00 	call	800b9f0 <__muldf3>
 8014674:	1009883a 	mov	r4,r2
 8014678:	180b883a 	mov	r5,r3
 801467c:	000d883a 	mov	r6,zero
 8014680:	01d00734 	movhi	r7,16412
 8014684:	800a5900 	call	800a590 <__adddf3>
 8014688:	d9000517 	ldw	r4,20(sp)
 801468c:	1023883a 	mov	r17,r2
 8014690:	00bf3034 	movhi	r2,64704
 8014694:	213fffc4 	addi	r4,r4,-1
 8014698:	1885883a 	add	r2,r3,r2
 801469c:	d9001215 	stw	r4,72(sp)
 80146a0:	d8800e15 	stw	r2,56(sp)
 80146a4:	da800d17 	ldw	r10,52(sp)
 80146a8:	003bc306 	br	80135b8 <__alt_data_end+0xfc0135b8>
 80146ac:	b039883a 	mov	fp,r22
 80146b0:	01000e44 	movi	r4,57
 80146b4:	8825883a 	mov	r18,r17
 80146b8:	9dc00044 	addi	r23,r19,1
 80146bc:	99000005 	stb	r4,0(r19)
 80146c0:	a023883a 	mov	r17,r20
 80146c4:	003dae06 	br	8013d80 <__alt_data_end+0xfc013d80>
 80146c8:	d9800e17 	ldw	r6,56(sp)
 80146cc:	d9c01117 	ldw	r7,68(sp)
 80146d0:	0009883a 	mov	r4,zero
 80146d4:	014ff834 	movhi	r5,16352
 80146d8:	da001715 	stw	r8,92(sp)
 80146dc:	da401515 	stw	r9,84(sp)
 80146e0:	800c25c0 	call	800c25c <__subdf3>
 80146e4:	da001717 	ldw	r8,92(sp)
 80146e8:	da401517 	ldw	r9,84(sp)
 80146ec:	1009883a 	mov	r4,r2
 80146f0:	180b883a 	mov	r5,r3
 80146f4:	400d883a 	mov	r6,r8
 80146f8:	480f883a 	mov	r7,r9
 80146fc:	800b8300 	call	800b830 <__gedf2>
 8014700:	00bc570e 	bge	zero,r2,8013860 <__alt_data_end+0xfc013860>
 8014704:	01000c04 	movi	r4,48
 8014708:	00000106 	br	8014710 <_dtoa_r+0x1624>
 801470c:	102f883a 	mov	r23,r2
 8014710:	b8bfffc4 	addi	r2,r23,-1
 8014714:	10c00007 	ldb	r3,0(r2)
 8014718:	193ffc26 	beq	r3,r4,801470c <__alt_data_end+0xfc01470c>
 801471c:	d9801217 	ldw	r6,72(sp)
 8014720:	d9800515 	stw	r6,20(sp)
 8014724:	003c1f06 	br	80137a4 <__alt_data_end+0xfc0137a4>
 8014728:	d8801217 	ldw	r2,72(sp)
 801472c:	dc001117 	ldw	r16,68(sp)
 8014730:	d8800515 	stw	r2,20(sp)
 8014734:	003cc906 	br	8013a5c <__alt_data_end+0xfc013a5c>
 8014738:	dd801317 	ldw	r22,76(sp)
 801473c:	dc001117 	ldw	r16,68(sp)
 8014740:	dcc01417 	ldw	r19,80(sp)
 8014744:	dc801017 	ldw	r18,64(sp)
 8014748:	003c4506 	br	8013860 <__alt_data_end+0xfc013860>
 801474c:	103e5d1e 	bne	r2,zero,80140c4 <__alt_data_end+0xfc0140c4>
 8014750:	4080004c 	andi	r2,r8,1
 8014754:	103e5b26 	beq	r2,zero,80140c4 <__alt_data_end+0xfc0140c4>
 8014758:	003e5706 	br	80140b8 <__alt_data_end+0xfc0140b8>
 801475c:	d8c00317 	ldw	r3,12(sp)
 8014760:	00800084 	movi	r2,2
 8014764:	10c00a16 	blt	r2,r3,8014790 <_dtoa_r+0x16a4>
 8014768:	d9000d17 	ldw	r4,52(sp)
 801476c:	003e8306 	br	801417c <__alt_data_end+0xfc01417c>
 8014770:	04400084 	movi	r17,2
 8014774:	003b7306 	br	8013544 <__alt_data_end+0xfc013544>
 8014778:	d9801217 	ldw	r6,72(sp)
 801477c:	d9800515 	stw	r6,20(sp)
 8014780:	003cb606 	br	8013a5c <__alt_data_end+0xfc013a5c>
 8014784:	d9001217 	ldw	r4,72(sp)
 8014788:	d9000515 	stw	r4,20(sp)
 801478c:	003c0506 	br	80137a4 <__alt_data_end+0xfc0137a4>
 8014790:	d9800d17 	ldw	r6,52(sp)
 8014794:	d9800615 	stw	r6,24(sp)
 8014798:	003e8306 	br	80141a8 <__alt_data_end+0xfc0141a8>
 801479c:	d9800317 	ldw	r6,12(sp)
 80147a0:	00800084 	movi	r2,2
 80147a4:	11800216 	blt	r2,r6,80147b0 <_dtoa_r+0x16c4>
 80147a8:	d8800d17 	ldw	r2,52(sp)
 80147ac:	003da606 	br	8013e48 <__alt_data_end+0xfc013e48>
 80147b0:	d8800d17 	ldw	r2,52(sp)
 80147b4:	d8800615 	stw	r2,24(sp)
 80147b8:	003e7b06 	br	80141a8 <__alt_data_end+0xfc0141a8>
 80147bc:	05000044 	movi	r20,1
 80147c0:	003b0506 	br	80133d8 <__alt_data_end+0xfc0133d8>
 80147c4:	8009883a 	mov	r4,r16
 80147c8:	80001115 	stw	zero,68(r16)
 80147cc:	000b883a 	mov	r5,zero
 80147d0:	80173980 	call	8017398 <_Balloc>
 80147d4:	d8800715 	stw	r2,28(sp)
 80147d8:	d8c00717 	ldw	r3,28(sp)
 80147dc:	00bfffc4 	movi	r2,-1
 80147e0:	01000044 	movi	r4,1
 80147e4:	d8800615 	stw	r2,24(sp)
 80147e8:	80c01015 	stw	r3,64(r16)
 80147ec:	d9000b15 	stw	r4,44(sp)
 80147f0:	d8002215 	stw	zero,136(sp)
 80147f4:	d8800d15 	stw	r2,52(sp)
 80147f8:	003c1906 	br	8013860 <__alt_data_end+0xfc013860>
 80147fc:	193d2926 	beq	r3,r4,8013ca4 <__alt_data_end+0xfc013ca4>
 8014800:	00c00f04 	movi	r3,60
 8014804:	1885c83a 	sub	r2,r3,r2
 8014808:	003d7b06 	br	8013df8 <__alt_data_end+0xfc013df8>
 801480c:	000b883a 	mov	r5,zero
 8014810:	003b1006 	br	8013454 <__alt_data_end+0xfc013454>

08014814 <_fflush_r>:
 8014814:	defffb04 	addi	sp,sp,-20
 8014818:	dcc00315 	stw	r19,12(sp)
 801481c:	dc000015 	stw	r16,0(sp)
 8014820:	dfc00415 	stw	ra,16(sp)
 8014824:	dc800215 	stw	r18,8(sp)
 8014828:	dc400115 	stw	r17,4(sp)
 801482c:	2027883a 	mov	r19,r4
 8014830:	2821883a 	mov	r16,r5
 8014834:	20000226 	beq	r4,zero,8014840 <_fflush_r+0x2c>
 8014838:	20800e17 	ldw	r2,56(r4)
 801483c:	10005326 	beq	r2,zero,801498c <_fflush_r+0x178>
 8014840:	8080030b 	ldhu	r2,12(r16)
 8014844:	10ffffcc 	andi	r3,r2,65535
 8014848:	18e0001c 	xori	r3,r3,32768
 801484c:	18e00004 	addi	r3,r3,-32768
 8014850:	18002c26 	beq	r3,zero,8014904 <_fflush_r+0xf0>
 8014854:	10c0020c 	andi	r3,r2,8
 8014858:	1800321e 	bne	r3,zero,8014924 <_fflush_r+0x110>
 801485c:	80c00117 	ldw	r3,4(r16)
 8014860:	10820014 	ori	r2,r2,2048
 8014864:	8080030d 	sth	r2,12(r16)
 8014868:	00c0570e 	bge	zero,r3,80149c8 <_fflush_r+0x1b4>
 801486c:	82000a17 	ldw	r8,40(r16)
 8014870:	40002426 	beq	r8,zero,8014904 <_fflush_r+0xf0>
 8014874:	9c400017 	ldw	r17,0(r19)
 8014878:	10c4000c 	andi	r3,r2,4096
 801487c:	98000015 	stw	zero,0(r19)
 8014880:	18004626 	beq	r3,zero,801499c <_fflush_r+0x188>
 8014884:	81801417 	ldw	r6,80(r16)
 8014888:	10c0010c 	andi	r3,r2,4
 801488c:	18000626 	beq	r3,zero,80148a8 <_fflush_r+0x94>
 8014890:	80c00117 	ldw	r3,4(r16)
 8014894:	80800c17 	ldw	r2,48(r16)
 8014898:	30cdc83a 	sub	r6,r6,r3
 801489c:	10000226 	beq	r2,zero,80148a8 <_fflush_r+0x94>
 80148a0:	80800f17 	ldw	r2,60(r16)
 80148a4:	308dc83a 	sub	r6,r6,r2
 80148a8:	81400717 	ldw	r5,28(r16)
 80148ac:	9809883a 	mov	r4,r19
 80148b0:	000f883a 	mov	r7,zero
 80148b4:	403ee83a 	callr	r8
 80148b8:	00ffffc4 	movi	r3,-1
 80148bc:	10c04526 	beq	r2,r3,80149d4 <_fflush_r+0x1c0>
 80148c0:	80c0030b 	ldhu	r3,12(r16)
 80148c4:	81000417 	ldw	r4,16(r16)
 80148c8:	80000115 	stw	zero,4(r16)
 80148cc:	197dffcc 	andi	r5,r3,63487
 80148d0:	8140030d 	sth	r5,12(r16)
 80148d4:	81000015 	stw	r4,0(r16)
 80148d8:	18c4000c 	andi	r3,r3,4096
 80148dc:	18000126 	beq	r3,zero,80148e4 <_fflush_r+0xd0>
 80148e0:	80801415 	stw	r2,80(r16)
 80148e4:	81400c17 	ldw	r5,48(r16)
 80148e8:	9c400015 	stw	r17,0(r19)
 80148ec:	28000526 	beq	r5,zero,8014904 <_fflush_r+0xf0>
 80148f0:	80801004 	addi	r2,r16,64
 80148f4:	28800226 	beq	r5,r2,8014900 <_fflush_r+0xec>
 80148f8:	9809883a 	mov	r4,r19
 80148fc:	8014f440 	call	8014f44 <_free_r>
 8014900:	80000c15 	stw	zero,48(r16)
 8014904:	0005883a 	mov	r2,zero
 8014908:	dfc00417 	ldw	ra,16(sp)
 801490c:	dcc00317 	ldw	r19,12(sp)
 8014910:	dc800217 	ldw	r18,8(sp)
 8014914:	dc400117 	ldw	r17,4(sp)
 8014918:	dc000017 	ldw	r16,0(sp)
 801491c:	dec00504 	addi	sp,sp,20
 8014920:	f800283a 	ret
 8014924:	84800417 	ldw	r18,16(r16)
 8014928:	903ff626 	beq	r18,zero,8014904 <__alt_data_end+0xfc014904>
 801492c:	84400017 	ldw	r17,0(r16)
 8014930:	108000cc 	andi	r2,r2,3
 8014934:	84800015 	stw	r18,0(r16)
 8014938:	8ca3c83a 	sub	r17,r17,r18
 801493c:	10001526 	beq	r2,zero,8014994 <_fflush_r+0x180>
 8014940:	0005883a 	mov	r2,zero
 8014944:	80800215 	stw	r2,8(r16)
 8014948:	04400316 	blt	zero,r17,8014958 <_fflush_r+0x144>
 801494c:	003fed06 	br	8014904 <__alt_data_end+0xfc014904>
 8014950:	90a5883a 	add	r18,r18,r2
 8014954:	047feb0e 	bge	zero,r17,8014904 <__alt_data_end+0xfc014904>
 8014958:	80800917 	ldw	r2,36(r16)
 801495c:	81400717 	ldw	r5,28(r16)
 8014960:	880f883a 	mov	r7,r17
 8014964:	900d883a 	mov	r6,r18
 8014968:	9809883a 	mov	r4,r19
 801496c:	103ee83a 	callr	r2
 8014970:	88a3c83a 	sub	r17,r17,r2
 8014974:	00bff616 	blt	zero,r2,8014950 <__alt_data_end+0xfc014950>
 8014978:	80c0030b 	ldhu	r3,12(r16)
 801497c:	00bfffc4 	movi	r2,-1
 8014980:	18c01014 	ori	r3,r3,64
 8014984:	80c0030d 	sth	r3,12(r16)
 8014988:	003fdf06 	br	8014908 <__alt_data_end+0xfc014908>
 801498c:	8014dd00 	call	8014dd0 <__sinit>
 8014990:	003fab06 	br	8014840 <__alt_data_end+0xfc014840>
 8014994:	80800517 	ldw	r2,20(r16)
 8014998:	003fea06 	br	8014944 <__alt_data_end+0xfc014944>
 801499c:	81400717 	ldw	r5,28(r16)
 80149a0:	000d883a 	mov	r6,zero
 80149a4:	9809883a 	mov	r4,r19
 80149a8:	01c00044 	movi	r7,1
 80149ac:	403ee83a 	callr	r8
 80149b0:	100d883a 	mov	r6,r2
 80149b4:	00bfffc4 	movi	r2,-1
 80149b8:	30801326 	beq	r6,r2,8014a08 <_fflush_r+0x1f4>
 80149bc:	8080030b 	ldhu	r2,12(r16)
 80149c0:	82000a17 	ldw	r8,40(r16)
 80149c4:	003fb006 	br	8014888 <__alt_data_end+0xfc014888>
 80149c8:	80c00f17 	ldw	r3,60(r16)
 80149cc:	00ffa716 	blt	zero,r3,801486c <__alt_data_end+0xfc01486c>
 80149d0:	003fcc06 	br	8014904 <__alt_data_end+0xfc014904>
 80149d4:	98c00017 	ldw	r3,0(r19)
 80149d8:	183fb926 	beq	r3,zero,80148c0 <__alt_data_end+0xfc0148c0>
 80149dc:	01000744 	movi	r4,29
 80149e0:	19000226 	beq	r3,r4,80149ec <_fflush_r+0x1d8>
 80149e4:	01000584 	movi	r4,22
 80149e8:	1900101e 	bne	r3,r4,8014a2c <_fflush_r+0x218>
 80149ec:	8080030b 	ldhu	r2,12(r16)
 80149f0:	80c00417 	ldw	r3,16(r16)
 80149f4:	80000115 	stw	zero,4(r16)
 80149f8:	10bdffcc 	andi	r2,r2,63487
 80149fc:	8080030d 	sth	r2,12(r16)
 8014a00:	80c00015 	stw	r3,0(r16)
 8014a04:	003fb706 	br	80148e4 <__alt_data_end+0xfc0148e4>
 8014a08:	98800017 	ldw	r2,0(r19)
 8014a0c:	103feb26 	beq	r2,zero,80149bc <__alt_data_end+0xfc0149bc>
 8014a10:	00c00744 	movi	r3,29
 8014a14:	10c00226 	beq	r2,r3,8014a20 <_fflush_r+0x20c>
 8014a18:	00c00584 	movi	r3,22
 8014a1c:	10ffd61e 	bne	r2,r3,8014978 <__alt_data_end+0xfc014978>
 8014a20:	9c400015 	stw	r17,0(r19)
 8014a24:	0005883a 	mov	r2,zero
 8014a28:	003fb706 	br	8014908 <__alt_data_end+0xfc014908>
 8014a2c:	80c0030b 	ldhu	r3,12(r16)
 8014a30:	18c01014 	ori	r3,r3,64
 8014a34:	80c0030d 	sth	r3,12(r16)
 8014a38:	003fb306 	br	8014908 <__alt_data_end+0xfc014908>

08014a3c <fflush>:
 8014a3c:	20000526 	beq	r4,zero,8014a54 <fflush+0x18>
 8014a40:	008200b4 	movhi	r2,2050
 8014a44:	1088f804 	addi	r2,r2,9184
 8014a48:	200b883a 	mov	r5,r4
 8014a4c:	11000017 	ldw	r4,0(r2)
 8014a50:	80148141 	jmpi	8014814 <_fflush_r>
 8014a54:	008200b4 	movhi	r2,2050
 8014a58:	1088f704 	addi	r2,r2,9180
 8014a5c:	11000017 	ldw	r4,0(r2)
 8014a60:	01420074 	movhi	r5,2049
 8014a64:	29520504 	addi	r5,r5,18452
 8014a68:	80157901 	jmpi	8015790 <_fwalk_reent>

08014a6c <__fp_lock>:
 8014a6c:	0005883a 	mov	r2,zero
 8014a70:	f800283a 	ret

08014a74 <__fp_unlock>:
 8014a74:	0005883a 	mov	r2,zero
 8014a78:	f800283a 	ret

08014a7c <_cleanup_r>:
 8014a7c:	014200b4 	movhi	r5,2050
 8014a80:	296dfc04 	addi	r5,r5,-18448
 8014a84:	80156d81 	jmpi	80156d8 <_fwalk>

08014a88 <__sinit.part.1>:
 8014a88:	defff604 	addi	sp,sp,-40
 8014a8c:	00c20074 	movhi	r3,2049
 8014a90:	dfc00915 	stw	ra,36(sp)
 8014a94:	df000815 	stw	fp,32(sp)
 8014a98:	ddc00715 	stw	r23,28(sp)
 8014a9c:	dd800615 	stw	r22,24(sp)
 8014aa0:	dd400515 	stw	r21,20(sp)
 8014aa4:	dd000415 	stw	r20,16(sp)
 8014aa8:	dcc00315 	stw	r19,12(sp)
 8014aac:	dc800215 	stw	r18,8(sp)
 8014ab0:	dc400115 	stw	r17,4(sp)
 8014ab4:	dc000015 	stw	r16,0(sp)
 8014ab8:	18d29f04 	addi	r3,r3,19068
 8014abc:	24000117 	ldw	r16,4(r4)
 8014ac0:	20c00f15 	stw	r3,60(r4)
 8014ac4:	07000044 	movi	fp,1
 8014ac8:	00c000c4 	movi	r3,3
 8014acc:	2080bb04 	addi	r2,r4,748
 8014ad0:	20c0b915 	stw	r3,740(r4)
 8014ad4:	27000e15 	stw	fp,56(r4)
 8014ad8:	2080ba15 	stw	r2,744(r4)
 8014adc:	2000b815 	stw	zero,736(r4)
 8014ae0:	05c00204 	movi	r23,8
 8014ae4:	00800104 	movi	r2,4
 8014ae8:	2025883a 	mov	r18,r4
 8014aec:	b80d883a 	mov	r6,r23
 8014af0:	81001704 	addi	r4,r16,92
 8014af4:	000b883a 	mov	r5,zero
 8014af8:	80000015 	stw	zero,0(r16)
 8014afc:	80000115 	stw	zero,4(r16)
 8014b00:	80000215 	stw	zero,8(r16)
 8014b04:	8080030d 	sth	r2,12(r16)
 8014b08:	80001915 	stw	zero,100(r16)
 8014b0c:	8000038d 	sth	zero,14(r16)
 8014b10:	80000415 	stw	zero,16(r16)
 8014b14:	80000515 	stw	zero,20(r16)
 8014b18:	80000615 	stw	zero,24(r16)
 8014b1c:	80172740 	call	8017274 <memset>
 8014b20:	058200b4 	movhi	r22,2050
 8014b24:	94400217 	ldw	r17,8(r18)
 8014b28:	054200b4 	movhi	r21,2050
 8014b2c:	050200b4 	movhi	r20,2050
 8014b30:	04c200b4 	movhi	r19,2050
 8014b34:	b5a27504 	addi	r22,r22,-30252
 8014b38:	ad628c04 	addi	r21,r21,-30160
 8014b3c:	a522ab04 	addi	r20,r20,-30036
 8014b40:	9ce2c204 	addi	r19,r19,-29944
 8014b44:	85800815 	stw	r22,32(r16)
 8014b48:	85400915 	stw	r21,36(r16)
 8014b4c:	85000a15 	stw	r20,40(r16)
 8014b50:	84c00b15 	stw	r19,44(r16)
 8014b54:	84000715 	stw	r16,28(r16)
 8014b58:	00800284 	movi	r2,10
 8014b5c:	89001704 	addi	r4,r17,92
 8014b60:	b80d883a 	mov	r6,r23
 8014b64:	000b883a 	mov	r5,zero
 8014b68:	88000015 	stw	zero,0(r17)
 8014b6c:	88000115 	stw	zero,4(r17)
 8014b70:	88000215 	stw	zero,8(r17)
 8014b74:	8880030d 	sth	r2,12(r17)
 8014b78:	88001915 	stw	zero,100(r17)
 8014b7c:	8f00038d 	sth	fp,14(r17)
 8014b80:	88000415 	stw	zero,16(r17)
 8014b84:	88000515 	stw	zero,20(r17)
 8014b88:	88000615 	stw	zero,24(r17)
 8014b8c:	80172740 	call	8017274 <memset>
 8014b90:	94000317 	ldw	r16,12(r18)
 8014b94:	00800484 	movi	r2,18
 8014b98:	8c400715 	stw	r17,28(r17)
 8014b9c:	8d800815 	stw	r22,32(r17)
 8014ba0:	8d400915 	stw	r21,36(r17)
 8014ba4:	8d000a15 	stw	r20,40(r17)
 8014ba8:	8cc00b15 	stw	r19,44(r17)
 8014bac:	8080030d 	sth	r2,12(r16)
 8014bb0:	00800084 	movi	r2,2
 8014bb4:	80000015 	stw	zero,0(r16)
 8014bb8:	80000115 	stw	zero,4(r16)
 8014bbc:	80000215 	stw	zero,8(r16)
 8014bc0:	80001915 	stw	zero,100(r16)
 8014bc4:	8080038d 	sth	r2,14(r16)
 8014bc8:	80000415 	stw	zero,16(r16)
 8014bcc:	80000515 	stw	zero,20(r16)
 8014bd0:	80000615 	stw	zero,24(r16)
 8014bd4:	81001704 	addi	r4,r16,92
 8014bd8:	000b883a 	mov	r5,zero
 8014bdc:	b80d883a 	mov	r6,r23
 8014be0:	80172740 	call	8017274 <memset>
 8014be4:	84000715 	stw	r16,28(r16)
 8014be8:	85800815 	stw	r22,32(r16)
 8014bec:	85400915 	stw	r21,36(r16)
 8014bf0:	85000a15 	stw	r20,40(r16)
 8014bf4:	84c00b15 	stw	r19,44(r16)
 8014bf8:	dfc00917 	ldw	ra,36(sp)
 8014bfc:	df000817 	ldw	fp,32(sp)
 8014c00:	ddc00717 	ldw	r23,28(sp)
 8014c04:	dd800617 	ldw	r22,24(sp)
 8014c08:	dd400517 	ldw	r21,20(sp)
 8014c0c:	dd000417 	ldw	r20,16(sp)
 8014c10:	dcc00317 	ldw	r19,12(sp)
 8014c14:	dc800217 	ldw	r18,8(sp)
 8014c18:	dc400117 	ldw	r17,4(sp)
 8014c1c:	dc000017 	ldw	r16,0(sp)
 8014c20:	dec00a04 	addi	sp,sp,40
 8014c24:	f800283a 	ret

08014c28 <__sfmoreglue>:
 8014c28:	defffc04 	addi	sp,sp,-16
 8014c2c:	dc800215 	stw	r18,8(sp)
 8014c30:	2825883a 	mov	r18,r5
 8014c34:	dc000015 	stw	r16,0(sp)
 8014c38:	01401a04 	movi	r5,104
 8014c3c:	2021883a 	mov	r16,r4
 8014c40:	9009883a 	mov	r4,r18
 8014c44:	dfc00315 	stw	ra,12(sp)
 8014c48:	dc400115 	stw	r17,4(sp)
 8014c4c:	8009fe40 	call	8009fe4 <__mulsi3>
 8014c50:	8009883a 	mov	r4,r16
 8014c54:	11400304 	addi	r5,r2,12
 8014c58:	1023883a 	mov	r17,r2
 8014c5c:	80167500 	call	8016750 <_malloc_r>
 8014c60:	1021883a 	mov	r16,r2
 8014c64:	10000726 	beq	r2,zero,8014c84 <__sfmoreglue+0x5c>
 8014c68:	11000304 	addi	r4,r2,12
 8014c6c:	10000015 	stw	zero,0(r2)
 8014c70:	14800115 	stw	r18,4(r2)
 8014c74:	11000215 	stw	r4,8(r2)
 8014c78:	000b883a 	mov	r5,zero
 8014c7c:	880d883a 	mov	r6,r17
 8014c80:	80172740 	call	8017274 <memset>
 8014c84:	8005883a 	mov	r2,r16
 8014c88:	dfc00317 	ldw	ra,12(sp)
 8014c8c:	dc800217 	ldw	r18,8(sp)
 8014c90:	dc400117 	ldw	r17,4(sp)
 8014c94:	dc000017 	ldw	r16,0(sp)
 8014c98:	dec00404 	addi	sp,sp,16
 8014c9c:	f800283a 	ret

08014ca0 <__sfp>:
 8014ca0:	008200b4 	movhi	r2,2050
 8014ca4:	defffb04 	addi	sp,sp,-20
 8014ca8:	1088f704 	addi	r2,r2,9180
 8014cac:	dc800215 	stw	r18,8(sp)
 8014cb0:	14800017 	ldw	r18,0(r2)
 8014cb4:	dcc00315 	stw	r19,12(sp)
 8014cb8:	dfc00415 	stw	ra,16(sp)
 8014cbc:	90800e17 	ldw	r2,56(r18)
 8014cc0:	dc400115 	stw	r17,4(sp)
 8014cc4:	dc000015 	stw	r16,0(sp)
 8014cc8:	2027883a 	mov	r19,r4
 8014ccc:	1000021e 	bne	r2,zero,8014cd8 <__sfp+0x38>
 8014cd0:	9009883a 	mov	r4,r18
 8014cd4:	8014a880 	call	8014a88 <__sinit.part.1>
 8014cd8:	9480b804 	addi	r18,r18,736
 8014cdc:	047fffc4 	movi	r17,-1
 8014ce0:	91400117 	ldw	r5,4(r18)
 8014ce4:	94000217 	ldw	r16,8(r18)
 8014ce8:	297fffc4 	addi	r5,r5,-1
 8014cec:	28000a16 	blt	r5,zero,8014d18 <__sfp+0x78>
 8014cf0:	8080030f 	ldh	r2,12(r16)
 8014cf4:	10000c26 	beq	r2,zero,8014d28 <__sfp+0x88>
 8014cf8:	80c01d04 	addi	r3,r16,116
 8014cfc:	00000206 	br	8014d08 <__sfp+0x68>
 8014d00:	18bfe60f 	ldh	r2,-104(r3)
 8014d04:	10000826 	beq	r2,zero,8014d28 <__sfp+0x88>
 8014d08:	297fffc4 	addi	r5,r5,-1
 8014d0c:	1c3ffd04 	addi	r16,r3,-12
 8014d10:	18c01a04 	addi	r3,r3,104
 8014d14:	2c7ffa1e 	bne	r5,r17,8014d00 <__alt_data_end+0xfc014d00>
 8014d18:	90800017 	ldw	r2,0(r18)
 8014d1c:	10001d26 	beq	r2,zero,8014d94 <__sfp+0xf4>
 8014d20:	1025883a 	mov	r18,r2
 8014d24:	003fee06 	br	8014ce0 <__alt_data_end+0xfc014ce0>
 8014d28:	00bfffc4 	movi	r2,-1
 8014d2c:	8080038d 	sth	r2,14(r16)
 8014d30:	00800044 	movi	r2,1
 8014d34:	8080030d 	sth	r2,12(r16)
 8014d38:	80001915 	stw	zero,100(r16)
 8014d3c:	80000015 	stw	zero,0(r16)
 8014d40:	80000215 	stw	zero,8(r16)
 8014d44:	80000115 	stw	zero,4(r16)
 8014d48:	80000415 	stw	zero,16(r16)
 8014d4c:	80000515 	stw	zero,20(r16)
 8014d50:	80000615 	stw	zero,24(r16)
 8014d54:	81001704 	addi	r4,r16,92
 8014d58:	000b883a 	mov	r5,zero
 8014d5c:	01800204 	movi	r6,8
 8014d60:	80172740 	call	8017274 <memset>
 8014d64:	8005883a 	mov	r2,r16
 8014d68:	80000c15 	stw	zero,48(r16)
 8014d6c:	80000d15 	stw	zero,52(r16)
 8014d70:	80001115 	stw	zero,68(r16)
 8014d74:	80001215 	stw	zero,72(r16)
 8014d78:	dfc00417 	ldw	ra,16(sp)
 8014d7c:	dcc00317 	ldw	r19,12(sp)
 8014d80:	dc800217 	ldw	r18,8(sp)
 8014d84:	dc400117 	ldw	r17,4(sp)
 8014d88:	dc000017 	ldw	r16,0(sp)
 8014d8c:	dec00504 	addi	sp,sp,20
 8014d90:	f800283a 	ret
 8014d94:	9809883a 	mov	r4,r19
 8014d98:	01400104 	movi	r5,4
 8014d9c:	8014c280 	call	8014c28 <__sfmoreglue>
 8014da0:	90800015 	stw	r2,0(r18)
 8014da4:	103fde1e 	bne	r2,zero,8014d20 <__alt_data_end+0xfc014d20>
 8014da8:	00800304 	movi	r2,12
 8014dac:	98800015 	stw	r2,0(r19)
 8014db0:	0005883a 	mov	r2,zero
 8014db4:	003ff006 	br	8014d78 <__alt_data_end+0xfc014d78>

08014db8 <_cleanup>:
 8014db8:	008200b4 	movhi	r2,2050
 8014dbc:	1088f704 	addi	r2,r2,9180
 8014dc0:	11000017 	ldw	r4,0(r2)
 8014dc4:	014200b4 	movhi	r5,2050
 8014dc8:	296dfc04 	addi	r5,r5,-18448
 8014dcc:	80156d81 	jmpi	80156d8 <_fwalk>

08014dd0 <__sinit>:
 8014dd0:	20800e17 	ldw	r2,56(r4)
 8014dd4:	10000126 	beq	r2,zero,8014ddc <__sinit+0xc>
 8014dd8:	f800283a 	ret
 8014ddc:	8014a881 	jmpi	8014a88 <__sinit.part.1>

08014de0 <__sfp_lock_acquire>:
 8014de0:	f800283a 	ret

08014de4 <__sfp_lock_release>:
 8014de4:	f800283a 	ret

08014de8 <__sinit_lock_acquire>:
 8014de8:	f800283a 	ret

08014dec <__sinit_lock_release>:
 8014dec:	f800283a 	ret

08014df0 <__fp_lock_all>:
 8014df0:	008200b4 	movhi	r2,2050
 8014df4:	1088f804 	addi	r2,r2,9184
 8014df8:	11000017 	ldw	r4,0(r2)
 8014dfc:	01420074 	movhi	r5,2049
 8014e00:	29529b04 	addi	r5,r5,19052
 8014e04:	80156d81 	jmpi	80156d8 <_fwalk>

08014e08 <__fp_unlock_all>:
 8014e08:	008200b4 	movhi	r2,2050
 8014e0c:	1088f804 	addi	r2,r2,9184
 8014e10:	11000017 	ldw	r4,0(r2)
 8014e14:	01420074 	movhi	r5,2049
 8014e18:	29529d04 	addi	r5,r5,19060
 8014e1c:	80156d81 	jmpi	80156d8 <_fwalk>

08014e20 <_malloc_trim_r>:
 8014e20:	defffb04 	addi	sp,sp,-20
 8014e24:	dcc00315 	stw	r19,12(sp)
 8014e28:	04c200b4 	movhi	r19,2050
 8014e2c:	dc800215 	stw	r18,8(sp)
 8014e30:	dc400115 	stw	r17,4(sp)
 8014e34:	dc000015 	stw	r16,0(sp)
 8014e38:	dfc00415 	stw	ra,16(sp)
 8014e3c:	2821883a 	mov	r16,r5
 8014e40:	9cc36e04 	addi	r19,r19,3512
 8014e44:	2025883a 	mov	r18,r4
 8014e48:	801d3780 	call	801d378 <__malloc_lock>
 8014e4c:	98800217 	ldw	r2,8(r19)
 8014e50:	14400117 	ldw	r17,4(r2)
 8014e54:	00bfff04 	movi	r2,-4
 8014e58:	88a2703a 	and	r17,r17,r2
 8014e5c:	8c21c83a 	sub	r16,r17,r16
 8014e60:	8403fbc4 	addi	r16,r16,4079
 8014e64:	8020d33a 	srli	r16,r16,12
 8014e68:	0083ffc4 	movi	r2,4095
 8014e6c:	843fffc4 	addi	r16,r16,-1
 8014e70:	8020933a 	slli	r16,r16,12
 8014e74:	1400060e 	bge	r2,r16,8014e90 <_malloc_trim_r+0x70>
 8014e78:	9009883a 	mov	r4,r18
 8014e7c:	000b883a 	mov	r5,zero
 8014e80:	80189800 	call	8018980 <_sbrk_r>
 8014e84:	98c00217 	ldw	r3,8(r19)
 8014e88:	1c47883a 	add	r3,r3,r17
 8014e8c:	10c00a26 	beq	r2,r3,8014eb8 <_malloc_trim_r+0x98>
 8014e90:	9009883a 	mov	r4,r18
 8014e94:	801d3980 	call	801d398 <__malloc_unlock>
 8014e98:	0005883a 	mov	r2,zero
 8014e9c:	dfc00417 	ldw	ra,16(sp)
 8014ea0:	dcc00317 	ldw	r19,12(sp)
 8014ea4:	dc800217 	ldw	r18,8(sp)
 8014ea8:	dc400117 	ldw	r17,4(sp)
 8014eac:	dc000017 	ldw	r16,0(sp)
 8014eb0:	dec00504 	addi	sp,sp,20
 8014eb4:	f800283a 	ret
 8014eb8:	9009883a 	mov	r4,r18
 8014ebc:	040bc83a 	sub	r5,zero,r16
 8014ec0:	80189800 	call	8018980 <_sbrk_r>
 8014ec4:	00ffffc4 	movi	r3,-1
 8014ec8:	10c00d26 	beq	r2,r3,8014f00 <_malloc_trim_r+0xe0>
 8014ecc:	00c200b4 	movhi	r3,2050
 8014ed0:	18d20904 	addi	r3,r3,18468
 8014ed4:	18800017 	ldw	r2,0(r3)
 8014ed8:	99000217 	ldw	r4,8(r19)
 8014edc:	8c23c83a 	sub	r17,r17,r16
 8014ee0:	8c400054 	ori	r17,r17,1
 8014ee4:	1421c83a 	sub	r16,r2,r16
 8014ee8:	24400115 	stw	r17,4(r4)
 8014eec:	9009883a 	mov	r4,r18
 8014ef0:	1c000015 	stw	r16,0(r3)
 8014ef4:	801d3980 	call	801d398 <__malloc_unlock>
 8014ef8:	00800044 	movi	r2,1
 8014efc:	003fe706 	br	8014e9c <__alt_data_end+0xfc014e9c>
 8014f00:	9009883a 	mov	r4,r18
 8014f04:	000b883a 	mov	r5,zero
 8014f08:	80189800 	call	8018980 <_sbrk_r>
 8014f0c:	99000217 	ldw	r4,8(r19)
 8014f10:	014003c4 	movi	r5,15
 8014f14:	1107c83a 	sub	r3,r2,r4
 8014f18:	28ffdd0e 	bge	r5,r3,8014e90 <__alt_data_end+0xfc014e90>
 8014f1c:	014200b4 	movhi	r5,2050
 8014f20:	2948fb04 	addi	r5,r5,9196
 8014f24:	29400017 	ldw	r5,0(r5)
 8014f28:	18c00054 	ori	r3,r3,1
 8014f2c:	20c00115 	stw	r3,4(r4)
 8014f30:	00c200b4 	movhi	r3,2050
 8014f34:	1145c83a 	sub	r2,r2,r5
 8014f38:	18d20904 	addi	r3,r3,18468
 8014f3c:	18800015 	stw	r2,0(r3)
 8014f40:	003fd306 	br	8014e90 <__alt_data_end+0xfc014e90>

08014f44 <_free_r>:
 8014f44:	28004c26 	beq	r5,zero,8015078 <_free_r+0x134>
 8014f48:	defffd04 	addi	sp,sp,-12
 8014f4c:	dc400115 	stw	r17,4(sp)
 8014f50:	dc000015 	stw	r16,0(sp)
 8014f54:	2023883a 	mov	r17,r4
 8014f58:	2821883a 	mov	r16,r5
 8014f5c:	dfc00215 	stw	ra,8(sp)
 8014f60:	801d3780 	call	801d378 <__malloc_lock>
 8014f64:	813fff17 	ldw	r4,-4(r16)
 8014f68:	00bfff84 	movi	r2,-2
 8014f6c:	024200b4 	movhi	r9,2050
 8014f70:	81bffe04 	addi	r6,r16,-8
 8014f74:	2084703a 	and	r2,r4,r2
 8014f78:	4a436e04 	addi	r9,r9,3512
 8014f7c:	308b883a 	add	r5,r6,r2
 8014f80:	2a000117 	ldw	r8,4(r5)
 8014f84:	49c00217 	ldw	r7,8(r9)
 8014f88:	00ffff04 	movi	r3,-4
 8014f8c:	40c6703a 	and	r3,r8,r3
 8014f90:	39405326 	beq	r7,r5,80150e0 <_free_r+0x19c>
 8014f94:	28c00115 	stw	r3,4(r5)
 8014f98:	2100004c 	andi	r4,r4,1
 8014f9c:	2000091e 	bne	r4,zero,8014fc4 <_free_r+0x80>
 8014fa0:	81fffe17 	ldw	r7,-8(r16)
 8014fa4:	4a000204 	addi	r8,r9,8
 8014fa8:	31cdc83a 	sub	r6,r6,r7
 8014fac:	31000217 	ldw	r4,8(r6)
 8014fb0:	11c5883a 	add	r2,r2,r7
 8014fb4:	22006126 	beq	r4,r8,801513c <_free_r+0x1f8>
 8014fb8:	31c00317 	ldw	r7,12(r6)
 8014fbc:	21c00315 	stw	r7,12(r4)
 8014fc0:	39000215 	stw	r4,8(r7)
 8014fc4:	28c9883a 	add	r4,r5,r3
 8014fc8:	21c00117 	ldw	r7,4(r4)
 8014fcc:	39c0004c 	andi	r7,r7,1
 8014fd0:	38000d1e 	bne	r7,zero,8015008 <_free_r+0xc4>
 8014fd4:	29000217 	ldw	r4,8(r5)
 8014fd8:	10c5883a 	add	r2,r2,r3
 8014fdc:	00c200b4 	movhi	r3,2050
 8014fe0:	18c37004 	addi	r3,r3,3520
 8014fe4:	20c07526 	beq	r4,r3,80151bc <_free_r+0x278>
 8014fe8:	29c00317 	ldw	r7,12(r5)
 8014fec:	11400054 	ori	r5,r2,1
 8014ff0:	3087883a 	add	r3,r6,r2
 8014ff4:	21c00315 	stw	r7,12(r4)
 8014ff8:	39000215 	stw	r4,8(r7)
 8014ffc:	31400115 	stw	r5,4(r6)
 8015000:	18800015 	stw	r2,0(r3)
 8015004:	00000406 	br	8015018 <_free_r+0xd4>
 8015008:	10c00054 	ori	r3,r2,1
 801500c:	30c00115 	stw	r3,4(r6)
 8015010:	3087883a 	add	r3,r6,r2
 8015014:	18800015 	stw	r2,0(r3)
 8015018:	00c07fc4 	movi	r3,511
 801501c:	18801736 	bltu	r3,r2,801507c <_free_r+0x138>
 8015020:	1004d0fa 	srli	r2,r2,3
 8015024:	01400044 	movi	r5,1
 8015028:	49000117 	ldw	r4,4(r9)
 801502c:	1087883a 	add	r3,r2,r2
 8015030:	18c7883a 	add	r3,r3,r3
 8015034:	1005d0ba 	srai	r2,r2,2
 8015038:	18c7883a 	add	r3,r3,r3
 801503c:	1a47883a 	add	r3,r3,r9
 8015040:	19c00217 	ldw	r7,8(r3)
 8015044:	2884983a 	sll	r2,r5,r2
 8015048:	30c00315 	stw	r3,12(r6)
 801504c:	31c00215 	stw	r7,8(r6)
 8015050:	1104b03a 	or	r2,r2,r4
 8015054:	19800215 	stw	r6,8(r3)
 8015058:	48800115 	stw	r2,4(r9)
 801505c:	39800315 	stw	r6,12(r7)
 8015060:	8809883a 	mov	r4,r17
 8015064:	dfc00217 	ldw	ra,8(sp)
 8015068:	dc400117 	ldw	r17,4(sp)
 801506c:	dc000017 	ldw	r16,0(sp)
 8015070:	dec00304 	addi	sp,sp,12
 8015074:	801d3981 	jmpi	801d398 <__malloc_unlock>
 8015078:	f800283a 	ret
 801507c:	1006d27a 	srli	r3,r2,9
 8015080:	01000104 	movi	r4,4
 8015084:	20c04036 	bltu	r4,r3,8015188 <_free_r+0x244>
 8015088:	1006d1ba 	srli	r3,r2,6
 801508c:	19400e04 	addi	r5,r3,56
 8015090:	2947883a 	add	r3,r5,r5
 8015094:	18c7883a 	add	r3,r3,r3
 8015098:	18c7883a 	add	r3,r3,r3
 801509c:	1a49883a 	add	r4,r3,r9
 80150a0:	20c00217 	ldw	r3,8(r4)
 80150a4:	01c200b4 	movhi	r7,2050
 80150a8:	39c36e04 	addi	r7,r7,3512
 80150ac:	19003b26 	beq	r3,r4,801519c <_free_r+0x258>
 80150b0:	01ffff04 	movi	r7,-4
 80150b4:	19400117 	ldw	r5,4(r3)
 80150b8:	29ca703a 	and	r5,r5,r7
 80150bc:	1140022e 	bgeu	r2,r5,80150c8 <_free_r+0x184>
 80150c0:	18c00217 	ldw	r3,8(r3)
 80150c4:	20fffb1e 	bne	r4,r3,80150b4 <__alt_data_end+0xfc0150b4>
 80150c8:	18800317 	ldw	r2,12(r3)
 80150cc:	30800315 	stw	r2,12(r6)
 80150d0:	30c00215 	stw	r3,8(r6)
 80150d4:	11800215 	stw	r6,8(r2)
 80150d8:	19800315 	stw	r6,12(r3)
 80150dc:	003fe006 	br	8015060 <__alt_data_end+0xfc015060>
 80150e0:	2100004c 	andi	r4,r4,1
 80150e4:	1885883a 	add	r2,r3,r2
 80150e8:	2000071e 	bne	r4,zero,8015108 <_free_r+0x1c4>
 80150ec:	817ffe17 	ldw	r5,-8(r16)
 80150f0:	314dc83a 	sub	r6,r6,r5
 80150f4:	30c00317 	ldw	r3,12(r6)
 80150f8:	31000217 	ldw	r4,8(r6)
 80150fc:	1145883a 	add	r2,r2,r5
 8015100:	20c00315 	stw	r3,12(r4)
 8015104:	19000215 	stw	r4,8(r3)
 8015108:	10c00054 	ori	r3,r2,1
 801510c:	30c00115 	stw	r3,4(r6)
 8015110:	00c200b4 	movhi	r3,2050
 8015114:	18c8fc04 	addi	r3,r3,9200
 8015118:	18c00017 	ldw	r3,0(r3)
 801511c:	49800215 	stw	r6,8(r9)
 8015120:	10ffcf36 	bltu	r2,r3,8015060 <__alt_data_end+0xfc015060>
 8015124:	008200b4 	movhi	r2,2050
 8015128:	108ffc04 	addi	r2,r2,16368
 801512c:	11400017 	ldw	r5,0(r2)
 8015130:	8809883a 	mov	r4,r17
 8015134:	8014e200 	call	8014e20 <_malloc_trim_r>
 8015138:	003fc906 	br	8015060 <__alt_data_end+0xfc015060>
 801513c:	28c9883a 	add	r4,r5,r3
 8015140:	21000117 	ldw	r4,4(r4)
 8015144:	2100004c 	andi	r4,r4,1
 8015148:	20000a1e 	bne	r4,zero,8015174 <_free_r+0x230>
 801514c:	29000317 	ldw	r4,12(r5)
 8015150:	29400217 	ldw	r5,8(r5)
 8015154:	10c5883a 	add	r2,r2,r3
 8015158:	10c00054 	ori	r3,r2,1
 801515c:	29000315 	stw	r4,12(r5)
 8015160:	21400215 	stw	r5,8(r4)
 8015164:	30c00115 	stw	r3,4(r6)
 8015168:	308d883a 	add	r6,r6,r2
 801516c:	30800015 	stw	r2,0(r6)
 8015170:	003fbb06 	br	8015060 <__alt_data_end+0xfc015060>
 8015174:	10c00054 	ori	r3,r2,1
 8015178:	30c00115 	stw	r3,4(r6)
 801517c:	308d883a 	add	r6,r6,r2
 8015180:	30800015 	stw	r2,0(r6)
 8015184:	003fb606 	br	8015060 <__alt_data_end+0xfc015060>
 8015188:	01000504 	movi	r4,20
 801518c:	20c01436 	bltu	r4,r3,80151e0 <_free_r+0x29c>
 8015190:	194016c4 	addi	r5,r3,91
 8015194:	2947883a 	add	r3,r5,r5
 8015198:	003fbe06 	br	8015094 <__alt_data_end+0xfc015094>
 801519c:	280bd0ba 	srai	r5,r5,2
 80151a0:	00800044 	movi	r2,1
 80151a4:	39000117 	ldw	r4,4(r7)
 80151a8:	114a983a 	sll	r5,r2,r5
 80151ac:	1805883a 	mov	r2,r3
 80151b0:	2908b03a 	or	r4,r5,r4
 80151b4:	39000115 	stw	r4,4(r7)
 80151b8:	003fc406 	br	80150cc <__alt_data_end+0xfc0150cc>
 80151bc:	49800515 	stw	r6,20(r9)
 80151c0:	49800415 	stw	r6,16(r9)
 80151c4:	10c00054 	ori	r3,r2,1
 80151c8:	31000315 	stw	r4,12(r6)
 80151cc:	31000215 	stw	r4,8(r6)
 80151d0:	30c00115 	stw	r3,4(r6)
 80151d4:	308d883a 	add	r6,r6,r2
 80151d8:	30800015 	stw	r2,0(r6)
 80151dc:	003fa006 	br	8015060 <__alt_data_end+0xfc015060>
 80151e0:	01001504 	movi	r4,84
 80151e4:	20c00436 	bltu	r4,r3,80151f8 <_free_r+0x2b4>
 80151e8:	1006d33a 	srli	r3,r2,12
 80151ec:	19401b84 	addi	r5,r3,110
 80151f0:	2947883a 	add	r3,r5,r5
 80151f4:	003fa706 	br	8015094 <__alt_data_end+0xfc015094>
 80151f8:	01005504 	movi	r4,340
 80151fc:	20c00436 	bltu	r4,r3,8015210 <_free_r+0x2cc>
 8015200:	1006d3fa 	srli	r3,r2,15
 8015204:	19401dc4 	addi	r5,r3,119
 8015208:	2947883a 	add	r3,r5,r5
 801520c:	003fa106 	br	8015094 <__alt_data_end+0xfc015094>
 8015210:	01015504 	movi	r4,1364
 8015214:	20c00436 	bltu	r4,r3,8015228 <_free_r+0x2e4>
 8015218:	1006d4ba 	srli	r3,r2,18
 801521c:	19401f04 	addi	r5,r3,124
 8015220:	2947883a 	add	r3,r5,r5
 8015224:	003f9b06 	br	8015094 <__alt_data_end+0xfc015094>
 8015228:	00c03f04 	movi	r3,252
 801522c:	01401f84 	movi	r5,126
 8015230:	003f9806 	br	8015094 <__alt_data_end+0xfc015094>

08015234 <__sfvwrite_r>:
 8015234:	30800217 	ldw	r2,8(r6)
 8015238:	10004526 	beq	r2,zero,8015350 <__sfvwrite_r+0x11c>
 801523c:	28c0030b 	ldhu	r3,12(r5)
 8015240:	defff404 	addi	sp,sp,-48
 8015244:	dd400715 	stw	r21,28(sp)
 8015248:	dcc00515 	stw	r19,20(sp)
 801524c:	dc000215 	stw	r16,8(sp)
 8015250:	dfc00b15 	stw	ra,44(sp)
 8015254:	df000a15 	stw	fp,40(sp)
 8015258:	ddc00915 	stw	r23,36(sp)
 801525c:	dd800815 	stw	r22,32(sp)
 8015260:	dd000615 	stw	r20,24(sp)
 8015264:	dc800415 	stw	r18,16(sp)
 8015268:	dc400315 	stw	r17,12(sp)
 801526c:	1880020c 	andi	r2,r3,8
 8015270:	2821883a 	mov	r16,r5
 8015274:	202b883a 	mov	r21,r4
 8015278:	3027883a 	mov	r19,r6
 801527c:	10002526 	beq	r2,zero,8015314 <__sfvwrite_r+0xe0>
 8015280:	28800417 	ldw	r2,16(r5)
 8015284:	10002326 	beq	r2,zero,8015314 <__sfvwrite_r+0xe0>
 8015288:	1880008c 	andi	r2,r3,2
 801528c:	9c400017 	ldw	r17,0(r19)
 8015290:	10003126 	beq	r2,zero,8015358 <__sfvwrite_r+0x124>
 8015294:	0029883a 	mov	r20,zero
 8015298:	0025883a 	mov	r18,zero
 801529c:	05810004 	movi	r22,1024
 80152a0:	a00d883a 	mov	r6,r20
 80152a4:	a809883a 	mov	r4,r21
 80152a8:	90002526 	beq	r18,zero,8015340 <__sfvwrite_r+0x10c>
 80152ac:	900f883a 	mov	r7,r18
 80152b0:	81400717 	ldw	r5,28(r16)
 80152b4:	b480012e 	bgeu	r22,r18,80152bc <__sfvwrite_r+0x88>
 80152b8:	01c10004 	movi	r7,1024
 80152bc:	80800917 	ldw	r2,36(r16)
 80152c0:	103ee83a 	callr	r2
 80152c4:	0080510e 	bge	zero,r2,801540c <__sfvwrite_r+0x1d8>
 80152c8:	98c00217 	ldw	r3,8(r19)
 80152cc:	a0a9883a 	add	r20,r20,r2
 80152d0:	90a5c83a 	sub	r18,r18,r2
 80152d4:	1885c83a 	sub	r2,r3,r2
 80152d8:	98800215 	stw	r2,8(r19)
 80152dc:	103ff01e 	bne	r2,zero,80152a0 <__alt_data_end+0xfc0152a0>
 80152e0:	0005883a 	mov	r2,zero
 80152e4:	dfc00b17 	ldw	ra,44(sp)
 80152e8:	df000a17 	ldw	fp,40(sp)
 80152ec:	ddc00917 	ldw	r23,36(sp)
 80152f0:	dd800817 	ldw	r22,32(sp)
 80152f4:	dd400717 	ldw	r21,28(sp)
 80152f8:	dd000617 	ldw	r20,24(sp)
 80152fc:	dcc00517 	ldw	r19,20(sp)
 8015300:	dc800417 	ldw	r18,16(sp)
 8015304:	dc400317 	ldw	r17,12(sp)
 8015308:	dc000217 	ldw	r16,8(sp)
 801530c:	dec00c04 	addi	sp,sp,48
 8015310:	f800283a 	ret
 8015314:	a809883a 	mov	r4,r21
 8015318:	800b883a 	mov	r5,r16
 801531c:	8012d940 	call	8012d94 <__swsetup_r>
 8015320:	80c0030b 	ldhu	r3,12(r16)
 8015324:	103fd826 	beq	r2,zero,8015288 <__alt_data_end+0xfc015288>
 8015328:	18c01014 	ori	r3,r3,64
 801532c:	80c0030d 	sth	r3,12(r16)
 8015330:	00c00244 	movi	r3,9
 8015334:	00bfffc4 	movi	r2,-1
 8015338:	a8c00015 	stw	r3,0(r21)
 801533c:	003fe906 	br	80152e4 <__alt_data_end+0xfc0152e4>
 8015340:	8d000017 	ldw	r20,0(r17)
 8015344:	8c800117 	ldw	r18,4(r17)
 8015348:	8c400204 	addi	r17,r17,8
 801534c:	003fd406 	br	80152a0 <__alt_data_end+0xfc0152a0>
 8015350:	0005883a 	mov	r2,zero
 8015354:	f800283a 	ret
 8015358:	1880004c 	andi	r2,r3,1
 801535c:	1000301e 	bne	r2,zero,8015420 <__sfvwrite_r+0x1ec>
 8015360:	002f883a 	mov	r23,zero
 8015364:	0025883a 	mov	r18,zero
 8015368:	90001c26 	beq	r18,zero,80153dc <__sfvwrite_r+0x1a8>
 801536c:	1880800c 	andi	r2,r3,512
 8015370:	85000217 	ldw	r20,8(r16)
 8015374:	10006c26 	beq	r2,zero,8015528 <__sfvwrite_r+0x2f4>
 8015378:	a02d883a 	mov	r22,r20
 801537c:	95008536 	bltu	r18,r20,8015594 <__sfvwrite_r+0x360>
 8015380:	1881200c 	andi	r2,r3,1152
 8015384:	10009d1e 	bne	r2,zero,80155fc <__sfvwrite_r+0x3c8>
 8015388:	81000017 	ldw	r4,0(r16)
 801538c:	a039883a 	mov	fp,r20
 8015390:	9029883a 	mov	r20,r18
 8015394:	b80b883a 	mov	r5,r23
 8015398:	b00d883a 	mov	r6,r22
 801539c:	80171180 	call	8017118 <memmove>
 80153a0:	80c00217 	ldw	r3,8(r16)
 80153a4:	81000017 	ldw	r4,0(r16)
 80153a8:	9005883a 	mov	r2,r18
 80153ac:	1f39c83a 	sub	fp,r3,fp
 80153b0:	258f883a 	add	r7,r4,r22
 80153b4:	87000215 	stw	fp,8(r16)
 80153b8:	81c00015 	stw	r7,0(r16)
 80153bc:	98c00217 	ldw	r3,8(r19)
 80153c0:	b8af883a 	add	r23,r23,r2
 80153c4:	90a5c83a 	sub	r18,r18,r2
 80153c8:	1d05c83a 	sub	r2,r3,r20
 80153cc:	98800215 	stw	r2,8(r19)
 80153d0:	103fc326 	beq	r2,zero,80152e0 <__alt_data_end+0xfc0152e0>
 80153d4:	80c0030b 	ldhu	r3,12(r16)
 80153d8:	903fe41e 	bne	r18,zero,801536c <__alt_data_end+0xfc01536c>
 80153dc:	8dc00017 	ldw	r23,0(r17)
 80153e0:	8c800117 	ldw	r18,4(r17)
 80153e4:	8c400204 	addi	r17,r17,8
 80153e8:	003fdf06 	br	8015368 <__alt_data_end+0xfc015368>
 80153ec:	80183e00 	call	80183e0 <_realloc_r>
 80153f0:	102d883a 	mov	r22,r2
 80153f4:	1000a01e 	bne	r2,zero,8015678 <__sfvwrite_r+0x444>
 80153f8:	81400417 	ldw	r5,16(r16)
 80153fc:	a809883a 	mov	r4,r21
 8015400:	8014f440 	call	8014f44 <_free_r>
 8015404:	00800304 	movi	r2,12
 8015408:	a8800015 	stw	r2,0(r21)
 801540c:	80c0030b 	ldhu	r3,12(r16)
 8015410:	00bfffc4 	movi	r2,-1
 8015414:	18c01014 	ori	r3,r3,64
 8015418:	80c0030d 	sth	r3,12(r16)
 801541c:	003fb106 	br	80152e4 <__alt_data_end+0xfc0152e4>
 8015420:	0029883a 	mov	r20,zero
 8015424:	0011883a 	mov	r8,zero
 8015428:	0039883a 	mov	fp,zero
 801542c:	0025883a 	mov	r18,zero
 8015430:	90001f26 	beq	r18,zero,80154b0 <__sfvwrite_r+0x27c>
 8015434:	40006826 	beq	r8,zero,80155d8 <__sfvwrite_r+0x3a4>
 8015438:	a02f883a 	mov	r23,r20
 801543c:	9500012e 	bgeu	r18,r20,8015444 <__sfvwrite_r+0x210>
 8015440:	902f883a 	mov	r23,r18
 8015444:	81000017 	ldw	r4,0(r16)
 8015448:	80800417 	ldw	r2,16(r16)
 801544c:	b82d883a 	mov	r22,r23
 8015450:	81800217 	ldw	r6,8(r16)
 8015454:	81c00517 	ldw	r7,20(r16)
 8015458:	1100022e 	bgeu	r2,r4,8015464 <__sfvwrite_r+0x230>
 801545c:	31c7883a 	add	r3,r6,r7
 8015460:	1dc01816 	blt	r3,r23,80154c4 <__sfvwrite_r+0x290>
 8015464:	b9c03f16 	blt	r23,r7,8015564 <__sfvwrite_r+0x330>
 8015468:	80800917 	ldw	r2,36(r16)
 801546c:	81400717 	ldw	r5,28(r16)
 8015470:	a809883a 	mov	r4,r21
 8015474:	da000115 	stw	r8,4(sp)
 8015478:	e00d883a 	mov	r6,fp
 801547c:	103ee83a 	callr	r2
 8015480:	102d883a 	mov	r22,r2
 8015484:	da000117 	ldw	r8,4(sp)
 8015488:	00bfe00e 	bge	zero,r2,801540c <__alt_data_end+0xfc01540c>
 801548c:	a5a9c83a 	sub	r20,r20,r22
 8015490:	a0001f26 	beq	r20,zero,8015510 <__sfvwrite_r+0x2dc>
 8015494:	98800217 	ldw	r2,8(r19)
 8015498:	e5b9883a 	add	fp,fp,r22
 801549c:	95a5c83a 	sub	r18,r18,r22
 80154a0:	15adc83a 	sub	r22,r2,r22
 80154a4:	9d800215 	stw	r22,8(r19)
 80154a8:	b03f8d26 	beq	r22,zero,80152e0 <__alt_data_end+0xfc0152e0>
 80154ac:	903fe11e 	bne	r18,zero,8015434 <__alt_data_end+0xfc015434>
 80154b0:	8f000017 	ldw	fp,0(r17)
 80154b4:	8c800117 	ldw	r18,4(r17)
 80154b8:	0011883a 	mov	r8,zero
 80154bc:	8c400204 	addi	r17,r17,8
 80154c0:	003fdb06 	br	8015430 <__alt_data_end+0xfc015430>
 80154c4:	180d883a 	mov	r6,r3
 80154c8:	e00b883a 	mov	r5,fp
 80154cc:	da000115 	stw	r8,4(sp)
 80154d0:	d8c00015 	stw	r3,0(sp)
 80154d4:	80171180 	call	8017118 <memmove>
 80154d8:	d8c00017 	ldw	r3,0(sp)
 80154dc:	80800017 	ldw	r2,0(r16)
 80154e0:	a809883a 	mov	r4,r21
 80154e4:	800b883a 	mov	r5,r16
 80154e8:	10c5883a 	add	r2,r2,r3
 80154ec:	80800015 	stw	r2,0(r16)
 80154f0:	d8c00015 	stw	r3,0(sp)
 80154f4:	80148140 	call	8014814 <_fflush_r>
 80154f8:	d8c00017 	ldw	r3,0(sp)
 80154fc:	da000117 	ldw	r8,4(sp)
 8015500:	103fc21e 	bne	r2,zero,801540c <__alt_data_end+0xfc01540c>
 8015504:	182d883a 	mov	r22,r3
 8015508:	a5a9c83a 	sub	r20,r20,r22
 801550c:	a03fe11e 	bne	r20,zero,8015494 <__alt_data_end+0xfc015494>
 8015510:	a809883a 	mov	r4,r21
 8015514:	800b883a 	mov	r5,r16
 8015518:	80148140 	call	8014814 <_fflush_r>
 801551c:	103fbb1e 	bne	r2,zero,801540c <__alt_data_end+0xfc01540c>
 8015520:	0011883a 	mov	r8,zero
 8015524:	003fdb06 	br	8015494 <__alt_data_end+0xfc015494>
 8015528:	81000017 	ldw	r4,0(r16)
 801552c:	80800417 	ldw	r2,16(r16)
 8015530:	1100012e 	bgeu	r2,r4,8015538 <__sfvwrite_r+0x304>
 8015534:	a4805a36 	bltu	r20,r18,80156a0 <__sfvwrite_r+0x46c>
 8015538:	81c00517 	ldw	r7,20(r16)
 801553c:	91c01a36 	bltu	r18,r7,80155a8 <__sfvwrite_r+0x374>
 8015540:	80800917 	ldw	r2,36(r16)
 8015544:	81400717 	ldw	r5,28(r16)
 8015548:	a809883a 	mov	r4,r21
 801554c:	b80d883a 	mov	r6,r23
 8015550:	103ee83a 	callr	r2
 8015554:	1029883a 	mov	r20,r2
 8015558:	00bfac0e 	bge	zero,r2,801540c <__alt_data_end+0xfc01540c>
 801555c:	a005883a 	mov	r2,r20
 8015560:	003f9606 	br	80153bc <__alt_data_end+0xfc0153bc>
 8015564:	b80d883a 	mov	r6,r23
 8015568:	e00b883a 	mov	r5,fp
 801556c:	da000115 	stw	r8,4(sp)
 8015570:	80171180 	call	8017118 <memmove>
 8015574:	80800217 	ldw	r2,8(r16)
 8015578:	80c00017 	ldw	r3,0(r16)
 801557c:	da000117 	ldw	r8,4(sp)
 8015580:	15c5c83a 	sub	r2,r2,r23
 8015584:	1def883a 	add	r23,r3,r23
 8015588:	80800215 	stw	r2,8(r16)
 801558c:	85c00015 	stw	r23,0(r16)
 8015590:	003fbe06 	br	801548c <__alt_data_end+0xfc01548c>
 8015594:	81000017 	ldw	r4,0(r16)
 8015598:	9039883a 	mov	fp,r18
 801559c:	9029883a 	mov	r20,r18
 80155a0:	902d883a 	mov	r22,r18
 80155a4:	003f7b06 	br	8015394 <__alt_data_end+0xfc015394>
 80155a8:	b80b883a 	mov	r5,r23
 80155ac:	900d883a 	mov	r6,r18
 80155b0:	80171180 	call	8017118 <memmove>
 80155b4:	80c00217 	ldw	r3,8(r16)
 80155b8:	80800017 	ldw	r2,0(r16)
 80155bc:	9029883a 	mov	r20,r18
 80155c0:	1c87c83a 	sub	r3,r3,r18
 80155c4:	1485883a 	add	r2,r2,r18
 80155c8:	80800015 	stw	r2,0(r16)
 80155cc:	80c00215 	stw	r3,8(r16)
 80155d0:	9005883a 	mov	r2,r18
 80155d4:	003f7906 	br	80153bc <__alt_data_end+0xfc0153bc>
 80155d8:	e009883a 	mov	r4,fp
 80155dc:	01400284 	movi	r5,10
 80155e0:	900d883a 	mov	r6,r18
 80155e4:	8016ef80 	call	8016ef8 <memchr>
 80155e8:	10003826 	beq	r2,zero,80156cc <__sfvwrite_r+0x498>
 80155ec:	10800044 	addi	r2,r2,1
 80155f0:	1729c83a 	sub	r20,r2,fp
 80155f4:	02000044 	movi	r8,1
 80155f8:	003f8f06 	br	8015438 <__alt_data_end+0xfc015438>
 80155fc:	80800517 	ldw	r2,20(r16)
 8015600:	81400417 	ldw	r5,16(r16)
 8015604:	87000017 	ldw	fp,0(r16)
 8015608:	10a9883a 	add	r20,r2,r2
 801560c:	a085883a 	add	r2,r20,r2
 8015610:	1028d7fa 	srli	r20,r2,31
 8015614:	e179c83a 	sub	fp,fp,r5
 8015618:	e1000044 	addi	r4,fp,1
 801561c:	a085883a 	add	r2,r20,r2
 8015620:	1029d07a 	srai	r20,r2,1
 8015624:	2485883a 	add	r2,r4,r18
 8015628:	a00d883a 	mov	r6,r20
 801562c:	a080022e 	bgeu	r20,r2,8015638 <__sfvwrite_r+0x404>
 8015630:	1029883a 	mov	r20,r2
 8015634:	100d883a 	mov	r6,r2
 8015638:	18c1000c 	andi	r3,r3,1024
 801563c:	a809883a 	mov	r4,r21
 8015640:	183f6a26 	beq	r3,zero,80153ec <__alt_data_end+0xfc0153ec>
 8015644:	300b883a 	mov	r5,r6
 8015648:	80167500 	call	8016750 <_malloc_r>
 801564c:	102d883a 	mov	r22,r2
 8015650:	103f6c26 	beq	r2,zero,8015404 <__alt_data_end+0xfc015404>
 8015654:	81400417 	ldw	r5,16(r16)
 8015658:	1009883a 	mov	r4,r2
 801565c:	e00d883a 	mov	r6,fp
 8015660:	8016fe00 	call	8016fe0 <memcpy>
 8015664:	8080030b 	ldhu	r2,12(r16)
 8015668:	00fedfc4 	movi	r3,-1153
 801566c:	10c4703a 	and	r2,r2,r3
 8015670:	10802014 	ori	r2,r2,128
 8015674:	8080030d 	sth	r2,12(r16)
 8015678:	b709883a 	add	r4,r22,fp
 801567c:	a707c83a 	sub	r3,r20,fp
 8015680:	85800415 	stw	r22,16(r16)
 8015684:	85000515 	stw	r20,20(r16)
 8015688:	81000015 	stw	r4,0(r16)
 801568c:	9039883a 	mov	fp,r18
 8015690:	80c00215 	stw	r3,8(r16)
 8015694:	9029883a 	mov	r20,r18
 8015698:	902d883a 	mov	r22,r18
 801569c:	003f3d06 	br	8015394 <__alt_data_end+0xfc015394>
 80156a0:	b80b883a 	mov	r5,r23
 80156a4:	a00d883a 	mov	r6,r20
 80156a8:	80171180 	call	8017118 <memmove>
 80156ac:	80800017 	ldw	r2,0(r16)
 80156b0:	a809883a 	mov	r4,r21
 80156b4:	800b883a 	mov	r5,r16
 80156b8:	1505883a 	add	r2,r2,r20
 80156bc:	80800015 	stw	r2,0(r16)
 80156c0:	80148140 	call	8014814 <_fflush_r>
 80156c4:	103fa526 	beq	r2,zero,801555c <__alt_data_end+0xfc01555c>
 80156c8:	003f5006 	br	801540c <__alt_data_end+0xfc01540c>
 80156cc:	95000044 	addi	r20,r18,1
 80156d0:	02000044 	movi	r8,1
 80156d4:	003f5806 	br	8015438 <__alt_data_end+0xfc015438>

080156d8 <_fwalk>:
 80156d8:	defff804 	addi	sp,sp,-32
 80156dc:	dd400515 	stw	r21,20(sp)
 80156e0:	2540b804 	addi	r21,r4,736
 80156e4:	dd800615 	stw	r22,24(sp)
 80156e8:	dd000415 	stw	r20,16(sp)
 80156ec:	dfc00715 	stw	ra,28(sp)
 80156f0:	dcc00315 	stw	r19,12(sp)
 80156f4:	dc800215 	stw	r18,8(sp)
 80156f8:	dc400115 	stw	r17,4(sp)
 80156fc:	dc000015 	stw	r16,0(sp)
 8015700:	2829883a 	mov	r20,r5
 8015704:	002d883a 	mov	r22,zero
 8015708:	8014de00 	call	8014de0 <__sfp_lock_acquire>
 801570c:	a8001426 	beq	r21,zero,8015760 <_fwalk+0x88>
 8015710:	04ffffc4 	movi	r19,-1
 8015714:	ac400117 	ldw	r17,4(r21)
 8015718:	ac800217 	ldw	r18,8(r21)
 801571c:	8c7fffc4 	addi	r17,r17,-1
 8015720:	88000d16 	blt	r17,zero,8015758 <_fwalk+0x80>
 8015724:	94000304 	addi	r16,r18,12
 8015728:	94800384 	addi	r18,r18,14
 801572c:	80c0000f 	ldh	r3,0(r16)
 8015730:	8c7fffc4 	addi	r17,r17,-1
 8015734:	813ffd04 	addi	r4,r16,-12
 8015738:	18000426 	beq	r3,zero,801574c <_fwalk+0x74>
 801573c:	90c0000f 	ldh	r3,0(r18)
 8015740:	1cc00226 	beq	r3,r19,801574c <_fwalk+0x74>
 8015744:	a03ee83a 	callr	r20
 8015748:	b0acb03a 	or	r22,r22,r2
 801574c:	84001a04 	addi	r16,r16,104
 8015750:	94801a04 	addi	r18,r18,104
 8015754:	8cfff51e 	bne	r17,r19,801572c <__alt_data_end+0xfc01572c>
 8015758:	ad400017 	ldw	r21,0(r21)
 801575c:	a83fed1e 	bne	r21,zero,8015714 <__alt_data_end+0xfc015714>
 8015760:	8014de40 	call	8014de4 <__sfp_lock_release>
 8015764:	b005883a 	mov	r2,r22
 8015768:	dfc00717 	ldw	ra,28(sp)
 801576c:	dd800617 	ldw	r22,24(sp)
 8015770:	dd400517 	ldw	r21,20(sp)
 8015774:	dd000417 	ldw	r20,16(sp)
 8015778:	dcc00317 	ldw	r19,12(sp)
 801577c:	dc800217 	ldw	r18,8(sp)
 8015780:	dc400117 	ldw	r17,4(sp)
 8015784:	dc000017 	ldw	r16,0(sp)
 8015788:	dec00804 	addi	sp,sp,32
 801578c:	f800283a 	ret

08015790 <_fwalk_reent>:
 8015790:	defff804 	addi	sp,sp,-32
 8015794:	dd400515 	stw	r21,20(sp)
 8015798:	2540b804 	addi	r21,r4,736
 801579c:	dd800615 	stw	r22,24(sp)
 80157a0:	dd000415 	stw	r20,16(sp)
 80157a4:	dcc00315 	stw	r19,12(sp)
 80157a8:	dfc00715 	stw	ra,28(sp)
 80157ac:	dc800215 	stw	r18,8(sp)
 80157b0:	dc400115 	stw	r17,4(sp)
 80157b4:	dc000015 	stw	r16,0(sp)
 80157b8:	2027883a 	mov	r19,r4
 80157bc:	2829883a 	mov	r20,r5
 80157c0:	002d883a 	mov	r22,zero
 80157c4:	8014de00 	call	8014de0 <__sfp_lock_acquire>
 80157c8:	a8001326 	beq	r21,zero,8015818 <_fwalk_reent+0x88>
 80157cc:	04bfffc4 	movi	r18,-1
 80157d0:	ac400117 	ldw	r17,4(r21)
 80157d4:	ac000217 	ldw	r16,8(r21)
 80157d8:	8c7fffc4 	addi	r17,r17,-1
 80157dc:	88000c16 	blt	r17,zero,8015810 <_fwalk_reent+0x80>
 80157e0:	84000304 	addi	r16,r16,12
 80157e4:	80c0000f 	ldh	r3,0(r16)
 80157e8:	8c7fffc4 	addi	r17,r17,-1
 80157ec:	817ffd04 	addi	r5,r16,-12
 80157f0:	18000526 	beq	r3,zero,8015808 <_fwalk_reent+0x78>
 80157f4:	80c0008f 	ldh	r3,2(r16)
 80157f8:	9809883a 	mov	r4,r19
 80157fc:	1c800226 	beq	r3,r18,8015808 <_fwalk_reent+0x78>
 8015800:	a03ee83a 	callr	r20
 8015804:	b0acb03a 	or	r22,r22,r2
 8015808:	84001a04 	addi	r16,r16,104
 801580c:	8cbff51e 	bne	r17,r18,80157e4 <__alt_data_end+0xfc0157e4>
 8015810:	ad400017 	ldw	r21,0(r21)
 8015814:	a83fee1e 	bne	r21,zero,80157d0 <__alt_data_end+0xfc0157d0>
 8015818:	8014de40 	call	8014de4 <__sfp_lock_release>
 801581c:	b005883a 	mov	r2,r22
 8015820:	dfc00717 	ldw	ra,28(sp)
 8015824:	dd800617 	ldw	r22,24(sp)
 8015828:	dd400517 	ldw	r21,20(sp)
 801582c:	dd000417 	ldw	r20,16(sp)
 8015830:	dcc00317 	ldw	r19,12(sp)
 8015834:	dc800217 	ldw	r18,8(sp)
 8015838:	dc400117 	ldw	r17,4(sp)
 801583c:	dc000017 	ldw	r16,0(sp)
 8015840:	dec00804 	addi	sp,sp,32
 8015844:	f800283a 	ret

08015848 <rshift>:
 8015848:	2807d17a 	srai	r3,r5,5
 801584c:	20800417 	ldw	r2,16(r4)
 8015850:	22400504 	addi	r9,r4,20
 8015854:	1880250e 	bge	r3,r2,80158ec <rshift+0xa4>
 8015858:	1085883a 	add	r2,r2,r2
 801585c:	18c7883a 	add	r3,r3,r3
 8015860:	1085883a 	add	r2,r2,r2
 8015864:	18c7883a 	add	r3,r3,r3
 8015868:	294007cc 	andi	r5,r5,31
 801586c:	4885883a 	add	r2,r9,r2
 8015870:	48c7883a 	add	r3,r9,r3
 8015874:	28002026 	beq	r5,zero,80158f8 <rshift+0xb0>
 8015878:	19800017 	ldw	r6,0(r3)
 801587c:	02c00804 	movi	r11,32
 8015880:	19c00104 	addi	r7,r3,4
 8015884:	5957c83a 	sub	r11,r11,r5
 8015888:	3150d83a 	srl	r8,r6,r5
 801588c:	38802c2e 	bgeu	r7,r2,8015940 <rshift+0xf8>
 8015890:	4815883a 	mov	r10,r9
 8015894:	39800017 	ldw	r6,0(r7)
 8015898:	52800104 	addi	r10,r10,4
 801589c:	39c00104 	addi	r7,r7,4
 80158a0:	32cc983a 	sll	r6,r6,r11
 80158a4:	418cb03a 	or	r6,r8,r6
 80158a8:	51bfff15 	stw	r6,-4(r10)
 80158ac:	39bfff17 	ldw	r6,-4(r7)
 80158b0:	3150d83a 	srl	r8,r6,r5
 80158b4:	38bff736 	bltu	r7,r2,8015894 <__alt_data_end+0xfc015894>
 80158b8:	10c7c83a 	sub	r3,r2,r3
 80158bc:	18fffec4 	addi	r3,r3,-5
 80158c0:	1806d0ba 	srli	r3,r3,2
 80158c4:	18c00044 	addi	r3,r3,1
 80158c8:	18c7883a 	add	r3,r3,r3
 80158cc:	18c7883a 	add	r3,r3,r3
 80158d0:	48c7883a 	add	r3,r9,r3
 80158d4:	1a000015 	stw	r8,0(r3)
 80158d8:	40000126 	beq	r8,zero,80158e0 <rshift+0x98>
 80158dc:	18c00104 	addi	r3,r3,4
 80158e0:	1a45c83a 	sub	r2,r3,r9
 80158e4:	1005d0ba 	srai	r2,r2,2
 80158e8:	00001206 	br	8015934 <rshift+0xec>
 80158ec:	20000415 	stw	zero,16(r4)
 80158f0:	20000515 	stw	zero,20(r4)
 80158f4:	f800283a 	ret
 80158f8:	18bffc2e 	bgeu	r3,r2,80158ec <__alt_data_end+0xfc0158ec>
 80158fc:	180d883a 	mov	r6,r3
 8015900:	480b883a 	mov	r5,r9
 8015904:	31c00017 	ldw	r7,0(r6)
 8015908:	29400104 	addi	r5,r5,4
 801590c:	31800104 	addi	r6,r6,4
 8015910:	29ffff15 	stw	r7,-4(r5)
 8015914:	30bffb36 	bltu	r6,r2,8015904 <__alt_data_end+0xfc015904>
 8015918:	00c6303a 	nor	r3,zero,r3
 801591c:	1885883a 	add	r2,r3,r2
 8015920:	1004d0ba 	srli	r2,r2,2
 8015924:	10800044 	addi	r2,r2,1
 8015928:	1085883a 	add	r2,r2,r2
 801592c:	1085883a 	add	r2,r2,r2
 8015930:	1005d0ba 	srai	r2,r2,2
 8015934:	20800415 	stw	r2,16(r4)
 8015938:	103fed26 	beq	r2,zero,80158f0 <__alt_data_end+0xfc0158f0>
 801593c:	f800283a 	ret
 8015940:	4807883a 	mov	r3,r9
 8015944:	003fe306 	br	80158d4 <__alt_data_end+0xfc0158d4>

08015948 <__hexdig_init>:
 8015948:	014200b4 	movhi	r5,2050
 801594c:	00c200f4 	movhi	r3,2051
 8015950:	2941d144 	addi	r5,r5,1861
 8015954:	18e23b04 	addi	r3,r3,-30484
 8015958:	01000404 	movi	r4,16
 801595c:	00800c04 	movi	r2,48
 8015960:	10c5883a 	add	r2,r2,r3
 8015964:	11000005 	stb	r4,0(r2)
 8015968:	28800003 	ldbu	r2,0(r5)
 801596c:	21000044 	addi	r4,r4,1
 8015970:	29400044 	addi	r5,r5,1
 8015974:	103ffa1e 	bne	r2,zero,8015960 <__alt_data_end+0xfc015960>
 8015978:	014200b4 	movhi	r5,2050
 801597c:	2941cf44 	addi	r5,r5,1853
 8015980:	01000684 	movi	r4,26
 8015984:	00801844 	movi	r2,97
 8015988:	10c5883a 	add	r2,r2,r3
 801598c:	11000005 	stb	r4,0(r2)
 8015990:	28800003 	ldbu	r2,0(r5)
 8015994:	21000044 	addi	r4,r4,1
 8015998:	29400044 	addi	r5,r5,1
 801599c:	103ffa1e 	bne	r2,zero,8015988 <__alt_data_end+0xfc015988>
 80159a0:	014200b4 	movhi	r5,2050
 80159a4:	2941cd44 	addi	r5,r5,1845
 80159a8:	01000684 	movi	r4,26
 80159ac:	00801044 	movi	r2,65
 80159b0:	10c5883a 	add	r2,r2,r3
 80159b4:	11000005 	stb	r4,0(r2)
 80159b8:	28800003 	ldbu	r2,0(r5)
 80159bc:	21000044 	addi	r4,r4,1
 80159c0:	29400044 	addi	r5,r5,1
 80159c4:	103ffa1e 	bne	r2,zero,80159b0 <__alt_data_end+0xfc0159b0>
 80159c8:	f800283a 	ret

080159cc <__gethex>:
 80159cc:	deffea04 	addi	sp,sp,-88
 80159d0:	dfc01515 	stw	ra,84(sp)
 80159d4:	dd401115 	stw	r21,68(sp)
 80159d8:	dd001015 	stw	r20,64(sp)
 80159dc:	dcc00f15 	stw	r19,60(sp)
 80159e0:	dc800e15 	stw	r18,56(sp)
 80159e4:	d9000215 	stw	r4,8(sp)
 80159e8:	2829883a 	mov	r20,r5
 80159ec:	d9800115 	stw	r6,4(sp)
 80159f0:	d9c00415 	stw	r7,16(sp)
 80159f4:	df001415 	stw	fp,80(sp)
 80159f8:	ddc01315 	stw	r23,76(sp)
 80159fc:	dd801215 	stw	r22,72(sp)
 8015a00:	dc400d15 	stw	r17,52(sp)
 8015a04:	dc000c15 	stw	r16,48(sp)
 8015a08:	80165640 	call	8016564 <_localeconv_r>
 8015a0c:	14800017 	ldw	r18,0(r2)
 8015a10:	054200f4 	movhi	r21,2051
 8015a14:	ad623b04 	addi	r21,r21,-30484
 8015a18:	9009883a 	mov	r4,r18
 8015a1c:	800d1b80 	call	800d1b8 <strlen>
 8015a20:	1027883a 	mov	r19,r2
 8015a24:	94c7883a 	add	r3,r18,r19
 8015a28:	18ffffc3 	ldbu	r3,-1(r3)
 8015a2c:	a8800c03 	ldbu	r2,48(r21)
 8015a30:	d8c00305 	stb	r3,12(sp)
 8015a34:	1000dc26 	beq	r2,zero,8015da8 <__gethex+0x3dc>
 8015a38:	a1c00017 	ldw	r7,0(r20)
 8015a3c:	00800c04 	movi	r2,48
 8015a40:	38c00083 	ldbu	r3,2(r7)
 8015a44:	1881511e 	bne	r3,r2,8015f8c <__gethex+0x5c0>
 8015a48:	013fff84 	movi	r4,-2
 8015a4c:	388000c4 	addi	r2,r7,3
 8015a50:	21c9c83a 	sub	r4,r4,r7
 8015a54:	180b883a 	mov	r5,r3
 8015a58:	20b9883a 	add	fp,r4,r2
 8015a5c:	102f883a 	mov	r23,r2
 8015a60:	10800044 	addi	r2,r2,1
 8015a64:	10ffffc3 	ldbu	r3,-1(r2)
 8015a68:	197ffb26 	beq	r3,r5,8015a58 <__alt_data_end+0xfc015a58>
 8015a6c:	a8c7883a 	add	r3,r21,r3
 8015a70:	18800003 	ldbu	r2,0(r3)
 8015a74:	058200f4 	movhi	r22,2051
 8015a78:	b5a23b04 	addi	r22,r22,-30484
 8015a7c:	1000cc26 	beq	r2,zero,8015db0 <__gethex+0x3e4>
 8015a80:	b8800003 	ldbu	r2,0(r23)
 8015a84:	d8000015 	stw	zero,0(sp)
 8015a88:	0021883a 	mov	r16,zero
 8015a8c:	b085883a 	add	r2,r22,r2
 8015a90:	10800003 	ldbu	r2,0(r2)
 8015a94:	b823883a 	mov	r17,r23
 8015a98:	10000526 	beq	r2,zero,8015ab0 <__gethex+0xe4>
 8015a9c:	8c400044 	addi	r17,r17,1
 8015aa0:	88800003 	ldbu	r2,0(r17)
 8015aa4:	a885883a 	add	r2,r21,r2
 8015aa8:	10800003 	ldbu	r2,0(r2)
 8015aac:	103ffb1e 	bne	r2,zero,8015a9c <__alt_data_end+0xfc015a9c>
 8015ab0:	8809883a 	mov	r4,r17
 8015ab4:	900b883a 	mov	r5,r18
 8015ab8:	980d883a 	mov	r6,r19
 8015abc:	8018bb40 	call	8018bb4 <strncmp>
 8015ac0:	10007b26 	beq	r2,zero,8015cb0 <__gethex+0x2e4>
 8015ac4:	88800003 	ldbu	r2,0(r17)
 8015ac8:	80000426 	beq	r16,zero,8015adc <__gethex+0x110>
 8015acc:	8c21c83a 	sub	r16,r17,r16
 8015ad0:	8421883a 	add	r16,r16,r16
 8015ad4:	8421883a 	add	r16,r16,r16
 8015ad8:	0421c83a 	sub	r16,zero,r16
 8015adc:	10803fcc 	andi	r2,r2,255
 8015ae0:	01001404 	movi	r4,80
 8015ae4:	11007e26 	beq	r2,r4,8015ce0 <__gethex+0x314>
 8015ae8:	01001c04 	movi	r4,112
 8015aec:	11007c26 	beq	r2,r4,8015ce0 <__gethex+0x314>
 8015af0:	882d883a 	mov	r22,r17
 8015af4:	d8c00017 	ldw	r3,0(sp)
 8015af8:	a4400015 	stw	r17,0(r20)
 8015afc:	18000e26 	beq	r3,zero,8015b38 <__gethex+0x16c>
 8015b00:	e000b91e 	bne	fp,zero,8015de8 <__gethex+0x41c>
 8015b04:	00800184 	movi	r2,6
 8015b08:	dfc01517 	ldw	ra,84(sp)
 8015b0c:	df001417 	ldw	fp,80(sp)
 8015b10:	ddc01317 	ldw	r23,76(sp)
 8015b14:	dd801217 	ldw	r22,72(sp)
 8015b18:	dd401117 	ldw	r21,68(sp)
 8015b1c:	dd001017 	ldw	r20,64(sp)
 8015b20:	dcc00f17 	ldw	r19,60(sp)
 8015b24:	dc800e17 	ldw	r18,56(sp)
 8015b28:	dc400d17 	ldw	r17,52(sp)
 8015b2c:	dc000c17 	ldw	r16,48(sp)
 8015b30:	dec01604 	addi	sp,sp,88
 8015b34:	f800283a 	ret
 8015b38:	b5c5c83a 	sub	r2,r22,r23
 8015b3c:	10bfffc4 	addi	r2,r2,-1
 8015b40:	00c001c4 	movi	r3,7
 8015b44:	000b883a 	mov	r5,zero
 8015b48:	1880030e 	bge	r3,r2,8015b58 <__gethex+0x18c>
 8015b4c:	1005d07a 	srai	r2,r2,1
 8015b50:	29400044 	addi	r5,r5,1
 8015b54:	18bffd16 	blt	r3,r2,8015b4c <__alt_data_end+0xfc015b4c>
 8015b58:	d9000217 	ldw	r4,8(sp)
 8015b5c:	80173980 	call	8017398 <_Balloc>
 8015b60:	10c00504 	addi	r3,r2,20
 8015b64:	d8c00015 	stw	r3,0(sp)
 8015b68:	1029883a 	mov	r20,r2
 8015b6c:	bd816a2e 	bgeu	r23,r22,8016118 <__gethex+0x74c>
 8015b70:	dc400303 	ldbu	r17,12(sp)
 8015b74:	03400044 	movi	r13,1
 8015b78:	1815883a 	mov	r10,r3
 8015b7c:	0013883a 	mov	r9,zero
 8015b80:	0039883a 	mov	fp,zero
 8015b84:	6cdbc83a 	sub	r13,r13,r19
 8015b88:	02c00804 	movi	r11,32
 8015b8c:	b0bfffc3 	ldbu	r2,-1(r22)
 8015b90:	b3bfffc4 	addi	r14,r22,-1
 8015b94:	14403026 	beq	r2,r17,8015c58 <__gethex+0x28c>
 8015b98:	e2c04826 	beq	fp,r11,8015cbc <__gethex+0x2f0>
 8015b9c:	e009883a 	mov	r4,fp
 8015ba0:	e7000104 	addi	fp,fp,4
 8015ba4:	b0bfffc3 	ldbu	r2,-1(r22)
 8015ba8:	702d883a 	mov	r22,r14
 8015bac:	a885883a 	add	r2,r21,r2
 8015bb0:	10c00003 	ldbu	r3,0(r2)
 8015bb4:	18c003cc 	andi	r3,r3,15
 8015bb8:	1906983a 	sll	r3,r3,r4
 8015bbc:	48d2b03a 	or	r9,r9,r3
 8015bc0:	bdbff236 	bltu	r23,r22,8015b8c <__alt_data_end+0xfc015b8c>
 8015bc4:	d8c00017 	ldw	r3,0(sp)
 8015bc8:	50800104 	addi	r2,r10,4
 8015bcc:	52400015 	stw	r9,0(r10)
 8015bd0:	10c5c83a 	sub	r2,r2,r3
 8015bd4:	1005d0ba 	srai	r2,r2,2
 8015bd8:	4809883a 	mov	r4,r9
 8015bdc:	a0800415 	stw	r2,16(r20)
 8015be0:	1022917a 	slli	r17,r2,5
 8015be4:	80176a80 	call	80176a8 <__hi0bits>
 8015be8:	d8c00117 	ldw	r3,4(sp)
 8015bec:	8885c83a 	sub	r2,r17,r2
 8015bf0:	1c800017 	ldw	r18,0(r3)
 8015bf4:	9080be16 	blt	r18,r2,8015ef0 <__gethex+0x524>
 8015bf8:	1480d916 	blt	r2,r18,8015f60 <__gethex+0x594>
 8015bfc:	0027883a 	mov	r19,zero
 8015c00:	d8c00117 	ldw	r3,4(sp)
 8015c04:	18800217 	ldw	r2,8(r3)
 8015c08:	14008616 	blt	r2,r16,8015e24 <__gethex+0x458>
 8015c0c:	d8c00117 	ldw	r3,4(sp)
 8015c10:	18800117 	ldw	r2,4(r3)
 8015c14:	8080a30e 	bge	r16,r2,8015ea4 <__gethex+0x4d8>
 8015c18:	1421c83a 	sub	r16,r2,r16
 8015c1c:	8480e216 	blt	r16,r18,8015fa8 <__gethex+0x5dc>
 8015c20:	18c00317 	ldw	r3,12(r3)
 8015c24:	01000084 	movi	r4,2
 8015c28:	19014926 	beq	r3,r4,8016150 <__gethex+0x784>
 8015c2c:	010000c4 	movi	r4,3
 8015c30:	19012526 	beq	r3,r4,80160c8 <__gethex+0x6fc>
 8015c34:	01000044 	movi	r4,1
 8015c38:	19013c26 	beq	r3,r4,801612c <__gethex+0x760>
 8015c3c:	d9000217 	ldw	r4,8(sp)
 8015c40:	a00b883a 	mov	r5,r20
 8015c44:	80174400 	call	8017440 <_Bfree>
 8015c48:	d8801617 	ldw	r2,88(sp)
 8015c4c:	10000015 	stw	zero,0(r2)
 8015c50:	00801404 	movi	r2,80
 8015c54:	003fac06 	br	8015b08 <__alt_data_end+0xfc015b08>
 8015c58:	7347883a 	add	r3,r14,r13
 8015c5c:	1dffce36 	bltu	r3,r23,8015b98 <__alt_data_end+0xfc015b98>
 8015c60:	1809883a 	mov	r4,r3
 8015c64:	900b883a 	mov	r5,r18
 8015c68:	980d883a 	mov	r6,r19
 8015c6c:	d8c00715 	stw	r3,28(sp)
 8015c70:	da400815 	stw	r9,32(sp)
 8015c74:	da800915 	stw	r10,36(sp)
 8015c78:	dac00b15 	stw	r11,44(sp)
 8015c7c:	db400a15 	stw	r13,40(sp)
 8015c80:	db800615 	stw	r14,24(sp)
 8015c84:	8018bb40 	call	8018bb4 <strncmp>
 8015c88:	d8c00717 	ldw	r3,28(sp)
 8015c8c:	da400817 	ldw	r9,32(sp)
 8015c90:	da800917 	ldw	r10,36(sp)
 8015c94:	dac00b17 	ldw	r11,44(sp)
 8015c98:	db400a17 	ldw	r13,40(sp)
 8015c9c:	db800617 	ldw	r14,24(sp)
 8015ca0:	103fbd1e 	bne	r2,zero,8015b98 <__alt_data_end+0xfc015b98>
 8015ca4:	182d883a 	mov	r22,r3
 8015ca8:	bdbfb836 	bltu	r23,r22,8015b8c <__alt_data_end+0xfc015b8c>
 8015cac:	003fc506 	br	8015bc4 <__alt_data_end+0xfc015bc4>
 8015cb0:	8000d826 	beq	r16,zero,8016014 <__gethex+0x648>
 8015cb4:	88800003 	ldbu	r2,0(r17)
 8015cb8:	003f8406 	br	8015acc <__alt_data_end+0xfc015acc>
 8015cbc:	07000104 	movi	fp,4
 8015cc0:	52400015 	stw	r9,0(r10)
 8015cc4:	0009883a 	mov	r4,zero
 8015cc8:	5715883a 	add	r10,r10,fp
 8015ccc:	0013883a 	mov	r9,zero
 8015cd0:	003fb406 	br	8015ba4 <__alt_data_end+0xfc015ba4>
 8015cd4:	00c00044 	movi	r3,1
 8015cd8:	0021883a 	mov	r16,zero
 8015cdc:	d8c00015 	stw	r3,0(sp)
 8015ce0:	88800043 	ldbu	r2,1(r17)
 8015ce4:	01400ac4 	movi	r5,43
 8015ce8:	11003fcc 	andi	r4,r2,255
 8015cec:	21407e26 	beq	r4,r5,8015ee8 <__gethex+0x51c>
 8015cf0:	01400b44 	movi	r5,45
 8015cf4:	21405226 	beq	r4,r5,8015e40 <__gethex+0x474>
 8015cf8:	8ac00044 	addi	r11,r17,1
 8015cfc:	d8000515 	stw	zero,20(sp)
 8015d00:	10803fcc 	andi	r2,r2,255
 8015d04:	a885883a 	add	r2,r21,r2
 8015d08:	11000003 	ldbu	r4,0(r2)
 8015d0c:	00c00604 	movi	r3,24
 8015d10:	20bfffc4 	addi	r2,r4,-1
 8015d14:	10803fcc 	andi	r2,r2,255
 8015d18:	18bf7536 	bltu	r3,r2,8015af0 <__alt_data_end+0xfc015af0>
 8015d1c:	58800043 	ldbu	r2,1(r11)
 8015d20:	014200f4 	movhi	r5,2051
 8015d24:	29623b04 	addi	r5,r5,-30484
 8015d28:	2885883a 	add	r2,r5,r2
 8015d2c:	12800003 	ldbu	r10,0(r2)
 8015d30:	21003fcc 	andi	r4,r4,255
 8015d34:	213ffc04 	addi	r4,r4,-16
 8015d38:	50bfffc4 	addi	r2,r10,-1
 8015d3c:	10803fcc 	andi	r2,r2,255
 8015d40:	5ac00044 	addi	r11,r11,1
 8015d44:	55803fcc 	andi	r22,r10,255
 8015d48:	18800f36 	bltu	r3,r2,8015d88 <__gethex+0x3bc>
 8015d4c:	5ac00044 	addi	r11,r11,1
 8015d50:	01400284 	movi	r5,10
 8015d54:	dac00b15 	stw	r11,44(sp)
 8015d58:	8009fe40 	call	8009fe4 <__mulsi3>
 8015d5c:	dac00b17 	ldw	r11,44(sp)
 8015d60:	1585883a 	add	r2,r2,r22
 8015d64:	113ffc04 	addi	r4,r2,-16
 8015d68:	5a800003 	ldbu	r10,0(r11)
 8015d6c:	00800604 	movi	r2,24
 8015d70:	aa95883a 	add	r10,r21,r10
 8015d74:	51400003 	ldbu	r5,0(r10)
 8015d78:	2abfffc4 	addi	r10,r5,-1
 8015d7c:	52803fcc 	andi	r10,r10,255
 8015d80:	2d803fcc 	andi	r22,r5,255
 8015d84:	12bff12e 	bgeu	r2,r10,8015d4c <__alt_data_end+0xfc015d4c>
 8015d88:	d8c00517 	ldw	r3,20(sp)
 8015d8c:	882d883a 	mov	r22,r17
 8015d90:	5823883a 	mov	r17,r11
 8015d94:	00c5c83a 	sub	r2,zero,r3
 8015d98:	2084f03a 	xor	r2,r4,r2
 8015d9c:	10c5883a 	add	r2,r2,r3
 8015da0:	80a1883a 	add	r16,r16,r2
 8015da4:	003f5306 	br	8015af4 <__alt_data_end+0xfc015af4>
 8015da8:	80159480 	call	8015948 <__hexdig_init>
 8015dac:	003f2206 	br	8015a38 <__alt_data_end+0xfc015a38>
 8015db0:	b809883a 	mov	r4,r23
 8015db4:	900b883a 	mov	r5,r18
 8015db8:	980d883a 	mov	r6,r19
 8015dbc:	8018bb40 	call	8018bb4 <strncmp>
 8015dc0:	10002426 	beq	r2,zero,8015e54 <__gethex+0x488>
 8015dc4:	b8800003 	ldbu	r2,0(r23)
 8015dc8:	b823883a 	mov	r17,r23
 8015dcc:	10803fcc 	andi	r2,r2,255
 8015dd0:	01001404 	movi	r4,80
 8015dd4:	113fbf26 	beq	r2,r4,8015cd4 <__alt_data_end+0xfc015cd4>
 8015dd8:	01001c04 	movi	r4,112
 8015ddc:	113fbd26 	beq	r2,r4,8015cd4 <__alt_data_end+0xfc015cd4>
 8015de0:	a4400015 	stw	r17,0(r20)
 8015de4:	e03f4726 	beq	fp,zero,8015b04 <__alt_data_end+0xfc015b04>
 8015de8:	0005883a 	mov	r2,zero
 8015dec:	003f4606 	br	8015b08 <__alt_data_end+0xfc015b08>
 8015df0:	2ce7883a 	add	r19,r5,r19
 8015df4:	993fff17 	ldw	r4,-4(r19)
 8015df8:	80176a80 	call	80176a8 <__hi0bits>
 8015dfc:	00c00804 	movi	r3,32
 8015e00:	1c63c83a 	sub	r17,r3,r17
 8015e04:	1440ac0e 	bge	r2,r17,80160b8 <__gethex+0x6ec>
 8015e08:	a009883a 	mov	r4,r20
 8015e0c:	01400044 	movi	r5,1
 8015e10:	80158480 	call	8015848 <rshift>
 8015e14:	d8c00117 	ldw	r3,4(sp)
 8015e18:	84000044 	addi	r16,r16,1
 8015e1c:	18800217 	ldw	r2,8(r3)
 8015e20:	1400a50e 	bge	r2,r16,80160b8 <__gethex+0x6ec>
 8015e24:	d9000217 	ldw	r4,8(sp)
 8015e28:	a00b883a 	mov	r5,r20
 8015e2c:	80174400 	call	8017440 <_Bfree>
 8015e30:	d9001617 	ldw	r4,88(sp)
 8015e34:	008028c4 	movi	r2,163
 8015e38:	20000015 	stw	zero,0(r4)
 8015e3c:	003f3206 	br	8015b08 <__alt_data_end+0xfc015b08>
 8015e40:	00c00044 	movi	r3,1
 8015e44:	d8c00515 	stw	r3,20(sp)
 8015e48:	88800083 	ldbu	r2,2(r17)
 8015e4c:	8ac00084 	addi	r11,r17,2
 8015e50:	003fab06 	br	8015d00 <__alt_data_end+0xfc015d00>
 8015e54:	bce3883a 	add	r17,r23,r19
 8015e58:	89000003 	ldbu	r4,0(r17)
 8015e5c:	21403fcc 	andi	r5,r4,255
 8015e60:	b145883a 	add	r2,r22,r5
 8015e64:	10800003 	ldbu	r2,0(r2)
 8015e68:	10004d26 	beq	r2,zero,8015fa0 <__gethex+0x5d4>
 8015e6c:	01000c04 	movi	r4,48
 8015e70:	882f883a 	mov	r23,r17
 8015e74:	2900061e 	bne	r5,r4,8015e90 <__gethex+0x4c4>
 8015e78:	2809883a 	mov	r4,r5
 8015e7c:	bdc00044 	addi	r23,r23,1
 8015e80:	b8800003 	ldbu	r2,0(r23)
 8015e84:	113ffd26 	beq	r2,r4,8015e7c <__alt_data_end+0xfc015e7c>
 8015e88:	a885883a 	add	r2,r21,r2
 8015e8c:	10800003 	ldbu	r2,0(r2)
 8015e90:	1007003a 	cmpeq	r3,r2,zero
 8015e94:	d8c00015 	stw	r3,0(sp)
 8015e98:	8821883a 	mov	r16,r17
 8015e9c:	07000044 	movi	fp,1
 8015ea0:	003efc06 	br	8015a94 <__alt_data_end+0xfc015a94>
 8015ea4:	04400044 	movi	r17,1
 8015ea8:	98000926 	beq	r19,zero,8015ed0 <__gethex+0x504>
 8015eac:	d8c00117 	ldw	r3,4(sp)
 8015eb0:	18800317 	ldw	r2,12(r3)
 8015eb4:	00c00084 	movi	r3,2
 8015eb8:	10c06426 	beq	r2,r3,801604c <__gethex+0x680>
 8015ebc:	00c000c4 	movi	r3,3
 8015ec0:	10c06626 	beq	r2,r3,801605c <__gethex+0x690>
 8015ec4:	00c00044 	movi	r3,1
 8015ec8:	10c08b26 	beq	r2,r3,80160f8 <__gethex+0x72c>
 8015ecc:	8c400414 	ori	r17,r17,16
 8015ed0:	d9001617 	ldw	r4,88(sp)
 8015ed4:	d8c00417 	ldw	r3,16(sp)
 8015ed8:	8805883a 	mov	r2,r17
 8015edc:	25000015 	stw	r20,0(r4)
 8015ee0:	1c000015 	stw	r16,0(r3)
 8015ee4:	003f0806 	br	8015b08 <__alt_data_end+0xfc015b08>
 8015ee8:	d8000515 	stw	zero,20(sp)
 8015eec:	003fd606 	br	8015e48 <__alt_data_end+0xfc015e48>
 8015ef0:	14a3c83a 	sub	r17,r2,r18
 8015ef4:	a009883a 	mov	r4,r20
 8015ef8:	880b883a 	mov	r5,r17
 8015efc:	80183540 	call	8018354 <__any_on>
 8015f00:	10002526 	beq	r2,zero,8015f98 <__gethex+0x5cc>
 8015f04:	897fffc4 	addi	r5,r17,-1
 8015f08:	2807d17a 	srai	r3,r5,5
 8015f0c:	d8800017 	ldw	r2,0(sp)
 8015f10:	290007cc 	andi	r4,r5,31
 8015f14:	18c7883a 	add	r3,r3,r3
 8015f18:	18c7883a 	add	r3,r3,r3
 8015f1c:	04c00044 	movi	r19,1
 8015f20:	10c7883a 	add	r3,r2,r3
 8015f24:	9908983a 	sll	r4,r19,r4
 8015f28:	18c00017 	ldw	r3,0(r3)
 8015f2c:	20c6703a 	and	r3,r4,r3
 8015f30:	18000626 	beq	r3,zero,8015f4c <__gethex+0x580>
 8015f34:	99407b0e 	bge	r19,r5,8016124 <__gethex+0x758>
 8015f38:	a009883a 	mov	r4,r20
 8015f3c:	897fff84 	addi	r5,r17,-2
 8015f40:	80183540 	call	8018354 <__any_on>
 8015f44:	10007726 	beq	r2,zero,8016124 <__gethex+0x758>
 8015f48:	04c000c4 	movi	r19,3
 8015f4c:	a009883a 	mov	r4,r20
 8015f50:	880b883a 	mov	r5,r17
 8015f54:	80158480 	call	8015848 <rshift>
 8015f58:	8461883a 	add	r16,r16,r17
 8015f5c:	003f2806 	br	8015c00 <__alt_data_end+0xfc015c00>
 8015f60:	d9000217 	ldw	r4,8(sp)
 8015f64:	90a3c83a 	sub	r17,r18,r2
 8015f68:	a00b883a 	mov	r5,r20
 8015f6c:	880d883a 	mov	r6,r17
 8015f70:	8017bcc0 	call	8017bcc <__lshift>
 8015f74:	10c00504 	addi	r3,r2,20
 8015f78:	1029883a 	mov	r20,r2
 8015f7c:	8461c83a 	sub	r16,r16,r17
 8015f80:	d8c00015 	stw	r3,0(sp)
 8015f84:	0027883a 	mov	r19,zero
 8015f88:	003f1d06 	br	8015c00 <__alt_data_end+0xfc015c00>
 8015f8c:	3dc00084 	addi	r23,r7,2
 8015f90:	0039883a 	mov	fp,zero
 8015f94:	003eb506 	br	8015a6c <__alt_data_end+0xfc015a6c>
 8015f98:	0027883a 	mov	r19,zero
 8015f9c:	003feb06 	br	8015f4c <__alt_data_end+0xfc015f4c>
 8015fa0:	2005883a 	mov	r2,r4
 8015fa4:	003f8906 	br	8015dcc <__alt_data_end+0xfc015dcc>
 8015fa8:	847fffc4 	addi	r17,r16,-1
 8015fac:	9800441e 	bne	r19,zero,80160c0 <__gethex+0x6f4>
 8015fb0:	0440040e 	bge	zero,r17,8015fc4 <__gethex+0x5f8>
 8015fb4:	a009883a 	mov	r4,r20
 8015fb8:	880b883a 	mov	r5,r17
 8015fbc:	80183540 	call	8018354 <__any_on>
 8015fc0:	1027883a 	mov	r19,r2
 8015fc4:	8805d17a 	srai	r2,r17,5
 8015fc8:	d8c00017 	ldw	r3,0(sp)
 8015fcc:	8c4007cc 	andi	r17,r17,31
 8015fd0:	1085883a 	add	r2,r2,r2
 8015fd4:	1085883a 	add	r2,r2,r2
 8015fd8:	1885883a 	add	r2,r3,r2
 8015fdc:	00c00044 	movi	r3,1
 8015fe0:	1c62983a 	sll	r17,r3,r17
 8015fe4:	10800017 	ldw	r2,0(r2)
 8015fe8:	8884703a 	and	r2,r17,r2
 8015fec:	10000126 	beq	r2,zero,8015ff4 <__gethex+0x628>
 8015ff0:	9cc00094 	ori	r19,r19,2
 8015ff4:	800b883a 	mov	r5,r16
 8015ff8:	a009883a 	mov	r4,r20
 8015ffc:	80158480 	call	8015848 <rshift>
 8016000:	d8c00117 	ldw	r3,4(sp)
 8016004:	9425c83a 	sub	r18,r18,r16
 8016008:	04400084 	movi	r17,2
 801600c:	1c000117 	ldw	r16,4(r3)
 8016010:	003fa506 	br	8015ea8 <__alt_data_end+0xfc015ea8>
 8016014:	8ce1883a 	add	r16,r17,r19
 8016018:	80800003 	ldbu	r2,0(r16)
 801601c:	8023883a 	mov	r17,r16
 8016020:	10c03fcc 	andi	r3,r2,255
 8016024:	a8c7883a 	add	r3,r21,r3
 8016028:	18c00003 	ldbu	r3,0(r3)
 801602c:	183ea726 	beq	r3,zero,8015acc <__alt_data_end+0xfc015acc>
 8016030:	8c400044 	addi	r17,r17,1
 8016034:	88800003 	ldbu	r2,0(r17)
 8016038:	11003fcc 	andi	r4,r2,255
 801603c:	a909883a 	add	r4,r21,r4
 8016040:	21000003 	ldbu	r4,0(r4)
 8016044:	203ffa1e 	bne	r4,zero,8016030 <__alt_data_end+0xfc016030>
 8016048:	003ea006 	br	8015acc <__alt_data_end+0xfc015acc>
 801604c:	d9001717 	ldw	r4,92(sp)
 8016050:	00800044 	movi	r2,1
 8016054:	1109c83a 	sub	r4,r2,r4
 8016058:	d9001715 	stw	r4,92(sp)
 801605c:	d8801717 	ldw	r2,92(sp)
 8016060:	103f9a26 	beq	r2,zero,8015ecc <__alt_data_end+0xfc015ecc>
 8016064:	a5800417 	ldw	r22,16(r20)
 8016068:	d8800017 	ldw	r2,0(sp)
 801606c:	013fffc4 	movi	r4,-1
 8016070:	b5a7883a 	add	r19,r22,r22
 8016074:	9ce7883a 	add	r19,r19,r19
 8016078:	14cb883a 	add	r5,r2,r19
 801607c:	00000306 	br	801608c <__gethex+0x6c0>
 8016080:	10000015 	stw	zero,0(r2)
 8016084:	10800104 	addi	r2,r2,4
 8016088:	1140342e 	bgeu	r2,r5,801615c <__gethex+0x790>
 801608c:	10c00017 	ldw	r3,0(r2)
 8016090:	193ffb26 	beq	r3,r4,8016080 <__alt_data_end+0xfc016080>
 8016094:	d9400017 	ldw	r5,0(sp)
 8016098:	18c00044 	addi	r3,r3,1
 801609c:	10c00015 	stw	r3,0(r2)
 80160a0:	00800084 	movi	r2,2
 80160a4:	88803a26 	beq	r17,r2,8016190 <__gethex+0x7c4>
 80160a8:	a0800417 	ldw	r2,16(r20)
 80160ac:	b0bf5616 	blt	r22,r2,8015e08 <__alt_data_end+0xfc015e08>
 80160b0:	944007cc 	andi	r17,r18,31
 80160b4:	883f4e1e 	bne	r17,zero,8015df0 <__alt_data_end+0xfc015df0>
 80160b8:	04400844 	movi	r17,33
 80160bc:	003f8406 	br	8015ed0 <__alt_data_end+0xfc015ed0>
 80160c0:	04c00044 	movi	r19,1
 80160c4:	003fbf06 	br	8015fc4 <__alt_data_end+0xfc015fc4>
 80160c8:	d8c01717 	ldw	r3,92(sp)
 80160cc:	183edb26 	beq	r3,zero,8015c3c <__alt_data_end+0xfc015c3c>
 80160d0:	d8c00417 	ldw	r3,16(sp)
 80160d4:	d9001617 	ldw	r4,88(sp)
 80160d8:	18800015 	stw	r2,0(r3)
 80160dc:	d8c00017 	ldw	r3,0(sp)
 80160e0:	00800044 	movi	r2,1
 80160e4:	a0800415 	stw	r2,16(r20)
 80160e8:	18800015 	stw	r2,0(r3)
 80160ec:	25000015 	stw	r20,0(r4)
 80160f0:	00801884 	movi	r2,98
 80160f4:	003e8406 	br	8015b08 <__alt_data_end+0xfc015b08>
 80160f8:	9880008c 	andi	r2,r19,2
 80160fc:	103f7326 	beq	r2,zero,8015ecc <__alt_data_end+0xfc015ecc>
 8016100:	d8c00017 	ldw	r3,0(sp)
 8016104:	18800017 	ldw	r2,0(r3)
 8016108:	9884b03a 	or	r2,r19,r2
 801610c:	1080004c 	andi	r2,r2,1
 8016110:	103fd41e 	bne	r2,zero,8016064 <__alt_data_end+0xfc016064>
 8016114:	003f6d06 	br	8015ecc <__alt_data_end+0xfc015ecc>
 8016118:	da800017 	ldw	r10,0(sp)
 801611c:	0013883a 	mov	r9,zero
 8016120:	003ea806 	br	8015bc4 <__alt_data_end+0xfc015bc4>
 8016124:	04c00084 	movi	r19,2
 8016128:	003f8806 	br	8015f4c <__alt_data_end+0xfc015f4c>
 801612c:	84bec31e 	bne	r16,r18,8015c3c <__alt_data_end+0xfc015c3c>
 8016130:	1cbfe70e 	bge	r3,r18,80160d0 <__alt_data_end+0xfc0160d0>
 8016134:	a009883a 	mov	r4,r20
 8016138:	917fffc4 	addi	r5,r18,-1
 801613c:	80183540 	call	8018354 <__any_on>
 8016140:	103ebe26 	beq	r2,zero,8015c3c <__alt_data_end+0xfc015c3c>
 8016144:	d8c00117 	ldw	r3,4(sp)
 8016148:	18800117 	ldw	r2,4(r3)
 801614c:	003fe006 	br	80160d0 <__alt_data_end+0xfc0160d0>
 8016150:	d9001717 	ldw	r4,92(sp)
 8016154:	203fde26 	beq	r4,zero,80160d0 <__alt_data_end+0xfc0160d0>
 8016158:	003eb806 	br	8015c3c <__alt_data_end+0xfc015c3c>
 801615c:	a0800217 	ldw	r2,8(r20)
 8016160:	b080110e 	bge	r22,r2,80161a8 <__gethex+0x7dc>
 8016164:	d9400017 	ldw	r5,0(sp)
 8016168:	b009883a 	mov	r4,r22
 801616c:	20c00144 	addi	r3,r4,5
 8016170:	18c7883a 	add	r3,r3,r3
 8016174:	21000044 	addi	r4,r4,1
 8016178:	18c7883a 	add	r3,r3,r3
 801617c:	a1000415 	stw	r4,16(r20)
 8016180:	a0c7883a 	add	r3,r20,r3
 8016184:	00800044 	movi	r2,1
 8016188:	18800015 	stw	r2,0(r3)
 801618c:	003fc406 	br	80160a0 <__alt_data_end+0xfc0160a0>
 8016190:	d8c00117 	ldw	r3,4(sp)
 8016194:	18800017 	ldw	r2,0(r3)
 8016198:	10bfffc4 	addi	r2,r2,-1
 801619c:	14801526 	beq	r2,r18,80161f4 <__gethex+0x828>
 80161a0:	04400884 	movi	r17,34
 80161a4:	003f4a06 	br	8015ed0 <__alt_data_end+0xfc015ed0>
 80161a8:	a1400117 	ldw	r5,4(r20)
 80161ac:	d9000217 	ldw	r4,8(sp)
 80161b0:	29400044 	addi	r5,r5,1
 80161b4:	80173980 	call	8017398 <_Balloc>
 80161b8:	a1800417 	ldw	r6,16(r20)
 80161bc:	a1400304 	addi	r5,r20,12
 80161c0:	11000304 	addi	r4,r2,12
 80161c4:	31800084 	addi	r6,r6,2
 80161c8:	318d883a 	add	r6,r6,r6
 80161cc:	318d883a 	add	r6,r6,r6
 80161d0:	102b883a 	mov	r21,r2
 80161d4:	8016fe00 	call	8016fe0 <memcpy>
 80161d8:	d9000217 	ldw	r4,8(sp)
 80161dc:	a00b883a 	mov	r5,r20
 80161e0:	a829883a 	mov	r20,r21
 80161e4:	80174400 	call	8017440 <_Bfree>
 80161e8:	a9000417 	ldw	r4,16(r21)
 80161ec:	a9400504 	addi	r5,r21,20
 80161f0:	003fde06 	br	801616c <__alt_data_end+0xfc01616c>
 80161f4:	9005d17a 	srai	r2,r18,5
 80161f8:	944007cc 	andi	r17,r18,31
 80161fc:	00c00044 	movi	r3,1
 8016200:	1085883a 	add	r2,r2,r2
 8016204:	1085883a 	add	r2,r2,r2
 8016208:	2885883a 	add	r2,r5,r2
 801620c:	1c62983a 	sll	r17,r3,r17
 8016210:	10800017 	ldw	r2,0(r2)
 8016214:	8884703a 	and	r2,r17,r2
 8016218:	1023003a 	cmpeq	r17,r2,zero
 801621c:	8c400844 	addi	r17,r17,33
 8016220:	003f2b06 	br	8015ed0 <__alt_data_end+0xfc015ed0>

08016224 <__hexnan>:
 8016224:	defff504 	addi	sp,sp,-44
 8016228:	dc000315 	stw	r16,12(sp)
 801622c:	040200f4 	movhi	r16,2051
 8016230:	84223b04 	addi	r16,r16,-30484
 8016234:	80800c03 	ldbu	r2,48(r16)
 8016238:	dfc00a15 	stw	ra,40(sp)
 801623c:	dd800915 	stw	r22,36(sp)
 8016240:	dd400815 	stw	r21,32(sp)
 8016244:	dd000715 	stw	r20,28(sp)
 8016248:	dcc00615 	stw	r19,24(sp)
 801624c:	dc800515 	stw	r18,20(sp)
 8016250:	dc400415 	stw	r17,16(sp)
 8016254:	10006c26 	beq	r2,zero,8016408 <__hexnan+0x1e4>
 8016258:	2cc00017 	ldw	r19,0(r5)
 801625c:	981dd17a 	srai	r14,r19,5
 8016260:	9cc007cc 	andi	r19,r19,31
 8016264:	739d883a 	add	r14,r14,r14
 8016268:	739d883a 	add	r14,r14,r14
 801626c:	339d883a 	add	r14,r6,r14
 8016270:	98000126 	beq	r19,zero,8016278 <__hexnan+0x54>
 8016274:	73800104 	addi	r14,r14,4
 8016278:	22000017 	ldw	r8,0(r4)
 801627c:	72ffff04 	addi	r11,r14,-4
 8016280:	703fff15 	stw	zero,-4(r14)
 8016284:	581b883a 	mov	r13,r11
 8016288:	580f883a 	mov	r7,r11
 801628c:	000b883a 	mov	r5,zero
 8016290:	001f883a 	mov	r15,zero
 8016294:	0019883a 	mov	r12,zero
 8016298:	04800204 	movi	r18,8
 801629c:	04400804 	movi	r17,32
 80162a0:	050001c4 	movi	r20,7
 80162a4:	42000044 	addi	r8,r8,1
 80162a8:	40c00003 	ldbu	r3,0(r8)
 80162ac:	18001d26 	beq	r3,zero,8016324 <__hexnan+0x100>
 80162b0:	80c5883a 	add	r2,r16,r3
 80162b4:	10800003 	ldbu	r2,0(r2)
 80162b8:	12403fcc 	andi	r9,r2,255
 80162bc:	4800301e 	bne	r9,zero,8016380 <__hexnan+0x15c>
 80162c0:	88c04436 	bltu	r17,r3,80163d4 <__hexnan+0x1b0>
 80162c4:	7b3ff70e 	bge	r15,r12,80162a4 <__alt_data_end+0xfc0162a4>
 80162c8:	3b40112e 	bgeu	r7,r13,8016310 <__hexnan+0xec>
 80162cc:	a1401016 	blt	r20,r5,8016310 <__hexnan+0xec>
 80162d0:	914bc83a 	sub	r5,r18,r5
 80162d4:	294b883a 	add	r5,r5,r5
 80162d8:	3a800017 	ldw	r10,0(r7)
 80162dc:	294b883a 	add	r5,r5,r5
 80162e0:	896dc83a 	sub	r22,r17,r5
 80162e4:	38c00104 	addi	r3,r7,4
 80162e8:	3805883a 	mov	r2,r7
 80162ec:	1d400017 	ldw	r21,0(r3)
 80162f0:	10800104 	addi	r2,r2,4
 80162f4:	18c00104 	addi	r3,r3,4
 80162f8:	ad92983a 	sll	r9,r21,r22
 80162fc:	5252b03a 	or	r9,r10,r9
 8016300:	a954d83a 	srl	r10,r21,r5
 8016304:	127fff15 	stw	r9,-4(r2)
 8016308:	1abfff15 	stw	r10,-4(r3)
 801630c:	137ff736 	bltu	r2,r13,80162ec <__alt_data_end+0xfc0162ec>
 8016310:	31c02a36 	bltu	r6,r7,80163bc <__hexnan+0x198>
 8016314:	42000044 	addi	r8,r8,1
 8016318:	40c00003 	ldbu	r3,0(r8)
 801631c:	01400204 	movi	r5,8
 8016320:	183fe31e 	bne	r3,zero,80162b0 <__alt_data_end+0xfc0162b0>
 8016324:	3805883a 	mov	r2,r7
 8016328:	60002c26 	beq	r12,zero,80163dc <__hexnan+0x1b8>
 801632c:	3b40022e 	bgeu	r7,r13,8016338 <__hexnan+0x114>
 8016330:	00c001c4 	movi	r3,7
 8016334:	19404e0e 	bge	r3,r5,8016470 <__hexnan+0x24c>
 8016338:	31c03b2e 	bgeu	r6,r7,8016428 <__hexnan+0x204>
 801633c:	3005883a 	mov	r2,r6
 8016340:	38c00017 	ldw	r3,0(r7)
 8016344:	10800104 	addi	r2,r2,4
 8016348:	39c00104 	addi	r7,r7,4
 801634c:	10ffff15 	stw	r3,-4(r2)
 8016350:	59fffb2e 	bgeu	r11,r7,8016340 <__alt_data_end+0xfc016340>
 8016354:	10000015 	stw	zero,0(r2)
 8016358:	10800104 	addi	r2,r2,4
 801635c:	58bffd2e 	bgeu	r11,r2,8016354 <__alt_data_end+0xfc016354>
 8016360:	70bfff17 	ldw	r2,-4(r14)
 8016364:	1000041e 	bne	r2,zero,8016378 <__hexnan+0x154>
 8016368:	32c03826 	beq	r6,r11,801644c <__hexnan+0x228>
 801636c:	5affff04 	addi	r11,r11,-4
 8016370:	58800017 	ldw	r2,0(r11)
 8016374:	103ffc26 	beq	r2,zero,8016368 <__alt_data_end+0xfc016368>
 8016378:	00800144 	movi	r2,5
 801637c:	00001806 	br	80163e0 <__hexnan+0x1bc>
 8016380:	29400044 	addi	r5,r5,1
 8016384:	63000044 	addi	r12,r12,1
 8016388:	91400616 	blt	r18,r5,80163a4 <__hexnan+0x180>
 801638c:	38c00017 	ldw	r3,0(r7)
 8016390:	1806913a 	slli	r3,r3,4
 8016394:	108003cc 	andi	r2,r2,15
 8016398:	1884b03a 	or	r2,r3,r2
 801639c:	38800015 	stw	r2,0(r7)
 80163a0:	003fc006 	br	80162a4 <__alt_data_end+0xfc0162a4>
 80163a4:	31ffbf2e 	bgeu	r6,r7,80162a4 <__alt_data_end+0xfc0162a4>
 80163a8:	383fff15 	stw	zero,-4(r7)
 80163ac:	0007883a 	mov	r3,zero
 80163b0:	39ffff04 	addi	r7,r7,-4
 80163b4:	01400044 	movi	r5,1
 80163b8:	003ff606 	br	8016394 <__alt_data_end+0xfc016394>
 80163bc:	3b7fff04 	addi	r13,r7,-4
 80163c0:	383fff15 	stw	zero,-4(r7)
 80163c4:	601f883a 	mov	r15,r12
 80163c8:	680f883a 	mov	r7,r13
 80163cc:	000b883a 	mov	r5,zero
 80163d0:	003fb406 	br	80162a4 <__alt_data_end+0xfc0162a4>
 80163d4:	00800a44 	movi	r2,41
 80163d8:	18802026 	beq	r3,r2,801645c <__hexnan+0x238>
 80163dc:	00800104 	movi	r2,4
 80163e0:	dfc00a17 	ldw	ra,40(sp)
 80163e4:	dd800917 	ldw	r22,36(sp)
 80163e8:	dd400817 	ldw	r21,32(sp)
 80163ec:	dd000717 	ldw	r20,28(sp)
 80163f0:	dcc00617 	ldw	r19,24(sp)
 80163f4:	dc800517 	ldw	r18,20(sp)
 80163f8:	dc400417 	ldw	r17,16(sp)
 80163fc:	dc000317 	ldw	r16,12(sp)
 8016400:	dec00b04 	addi	sp,sp,44
 8016404:	f800283a 	ret
 8016408:	d9000015 	stw	r4,0(sp)
 801640c:	d9400115 	stw	r5,4(sp)
 8016410:	d9800215 	stw	r6,8(sp)
 8016414:	80159480 	call	8015948 <__hexdig_init>
 8016418:	d9800217 	ldw	r6,8(sp)
 801641c:	d9400117 	ldw	r5,4(sp)
 8016420:	d9000017 	ldw	r4,0(sp)
 8016424:	003f8c06 	br	8016258 <__alt_data_end+0xfc016258>
 8016428:	983fcd26 	beq	r19,zero,8016360 <__alt_data_end+0xfc016360>
 801642c:	00c00804 	movi	r3,32
 8016430:	1ce7c83a 	sub	r19,r3,r19
 8016434:	00ffffc4 	movi	r3,-1
 8016438:	70bfff17 	ldw	r2,-4(r14)
 801643c:	1cc6d83a 	srl	r3,r3,r19
 8016440:	1884703a 	and	r2,r3,r2
 8016444:	70bfff15 	stw	r2,-4(r14)
 8016448:	003fc606 	br	8016364 <__alt_data_end+0xfc016364>
 801644c:	00800044 	movi	r2,1
 8016450:	58800015 	stw	r2,0(r11)
 8016454:	00800144 	movi	r2,5
 8016458:	003fe106 	br	80163e0 <__alt_data_end+0xfc0163e0>
 801645c:	42000044 	addi	r8,r8,1
 8016460:	22000015 	stw	r8,0(r4)
 8016464:	3805883a 	mov	r2,r7
 8016468:	603fb01e 	bne	r12,zero,801632c <__alt_data_end+0xfc01632c>
 801646c:	003fdb06 	br	80163dc <__alt_data_end+0xfc0163dc>
 8016470:	02400204 	movi	r9,8
 8016474:	4953c83a 	sub	r9,r9,r5
 8016478:	4a53883a 	add	r9,r9,r9
 801647c:	3a000017 	ldw	r8,0(r7)
 8016480:	4a53883a 	add	r9,r9,r9
 8016484:	02800804 	movi	r10,32
 8016488:	5255c83a 	sub	r10,r10,r9
 801648c:	38c00104 	addi	r3,r7,4
 8016490:	19400017 	ldw	r5,0(r3)
 8016494:	10800104 	addi	r2,r2,4
 8016498:	18c00104 	addi	r3,r3,4
 801649c:	2a88983a 	sll	r4,r5,r10
 80164a0:	4108b03a 	or	r4,r8,r4
 80164a4:	2a50d83a 	srl	r8,r5,r9
 80164a8:	113fff15 	stw	r4,-4(r2)
 80164ac:	1a3fff15 	stw	r8,-4(r3)
 80164b0:	137ff736 	bltu	r2,r13,8016490 <__alt_data_end+0xfc016490>
 80164b4:	003fa006 	br	8016338 <__alt_data_end+0xfc016338>

080164b8 <_setlocale_r>:
 80164b8:	30001b26 	beq	r6,zero,8016528 <_setlocale_r+0x70>
 80164bc:	014200b4 	movhi	r5,2050
 80164c0:	defffe04 	addi	sp,sp,-8
 80164c4:	2941d404 	addi	r5,r5,1872
 80164c8:	3009883a 	mov	r4,r6
 80164cc:	dc000015 	stw	r16,0(sp)
 80164d0:	dfc00115 	stw	ra,4(sp)
 80164d4:	3021883a 	mov	r16,r6
 80164d8:	8018b100 	call	8018b10 <strcmp>
 80164dc:	1000061e 	bne	r2,zero,80164f8 <_setlocale_r+0x40>
 80164e0:	008200b4 	movhi	r2,2050
 80164e4:	1080f904 	addi	r2,r2,996
 80164e8:	dfc00117 	ldw	ra,4(sp)
 80164ec:	dc000017 	ldw	r16,0(sp)
 80164f0:	dec00204 	addi	sp,sp,8
 80164f4:	f800283a 	ret
 80164f8:	014200b4 	movhi	r5,2050
 80164fc:	2940f904 	addi	r5,r5,996
 8016500:	8009883a 	mov	r4,r16
 8016504:	8018b100 	call	8018b10 <strcmp>
 8016508:	103ff526 	beq	r2,zero,80164e0 <__alt_data_end+0xfc0164e0>
 801650c:	014200b4 	movhi	r5,2050
 8016510:	29411104 	addi	r5,r5,1092
 8016514:	8009883a 	mov	r4,r16
 8016518:	8018b100 	call	8018b10 <strcmp>
 801651c:	103ff026 	beq	r2,zero,80164e0 <__alt_data_end+0xfc0164e0>
 8016520:	0005883a 	mov	r2,zero
 8016524:	003ff006 	br	80164e8 <__alt_data_end+0xfc0164e8>
 8016528:	008200b4 	movhi	r2,2050
 801652c:	1080f904 	addi	r2,r2,996
 8016530:	f800283a 	ret

08016534 <__locale_charset>:
 8016534:	008200b4 	movhi	r2,2050
 8016538:	10835804 	addi	r2,r2,3424
 801653c:	f800283a 	ret

08016540 <__locale_mb_cur_max>:
 8016540:	008200b4 	movhi	r2,2050
 8016544:	1088fa04 	addi	r2,r2,9192
 8016548:	10800017 	ldw	r2,0(r2)
 801654c:	f800283a 	ret

08016550 <__locale_msgcharset>:
 8016550:	008200b4 	movhi	r2,2050
 8016554:	10835004 	addi	r2,r2,3392
 8016558:	f800283a 	ret

0801655c <__locale_cjk_lang>:
 801655c:	0005883a 	mov	r2,zero
 8016560:	f800283a 	ret

08016564 <_localeconv_r>:
 8016564:	008200b4 	movhi	r2,2050
 8016568:	10836004 	addi	r2,r2,3456
 801656c:	f800283a 	ret

08016570 <setlocale>:
 8016570:	00c200b4 	movhi	r3,2050
 8016574:	18c8f804 	addi	r3,r3,9184
 8016578:	2005883a 	mov	r2,r4
 801657c:	19000017 	ldw	r4,0(r3)
 8016580:	280d883a 	mov	r6,r5
 8016584:	100b883a 	mov	r5,r2
 8016588:	80164b81 	jmpi	80164b8 <_setlocale_r>

0801658c <localeconv>:
 801658c:	008200b4 	movhi	r2,2050
 8016590:	10836004 	addi	r2,r2,3456
 8016594:	f800283a 	ret

08016598 <__smakebuf_r>:
 8016598:	2880030b 	ldhu	r2,12(r5)
 801659c:	10c0008c 	andi	r3,r2,2
 80165a0:	1800401e 	bne	r3,zero,80166a4 <__smakebuf_r+0x10c>
 80165a4:	deffec04 	addi	sp,sp,-80
 80165a8:	dc000f15 	stw	r16,60(sp)
 80165ac:	2821883a 	mov	r16,r5
 80165b0:	2940038f 	ldh	r5,14(r5)
 80165b4:	dc401015 	stw	r17,64(sp)
 80165b8:	dfc01315 	stw	ra,76(sp)
 80165bc:	dcc01215 	stw	r19,72(sp)
 80165c0:	dc801115 	stw	r18,68(sp)
 80165c4:	2023883a 	mov	r17,r4
 80165c8:	28001b16 	blt	r5,zero,8016638 <__smakebuf_r+0xa0>
 80165cc:	d80d883a 	mov	r6,sp
 80165d0:	801b9e00 	call	801b9e0 <_fstat_r>
 80165d4:	10001716 	blt	r2,zero,8016634 <__smakebuf_r+0x9c>
 80165d8:	d8800117 	ldw	r2,4(sp)
 80165dc:	00e00014 	movui	r3,32768
 80165e0:	10bc000c 	andi	r2,r2,61440
 80165e4:	10c03726 	beq	r2,r3,80166c4 <__smakebuf_r+0x12c>
 80165e8:	80c0030b 	ldhu	r3,12(r16)
 80165ec:	18c20014 	ori	r3,r3,2048
 80165f0:	80c0030d 	sth	r3,12(r16)
 80165f4:	00c80004 	movi	r3,8192
 80165f8:	10c03c1e 	bne	r2,r3,80166ec <__smakebuf_r+0x154>
 80165fc:	8140038f 	ldh	r5,14(r16)
 8016600:	8809883a 	mov	r4,r17
 8016604:	801ba380 	call	801ba38 <_isatty_r>
 8016608:	10004e26 	beq	r2,zero,8016744 <__smakebuf_r+0x1ac>
 801660c:	8080030b 	ldhu	r2,12(r16)
 8016610:	04c00044 	movi	r19,1
 8016614:	80c010c4 	addi	r3,r16,67
 8016618:	14c4b03a 	or	r2,r2,r19
 801661c:	8080030d 	sth	r2,12(r16)
 8016620:	80c00015 	stw	r3,0(r16)
 8016624:	80c00415 	stw	r3,16(r16)
 8016628:	84c00515 	stw	r19,20(r16)
 801662c:	04810004 	movi	r18,1024
 8016630:	00000706 	br	8016650 <__smakebuf_r+0xb8>
 8016634:	8080030b 	ldhu	r2,12(r16)
 8016638:	10c0200c 	andi	r3,r2,128
 801663c:	18001f1e 	bne	r3,zero,80166bc <__smakebuf_r+0x124>
 8016640:	04810004 	movi	r18,1024
 8016644:	10820014 	ori	r2,r2,2048
 8016648:	8080030d 	sth	r2,12(r16)
 801664c:	0027883a 	mov	r19,zero
 8016650:	8809883a 	mov	r4,r17
 8016654:	900b883a 	mov	r5,r18
 8016658:	80167500 	call	8016750 <_malloc_r>
 801665c:	10002e26 	beq	r2,zero,8016718 <__smakebuf_r+0x180>
 8016660:	80c0030b 	ldhu	r3,12(r16)
 8016664:	01020074 	movhi	r4,2049
 8016668:	21129f04 	addi	r4,r4,19068
 801666c:	89000f15 	stw	r4,60(r17)
 8016670:	18c02014 	ori	r3,r3,128
 8016674:	80c0030d 	sth	r3,12(r16)
 8016678:	80800015 	stw	r2,0(r16)
 801667c:	80800415 	stw	r2,16(r16)
 8016680:	84800515 	stw	r18,20(r16)
 8016684:	98001c1e 	bne	r19,zero,80166f8 <__smakebuf_r+0x160>
 8016688:	dfc01317 	ldw	ra,76(sp)
 801668c:	dcc01217 	ldw	r19,72(sp)
 8016690:	dc801117 	ldw	r18,68(sp)
 8016694:	dc401017 	ldw	r17,64(sp)
 8016698:	dc000f17 	ldw	r16,60(sp)
 801669c:	dec01404 	addi	sp,sp,80
 80166a0:	f800283a 	ret
 80166a4:	288010c4 	addi	r2,r5,67
 80166a8:	28800015 	stw	r2,0(r5)
 80166ac:	28800415 	stw	r2,16(r5)
 80166b0:	00800044 	movi	r2,1
 80166b4:	28800515 	stw	r2,20(r5)
 80166b8:	f800283a 	ret
 80166bc:	04801004 	movi	r18,64
 80166c0:	003fe006 	br	8016644 <__alt_data_end+0xfc016644>
 80166c4:	81000a17 	ldw	r4,40(r16)
 80166c8:	00c200b4 	movhi	r3,2050
 80166cc:	18e2ab04 	addi	r3,r3,-30036
 80166d0:	20ffc51e 	bne	r4,r3,80165e8 <__alt_data_end+0xfc0165e8>
 80166d4:	80c0030b 	ldhu	r3,12(r16)
 80166d8:	01010004 	movi	r4,1024
 80166dc:	81001315 	stw	r4,76(r16)
 80166e0:	1906b03a 	or	r3,r3,r4
 80166e4:	80c0030d 	sth	r3,12(r16)
 80166e8:	003fc206 	br	80165f4 <__alt_data_end+0xfc0165f4>
 80166ec:	0027883a 	mov	r19,zero
 80166f0:	04810004 	movi	r18,1024
 80166f4:	003fd606 	br	8016650 <__alt_data_end+0xfc016650>
 80166f8:	8140038f 	ldh	r5,14(r16)
 80166fc:	8809883a 	mov	r4,r17
 8016700:	801ba380 	call	801ba38 <_isatty_r>
 8016704:	103fe026 	beq	r2,zero,8016688 <__alt_data_end+0xfc016688>
 8016708:	8080030b 	ldhu	r2,12(r16)
 801670c:	10800054 	ori	r2,r2,1
 8016710:	8080030d 	sth	r2,12(r16)
 8016714:	003fdc06 	br	8016688 <__alt_data_end+0xfc016688>
 8016718:	8080030b 	ldhu	r2,12(r16)
 801671c:	10c0800c 	andi	r3,r2,512
 8016720:	183fd91e 	bne	r3,zero,8016688 <__alt_data_end+0xfc016688>
 8016724:	10800094 	ori	r2,r2,2
 8016728:	80c010c4 	addi	r3,r16,67
 801672c:	8080030d 	sth	r2,12(r16)
 8016730:	00800044 	movi	r2,1
 8016734:	80c00015 	stw	r3,0(r16)
 8016738:	80c00415 	stw	r3,16(r16)
 801673c:	80800515 	stw	r2,20(r16)
 8016740:	003fd106 	br	8016688 <__alt_data_end+0xfc016688>
 8016744:	04c00044 	movi	r19,1
 8016748:	04810004 	movi	r18,1024
 801674c:	003fc006 	br	8016650 <__alt_data_end+0xfc016650>

08016750 <_malloc_r>:
 8016750:	defff504 	addi	sp,sp,-44
 8016754:	dc800315 	stw	r18,12(sp)
 8016758:	dfc00a15 	stw	ra,40(sp)
 801675c:	df000915 	stw	fp,36(sp)
 8016760:	ddc00815 	stw	r23,32(sp)
 8016764:	dd800715 	stw	r22,28(sp)
 8016768:	dd400615 	stw	r21,24(sp)
 801676c:	dd000515 	stw	r20,20(sp)
 8016770:	dcc00415 	stw	r19,16(sp)
 8016774:	dc400215 	stw	r17,8(sp)
 8016778:	dc000115 	stw	r16,4(sp)
 801677c:	288002c4 	addi	r2,r5,11
 8016780:	00c00584 	movi	r3,22
 8016784:	2025883a 	mov	r18,r4
 8016788:	18802a2e 	bgeu	r3,r2,8016834 <_malloc_r+0xe4>
 801678c:	047ffe04 	movi	r17,-8
 8016790:	1462703a 	and	r17,r2,r17
 8016794:	88009e16 	blt	r17,zero,8016a10 <_malloc_r+0x2c0>
 8016798:	89409d36 	bltu	r17,r5,8016a10 <_malloc_r+0x2c0>
 801679c:	801d3780 	call	801d378 <__malloc_lock>
 80167a0:	00807dc4 	movi	r2,503
 80167a4:	14402736 	bltu	r2,r17,8016844 <_malloc_r+0xf4>
 80167a8:	8806d0fa 	srli	r3,r17,3
 80167ac:	04c200b4 	movhi	r19,2050
 80167b0:	9cc36e04 	addi	r19,r19,3512
 80167b4:	18c5883a 	add	r2,r3,r3
 80167b8:	1085883a 	add	r2,r2,r2
 80167bc:	1085883a 	add	r2,r2,r2
 80167c0:	9885883a 	add	r2,r19,r2
 80167c4:	14000317 	ldw	r16,12(r2)
 80167c8:	80814a26 	beq	r16,r2,8016cf4 <_malloc_r+0x5a4>
 80167cc:	80c00117 	ldw	r3,4(r16)
 80167d0:	81000317 	ldw	r4,12(r16)
 80167d4:	00bfff04 	movi	r2,-4
 80167d8:	1884703a 	and	r2,r3,r2
 80167dc:	81400217 	ldw	r5,8(r16)
 80167e0:	8085883a 	add	r2,r16,r2
 80167e4:	10c00117 	ldw	r3,4(r2)
 80167e8:	29000315 	stw	r4,12(r5)
 80167ec:	21400215 	stw	r5,8(r4)
 80167f0:	18c00054 	ori	r3,r3,1
 80167f4:	10c00115 	stw	r3,4(r2)
 80167f8:	9009883a 	mov	r4,r18
 80167fc:	801d3980 	call	801d398 <__malloc_unlock>
 8016800:	80800204 	addi	r2,r16,8
 8016804:	dfc00a17 	ldw	ra,40(sp)
 8016808:	df000917 	ldw	fp,36(sp)
 801680c:	ddc00817 	ldw	r23,32(sp)
 8016810:	dd800717 	ldw	r22,28(sp)
 8016814:	dd400617 	ldw	r21,24(sp)
 8016818:	dd000517 	ldw	r20,20(sp)
 801681c:	dcc00417 	ldw	r19,16(sp)
 8016820:	dc800317 	ldw	r18,12(sp)
 8016824:	dc400217 	ldw	r17,8(sp)
 8016828:	dc000117 	ldw	r16,4(sp)
 801682c:	dec00b04 	addi	sp,sp,44
 8016830:	f800283a 	ret
 8016834:	04400404 	movi	r17,16
 8016838:	89407536 	bltu	r17,r5,8016a10 <_malloc_r+0x2c0>
 801683c:	801d3780 	call	801d378 <__malloc_lock>
 8016840:	003fd906 	br	80167a8 <__alt_data_end+0xfc0167a8>
 8016844:	8806d27a 	srli	r3,r17,9
 8016848:	18007526 	beq	r3,zero,8016a20 <_malloc_r+0x2d0>
 801684c:	00800104 	movi	r2,4
 8016850:	10c0ef36 	bltu	r2,r3,8016c10 <_malloc_r+0x4c0>
 8016854:	8806d1ba 	srli	r3,r17,6
 8016858:	19c00e04 	addi	r7,r3,56
 801685c:	39cb883a 	add	r5,r7,r7
 8016860:	04c200b4 	movhi	r19,2050
 8016864:	294b883a 	add	r5,r5,r5
 8016868:	9cc36e04 	addi	r19,r19,3512
 801686c:	294b883a 	add	r5,r5,r5
 8016870:	994b883a 	add	r5,r19,r5
 8016874:	2c000317 	ldw	r16,12(r5)
 8016878:	2c000e26 	beq	r5,r16,80168b4 <_malloc_r+0x164>
 801687c:	80800117 	ldw	r2,4(r16)
 8016880:	01bfff04 	movi	r6,-4
 8016884:	010003c4 	movi	r4,15
 8016888:	1184703a 	and	r2,r2,r6
 801688c:	1447c83a 	sub	r3,r2,r17
 8016890:	20c00716 	blt	r4,r3,80168b0 <_malloc_r+0x160>
 8016894:	1800650e 	bge	r3,zero,8016a2c <_malloc_r+0x2dc>
 8016898:	84000317 	ldw	r16,12(r16)
 801689c:	2c000526 	beq	r5,r16,80168b4 <_malloc_r+0x164>
 80168a0:	80800117 	ldw	r2,4(r16)
 80168a4:	1184703a 	and	r2,r2,r6
 80168a8:	1447c83a 	sub	r3,r2,r17
 80168ac:	20fff90e 	bge	r4,r3,8016894 <__alt_data_end+0xfc016894>
 80168b0:	39ffffc4 	addi	r7,r7,-1
 80168b4:	38c00044 	addi	r3,r7,1
 80168b8:	018200b4 	movhi	r6,2050
 80168bc:	9c000417 	ldw	r16,16(r19)
 80168c0:	31836e04 	addi	r6,r6,3512
 80168c4:	32400204 	addi	r9,r6,8
 80168c8:	82410326 	beq	r16,r9,8016cd8 <_malloc_r+0x588>
 80168cc:	81000117 	ldw	r4,4(r16)
 80168d0:	00bfff04 	movi	r2,-4
 80168d4:	208e703a 	and	r7,r4,r2
 80168d8:	3c45c83a 	sub	r2,r7,r17
 80168dc:	010003c4 	movi	r4,15
 80168e0:	2080ee16 	blt	r4,r2,8016c9c <_malloc_r+0x54c>
 80168e4:	32400515 	stw	r9,20(r6)
 80168e8:	32400415 	stw	r9,16(r6)
 80168ec:	1000510e 	bge	r2,zero,8016a34 <_malloc_r+0x2e4>
 80168f0:	00807fc4 	movi	r2,511
 80168f4:	11c0ce36 	bltu	r2,r7,8016c30 <_malloc_r+0x4e0>
 80168f8:	3808d0fa 	srli	r4,r7,3
 80168fc:	01c00044 	movi	r7,1
 8016900:	30800117 	ldw	r2,4(r6)
 8016904:	210b883a 	add	r5,r4,r4
 8016908:	294b883a 	add	r5,r5,r5
 801690c:	2009d0ba 	srai	r4,r4,2
 8016910:	294b883a 	add	r5,r5,r5
 8016914:	298b883a 	add	r5,r5,r6
 8016918:	2a000217 	ldw	r8,8(r5)
 801691c:	3908983a 	sll	r4,r7,r4
 8016920:	81400315 	stw	r5,12(r16)
 8016924:	82000215 	stw	r8,8(r16)
 8016928:	2088b03a 	or	r4,r4,r2
 801692c:	2c000215 	stw	r16,8(r5)
 8016930:	31000115 	stw	r4,4(r6)
 8016934:	44000315 	stw	r16,12(r8)
 8016938:	1805d0ba 	srai	r2,r3,2
 801693c:	01400044 	movi	r5,1
 8016940:	288a983a 	sll	r5,r5,r2
 8016944:	21404336 	bltu	r4,r5,8016a54 <_malloc_r+0x304>
 8016948:	2144703a 	and	r2,r4,r5
 801694c:	10000a1e 	bne	r2,zero,8016978 <_malloc_r+0x228>
 8016950:	00bfff04 	movi	r2,-4
 8016954:	294b883a 	add	r5,r5,r5
 8016958:	1886703a 	and	r3,r3,r2
 801695c:	2144703a 	and	r2,r4,r5
 8016960:	18c00104 	addi	r3,r3,4
 8016964:	1000041e 	bne	r2,zero,8016978 <_malloc_r+0x228>
 8016968:	294b883a 	add	r5,r5,r5
 801696c:	2144703a 	and	r2,r4,r5
 8016970:	18c00104 	addi	r3,r3,4
 8016974:	103ffc26 	beq	r2,zero,8016968 <__alt_data_end+0xfc016968>
 8016978:	023fff04 	movi	r8,-4
 801697c:	01c003c4 	movi	r7,15
 8016980:	18c5883a 	add	r2,r3,r3
 8016984:	1085883a 	add	r2,r2,r2
 8016988:	1085883a 	add	r2,r2,r2
 801698c:	9895883a 	add	r10,r19,r2
 8016990:	52c00304 	addi	r11,r10,12
 8016994:	1819883a 	mov	r12,r3
 8016998:	5c000017 	ldw	r16,0(r11)
 801699c:	59bffd04 	addi	r6,r11,-12
 80169a0:	8180041e 	bne	r16,r6,80169b4 <_malloc_r+0x264>
 80169a4:	0000ce06 	br	8016ce0 <_malloc_r+0x590>
 80169a8:	2000d70e 	bge	r4,zero,8016d08 <_malloc_r+0x5b8>
 80169ac:	84000317 	ldw	r16,12(r16)
 80169b0:	8180cb26 	beq	r16,r6,8016ce0 <_malloc_r+0x590>
 80169b4:	80800117 	ldw	r2,4(r16)
 80169b8:	1204703a 	and	r2,r2,r8
 80169bc:	1449c83a 	sub	r4,r2,r17
 80169c0:	393ff90e 	bge	r7,r4,80169a8 <__alt_data_end+0xfc0169a8>
 80169c4:	80800317 	ldw	r2,12(r16)
 80169c8:	80c00217 	ldw	r3,8(r16)
 80169cc:	89400054 	ori	r5,r17,1
 80169d0:	81400115 	stw	r5,4(r16)
 80169d4:	18800315 	stw	r2,12(r3)
 80169d8:	10c00215 	stw	r3,8(r2)
 80169dc:	8463883a 	add	r17,r16,r17
 80169e0:	9c400515 	stw	r17,20(r19)
 80169e4:	9c400415 	stw	r17,16(r19)
 80169e8:	20800054 	ori	r2,r4,1
 80169ec:	88800115 	stw	r2,4(r17)
 80169f0:	8a400315 	stw	r9,12(r17)
 80169f4:	8a400215 	stw	r9,8(r17)
 80169f8:	8923883a 	add	r17,r17,r4
 80169fc:	89000015 	stw	r4,0(r17)
 8016a00:	9009883a 	mov	r4,r18
 8016a04:	801d3980 	call	801d398 <__malloc_unlock>
 8016a08:	80800204 	addi	r2,r16,8
 8016a0c:	003f7d06 	br	8016804 <__alt_data_end+0xfc016804>
 8016a10:	00800304 	movi	r2,12
 8016a14:	90800015 	stw	r2,0(r18)
 8016a18:	0005883a 	mov	r2,zero
 8016a1c:	003f7906 	br	8016804 <__alt_data_end+0xfc016804>
 8016a20:	01401f84 	movi	r5,126
 8016a24:	01c00fc4 	movi	r7,63
 8016a28:	003f8d06 	br	8016860 <__alt_data_end+0xfc016860>
 8016a2c:	81000317 	ldw	r4,12(r16)
 8016a30:	003f6a06 	br	80167dc <__alt_data_end+0xfc0167dc>
 8016a34:	81c5883a 	add	r2,r16,r7
 8016a38:	10c00117 	ldw	r3,4(r2)
 8016a3c:	9009883a 	mov	r4,r18
 8016a40:	18c00054 	ori	r3,r3,1
 8016a44:	10c00115 	stw	r3,4(r2)
 8016a48:	801d3980 	call	801d398 <__malloc_unlock>
 8016a4c:	80800204 	addi	r2,r16,8
 8016a50:	003f6c06 	br	8016804 <__alt_data_end+0xfc016804>
 8016a54:	9c000217 	ldw	r16,8(r19)
 8016a58:	00bfff04 	movi	r2,-4
 8016a5c:	85800117 	ldw	r22,4(r16)
 8016a60:	b0ac703a 	and	r22,r22,r2
 8016a64:	b4400336 	bltu	r22,r17,8016a74 <_malloc_r+0x324>
 8016a68:	b445c83a 	sub	r2,r22,r17
 8016a6c:	00c003c4 	movi	r3,15
 8016a70:	18805d16 	blt	r3,r2,8016be8 <_malloc_r+0x498>
 8016a74:	05c200b4 	movhi	r23,2050
 8016a78:	008200b4 	movhi	r2,2050
 8016a7c:	bdc8fb04 	addi	r23,r23,9196
 8016a80:	108ffc04 	addi	r2,r2,16368
 8016a84:	15400017 	ldw	r21,0(r2)
 8016a88:	b9000017 	ldw	r4,0(r23)
 8016a8c:	00ffffc4 	movi	r3,-1
 8016a90:	858d883a 	add	r6,r16,r22
 8016a94:	8d6b883a 	add	r21,r17,r21
 8016a98:	20c0e426 	beq	r4,r3,8016e2c <_malloc_r+0x6dc>
 8016a9c:	ad4403c4 	addi	r21,r21,4111
 8016aa0:	00fc0004 	movi	r3,-4096
 8016aa4:	a8ea703a 	and	r21,r21,r3
 8016aa8:	9009883a 	mov	r4,r18
 8016aac:	a80b883a 	mov	r5,r21
 8016ab0:	d9800015 	stw	r6,0(sp)
 8016ab4:	80189800 	call	8018980 <_sbrk_r>
 8016ab8:	00ffffc4 	movi	r3,-1
 8016abc:	1029883a 	mov	r20,r2
 8016ac0:	d9800017 	ldw	r6,0(sp)
 8016ac4:	10c0a426 	beq	r2,r3,8016d58 <_malloc_r+0x608>
 8016ac8:	1180a236 	bltu	r2,r6,8016d54 <_malloc_r+0x604>
 8016acc:	070200b4 	movhi	fp,2050
 8016ad0:	e7120904 	addi	fp,fp,18468
 8016ad4:	e0c00017 	ldw	r3,0(fp)
 8016ad8:	a8c7883a 	add	r3,r21,r3
 8016adc:	e0c00015 	stw	r3,0(fp)
 8016ae0:	3500da26 	beq	r6,r20,8016e4c <_malloc_r+0x6fc>
 8016ae4:	b9000017 	ldw	r4,0(r23)
 8016ae8:	00bfffc4 	movi	r2,-1
 8016aec:	2080e426 	beq	r4,r2,8016e80 <_malloc_r+0x730>
 8016af0:	a185c83a 	sub	r2,r20,r6
 8016af4:	1885883a 	add	r2,r3,r2
 8016af8:	e0800015 	stw	r2,0(fp)
 8016afc:	a0c001cc 	andi	r3,r20,7
 8016b00:	1800b526 	beq	r3,zero,8016dd8 <_malloc_r+0x688>
 8016b04:	a0e9c83a 	sub	r20,r20,r3
 8016b08:	00840204 	movi	r2,4104
 8016b0c:	a5000204 	addi	r20,r20,8
 8016b10:	10c7c83a 	sub	r3,r2,r3
 8016b14:	a545883a 	add	r2,r20,r21
 8016b18:	1083ffcc 	andi	r2,r2,4095
 8016b1c:	18abc83a 	sub	r21,r3,r2
 8016b20:	9009883a 	mov	r4,r18
 8016b24:	a80b883a 	mov	r5,r21
 8016b28:	80189800 	call	8018980 <_sbrk_r>
 8016b2c:	00ffffc4 	movi	r3,-1
 8016b30:	10c0d026 	beq	r2,r3,8016e74 <_malloc_r+0x724>
 8016b34:	1507c83a 	sub	r3,r2,r20
 8016b38:	a8c7883a 	add	r3,r21,r3
 8016b3c:	18c00054 	ori	r3,r3,1
 8016b40:	e0800017 	ldw	r2,0(fp)
 8016b44:	9d000215 	stw	r20,8(r19)
 8016b48:	a0c00115 	stw	r3,4(r20)
 8016b4c:	a887883a 	add	r3,r21,r2
 8016b50:	e0c00015 	stw	r3,0(fp)
 8016b54:	84c00e26 	beq	r16,r19,8016b90 <_malloc_r+0x440>
 8016b58:	018003c4 	movi	r6,15
 8016b5c:	3580a02e 	bgeu	r6,r22,8016de0 <_malloc_r+0x690>
 8016b60:	81400117 	ldw	r5,4(r16)
 8016b64:	013ffe04 	movi	r4,-8
 8016b68:	b0bffd04 	addi	r2,r22,-12
 8016b6c:	1104703a 	and	r2,r2,r4
 8016b70:	2900004c 	andi	r4,r5,1
 8016b74:	1108b03a 	or	r4,r2,r4
 8016b78:	81000115 	stw	r4,4(r16)
 8016b7c:	01400144 	movi	r5,5
 8016b80:	8089883a 	add	r4,r16,r2
 8016b84:	21400115 	stw	r5,4(r4)
 8016b88:	21400215 	stw	r5,8(r4)
 8016b8c:	3080c036 	bltu	r6,r2,8016e90 <_malloc_r+0x740>
 8016b90:	008200b4 	movhi	r2,2050
 8016b94:	108ffb04 	addi	r2,r2,16364
 8016b98:	11000017 	ldw	r4,0(r2)
 8016b9c:	20c0012e 	bgeu	r4,r3,8016ba4 <_malloc_r+0x454>
 8016ba0:	10c00015 	stw	r3,0(r2)
 8016ba4:	008200b4 	movhi	r2,2050
 8016ba8:	108ffa04 	addi	r2,r2,16360
 8016bac:	11000017 	ldw	r4,0(r2)
 8016bb0:	9c000217 	ldw	r16,8(r19)
 8016bb4:	20c0012e 	bgeu	r4,r3,8016bbc <_malloc_r+0x46c>
 8016bb8:	10c00015 	stw	r3,0(r2)
 8016bbc:	80c00117 	ldw	r3,4(r16)
 8016bc0:	00bfff04 	movi	r2,-4
 8016bc4:	1886703a 	and	r3,r3,r2
 8016bc8:	1c45c83a 	sub	r2,r3,r17
 8016bcc:	1c400236 	bltu	r3,r17,8016bd8 <_malloc_r+0x488>
 8016bd0:	00c003c4 	movi	r3,15
 8016bd4:	18800416 	blt	r3,r2,8016be8 <_malloc_r+0x498>
 8016bd8:	9009883a 	mov	r4,r18
 8016bdc:	801d3980 	call	801d398 <__malloc_unlock>
 8016be0:	0005883a 	mov	r2,zero
 8016be4:	003f0706 	br	8016804 <__alt_data_end+0xfc016804>
 8016be8:	88c00054 	ori	r3,r17,1
 8016bec:	80c00115 	stw	r3,4(r16)
 8016bf0:	8463883a 	add	r17,r16,r17
 8016bf4:	10800054 	ori	r2,r2,1
 8016bf8:	9c400215 	stw	r17,8(r19)
 8016bfc:	88800115 	stw	r2,4(r17)
 8016c00:	9009883a 	mov	r4,r18
 8016c04:	801d3980 	call	801d398 <__malloc_unlock>
 8016c08:	80800204 	addi	r2,r16,8
 8016c0c:	003efd06 	br	8016804 <__alt_data_end+0xfc016804>
 8016c10:	00800504 	movi	r2,20
 8016c14:	10c0482e 	bgeu	r2,r3,8016d38 <_malloc_r+0x5e8>
 8016c18:	00801504 	movi	r2,84
 8016c1c:	10c06836 	bltu	r2,r3,8016dc0 <_malloc_r+0x670>
 8016c20:	8806d33a 	srli	r3,r17,12
 8016c24:	19c01b84 	addi	r7,r3,110
 8016c28:	39cb883a 	add	r5,r7,r7
 8016c2c:	003f0c06 	br	8016860 <__alt_data_end+0xfc016860>
 8016c30:	3804d27a 	srli	r2,r7,9
 8016c34:	01000104 	movi	r4,4
 8016c38:	2080422e 	bgeu	r4,r2,8016d44 <_malloc_r+0x5f4>
 8016c3c:	01000504 	movi	r4,20
 8016c40:	20807c36 	bltu	r4,r2,8016e34 <_malloc_r+0x6e4>
 8016c44:	110016c4 	addi	r4,r2,91
 8016c48:	210b883a 	add	r5,r4,r4
 8016c4c:	294b883a 	add	r5,r5,r5
 8016c50:	294b883a 	add	r5,r5,r5
 8016c54:	994b883a 	add	r5,r19,r5
 8016c58:	28800217 	ldw	r2,8(r5)
 8016c5c:	020200b4 	movhi	r8,2050
 8016c60:	42036e04 	addi	r8,r8,3512
 8016c64:	11406326 	beq	r2,r5,8016df4 <_malloc_r+0x6a4>
 8016c68:	01bfff04 	movi	r6,-4
 8016c6c:	11000117 	ldw	r4,4(r2)
 8016c70:	2188703a 	and	r4,r4,r6
 8016c74:	3900022e 	bgeu	r7,r4,8016c80 <_malloc_r+0x530>
 8016c78:	10800217 	ldw	r2,8(r2)
 8016c7c:	28bffb1e 	bne	r5,r2,8016c6c <__alt_data_end+0xfc016c6c>
 8016c80:	11800317 	ldw	r6,12(r2)
 8016c84:	99000117 	ldw	r4,4(r19)
 8016c88:	81800315 	stw	r6,12(r16)
 8016c8c:	80800215 	stw	r2,8(r16)
 8016c90:	34000215 	stw	r16,8(r6)
 8016c94:	14000315 	stw	r16,12(r2)
 8016c98:	003f2706 	br	8016938 <__alt_data_end+0xfc016938>
 8016c9c:	88c00054 	ori	r3,r17,1
 8016ca0:	80c00115 	stw	r3,4(r16)
 8016ca4:	8463883a 	add	r17,r16,r17
 8016ca8:	34400515 	stw	r17,20(r6)
 8016cac:	34400415 	stw	r17,16(r6)
 8016cb0:	10c00054 	ori	r3,r2,1
 8016cb4:	8a400315 	stw	r9,12(r17)
 8016cb8:	8a400215 	stw	r9,8(r17)
 8016cbc:	88c00115 	stw	r3,4(r17)
 8016cc0:	88a3883a 	add	r17,r17,r2
 8016cc4:	88800015 	stw	r2,0(r17)
 8016cc8:	9009883a 	mov	r4,r18
 8016ccc:	801d3980 	call	801d398 <__malloc_unlock>
 8016cd0:	80800204 	addi	r2,r16,8
 8016cd4:	003ecb06 	br	8016804 <__alt_data_end+0xfc016804>
 8016cd8:	31000117 	ldw	r4,4(r6)
 8016cdc:	003f1606 	br	8016938 <__alt_data_end+0xfc016938>
 8016ce0:	63000044 	addi	r12,r12,1
 8016ce4:	608000cc 	andi	r2,r12,3
 8016ce8:	5ac00204 	addi	r11,r11,8
 8016cec:	103f2a1e 	bne	r2,zero,8016998 <__alt_data_end+0xfc016998>
 8016cf0:	00002106 	br	8016d78 <_malloc_r+0x628>
 8016cf4:	80800204 	addi	r2,r16,8
 8016cf8:	84000517 	ldw	r16,20(r16)
 8016cfc:	143eb31e 	bne	r2,r16,80167cc <__alt_data_end+0xfc0167cc>
 8016d00:	18c00084 	addi	r3,r3,2
 8016d04:	003eec06 	br	80168b8 <__alt_data_end+0xfc0168b8>
 8016d08:	8085883a 	add	r2,r16,r2
 8016d0c:	10c00117 	ldw	r3,4(r2)
 8016d10:	81000317 	ldw	r4,12(r16)
 8016d14:	81400217 	ldw	r5,8(r16)
 8016d18:	18c00054 	ori	r3,r3,1
 8016d1c:	10c00115 	stw	r3,4(r2)
 8016d20:	29000315 	stw	r4,12(r5)
 8016d24:	21400215 	stw	r5,8(r4)
 8016d28:	9009883a 	mov	r4,r18
 8016d2c:	801d3980 	call	801d398 <__malloc_unlock>
 8016d30:	80800204 	addi	r2,r16,8
 8016d34:	003eb306 	br	8016804 <__alt_data_end+0xfc016804>
 8016d38:	19c016c4 	addi	r7,r3,91
 8016d3c:	39cb883a 	add	r5,r7,r7
 8016d40:	003ec706 	br	8016860 <__alt_data_end+0xfc016860>
 8016d44:	3804d1ba 	srli	r2,r7,6
 8016d48:	11000e04 	addi	r4,r2,56
 8016d4c:	210b883a 	add	r5,r4,r4
 8016d50:	003fbe06 	br	8016c4c <__alt_data_end+0xfc016c4c>
 8016d54:	84ff5d26 	beq	r16,r19,8016acc <__alt_data_end+0xfc016acc>
 8016d58:	9c000217 	ldw	r16,8(r19)
 8016d5c:	00bfff04 	movi	r2,-4
 8016d60:	80c00117 	ldw	r3,4(r16)
 8016d64:	1886703a 	and	r3,r3,r2
 8016d68:	003f9706 	br	8016bc8 <__alt_data_end+0xfc016bc8>
 8016d6c:	52800017 	ldw	r10,0(r10)
 8016d70:	18ffffc4 	addi	r3,r3,-1
 8016d74:	50805c1e 	bne	r10,r2,8016ee8 <_malloc_r+0x798>
 8016d78:	190000cc 	andi	r4,r3,3
 8016d7c:	50bffe04 	addi	r2,r10,-8
 8016d80:	203ffa1e 	bne	r4,zero,8016d6c <__alt_data_end+0xfc016d6c>
 8016d84:	98800117 	ldw	r2,4(r19)
 8016d88:	0146303a 	nor	r3,zero,r5
 8016d8c:	1884703a 	and	r2,r3,r2
 8016d90:	98800115 	stw	r2,4(r19)
 8016d94:	294b883a 	add	r5,r5,r5
 8016d98:	117f2e36 	bltu	r2,r5,8016a54 <__alt_data_end+0xfc016a54>
 8016d9c:	283f2d26 	beq	r5,zero,8016a54 <__alt_data_end+0xfc016a54>
 8016da0:	1146703a 	and	r3,r2,r5
 8016da4:	1800521e 	bne	r3,zero,8016ef0 <_malloc_r+0x7a0>
 8016da8:	6007883a 	mov	r3,r12
 8016dac:	294b883a 	add	r5,r5,r5
 8016db0:	1148703a 	and	r4,r2,r5
 8016db4:	18c00104 	addi	r3,r3,4
 8016db8:	203ffc26 	beq	r4,zero,8016dac <__alt_data_end+0xfc016dac>
 8016dbc:	003ef006 	br	8016980 <__alt_data_end+0xfc016980>
 8016dc0:	00805504 	movi	r2,340
 8016dc4:	10c01336 	bltu	r2,r3,8016e14 <_malloc_r+0x6c4>
 8016dc8:	8806d3fa 	srli	r3,r17,15
 8016dcc:	19c01dc4 	addi	r7,r3,119
 8016dd0:	39cb883a 	add	r5,r7,r7
 8016dd4:	003ea206 	br	8016860 <__alt_data_end+0xfc016860>
 8016dd8:	00c40004 	movi	r3,4096
 8016ddc:	003f4d06 	br	8016b14 <__alt_data_end+0xfc016b14>
 8016de0:	00800044 	movi	r2,1
 8016de4:	a0800115 	stw	r2,4(r20)
 8016de8:	a021883a 	mov	r16,r20
 8016dec:	0007883a 	mov	r3,zero
 8016df0:	003f7506 	br	8016bc8 <__alt_data_end+0xfc016bc8>
 8016df4:	200bd0ba 	srai	r5,r4,2
 8016df8:	01800044 	movi	r6,1
 8016dfc:	41000117 	ldw	r4,4(r8)
 8016e00:	314a983a 	sll	r5,r6,r5
 8016e04:	100d883a 	mov	r6,r2
 8016e08:	2908b03a 	or	r4,r5,r4
 8016e0c:	41000115 	stw	r4,4(r8)
 8016e10:	003f9d06 	br	8016c88 <__alt_data_end+0xfc016c88>
 8016e14:	00815504 	movi	r2,1364
 8016e18:	10c01336 	bltu	r2,r3,8016e68 <_malloc_r+0x718>
 8016e1c:	8806d4ba 	srli	r3,r17,18
 8016e20:	19c01f04 	addi	r7,r3,124
 8016e24:	39cb883a 	add	r5,r7,r7
 8016e28:	003e8d06 	br	8016860 <__alt_data_end+0xfc016860>
 8016e2c:	ad400404 	addi	r21,r21,16
 8016e30:	003f1d06 	br	8016aa8 <__alt_data_end+0xfc016aa8>
 8016e34:	01001504 	movi	r4,84
 8016e38:	20801c36 	bltu	r4,r2,8016eac <_malloc_r+0x75c>
 8016e3c:	3804d33a 	srli	r2,r7,12
 8016e40:	11001b84 	addi	r4,r2,110
 8016e44:	210b883a 	add	r5,r4,r4
 8016e48:	003f8006 	br	8016c4c <__alt_data_end+0xfc016c4c>
 8016e4c:	3083ffcc 	andi	r2,r6,4095
 8016e50:	103f241e 	bne	r2,zero,8016ae4 <__alt_data_end+0xfc016ae4>
 8016e54:	99000217 	ldw	r4,8(r19)
 8016e58:	ad85883a 	add	r2,r21,r22
 8016e5c:	10800054 	ori	r2,r2,1
 8016e60:	20800115 	stw	r2,4(r4)
 8016e64:	003f4a06 	br	8016b90 <__alt_data_end+0xfc016b90>
 8016e68:	01403f04 	movi	r5,252
 8016e6c:	01c01f84 	movi	r7,126
 8016e70:	003e7b06 	br	8016860 <__alt_data_end+0xfc016860>
 8016e74:	00c00044 	movi	r3,1
 8016e78:	002b883a 	mov	r21,zero
 8016e7c:	003f3006 	br	8016b40 <__alt_data_end+0xfc016b40>
 8016e80:	008200b4 	movhi	r2,2050
 8016e84:	1088fb04 	addi	r2,r2,9196
 8016e88:	15000015 	stw	r20,0(r2)
 8016e8c:	003f1b06 	br	8016afc <__alt_data_end+0xfc016afc>
 8016e90:	9009883a 	mov	r4,r18
 8016e94:	81400204 	addi	r5,r16,8
 8016e98:	8014f440 	call	8014f44 <_free_r>
 8016e9c:	008200b4 	movhi	r2,2050
 8016ea0:	10920904 	addi	r2,r2,18468
 8016ea4:	10c00017 	ldw	r3,0(r2)
 8016ea8:	003f3906 	br	8016b90 <__alt_data_end+0xfc016b90>
 8016eac:	01005504 	movi	r4,340
 8016eb0:	20800436 	bltu	r4,r2,8016ec4 <_malloc_r+0x774>
 8016eb4:	3804d3fa 	srli	r2,r7,15
 8016eb8:	11001dc4 	addi	r4,r2,119
 8016ebc:	210b883a 	add	r5,r4,r4
 8016ec0:	003f6206 	br	8016c4c <__alt_data_end+0xfc016c4c>
 8016ec4:	01015504 	movi	r4,1364
 8016ec8:	20800436 	bltu	r4,r2,8016edc <_malloc_r+0x78c>
 8016ecc:	3804d4ba 	srli	r2,r7,18
 8016ed0:	11001f04 	addi	r4,r2,124
 8016ed4:	210b883a 	add	r5,r4,r4
 8016ed8:	003f5c06 	br	8016c4c <__alt_data_end+0xfc016c4c>
 8016edc:	01403f04 	movi	r5,252
 8016ee0:	01001f84 	movi	r4,126
 8016ee4:	003f5906 	br	8016c4c <__alt_data_end+0xfc016c4c>
 8016ee8:	98800117 	ldw	r2,4(r19)
 8016eec:	003fa906 	br	8016d94 <__alt_data_end+0xfc016d94>
 8016ef0:	6007883a 	mov	r3,r12
 8016ef4:	003ea206 	br	8016980 <__alt_data_end+0xfc016980>

08016ef8 <memchr>:
 8016ef8:	208000cc 	andi	r2,r4,3
 8016efc:	280f883a 	mov	r7,r5
 8016f00:	10003526 	beq	r2,zero,8016fd8 <memchr+0xe0>
 8016f04:	30bfffc4 	addi	r2,r6,-1
 8016f08:	30001b26 	beq	r6,zero,8016f78 <memchr+0x80>
 8016f0c:	21800003 	ldbu	r6,0(r4)
 8016f10:	28c03fcc 	andi	r3,r5,255
 8016f14:	30c01a26 	beq	r6,r3,8016f80 <memchr+0x88>
 8016f18:	180d883a 	mov	r6,r3
 8016f1c:	00000406 	br	8016f30 <memchr+0x38>
 8016f20:	10001526 	beq	r2,zero,8016f78 <memchr+0x80>
 8016f24:	20c00003 	ldbu	r3,0(r4)
 8016f28:	10bfffc4 	addi	r2,r2,-1
 8016f2c:	19801426 	beq	r3,r6,8016f80 <memchr+0x88>
 8016f30:	21000044 	addi	r4,r4,1
 8016f34:	20c000cc 	andi	r3,r4,3
 8016f38:	183ff91e 	bne	r3,zero,8016f20 <__alt_data_end+0xfc016f20>
 8016f3c:	024000c4 	movi	r9,3
 8016f40:	48801136 	bltu	r9,r2,8016f88 <memchr+0x90>
 8016f44:	10000c26 	beq	r2,zero,8016f78 <memchr+0x80>
 8016f48:	20c00003 	ldbu	r3,0(r4)
 8016f4c:	29403fcc 	andi	r5,r5,255
 8016f50:	19400b26 	beq	r3,r5,8016f80 <memchr+0x88>
 8016f54:	20c00044 	addi	r3,r4,1
 8016f58:	2085883a 	add	r2,r4,r2
 8016f5c:	39803fcc 	andi	r6,r7,255
 8016f60:	00000306 	br	8016f70 <memchr+0x78>
 8016f64:	18c00044 	addi	r3,r3,1
 8016f68:	197fffc3 	ldbu	r5,-1(r3)
 8016f6c:	29800426 	beq	r5,r6,8016f80 <memchr+0x88>
 8016f70:	1809883a 	mov	r4,r3
 8016f74:	18bffb1e 	bne	r3,r2,8016f64 <__alt_data_end+0xfc016f64>
 8016f78:	0005883a 	mov	r2,zero
 8016f7c:	f800283a 	ret
 8016f80:	2005883a 	mov	r2,r4
 8016f84:	f800283a 	ret
 8016f88:	28c03fcc 	andi	r3,r5,255
 8016f8c:	1810923a 	slli	r8,r3,8
 8016f90:	02ffbff4 	movhi	r11,65279
 8016f94:	02a02074 	movhi	r10,32897
 8016f98:	40c6b03a 	or	r3,r8,r3
 8016f9c:	1810943a 	slli	r8,r3,16
 8016fa0:	5affbfc4 	addi	r11,r11,-257
 8016fa4:	52a02004 	addi	r10,r10,-32640
 8016fa8:	40d0b03a 	or	r8,r8,r3
 8016fac:	20c00017 	ldw	r3,0(r4)
 8016fb0:	40c6f03a 	xor	r3,r8,r3
 8016fb4:	1acd883a 	add	r6,r3,r11
 8016fb8:	00c6303a 	nor	r3,zero,r3
 8016fbc:	30c6703a 	and	r3,r6,r3
 8016fc0:	1a86703a 	and	r3,r3,r10
 8016fc4:	183fdf1e 	bne	r3,zero,8016f44 <__alt_data_end+0xfc016f44>
 8016fc8:	10bfff04 	addi	r2,r2,-4
 8016fcc:	21000104 	addi	r4,r4,4
 8016fd0:	48bff636 	bltu	r9,r2,8016fac <__alt_data_end+0xfc016fac>
 8016fd4:	003fdb06 	br	8016f44 <__alt_data_end+0xfc016f44>
 8016fd8:	3005883a 	mov	r2,r6
 8016fdc:	003fd706 	br	8016f3c <__alt_data_end+0xfc016f3c>

08016fe0 <memcpy>:
 8016fe0:	deffff04 	addi	sp,sp,-4
 8016fe4:	dc000015 	stw	r16,0(sp)
 8016fe8:	00c003c4 	movi	r3,15
 8016fec:	2005883a 	mov	r2,r4
 8016ff0:	1980432e 	bgeu	r3,r6,8017100 <memcpy+0x120>
 8016ff4:	2146b03a 	or	r3,r4,r5
 8016ff8:	18c000cc 	andi	r3,r3,3
 8016ffc:	1800421e 	bne	r3,zero,8017108 <memcpy+0x128>
 8017000:	343ffc04 	addi	r16,r6,-16
 8017004:	8020d13a 	srli	r16,r16,4
 8017008:	28c00104 	addi	r3,r5,4
 801700c:	23400104 	addi	r13,r4,4
 8017010:	801e913a 	slli	r15,r16,4
 8017014:	2b000204 	addi	r12,r5,8
 8017018:	22c00204 	addi	r11,r4,8
 801701c:	7bc00504 	addi	r15,r15,20
 8017020:	2a800304 	addi	r10,r5,12
 8017024:	22400304 	addi	r9,r4,12
 8017028:	2bdf883a 	add	r15,r5,r15
 801702c:	2811883a 	mov	r8,r5
 8017030:	200f883a 	mov	r7,r4
 8017034:	41000017 	ldw	r4,0(r8)
 8017038:	39c00404 	addi	r7,r7,16
 801703c:	18c00404 	addi	r3,r3,16
 8017040:	393ffc15 	stw	r4,-16(r7)
 8017044:	1bbffc17 	ldw	r14,-16(r3)
 8017048:	6b400404 	addi	r13,r13,16
 801704c:	5ac00404 	addi	r11,r11,16
 8017050:	6bbffc15 	stw	r14,-16(r13)
 8017054:	63800017 	ldw	r14,0(r12)
 8017058:	4a400404 	addi	r9,r9,16
 801705c:	42000404 	addi	r8,r8,16
 8017060:	5bbffc15 	stw	r14,-16(r11)
 8017064:	53800017 	ldw	r14,0(r10)
 8017068:	63000404 	addi	r12,r12,16
 801706c:	52800404 	addi	r10,r10,16
 8017070:	4bbffc15 	stw	r14,-16(r9)
 8017074:	1bffef1e 	bne	r3,r15,8017034 <__alt_data_end+0xfc017034>
 8017078:	81c00044 	addi	r7,r16,1
 801707c:	380e913a 	slli	r7,r7,4
 8017080:	310003cc 	andi	r4,r6,15
 8017084:	02c000c4 	movi	r11,3
 8017088:	11c7883a 	add	r3,r2,r7
 801708c:	29cb883a 	add	r5,r5,r7
 8017090:	59001f2e 	bgeu	r11,r4,8017110 <memcpy+0x130>
 8017094:	1813883a 	mov	r9,r3
 8017098:	2811883a 	mov	r8,r5
 801709c:	200f883a 	mov	r7,r4
 80170a0:	42800017 	ldw	r10,0(r8)
 80170a4:	4a400104 	addi	r9,r9,4
 80170a8:	39ffff04 	addi	r7,r7,-4
 80170ac:	4abfff15 	stw	r10,-4(r9)
 80170b0:	42000104 	addi	r8,r8,4
 80170b4:	59fffa36 	bltu	r11,r7,80170a0 <__alt_data_end+0xfc0170a0>
 80170b8:	213fff04 	addi	r4,r4,-4
 80170bc:	2008d0ba 	srli	r4,r4,2
 80170c0:	318000cc 	andi	r6,r6,3
 80170c4:	21000044 	addi	r4,r4,1
 80170c8:	2109883a 	add	r4,r4,r4
 80170cc:	2109883a 	add	r4,r4,r4
 80170d0:	1907883a 	add	r3,r3,r4
 80170d4:	290b883a 	add	r5,r5,r4
 80170d8:	30000626 	beq	r6,zero,80170f4 <memcpy+0x114>
 80170dc:	198d883a 	add	r6,r3,r6
 80170e0:	29c00003 	ldbu	r7,0(r5)
 80170e4:	18c00044 	addi	r3,r3,1
 80170e8:	29400044 	addi	r5,r5,1
 80170ec:	19ffffc5 	stb	r7,-1(r3)
 80170f0:	19bffb1e 	bne	r3,r6,80170e0 <__alt_data_end+0xfc0170e0>
 80170f4:	dc000017 	ldw	r16,0(sp)
 80170f8:	dec00104 	addi	sp,sp,4
 80170fc:	f800283a 	ret
 8017100:	2007883a 	mov	r3,r4
 8017104:	003ff406 	br	80170d8 <__alt_data_end+0xfc0170d8>
 8017108:	2007883a 	mov	r3,r4
 801710c:	003ff306 	br	80170dc <__alt_data_end+0xfc0170dc>
 8017110:	200d883a 	mov	r6,r4
 8017114:	003ff006 	br	80170d8 <__alt_data_end+0xfc0170d8>

08017118 <memmove>:
 8017118:	2005883a 	mov	r2,r4
 801711c:	29000b2e 	bgeu	r5,r4,801714c <memmove+0x34>
 8017120:	298f883a 	add	r7,r5,r6
 8017124:	21c0092e 	bgeu	r4,r7,801714c <memmove+0x34>
 8017128:	2187883a 	add	r3,r4,r6
 801712c:	198bc83a 	sub	r5,r3,r6
 8017130:	30004b26 	beq	r6,zero,8017260 <memmove+0x148>
 8017134:	39ffffc4 	addi	r7,r7,-1
 8017138:	39000003 	ldbu	r4,0(r7)
 801713c:	18ffffc4 	addi	r3,r3,-1
 8017140:	19000005 	stb	r4,0(r3)
 8017144:	197ffb1e 	bne	r3,r5,8017134 <__alt_data_end+0xfc017134>
 8017148:	f800283a 	ret
 801714c:	00c003c4 	movi	r3,15
 8017150:	1980412e 	bgeu	r3,r6,8017258 <memmove+0x140>
 8017154:	1146b03a 	or	r3,r2,r5
 8017158:	18c000cc 	andi	r3,r3,3
 801715c:	1800411e 	bne	r3,zero,8017264 <memmove+0x14c>
 8017160:	33fffc04 	addi	r15,r6,-16
 8017164:	781ed13a 	srli	r15,r15,4
 8017168:	28c00104 	addi	r3,r5,4
 801716c:	13400104 	addi	r13,r2,4
 8017170:	781c913a 	slli	r14,r15,4
 8017174:	2b000204 	addi	r12,r5,8
 8017178:	12c00204 	addi	r11,r2,8
 801717c:	73800504 	addi	r14,r14,20
 8017180:	2a800304 	addi	r10,r5,12
 8017184:	12400304 	addi	r9,r2,12
 8017188:	2b9d883a 	add	r14,r5,r14
 801718c:	2811883a 	mov	r8,r5
 8017190:	100f883a 	mov	r7,r2
 8017194:	41000017 	ldw	r4,0(r8)
 8017198:	39c00404 	addi	r7,r7,16
 801719c:	18c00404 	addi	r3,r3,16
 80171a0:	393ffc15 	stw	r4,-16(r7)
 80171a4:	193ffc17 	ldw	r4,-16(r3)
 80171a8:	6b400404 	addi	r13,r13,16
 80171ac:	5ac00404 	addi	r11,r11,16
 80171b0:	693ffc15 	stw	r4,-16(r13)
 80171b4:	61000017 	ldw	r4,0(r12)
 80171b8:	4a400404 	addi	r9,r9,16
 80171bc:	42000404 	addi	r8,r8,16
 80171c0:	593ffc15 	stw	r4,-16(r11)
 80171c4:	51000017 	ldw	r4,0(r10)
 80171c8:	63000404 	addi	r12,r12,16
 80171cc:	52800404 	addi	r10,r10,16
 80171d0:	493ffc15 	stw	r4,-16(r9)
 80171d4:	1bbfef1e 	bne	r3,r14,8017194 <__alt_data_end+0xfc017194>
 80171d8:	79000044 	addi	r4,r15,1
 80171dc:	2008913a 	slli	r4,r4,4
 80171e0:	328003cc 	andi	r10,r6,15
 80171e4:	02c000c4 	movi	r11,3
 80171e8:	1107883a 	add	r3,r2,r4
 80171ec:	290b883a 	add	r5,r5,r4
 80171f0:	5a801e2e 	bgeu	r11,r10,801726c <memmove+0x154>
 80171f4:	1813883a 	mov	r9,r3
 80171f8:	2811883a 	mov	r8,r5
 80171fc:	500f883a 	mov	r7,r10
 8017200:	41000017 	ldw	r4,0(r8)
 8017204:	4a400104 	addi	r9,r9,4
 8017208:	39ffff04 	addi	r7,r7,-4
 801720c:	493fff15 	stw	r4,-4(r9)
 8017210:	42000104 	addi	r8,r8,4
 8017214:	59fffa36 	bltu	r11,r7,8017200 <__alt_data_end+0xfc017200>
 8017218:	513fff04 	addi	r4,r10,-4
 801721c:	2008d0ba 	srli	r4,r4,2
 8017220:	318000cc 	andi	r6,r6,3
 8017224:	21000044 	addi	r4,r4,1
 8017228:	2109883a 	add	r4,r4,r4
 801722c:	2109883a 	add	r4,r4,r4
 8017230:	1907883a 	add	r3,r3,r4
 8017234:	290b883a 	add	r5,r5,r4
 8017238:	30000926 	beq	r6,zero,8017260 <memmove+0x148>
 801723c:	198d883a 	add	r6,r3,r6
 8017240:	29c00003 	ldbu	r7,0(r5)
 8017244:	18c00044 	addi	r3,r3,1
 8017248:	29400044 	addi	r5,r5,1
 801724c:	19ffffc5 	stb	r7,-1(r3)
 8017250:	19bffb1e 	bne	r3,r6,8017240 <__alt_data_end+0xfc017240>
 8017254:	f800283a 	ret
 8017258:	1007883a 	mov	r3,r2
 801725c:	003ff606 	br	8017238 <__alt_data_end+0xfc017238>
 8017260:	f800283a 	ret
 8017264:	1007883a 	mov	r3,r2
 8017268:	003ff406 	br	801723c <__alt_data_end+0xfc01723c>
 801726c:	500d883a 	mov	r6,r10
 8017270:	003ff106 	br	8017238 <__alt_data_end+0xfc017238>

08017274 <memset>:
 8017274:	20c000cc 	andi	r3,r4,3
 8017278:	2005883a 	mov	r2,r4
 801727c:	18004326 	beq	r3,zero,801738c <memset+0x118>
 8017280:	31ffffc4 	addi	r7,r6,-1
 8017284:	30004026 	beq	r6,zero,8017388 <memset+0x114>
 8017288:	2813883a 	mov	r9,r5
 801728c:	200d883a 	mov	r6,r4
 8017290:	2007883a 	mov	r3,r4
 8017294:	00000406 	br	80172a8 <memset+0x34>
 8017298:	3a3fffc4 	addi	r8,r7,-1
 801729c:	31800044 	addi	r6,r6,1
 80172a0:	38003926 	beq	r7,zero,8017388 <memset+0x114>
 80172a4:	400f883a 	mov	r7,r8
 80172a8:	18c00044 	addi	r3,r3,1
 80172ac:	32400005 	stb	r9,0(r6)
 80172b0:	1a0000cc 	andi	r8,r3,3
 80172b4:	403ff81e 	bne	r8,zero,8017298 <__alt_data_end+0xfc017298>
 80172b8:	010000c4 	movi	r4,3
 80172bc:	21c02d2e 	bgeu	r4,r7,8017374 <memset+0x100>
 80172c0:	29803fcc 	andi	r6,r5,255
 80172c4:	3008923a 	slli	r4,r6,8
 80172c8:	218cb03a 	or	r6,r4,r6
 80172cc:	3008943a 	slli	r4,r6,16
 80172d0:	218cb03a 	or	r6,r4,r6
 80172d4:	010003c4 	movi	r4,15
 80172d8:	21c0182e 	bgeu	r4,r7,801733c <memset+0xc8>
 80172dc:	3b3ffc04 	addi	r12,r7,-16
 80172e0:	6018d13a 	srli	r12,r12,4
 80172e4:	1a000104 	addi	r8,r3,4
 80172e8:	1ac00204 	addi	r11,r3,8
 80172ec:	6008913a 	slli	r4,r12,4
 80172f0:	1a800304 	addi	r10,r3,12
 80172f4:	1813883a 	mov	r9,r3
 80172f8:	21000504 	addi	r4,r4,20
 80172fc:	1909883a 	add	r4,r3,r4
 8017300:	49800015 	stw	r6,0(r9)
 8017304:	41800015 	stw	r6,0(r8)
 8017308:	59800015 	stw	r6,0(r11)
 801730c:	51800015 	stw	r6,0(r10)
 8017310:	42000404 	addi	r8,r8,16
 8017314:	4a400404 	addi	r9,r9,16
 8017318:	5ac00404 	addi	r11,r11,16
 801731c:	52800404 	addi	r10,r10,16
 8017320:	413ff71e 	bne	r8,r4,8017300 <__alt_data_end+0xfc017300>
 8017324:	63000044 	addi	r12,r12,1
 8017328:	6018913a 	slli	r12,r12,4
 801732c:	39c003cc 	andi	r7,r7,15
 8017330:	010000c4 	movi	r4,3
 8017334:	1b07883a 	add	r3,r3,r12
 8017338:	21c00e2e 	bgeu	r4,r7,8017374 <memset+0x100>
 801733c:	1813883a 	mov	r9,r3
 8017340:	3811883a 	mov	r8,r7
 8017344:	010000c4 	movi	r4,3
 8017348:	49800015 	stw	r6,0(r9)
 801734c:	423fff04 	addi	r8,r8,-4
 8017350:	4a400104 	addi	r9,r9,4
 8017354:	223ffc36 	bltu	r4,r8,8017348 <__alt_data_end+0xfc017348>
 8017358:	393fff04 	addi	r4,r7,-4
 801735c:	2008d0ba 	srli	r4,r4,2
 8017360:	39c000cc 	andi	r7,r7,3
 8017364:	21000044 	addi	r4,r4,1
 8017368:	2109883a 	add	r4,r4,r4
 801736c:	2109883a 	add	r4,r4,r4
 8017370:	1907883a 	add	r3,r3,r4
 8017374:	38000426 	beq	r7,zero,8017388 <memset+0x114>
 8017378:	19cf883a 	add	r7,r3,r7
 801737c:	19400005 	stb	r5,0(r3)
 8017380:	18c00044 	addi	r3,r3,1
 8017384:	19fffd1e 	bne	r3,r7,801737c <__alt_data_end+0xfc01737c>
 8017388:	f800283a 	ret
 801738c:	2007883a 	mov	r3,r4
 8017390:	300f883a 	mov	r7,r6
 8017394:	003fc806 	br	80172b8 <__alt_data_end+0xfc0172b8>

08017398 <_Balloc>:
 8017398:	20801317 	ldw	r2,76(r4)
 801739c:	defffc04 	addi	sp,sp,-16
 80173a0:	dc400115 	stw	r17,4(sp)
 80173a4:	dc000015 	stw	r16,0(sp)
 80173a8:	dfc00315 	stw	ra,12(sp)
 80173ac:	dc800215 	stw	r18,8(sp)
 80173b0:	2023883a 	mov	r17,r4
 80173b4:	2821883a 	mov	r16,r5
 80173b8:	10000f26 	beq	r2,zero,80173f8 <_Balloc+0x60>
 80173bc:	8407883a 	add	r3,r16,r16
 80173c0:	18c7883a 	add	r3,r3,r3
 80173c4:	10c7883a 	add	r3,r2,r3
 80173c8:	18800017 	ldw	r2,0(r3)
 80173cc:	10001126 	beq	r2,zero,8017414 <_Balloc+0x7c>
 80173d0:	11000017 	ldw	r4,0(r2)
 80173d4:	19000015 	stw	r4,0(r3)
 80173d8:	10000415 	stw	zero,16(r2)
 80173dc:	10000315 	stw	zero,12(r2)
 80173e0:	dfc00317 	ldw	ra,12(sp)
 80173e4:	dc800217 	ldw	r18,8(sp)
 80173e8:	dc400117 	ldw	r17,4(sp)
 80173ec:	dc000017 	ldw	r16,0(sp)
 80173f0:	dec00404 	addi	sp,sp,16
 80173f4:	f800283a 	ret
 80173f8:	01400104 	movi	r5,4
 80173fc:	01800844 	movi	r6,33
 8017400:	801b6180 	call	801b618 <_calloc_r>
 8017404:	88801315 	stw	r2,76(r17)
 8017408:	103fec1e 	bne	r2,zero,80173bc <__alt_data_end+0xfc0173bc>
 801740c:	0005883a 	mov	r2,zero
 8017410:	003ff306 	br	80173e0 <__alt_data_end+0xfc0173e0>
 8017414:	01400044 	movi	r5,1
 8017418:	2c24983a 	sll	r18,r5,r16
 801741c:	8809883a 	mov	r4,r17
 8017420:	91800144 	addi	r6,r18,5
 8017424:	318d883a 	add	r6,r6,r6
 8017428:	318d883a 	add	r6,r6,r6
 801742c:	801b6180 	call	801b618 <_calloc_r>
 8017430:	103ff626 	beq	r2,zero,801740c <__alt_data_end+0xfc01740c>
 8017434:	14000115 	stw	r16,4(r2)
 8017438:	14800215 	stw	r18,8(r2)
 801743c:	003fe606 	br	80173d8 <__alt_data_end+0xfc0173d8>

08017440 <_Bfree>:
 8017440:	28000826 	beq	r5,zero,8017464 <_Bfree+0x24>
 8017444:	28c00117 	ldw	r3,4(r5)
 8017448:	20801317 	ldw	r2,76(r4)
 801744c:	18c7883a 	add	r3,r3,r3
 8017450:	18c7883a 	add	r3,r3,r3
 8017454:	10c5883a 	add	r2,r2,r3
 8017458:	10c00017 	ldw	r3,0(r2)
 801745c:	28c00015 	stw	r3,0(r5)
 8017460:	11400015 	stw	r5,0(r2)
 8017464:	f800283a 	ret

08017468 <__multadd>:
 8017468:	defff704 	addi	sp,sp,-36
 801746c:	dc800215 	stw	r18,8(sp)
 8017470:	2c800417 	ldw	r18,16(r5)
 8017474:	ddc00715 	stw	r23,28(sp)
 8017478:	dd800615 	stw	r22,24(sp)
 801747c:	dd000415 	stw	r20,16(sp)
 8017480:	dcc00315 	stw	r19,12(sp)
 8017484:	dc400115 	stw	r17,4(sp)
 8017488:	dc000015 	stw	r16,0(sp)
 801748c:	dfc00815 	stw	ra,32(sp)
 8017490:	dd400515 	stw	r21,20(sp)
 8017494:	2827883a 	mov	r19,r5
 8017498:	2029883a 	mov	r20,r4
 801749c:	3023883a 	mov	r17,r6
 80174a0:	3821883a 	mov	r16,r7
 80174a4:	2d800504 	addi	r22,r5,20
 80174a8:	002f883a 	mov	r23,zero
 80174ac:	b5400017 	ldw	r21,0(r22)
 80174b0:	880b883a 	mov	r5,r17
 80174b4:	bdc00044 	addi	r23,r23,1
 80174b8:	a93fffcc 	andi	r4,r21,65535
 80174bc:	8009fe40 	call	8009fe4 <__mulsi3>
 80174c0:	1421883a 	add	r16,r2,r16
 80174c4:	a808d43a 	srli	r4,r21,16
 80174c8:	802ad43a 	srli	r21,r16,16
 80174cc:	880b883a 	mov	r5,r17
 80174d0:	8009fe40 	call	8009fe4 <__mulsi3>
 80174d4:	a88f883a 	add	r7,r21,r2
 80174d8:	3804943a 	slli	r2,r7,16
 80174dc:	80ffffcc 	andi	r3,r16,65535
 80174e0:	b5800104 	addi	r22,r22,4
 80174e4:	10c7883a 	add	r3,r2,r3
 80174e8:	b0ffff15 	stw	r3,-4(r22)
 80174ec:	3820d43a 	srli	r16,r7,16
 80174f0:	bcbfee16 	blt	r23,r18,80174ac <__alt_data_end+0xfc0174ac>
 80174f4:	80000926 	beq	r16,zero,801751c <__multadd+0xb4>
 80174f8:	98800217 	ldw	r2,8(r19)
 80174fc:	9080130e 	bge	r18,r2,801754c <__multadd+0xe4>
 8017500:	90800144 	addi	r2,r18,5
 8017504:	1085883a 	add	r2,r2,r2
 8017508:	1085883a 	add	r2,r2,r2
 801750c:	9885883a 	add	r2,r19,r2
 8017510:	14000015 	stw	r16,0(r2)
 8017514:	94800044 	addi	r18,r18,1
 8017518:	9c800415 	stw	r18,16(r19)
 801751c:	9805883a 	mov	r2,r19
 8017520:	dfc00817 	ldw	ra,32(sp)
 8017524:	ddc00717 	ldw	r23,28(sp)
 8017528:	dd800617 	ldw	r22,24(sp)
 801752c:	dd400517 	ldw	r21,20(sp)
 8017530:	dd000417 	ldw	r20,16(sp)
 8017534:	dcc00317 	ldw	r19,12(sp)
 8017538:	dc800217 	ldw	r18,8(sp)
 801753c:	dc400117 	ldw	r17,4(sp)
 8017540:	dc000017 	ldw	r16,0(sp)
 8017544:	dec00904 	addi	sp,sp,36
 8017548:	f800283a 	ret
 801754c:	99400117 	ldw	r5,4(r19)
 8017550:	a009883a 	mov	r4,r20
 8017554:	29400044 	addi	r5,r5,1
 8017558:	80173980 	call	8017398 <_Balloc>
 801755c:	99800417 	ldw	r6,16(r19)
 8017560:	99400304 	addi	r5,r19,12
 8017564:	11000304 	addi	r4,r2,12
 8017568:	31800084 	addi	r6,r6,2
 801756c:	318d883a 	add	r6,r6,r6
 8017570:	318d883a 	add	r6,r6,r6
 8017574:	1023883a 	mov	r17,r2
 8017578:	8016fe00 	call	8016fe0 <memcpy>
 801757c:	99000117 	ldw	r4,4(r19)
 8017580:	a0c01317 	ldw	r3,76(r20)
 8017584:	2109883a 	add	r4,r4,r4
 8017588:	2109883a 	add	r4,r4,r4
 801758c:	1907883a 	add	r3,r3,r4
 8017590:	18800017 	ldw	r2,0(r3)
 8017594:	98800015 	stw	r2,0(r19)
 8017598:	1cc00015 	stw	r19,0(r3)
 801759c:	8827883a 	mov	r19,r17
 80175a0:	003fd706 	br	8017500 <__alt_data_end+0xfc017500>

080175a4 <__s2b>:
 80175a4:	defff904 	addi	sp,sp,-28
 80175a8:	dc400115 	stw	r17,4(sp)
 80175ac:	dc000015 	stw	r16,0(sp)
 80175b0:	2023883a 	mov	r17,r4
 80175b4:	2821883a 	mov	r16,r5
 80175b8:	39000204 	addi	r4,r7,8
 80175bc:	01400244 	movi	r5,9
 80175c0:	dcc00315 	stw	r19,12(sp)
 80175c4:	dc800215 	stw	r18,8(sp)
 80175c8:	dfc00615 	stw	ra,24(sp)
 80175cc:	dd400515 	stw	r21,20(sp)
 80175d0:	dd000415 	stw	r20,16(sp)
 80175d4:	3825883a 	mov	r18,r7
 80175d8:	3027883a 	mov	r19,r6
 80175dc:	8009f240 	call	8009f24 <__divsi3>
 80175e0:	00c00044 	movi	r3,1
 80175e4:	000b883a 	mov	r5,zero
 80175e8:	1880030e 	bge	r3,r2,80175f8 <__s2b+0x54>
 80175ec:	18c7883a 	add	r3,r3,r3
 80175f0:	29400044 	addi	r5,r5,1
 80175f4:	18bffd16 	blt	r3,r2,80175ec <__alt_data_end+0xfc0175ec>
 80175f8:	8809883a 	mov	r4,r17
 80175fc:	80173980 	call	8017398 <_Balloc>
 8017600:	d8c00717 	ldw	r3,28(sp)
 8017604:	10c00515 	stw	r3,20(r2)
 8017608:	00c00044 	movi	r3,1
 801760c:	10c00415 	stw	r3,16(r2)
 8017610:	00c00244 	movi	r3,9
 8017614:	1cc0210e 	bge	r3,r19,801769c <__s2b+0xf8>
 8017618:	80eb883a 	add	r21,r16,r3
 801761c:	a829883a 	mov	r20,r21
 8017620:	84e1883a 	add	r16,r16,r19
 8017624:	a1c00007 	ldb	r7,0(r20)
 8017628:	8809883a 	mov	r4,r17
 801762c:	a5000044 	addi	r20,r20,1
 8017630:	100b883a 	mov	r5,r2
 8017634:	01800284 	movi	r6,10
 8017638:	39fff404 	addi	r7,r7,-48
 801763c:	80174680 	call	8017468 <__multadd>
 8017640:	a43ff81e 	bne	r20,r16,8017624 <__alt_data_end+0xfc017624>
 8017644:	ace1883a 	add	r16,r21,r19
 8017648:	843ffe04 	addi	r16,r16,-8
 801764c:	9c800a0e 	bge	r19,r18,8017678 <__s2b+0xd4>
 8017650:	94e5c83a 	sub	r18,r18,r19
 8017654:	84a5883a 	add	r18,r16,r18
 8017658:	81c00007 	ldb	r7,0(r16)
 801765c:	8809883a 	mov	r4,r17
 8017660:	84000044 	addi	r16,r16,1
 8017664:	100b883a 	mov	r5,r2
 8017668:	01800284 	movi	r6,10
 801766c:	39fff404 	addi	r7,r7,-48
 8017670:	80174680 	call	8017468 <__multadd>
 8017674:	84bff81e 	bne	r16,r18,8017658 <__alt_data_end+0xfc017658>
 8017678:	dfc00617 	ldw	ra,24(sp)
 801767c:	dd400517 	ldw	r21,20(sp)
 8017680:	dd000417 	ldw	r20,16(sp)
 8017684:	dcc00317 	ldw	r19,12(sp)
 8017688:	dc800217 	ldw	r18,8(sp)
 801768c:	dc400117 	ldw	r17,4(sp)
 8017690:	dc000017 	ldw	r16,0(sp)
 8017694:	dec00704 	addi	sp,sp,28
 8017698:	f800283a 	ret
 801769c:	84000284 	addi	r16,r16,10
 80176a0:	1827883a 	mov	r19,r3
 80176a4:	003fe906 	br	801764c <__alt_data_end+0xfc01764c>

080176a8 <__hi0bits>:
 80176a8:	20bfffec 	andhi	r2,r4,65535
 80176ac:	1000141e 	bne	r2,zero,8017700 <__hi0bits+0x58>
 80176b0:	2008943a 	slli	r4,r4,16
 80176b4:	00800404 	movi	r2,16
 80176b8:	20ffc02c 	andhi	r3,r4,65280
 80176bc:	1800021e 	bne	r3,zero,80176c8 <__hi0bits+0x20>
 80176c0:	2008923a 	slli	r4,r4,8
 80176c4:	10800204 	addi	r2,r2,8
 80176c8:	20fc002c 	andhi	r3,r4,61440
 80176cc:	1800021e 	bne	r3,zero,80176d8 <__hi0bits+0x30>
 80176d0:	2008913a 	slli	r4,r4,4
 80176d4:	10800104 	addi	r2,r2,4
 80176d8:	20f0002c 	andhi	r3,r4,49152
 80176dc:	1800031e 	bne	r3,zero,80176ec <__hi0bits+0x44>
 80176e0:	2109883a 	add	r4,r4,r4
 80176e4:	10800084 	addi	r2,r2,2
 80176e8:	2109883a 	add	r4,r4,r4
 80176ec:	20000316 	blt	r4,zero,80176fc <__hi0bits+0x54>
 80176f0:	2110002c 	andhi	r4,r4,16384
 80176f4:	2000041e 	bne	r4,zero,8017708 <__hi0bits+0x60>
 80176f8:	00800804 	movi	r2,32
 80176fc:	f800283a 	ret
 8017700:	0005883a 	mov	r2,zero
 8017704:	003fec06 	br	80176b8 <__alt_data_end+0xfc0176b8>
 8017708:	10800044 	addi	r2,r2,1
 801770c:	f800283a 	ret

08017710 <__lo0bits>:
 8017710:	20c00017 	ldw	r3,0(r4)
 8017714:	188001cc 	andi	r2,r3,7
 8017718:	10000826 	beq	r2,zero,801773c <__lo0bits+0x2c>
 801771c:	1880004c 	andi	r2,r3,1
 8017720:	1000211e 	bne	r2,zero,80177a8 <__lo0bits+0x98>
 8017724:	1880008c 	andi	r2,r3,2
 8017728:	1000211e 	bne	r2,zero,80177b0 <__lo0bits+0xa0>
 801772c:	1806d0ba 	srli	r3,r3,2
 8017730:	00800084 	movi	r2,2
 8017734:	20c00015 	stw	r3,0(r4)
 8017738:	f800283a 	ret
 801773c:	18bfffcc 	andi	r2,r3,65535
 8017740:	10001326 	beq	r2,zero,8017790 <__lo0bits+0x80>
 8017744:	0005883a 	mov	r2,zero
 8017748:	19403fcc 	andi	r5,r3,255
 801774c:	2800021e 	bne	r5,zero,8017758 <__lo0bits+0x48>
 8017750:	1806d23a 	srli	r3,r3,8
 8017754:	10800204 	addi	r2,r2,8
 8017758:	194003cc 	andi	r5,r3,15
 801775c:	2800021e 	bne	r5,zero,8017768 <__lo0bits+0x58>
 8017760:	1806d13a 	srli	r3,r3,4
 8017764:	10800104 	addi	r2,r2,4
 8017768:	194000cc 	andi	r5,r3,3
 801776c:	2800021e 	bne	r5,zero,8017778 <__lo0bits+0x68>
 8017770:	1806d0ba 	srli	r3,r3,2
 8017774:	10800084 	addi	r2,r2,2
 8017778:	1940004c 	andi	r5,r3,1
 801777c:	2800081e 	bne	r5,zero,80177a0 <__lo0bits+0x90>
 8017780:	1806d07a 	srli	r3,r3,1
 8017784:	1800051e 	bne	r3,zero,801779c <__lo0bits+0x8c>
 8017788:	00800804 	movi	r2,32
 801778c:	f800283a 	ret
 8017790:	1806d43a 	srli	r3,r3,16
 8017794:	00800404 	movi	r2,16
 8017798:	003feb06 	br	8017748 <__alt_data_end+0xfc017748>
 801779c:	10800044 	addi	r2,r2,1
 80177a0:	20c00015 	stw	r3,0(r4)
 80177a4:	f800283a 	ret
 80177a8:	0005883a 	mov	r2,zero
 80177ac:	f800283a 	ret
 80177b0:	1806d07a 	srli	r3,r3,1
 80177b4:	00800044 	movi	r2,1
 80177b8:	20c00015 	stw	r3,0(r4)
 80177bc:	f800283a 	ret

080177c0 <__i2b>:
 80177c0:	defffd04 	addi	sp,sp,-12
 80177c4:	dc000015 	stw	r16,0(sp)
 80177c8:	04000044 	movi	r16,1
 80177cc:	dc400115 	stw	r17,4(sp)
 80177d0:	2823883a 	mov	r17,r5
 80177d4:	800b883a 	mov	r5,r16
 80177d8:	dfc00215 	stw	ra,8(sp)
 80177dc:	80173980 	call	8017398 <_Balloc>
 80177e0:	14400515 	stw	r17,20(r2)
 80177e4:	14000415 	stw	r16,16(r2)
 80177e8:	dfc00217 	ldw	ra,8(sp)
 80177ec:	dc400117 	ldw	r17,4(sp)
 80177f0:	dc000017 	ldw	r16,0(sp)
 80177f4:	dec00304 	addi	sp,sp,12
 80177f8:	f800283a 	ret

080177fc <__multiply>:
 80177fc:	deffef04 	addi	sp,sp,-68
 8017800:	dc400815 	stw	r17,32(sp)
 8017804:	dc000715 	stw	r16,28(sp)
 8017808:	2c400417 	ldw	r17,16(r5)
 801780c:	34000417 	ldw	r16,16(r6)
 8017810:	dd800d15 	stw	r22,52(sp)
 8017814:	dc800915 	stw	r18,36(sp)
 8017818:	dfc01015 	stw	ra,64(sp)
 801781c:	df000f15 	stw	fp,60(sp)
 8017820:	ddc00e15 	stw	r23,56(sp)
 8017824:	dd400c15 	stw	r21,48(sp)
 8017828:	dd000b15 	stw	r20,44(sp)
 801782c:	dcc00a15 	stw	r19,40(sp)
 8017830:	2825883a 	mov	r18,r5
 8017834:	302d883a 	mov	r22,r6
 8017838:	8c009116 	blt	r17,r16,8017a80 <__multiply+0x284>
 801783c:	8005883a 	mov	r2,r16
 8017840:	8821883a 	mov	r16,r17
 8017844:	1023883a 	mov	r17,r2
 8017848:	90800217 	ldw	r2,8(r18)
 801784c:	8447883a 	add	r3,r16,r17
 8017850:	d8c00215 	stw	r3,8(sp)
 8017854:	91400117 	ldw	r5,4(r18)
 8017858:	10c0010e 	bge	r2,r3,8017860 <__multiply+0x64>
 801785c:	29400044 	addi	r5,r5,1
 8017860:	80173980 	call	8017398 <_Balloc>
 8017864:	d8c00217 	ldw	r3,8(sp)
 8017868:	d8800615 	stw	r2,24(sp)
 801786c:	18eb883a 	add	r21,r3,r3
 8017870:	ad6b883a 	add	r21,r21,r21
 8017874:	10c00504 	addi	r3,r2,20
 8017878:	1d6b883a 	add	r21,r3,r21
 801787c:	d8c00115 	stw	r3,4(sp)
 8017880:	dd400315 	stw	r21,12(sp)
 8017884:	1805883a 	mov	r2,r3
 8017888:	1d40042e 	bgeu	r3,r21,801789c <__multiply+0xa0>
 801788c:	d8c00317 	ldw	r3,12(sp)
 8017890:	10000015 	stw	zero,0(r2)
 8017894:	10800104 	addi	r2,r2,4
 8017898:	10fffc36 	bltu	r2,r3,801788c <__alt_data_end+0xfc01788c>
 801789c:	8c63883a 	add	r17,r17,r17
 80178a0:	b5800504 	addi	r22,r22,20
 80178a4:	8c63883a 	add	r17,r17,r17
 80178a8:	94800504 	addi	r18,r18,20
 80178ac:	8421883a 	add	r16,r16,r16
 80178b0:	b463883a 	add	r17,r22,r17
 80178b4:	8421883a 	add	r16,r16,r16
 80178b8:	dd800015 	stw	r22,0(sp)
 80178bc:	dc800415 	stw	r18,16(sp)
 80178c0:	dc400515 	stw	r17,20(sp)
 80178c4:	9429883a 	add	r20,r18,r16
 80178c8:	b4404f2e 	bgeu	r22,r17,8017a08 <__multiply+0x20c>
 80178cc:	d8c00017 	ldw	r3,0(sp)
 80178d0:	1c800017 	ldw	r18,0(r3)
 80178d4:	943fffcc 	andi	r16,r18,65535
 80178d8:	80001e26 	beq	r16,zero,8017954 <__multiply+0x158>
 80178dc:	dd800117 	ldw	r22,4(sp)
 80178e0:	dd400417 	ldw	r21,16(sp)
 80178e4:	0025883a 	mov	r18,zero
 80178e8:	adc00017 	ldw	r23,0(r21)
 80178ec:	b4c00017 	ldw	r19,0(r22)
 80178f0:	800b883a 	mov	r5,r16
 80178f4:	b93fffcc 	andi	r4,r23,65535
 80178f8:	8009fe40 	call	8009fe4 <__mulsi3>
 80178fc:	9c7fffcc 	andi	r17,r19,65535
 8017900:	8885883a 	add	r2,r17,r2
 8017904:	b808d43a 	srli	r4,r23,16
 8017908:	14a3883a 	add	r17,r2,r18
 801790c:	9826d43a 	srli	r19,r19,16
 8017910:	8824d43a 	srli	r18,r17,16
 8017914:	800b883a 	mov	r5,r16
 8017918:	8009fe40 	call	8009fe4 <__mulsi3>
 801791c:	9885883a 	add	r2,r19,r2
 8017920:	14a7883a 	add	r19,r2,r18
 8017924:	88ffffcc 	andi	r3,r17,65535
 8017928:	9822943a 	slli	r17,r19,16
 801792c:	ad400104 	addi	r21,r21,4
 8017930:	b005883a 	mov	r2,r22
 8017934:	88c6b03a 	or	r3,r17,r3
 8017938:	b0c00015 	stw	r3,0(r22)
 801793c:	9824d43a 	srli	r18,r19,16
 8017940:	b5800104 	addi	r22,r22,4
 8017944:	ad3fe836 	bltu	r21,r20,80178e8 <__alt_data_end+0xfc0178e8>
 8017948:	d8c00017 	ldw	r3,0(sp)
 801794c:	14800115 	stw	r18,4(r2)
 8017950:	1c800017 	ldw	r18,0(r3)
 8017954:	9024d43a 	srli	r18,r18,16
 8017958:	90002226 	beq	r18,zero,80179e4 <__multiply+0x1e8>
 801795c:	d8c00117 	ldw	r3,4(sp)
 8017960:	dd800417 	ldw	r22,16(sp)
 8017964:	002f883a 	mov	r23,zero
 8017968:	1f000017 	ldw	fp,0(r3)
 801796c:	1823883a 	mov	r17,r3
 8017970:	182b883a 	mov	r21,r3
 8017974:	e021883a 	mov	r16,fp
 8017978:	00000106 	br	8017980 <__multiply+0x184>
 801797c:	982b883a 	mov	r21,r19
 8017980:	b100000b 	ldhu	r4,0(r22)
 8017984:	8020d43a 	srli	r16,r16,16
 8017988:	900b883a 	mov	r5,r18
 801798c:	8009fe40 	call	8009fe4 <__mulsi3>
 8017990:	1405883a 	add	r2,r2,r16
 8017994:	15ef883a 	add	r23,r2,r23
 8017998:	b804943a 	slli	r2,r23,16
 801799c:	e0ffffcc 	andi	r3,fp,65535
 80179a0:	8c400104 	addi	r17,r17,4
 80179a4:	10c6b03a 	or	r3,r2,r3
 80179a8:	88ffff15 	stw	r3,-4(r17)
 80179ac:	b5800104 	addi	r22,r22,4
 80179b0:	b13fff17 	ldw	r4,-4(r22)
 80179b4:	acc00104 	addi	r19,r21,4
 80179b8:	900b883a 	mov	r5,r18
 80179bc:	2008d43a 	srli	r4,r4,16
 80179c0:	9c000017 	ldw	r16,0(r19)
 80179c4:	8009fe40 	call	8009fe4 <__mulsi3>
 80179c8:	b806d43a 	srli	r3,r23,16
 80179cc:	813fffcc 	andi	r4,r16,65535
 80179d0:	1105883a 	add	r2,r2,r4
 80179d4:	10f9883a 	add	fp,r2,r3
 80179d8:	e02ed43a 	srli	r23,fp,16
 80179dc:	b53fe736 	bltu	r22,r20,801797c <__alt_data_end+0xfc01797c>
 80179e0:	af000115 	stw	fp,4(r21)
 80179e4:	d8c00017 	ldw	r3,0(sp)
 80179e8:	d9000517 	ldw	r4,20(sp)
 80179ec:	18c00104 	addi	r3,r3,4
 80179f0:	d8c00015 	stw	r3,0(sp)
 80179f4:	d8c00117 	ldw	r3,4(sp)
 80179f8:	18c00104 	addi	r3,r3,4
 80179fc:	d8c00115 	stw	r3,4(sp)
 8017a00:	d8c00017 	ldw	r3,0(sp)
 8017a04:	193fb136 	bltu	r3,r4,80178cc <__alt_data_end+0xfc0178cc>
 8017a08:	d8c00217 	ldw	r3,8(sp)
 8017a0c:	00c00c0e 	bge	zero,r3,8017a40 <__multiply+0x244>
 8017a10:	d8c00317 	ldw	r3,12(sp)
 8017a14:	18bfff17 	ldw	r2,-4(r3)
 8017a18:	1d7fff04 	addi	r21,r3,-4
 8017a1c:	10000326 	beq	r2,zero,8017a2c <__multiply+0x230>
 8017a20:	00000706 	br	8017a40 <__multiply+0x244>
 8017a24:	a8800017 	ldw	r2,0(r21)
 8017a28:	1000051e 	bne	r2,zero,8017a40 <__multiply+0x244>
 8017a2c:	d8c00217 	ldw	r3,8(sp)
 8017a30:	ad7fff04 	addi	r21,r21,-4
 8017a34:	18ffffc4 	addi	r3,r3,-1
 8017a38:	d8c00215 	stw	r3,8(sp)
 8017a3c:	183ff91e 	bne	r3,zero,8017a24 <__alt_data_end+0xfc017a24>
 8017a40:	d8c00617 	ldw	r3,24(sp)
 8017a44:	d9000217 	ldw	r4,8(sp)
 8017a48:	1805883a 	mov	r2,r3
 8017a4c:	19000415 	stw	r4,16(r3)
 8017a50:	dfc01017 	ldw	ra,64(sp)
 8017a54:	df000f17 	ldw	fp,60(sp)
 8017a58:	ddc00e17 	ldw	r23,56(sp)
 8017a5c:	dd800d17 	ldw	r22,52(sp)
 8017a60:	dd400c17 	ldw	r21,48(sp)
 8017a64:	dd000b17 	ldw	r20,44(sp)
 8017a68:	dcc00a17 	ldw	r19,40(sp)
 8017a6c:	dc800917 	ldw	r18,36(sp)
 8017a70:	dc400817 	ldw	r17,32(sp)
 8017a74:	dc000717 	ldw	r16,28(sp)
 8017a78:	dec01104 	addi	sp,sp,68
 8017a7c:	f800283a 	ret
 8017a80:	3025883a 	mov	r18,r6
 8017a84:	282d883a 	mov	r22,r5
 8017a88:	003f6f06 	br	8017848 <__alt_data_end+0xfc017848>

08017a8c <__pow5mult>:
 8017a8c:	defffa04 	addi	sp,sp,-24
 8017a90:	dcc00315 	stw	r19,12(sp)
 8017a94:	dc800215 	stw	r18,8(sp)
 8017a98:	dc000015 	stw	r16,0(sp)
 8017a9c:	dfc00515 	stw	ra,20(sp)
 8017aa0:	dd000415 	stw	r20,16(sp)
 8017aa4:	dc400115 	stw	r17,4(sp)
 8017aa8:	308000cc 	andi	r2,r6,3
 8017aac:	3021883a 	mov	r16,r6
 8017ab0:	2027883a 	mov	r19,r4
 8017ab4:	2825883a 	mov	r18,r5
 8017ab8:	10002e1e 	bne	r2,zero,8017b74 <__pow5mult+0xe8>
 8017abc:	8021d0ba 	srai	r16,r16,2
 8017ac0:	80001a26 	beq	r16,zero,8017b2c <__pow5mult+0xa0>
 8017ac4:	9c401217 	ldw	r17,72(r19)
 8017ac8:	8800061e 	bne	r17,zero,8017ae4 <__pow5mult+0x58>
 8017acc:	00003406 	br	8017ba0 <__pow5mult+0x114>
 8017ad0:	8021d07a 	srai	r16,r16,1
 8017ad4:	80001526 	beq	r16,zero,8017b2c <__pow5mult+0xa0>
 8017ad8:	88800017 	ldw	r2,0(r17)
 8017adc:	10001c26 	beq	r2,zero,8017b50 <__pow5mult+0xc4>
 8017ae0:	1023883a 	mov	r17,r2
 8017ae4:	80c0004c 	andi	r3,r16,1
 8017ae8:	183ff926 	beq	r3,zero,8017ad0 <__alt_data_end+0xfc017ad0>
 8017aec:	900b883a 	mov	r5,r18
 8017af0:	880d883a 	mov	r6,r17
 8017af4:	9809883a 	mov	r4,r19
 8017af8:	80177fc0 	call	80177fc <__multiply>
 8017afc:	90001b26 	beq	r18,zero,8017b6c <__pow5mult+0xe0>
 8017b00:	91c00117 	ldw	r7,4(r18)
 8017b04:	98c01317 	ldw	r3,76(r19)
 8017b08:	8021d07a 	srai	r16,r16,1
 8017b0c:	39cf883a 	add	r7,r7,r7
 8017b10:	39cf883a 	add	r7,r7,r7
 8017b14:	19c7883a 	add	r3,r3,r7
 8017b18:	19000017 	ldw	r4,0(r3)
 8017b1c:	91000015 	stw	r4,0(r18)
 8017b20:	1c800015 	stw	r18,0(r3)
 8017b24:	1025883a 	mov	r18,r2
 8017b28:	803feb1e 	bne	r16,zero,8017ad8 <__alt_data_end+0xfc017ad8>
 8017b2c:	9005883a 	mov	r2,r18
 8017b30:	dfc00517 	ldw	ra,20(sp)
 8017b34:	dd000417 	ldw	r20,16(sp)
 8017b38:	dcc00317 	ldw	r19,12(sp)
 8017b3c:	dc800217 	ldw	r18,8(sp)
 8017b40:	dc400117 	ldw	r17,4(sp)
 8017b44:	dc000017 	ldw	r16,0(sp)
 8017b48:	dec00604 	addi	sp,sp,24
 8017b4c:	f800283a 	ret
 8017b50:	9809883a 	mov	r4,r19
 8017b54:	880b883a 	mov	r5,r17
 8017b58:	880d883a 	mov	r6,r17
 8017b5c:	80177fc0 	call	80177fc <__multiply>
 8017b60:	88800015 	stw	r2,0(r17)
 8017b64:	10000015 	stw	zero,0(r2)
 8017b68:	003fdd06 	br	8017ae0 <__alt_data_end+0xfc017ae0>
 8017b6c:	1025883a 	mov	r18,r2
 8017b70:	003fd706 	br	8017ad0 <__alt_data_end+0xfc017ad0>
 8017b74:	10bfffc4 	addi	r2,r2,-1
 8017b78:	1085883a 	add	r2,r2,r2
 8017b7c:	00c200b4 	movhi	r3,2050
 8017b80:	18c1d704 	addi	r3,r3,1884
 8017b84:	1085883a 	add	r2,r2,r2
 8017b88:	1885883a 	add	r2,r3,r2
 8017b8c:	11800017 	ldw	r6,0(r2)
 8017b90:	000f883a 	mov	r7,zero
 8017b94:	80174680 	call	8017468 <__multadd>
 8017b98:	1025883a 	mov	r18,r2
 8017b9c:	003fc706 	br	8017abc <__alt_data_end+0xfc017abc>
 8017ba0:	05000044 	movi	r20,1
 8017ba4:	9809883a 	mov	r4,r19
 8017ba8:	a00b883a 	mov	r5,r20
 8017bac:	80173980 	call	8017398 <_Balloc>
 8017bb0:	1023883a 	mov	r17,r2
 8017bb4:	00809c44 	movi	r2,625
 8017bb8:	88800515 	stw	r2,20(r17)
 8017bbc:	8d000415 	stw	r20,16(r17)
 8017bc0:	9c401215 	stw	r17,72(r19)
 8017bc4:	88000015 	stw	zero,0(r17)
 8017bc8:	003fc606 	br	8017ae4 <__alt_data_end+0xfc017ae4>

08017bcc <__lshift>:
 8017bcc:	defff904 	addi	sp,sp,-28
 8017bd0:	dd000415 	stw	r20,16(sp)
 8017bd4:	dcc00315 	stw	r19,12(sp)
 8017bd8:	3029d17a 	srai	r20,r6,5
 8017bdc:	2cc00417 	ldw	r19,16(r5)
 8017be0:	28800217 	ldw	r2,8(r5)
 8017be4:	dd400515 	stw	r21,20(sp)
 8017be8:	a4e7883a 	add	r19,r20,r19
 8017bec:	dc800215 	stw	r18,8(sp)
 8017bf0:	dc400115 	stw	r17,4(sp)
 8017bf4:	dc000015 	stw	r16,0(sp)
 8017bf8:	dfc00615 	stw	ra,24(sp)
 8017bfc:	9c000044 	addi	r16,r19,1
 8017c00:	2823883a 	mov	r17,r5
 8017c04:	302b883a 	mov	r21,r6
 8017c08:	2025883a 	mov	r18,r4
 8017c0c:	29400117 	ldw	r5,4(r5)
 8017c10:	1400030e 	bge	r2,r16,8017c20 <__lshift+0x54>
 8017c14:	1085883a 	add	r2,r2,r2
 8017c18:	29400044 	addi	r5,r5,1
 8017c1c:	143ffd16 	blt	r2,r16,8017c14 <__alt_data_end+0xfc017c14>
 8017c20:	9009883a 	mov	r4,r18
 8017c24:	80173980 	call	8017398 <_Balloc>
 8017c28:	11c00504 	addi	r7,r2,20
 8017c2c:	0500090e 	bge	zero,r20,8017c54 <__lshift+0x88>
 8017c30:	3811883a 	mov	r8,r7
 8017c34:	0007883a 	mov	r3,zero
 8017c38:	40000015 	stw	zero,0(r8)
 8017c3c:	18c00044 	addi	r3,r3,1
 8017c40:	42000104 	addi	r8,r8,4
 8017c44:	1d3ffc1e 	bne	r3,r20,8017c38 <__alt_data_end+0xfc017c38>
 8017c48:	18c7883a 	add	r3,r3,r3
 8017c4c:	18c7883a 	add	r3,r3,r3
 8017c50:	38cf883a 	add	r7,r7,r3
 8017c54:	89000417 	ldw	r4,16(r17)
 8017c58:	88c00504 	addi	r3,r17,20
 8017c5c:	a98007cc 	andi	r6,r21,31
 8017c60:	2109883a 	add	r4,r4,r4
 8017c64:	2109883a 	add	r4,r4,r4
 8017c68:	1909883a 	add	r4,r3,r4
 8017c6c:	30002326 	beq	r6,zero,8017cfc <__lshift+0x130>
 8017c70:	01400804 	movi	r5,32
 8017c74:	298bc83a 	sub	r5,r5,r6
 8017c78:	0013883a 	mov	r9,zero
 8017c7c:	1a000017 	ldw	r8,0(r3)
 8017c80:	3815883a 	mov	r10,r7
 8017c84:	39c00104 	addi	r7,r7,4
 8017c88:	4190983a 	sll	r8,r8,r6
 8017c8c:	18c00104 	addi	r3,r3,4
 8017c90:	4a10b03a 	or	r8,r9,r8
 8017c94:	3a3fff15 	stw	r8,-4(r7)
 8017c98:	1a3fff17 	ldw	r8,-4(r3)
 8017c9c:	4152d83a 	srl	r9,r8,r5
 8017ca0:	193ff636 	bltu	r3,r4,8017c7c <__alt_data_end+0xfc017c7c>
 8017ca4:	52400115 	stw	r9,4(r10)
 8017ca8:	48000126 	beq	r9,zero,8017cb0 <__lshift+0xe4>
 8017cac:	9c000084 	addi	r16,r19,2
 8017cb0:	89000117 	ldw	r4,4(r17)
 8017cb4:	90c01317 	ldw	r3,76(r18)
 8017cb8:	843fffc4 	addi	r16,r16,-1
 8017cbc:	2109883a 	add	r4,r4,r4
 8017cc0:	2109883a 	add	r4,r4,r4
 8017cc4:	1907883a 	add	r3,r3,r4
 8017cc8:	19000017 	ldw	r4,0(r3)
 8017ccc:	14000415 	stw	r16,16(r2)
 8017cd0:	89000015 	stw	r4,0(r17)
 8017cd4:	1c400015 	stw	r17,0(r3)
 8017cd8:	dfc00617 	ldw	ra,24(sp)
 8017cdc:	dd400517 	ldw	r21,20(sp)
 8017ce0:	dd000417 	ldw	r20,16(sp)
 8017ce4:	dcc00317 	ldw	r19,12(sp)
 8017ce8:	dc800217 	ldw	r18,8(sp)
 8017cec:	dc400117 	ldw	r17,4(sp)
 8017cf0:	dc000017 	ldw	r16,0(sp)
 8017cf4:	dec00704 	addi	sp,sp,28
 8017cf8:	f800283a 	ret
 8017cfc:	19400017 	ldw	r5,0(r3)
 8017d00:	39c00104 	addi	r7,r7,4
 8017d04:	18c00104 	addi	r3,r3,4
 8017d08:	397fff15 	stw	r5,-4(r7)
 8017d0c:	193ffb36 	bltu	r3,r4,8017cfc <__alt_data_end+0xfc017cfc>
 8017d10:	003fe706 	br	8017cb0 <__alt_data_end+0xfc017cb0>

08017d14 <__mcmp>:
 8017d14:	20800417 	ldw	r2,16(r4)
 8017d18:	28c00417 	ldw	r3,16(r5)
 8017d1c:	10c5c83a 	sub	r2,r2,r3
 8017d20:	1000111e 	bne	r2,zero,8017d68 <__mcmp+0x54>
 8017d24:	18c7883a 	add	r3,r3,r3
 8017d28:	18c7883a 	add	r3,r3,r3
 8017d2c:	21000504 	addi	r4,r4,20
 8017d30:	29400504 	addi	r5,r5,20
 8017d34:	20c5883a 	add	r2,r4,r3
 8017d38:	28cb883a 	add	r5,r5,r3
 8017d3c:	00000106 	br	8017d44 <__mcmp+0x30>
 8017d40:	20800a2e 	bgeu	r4,r2,8017d6c <__mcmp+0x58>
 8017d44:	10bfff04 	addi	r2,r2,-4
 8017d48:	297fff04 	addi	r5,r5,-4
 8017d4c:	11800017 	ldw	r6,0(r2)
 8017d50:	28c00017 	ldw	r3,0(r5)
 8017d54:	30fffa26 	beq	r6,r3,8017d40 <__alt_data_end+0xfc017d40>
 8017d58:	30c00236 	bltu	r6,r3,8017d64 <__mcmp+0x50>
 8017d5c:	00800044 	movi	r2,1
 8017d60:	f800283a 	ret
 8017d64:	00bfffc4 	movi	r2,-1
 8017d68:	f800283a 	ret
 8017d6c:	0005883a 	mov	r2,zero
 8017d70:	f800283a 	ret

08017d74 <__mdiff>:
 8017d74:	defffb04 	addi	sp,sp,-20
 8017d78:	dc000015 	stw	r16,0(sp)
 8017d7c:	2821883a 	mov	r16,r5
 8017d80:	dcc00315 	stw	r19,12(sp)
 8017d84:	300b883a 	mov	r5,r6
 8017d88:	2027883a 	mov	r19,r4
 8017d8c:	8009883a 	mov	r4,r16
 8017d90:	dc800215 	stw	r18,8(sp)
 8017d94:	dfc00415 	stw	ra,16(sp)
 8017d98:	dc400115 	stw	r17,4(sp)
 8017d9c:	3025883a 	mov	r18,r6
 8017da0:	8017d140 	call	8017d14 <__mcmp>
 8017da4:	10005226 	beq	r2,zero,8017ef0 <__mdiff+0x17c>
 8017da8:	10004c16 	blt	r2,zero,8017edc <__mdiff+0x168>
 8017dac:	0023883a 	mov	r17,zero
 8017db0:	81400117 	ldw	r5,4(r16)
 8017db4:	9809883a 	mov	r4,r19
 8017db8:	80173980 	call	8017398 <_Balloc>
 8017dbc:	83400417 	ldw	r13,16(r16)
 8017dc0:	93800417 	ldw	r14,16(r18)
 8017dc4:	81000504 	addi	r4,r16,20
 8017dc8:	6b59883a 	add	r12,r13,r13
 8017dcc:	739d883a 	add	r14,r14,r14
 8017dd0:	6319883a 	add	r12,r12,r12
 8017dd4:	91800504 	addi	r6,r18,20
 8017dd8:	739d883a 	add	r14,r14,r14
 8017ddc:	14400315 	stw	r17,12(r2)
 8017de0:	2319883a 	add	r12,r4,r12
 8017de4:	339d883a 	add	r14,r6,r14
 8017de8:	12400504 	addi	r9,r2,20
 8017dec:	0007883a 	mov	r3,zero
 8017df0:	22000017 	ldw	r8,0(r4)
 8017df4:	32800017 	ldw	r10,0(r6)
 8017df8:	4ac00104 	addi	r11,r9,4
 8017dfc:	41ffffcc 	andi	r7,r8,65535
 8017e00:	38c7883a 	add	r3,r7,r3
 8017e04:	51ffffcc 	andi	r7,r10,65535
 8017e08:	19cfc83a 	sub	r7,r3,r7
 8017e0c:	4010d43a 	srli	r8,r8,16
 8017e10:	5014d43a 	srli	r10,r10,16
 8017e14:	3807d43a 	srai	r3,r7,16
 8017e18:	39ffffcc 	andi	r7,r7,65535
 8017e1c:	4291c83a 	sub	r8,r8,r10
 8017e20:	40c7883a 	add	r3,r8,r3
 8017e24:	1810943a 	slli	r8,r3,16
 8017e28:	31800104 	addi	r6,r6,4
 8017e2c:	21000104 	addi	r4,r4,4
 8017e30:	41ceb03a 	or	r7,r8,r7
 8017e34:	49c00015 	stw	r7,0(r9)
 8017e38:	1807d43a 	srai	r3,r3,16
 8017e3c:	580b883a 	mov	r5,r11
 8017e40:	5813883a 	mov	r9,r11
 8017e44:	33bfea36 	bltu	r6,r14,8017df0 <__alt_data_end+0xfc017df0>
 8017e48:	2011883a 	mov	r8,r4
 8017e4c:	2300152e 	bgeu	r4,r12,8017ea4 <__mdiff+0x130>
 8017e50:	21400017 	ldw	r5,0(r4)
 8017e54:	4a400104 	addi	r9,r9,4
 8017e58:	21000104 	addi	r4,r4,4
 8017e5c:	29ffffcc 	andi	r7,r5,65535
 8017e60:	38c7883a 	add	r3,r7,r3
 8017e64:	280ad43a 	srli	r5,r5,16
 8017e68:	180dd43a 	srai	r6,r3,16
 8017e6c:	19ffffcc 	andi	r7,r3,65535
 8017e70:	3147883a 	add	r3,r6,r5
 8017e74:	180a943a 	slli	r5,r3,16
 8017e78:	1807d43a 	srai	r3,r3,16
 8017e7c:	29ceb03a 	or	r7,r5,r7
 8017e80:	49ffff15 	stw	r7,-4(r9)
 8017e84:	233ff236 	bltu	r4,r12,8017e50 <__alt_data_end+0xfc017e50>
 8017e88:	0206303a 	nor	r3,zero,r8
 8017e8c:	1b07883a 	add	r3,r3,r12
 8017e90:	1806d0ba 	srli	r3,r3,2
 8017e94:	18c00044 	addi	r3,r3,1
 8017e98:	18c7883a 	add	r3,r3,r3
 8017e9c:	18c7883a 	add	r3,r3,r3
 8017ea0:	58cb883a 	add	r5,r11,r3
 8017ea4:	28ffff04 	addi	r3,r5,-4
 8017ea8:	3800041e 	bne	r7,zero,8017ebc <__mdiff+0x148>
 8017eac:	18ffff04 	addi	r3,r3,-4
 8017eb0:	19000017 	ldw	r4,0(r3)
 8017eb4:	6b7fffc4 	addi	r13,r13,-1
 8017eb8:	203ffc26 	beq	r4,zero,8017eac <__alt_data_end+0xfc017eac>
 8017ebc:	13400415 	stw	r13,16(r2)
 8017ec0:	dfc00417 	ldw	ra,16(sp)
 8017ec4:	dcc00317 	ldw	r19,12(sp)
 8017ec8:	dc800217 	ldw	r18,8(sp)
 8017ecc:	dc400117 	ldw	r17,4(sp)
 8017ed0:	dc000017 	ldw	r16,0(sp)
 8017ed4:	dec00504 	addi	sp,sp,20
 8017ed8:	f800283a 	ret
 8017edc:	8005883a 	mov	r2,r16
 8017ee0:	04400044 	movi	r17,1
 8017ee4:	9021883a 	mov	r16,r18
 8017ee8:	1025883a 	mov	r18,r2
 8017eec:	003fb006 	br	8017db0 <__alt_data_end+0xfc017db0>
 8017ef0:	9809883a 	mov	r4,r19
 8017ef4:	000b883a 	mov	r5,zero
 8017ef8:	80173980 	call	8017398 <_Balloc>
 8017efc:	00c00044 	movi	r3,1
 8017f00:	10c00415 	stw	r3,16(r2)
 8017f04:	10000515 	stw	zero,20(r2)
 8017f08:	003fed06 	br	8017ec0 <__alt_data_end+0xfc017ec0>

08017f0c <__ulp>:
 8017f0c:	295ffc2c 	andhi	r5,r5,32752
 8017f10:	00bf3034 	movhi	r2,64704
 8017f14:	2887883a 	add	r3,r5,r2
 8017f18:	00c0020e 	bge	zero,r3,8017f24 <__ulp+0x18>
 8017f1c:	0005883a 	mov	r2,zero
 8017f20:	f800283a 	ret
 8017f24:	00c7c83a 	sub	r3,zero,r3
 8017f28:	180bd53a 	srai	r5,r3,20
 8017f2c:	008004c4 	movi	r2,19
 8017f30:	11400a0e 	bge	r2,r5,8017f5c <__ulp+0x50>
 8017f34:	00800c84 	movi	r2,50
 8017f38:	0007883a 	mov	r3,zero
 8017f3c:	11400516 	blt	r2,r5,8017f54 <__ulp+0x48>
 8017f40:	00800cc4 	movi	r2,51
 8017f44:	114bc83a 	sub	r5,r2,r5
 8017f48:	00800044 	movi	r2,1
 8017f4c:	1144983a 	sll	r2,r2,r5
 8017f50:	f800283a 	ret
 8017f54:	00800044 	movi	r2,1
 8017f58:	f800283a 	ret
 8017f5c:	00800234 	movhi	r2,8
 8017f60:	1147d83a 	sra	r3,r2,r5
 8017f64:	0005883a 	mov	r2,zero
 8017f68:	f800283a 	ret

08017f6c <__b2d>:
 8017f6c:	defffa04 	addi	sp,sp,-24
 8017f70:	dc000015 	stw	r16,0(sp)
 8017f74:	24000417 	ldw	r16,16(r4)
 8017f78:	dc400115 	stw	r17,4(sp)
 8017f7c:	24400504 	addi	r17,r4,20
 8017f80:	8421883a 	add	r16,r16,r16
 8017f84:	8421883a 	add	r16,r16,r16
 8017f88:	8c21883a 	add	r16,r17,r16
 8017f8c:	dc800215 	stw	r18,8(sp)
 8017f90:	84bfff17 	ldw	r18,-4(r16)
 8017f94:	dd000415 	stw	r20,16(sp)
 8017f98:	dcc00315 	stw	r19,12(sp)
 8017f9c:	9009883a 	mov	r4,r18
 8017fa0:	2829883a 	mov	r20,r5
 8017fa4:	dfc00515 	stw	ra,20(sp)
 8017fa8:	80176a80 	call	80176a8 <__hi0bits>
 8017fac:	00c00804 	movi	r3,32
 8017fb0:	1887c83a 	sub	r3,r3,r2
 8017fb4:	a0c00015 	stw	r3,0(r20)
 8017fb8:	00c00284 	movi	r3,10
 8017fbc:	84ffff04 	addi	r19,r16,-4
 8017fc0:	18801216 	blt	r3,r2,801800c <__b2d+0xa0>
 8017fc4:	014002c4 	movi	r5,11
 8017fc8:	2889c83a 	sub	r4,r5,r2
 8017fcc:	9106d83a 	srl	r3,r18,r4
 8017fd0:	18cffc34 	orhi	r3,r3,16368
 8017fd4:	8cc0282e 	bgeu	r17,r19,8018078 <__b2d+0x10c>
 8017fd8:	817ffe17 	ldw	r5,-8(r16)
 8017fdc:	290ad83a 	srl	r5,r5,r4
 8017fe0:	10800544 	addi	r2,r2,21
 8017fe4:	9084983a 	sll	r2,r18,r2
 8017fe8:	2884b03a 	or	r2,r5,r2
 8017fec:	dfc00517 	ldw	ra,20(sp)
 8017ff0:	dd000417 	ldw	r20,16(sp)
 8017ff4:	dcc00317 	ldw	r19,12(sp)
 8017ff8:	dc800217 	ldw	r18,8(sp)
 8017ffc:	dc400117 	ldw	r17,4(sp)
 8018000:	dc000017 	ldw	r16,0(sp)
 8018004:	dec00604 	addi	sp,sp,24
 8018008:	f800283a 	ret
 801800c:	113ffd44 	addi	r4,r2,-11
 8018010:	8cc00f2e 	bgeu	r17,r19,8018050 <__b2d+0xe4>
 8018014:	81bffe04 	addi	r6,r16,-8
 8018018:	817ffe17 	ldw	r5,-8(r16)
 801801c:	20001326 	beq	r4,zero,801806c <__b2d+0x100>
 8018020:	00c00ac4 	movi	r3,43
 8018024:	1885c83a 	sub	r2,r3,r2
 8018028:	2886d83a 	srl	r3,r5,r2
 801802c:	9124983a 	sll	r18,r18,r4
 8018030:	90e4b03a 	or	r18,r18,r3
 8018034:	90cffc34 	orhi	r3,r18,16368
 8018038:	8980112e 	bgeu	r17,r6,8018080 <__b2d+0x114>
 801803c:	81bffd17 	ldw	r6,-12(r16)
 8018040:	308cd83a 	srl	r6,r6,r2
 8018044:	2904983a 	sll	r2,r5,r4
 8018048:	1184b03a 	or	r2,r2,r6
 801804c:	003fe706 	br	8017fec <__alt_data_end+0xfc017fec>
 8018050:	20000526 	beq	r4,zero,8018068 <__b2d+0xfc>
 8018054:	9124983a 	sll	r18,r18,r4
 8018058:	000d883a 	mov	r6,zero
 801805c:	000b883a 	mov	r5,zero
 8018060:	90cffc34 	orhi	r3,r18,16368
 8018064:	003ff706 	br	8018044 <__alt_data_end+0xfc018044>
 8018068:	000b883a 	mov	r5,zero
 801806c:	90cffc34 	orhi	r3,r18,16368
 8018070:	2805883a 	mov	r2,r5
 8018074:	003fdd06 	br	8017fec <__alt_data_end+0xfc017fec>
 8018078:	000b883a 	mov	r5,zero
 801807c:	003fd806 	br	8017fe0 <__alt_data_end+0xfc017fe0>
 8018080:	000d883a 	mov	r6,zero
 8018084:	003fef06 	br	8018044 <__alt_data_end+0xfc018044>

08018088 <__d2b>:
 8018088:	defff704 	addi	sp,sp,-36
 801808c:	dc000215 	stw	r16,8(sp)
 8018090:	3021883a 	mov	r16,r6
 8018094:	dc400315 	stw	r17,12(sp)
 8018098:	8022907a 	slli	r17,r16,1
 801809c:	dd400715 	stw	r21,28(sp)
 80180a0:	282b883a 	mov	r21,r5
 80180a4:	01400044 	movi	r5,1
 80180a8:	dd000615 	stw	r20,24(sp)
 80180ac:	dcc00515 	stw	r19,20(sp)
 80180b0:	dc800415 	stw	r18,16(sp)
 80180b4:	dfc00815 	stw	ra,32(sp)
 80180b8:	3829883a 	mov	r20,r7
 80180bc:	dc800917 	ldw	r18,36(sp)
 80180c0:	8822d57a 	srli	r17,r17,21
 80180c4:	80173980 	call	8017398 <_Balloc>
 80180c8:	1027883a 	mov	r19,r2
 80180cc:	00800434 	movhi	r2,16
 80180d0:	10bfffc4 	addi	r2,r2,-1
 80180d4:	808c703a 	and	r6,r16,r2
 80180d8:	88000126 	beq	r17,zero,80180e0 <__d2b+0x58>
 80180dc:	31800434 	orhi	r6,r6,16
 80180e0:	d9800015 	stw	r6,0(sp)
 80180e4:	a8001f26 	beq	r21,zero,8018164 <__d2b+0xdc>
 80180e8:	d9000104 	addi	r4,sp,4
 80180ec:	dd400115 	stw	r21,4(sp)
 80180f0:	80177100 	call	8017710 <__lo0bits>
 80180f4:	d8c00017 	ldw	r3,0(sp)
 80180f8:	1000291e 	bne	r2,zero,80181a0 <__d2b+0x118>
 80180fc:	d9000117 	ldw	r4,4(sp)
 8018100:	99000515 	stw	r4,20(r19)
 8018104:	1820c03a 	cmpne	r16,r3,zero
 8018108:	84000044 	addi	r16,r16,1
 801810c:	98c00615 	stw	r3,24(r19)
 8018110:	9c000415 	stw	r16,16(r19)
 8018114:	88001b1e 	bne	r17,zero,8018184 <__d2b+0xfc>
 8018118:	800690ba 	slli	r3,r16,2
 801811c:	10bef384 	addi	r2,r2,-1074
 8018120:	a0800015 	stw	r2,0(r20)
 8018124:	98c5883a 	add	r2,r19,r3
 8018128:	11000417 	ldw	r4,16(r2)
 801812c:	8020917a 	slli	r16,r16,5
 8018130:	80176a80 	call	80176a8 <__hi0bits>
 8018134:	8085c83a 	sub	r2,r16,r2
 8018138:	90800015 	stw	r2,0(r18)
 801813c:	9805883a 	mov	r2,r19
 8018140:	dfc00817 	ldw	ra,32(sp)
 8018144:	dd400717 	ldw	r21,28(sp)
 8018148:	dd000617 	ldw	r20,24(sp)
 801814c:	dcc00517 	ldw	r19,20(sp)
 8018150:	dc800417 	ldw	r18,16(sp)
 8018154:	dc400317 	ldw	r17,12(sp)
 8018158:	dc000217 	ldw	r16,8(sp)
 801815c:	dec00904 	addi	sp,sp,36
 8018160:	f800283a 	ret
 8018164:	d809883a 	mov	r4,sp
 8018168:	80177100 	call	8017710 <__lo0bits>
 801816c:	d8c00017 	ldw	r3,0(sp)
 8018170:	04000044 	movi	r16,1
 8018174:	9c000415 	stw	r16,16(r19)
 8018178:	98c00515 	stw	r3,20(r19)
 801817c:	10800804 	addi	r2,r2,32
 8018180:	883fe526 	beq	r17,zero,8018118 <__alt_data_end+0xfc018118>
 8018184:	8c7ef344 	addi	r17,r17,-1075
 8018188:	88a3883a 	add	r17,r17,r2
 801818c:	00c00d44 	movi	r3,53
 8018190:	a4400015 	stw	r17,0(r20)
 8018194:	1885c83a 	sub	r2,r3,r2
 8018198:	90800015 	stw	r2,0(r18)
 801819c:	003fe706 	br	801813c <__alt_data_end+0xfc01813c>
 80181a0:	01000804 	movi	r4,32
 80181a4:	2089c83a 	sub	r4,r4,r2
 80181a8:	1908983a 	sll	r4,r3,r4
 80181ac:	d9400117 	ldw	r5,4(sp)
 80181b0:	1886d83a 	srl	r3,r3,r2
 80181b4:	2148b03a 	or	r4,r4,r5
 80181b8:	99000515 	stw	r4,20(r19)
 80181bc:	d8c00015 	stw	r3,0(sp)
 80181c0:	003fd006 	br	8018104 <__alt_data_end+0xfc018104>

080181c4 <__ratio>:
 80181c4:	defff904 	addi	sp,sp,-28
 80181c8:	dc400315 	stw	r17,12(sp)
 80181cc:	2823883a 	mov	r17,r5
 80181d0:	d9400104 	addi	r5,sp,4
 80181d4:	dfc00615 	stw	ra,24(sp)
 80181d8:	dcc00515 	stw	r19,20(sp)
 80181dc:	dc800415 	stw	r18,16(sp)
 80181e0:	2027883a 	mov	r19,r4
 80181e4:	dc000215 	stw	r16,8(sp)
 80181e8:	8017f6c0 	call	8017f6c <__b2d>
 80181ec:	8809883a 	mov	r4,r17
 80181f0:	d80b883a 	mov	r5,sp
 80181f4:	1025883a 	mov	r18,r2
 80181f8:	1821883a 	mov	r16,r3
 80181fc:	8017f6c0 	call	8017f6c <__b2d>
 8018200:	8a400417 	ldw	r9,16(r17)
 8018204:	9a000417 	ldw	r8,16(r19)
 8018208:	100d883a 	mov	r6,r2
 801820c:	d8800017 	ldw	r2,0(sp)
 8018210:	4251c83a 	sub	r8,r8,r9
 8018214:	4012917a 	slli	r9,r8,5
 8018218:	da000117 	ldw	r8,4(sp)
 801821c:	4091c83a 	sub	r8,r8,r2
 8018220:	4251883a 	add	r8,r8,r9
 8018224:	02000d0e 	bge	zero,r8,801825c <__ratio+0x98>
 8018228:	4010953a 	slli	r8,r8,20
 801822c:	4421883a 	add	r16,r8,r16
 8018230:	9009883a 	mov	r4,r18
 8018234:	800b883a 	mov	r5,r16
 8018238:	180f883a 	mov	r7,r3
 801823c:	800ae2c0 	call	800ae2c <__divdf3>
 8018240:	dfc00617 	ldw	ra,24(sp)
 8018244:	dcc00517 	ldw	r19,20(sp)
 8018248:	dc800417 	ldw	r18,16(sp)
 801824c:	dc400317 	ldw	r17,12(sp)
 8018250:	dc000217 	ldw	r16,8(sp)
 8018254:	dec00704 	addi	sp,sp,28
 8018258:	f800283a 	ret
 801825c:	4010953a 	slli	r8,r8,20
 8018260:	1a07c83a 	sub	r3,r3,r8
 8018264:	003ff206 	br	8018230 <__alt_data_end+0xfc018230>

08018268 <_mprec_log10>:
 8018268:	defffe04 	addi	sp,sp,-8
 801826c:	dc000015 	stw	r16,0(sp)
 8018270:	dfc00115 	stw	ra,4(sp)
 8018274:	008005c4 	movi	r2,23
 8018278:	2021883a 	mov	r16,r4
 801827c:	11000d0e 	bge	r2,r4,80182b4 <_mprec_log10+0x4c>
 8018280:	0005883a 	mov	r2,zero
 8018284:	00cffc34 	movhi	r3,16368
 8018288:	843fffc4 	addi	r16,r16,-1
 801828c:	1009883a 	mov	r4,r2
 8018290:	180b883a 	mov	r5,r3
 8018294:	000d883a 	mov	r6,zero
 8018298:	01d00934 	movhi	r7,16420
 801829c:	800b9f00 	call	800b9f0 <__muldf3>
 80182a0:	803ff91e 	bne	r16,zero,8018288 <__alt_data_end+0xfc018288>
 80182a4:	dfc00117 	ldw	ra,4(sp)
 80182a8:	dc000017 	ldw	r16,0(sp)
 80182ac:	dec00204 	addi	sp,sp,8
 80182b0:	f800283a 	ret
 80182b4:	202090fa 	slli	r16,r4,3
 80182b8:	008200b4 	movhi	r2,2050
 80182bc:	1081ee04 	addi	r2,r2,1976
 80182c0:	1421883a 	add	r16,r2,r16
 80182c4:	80800017 	ldw	r2,0(r16)
 80182c8:	80c00117 	ldw	r3,4(r16)
 80182cc:	dfc00117 	ldw	ra,4(sp)
 80182d0:	dc000017 	ldw	r16,0(sp)
 80182d4:	dec00204 	addi	sp,sp,8
 80182d8:	f800283a 	ret

080182dc <__copybits>:
 80182dc:	297fffc4 	addi	r5,r5,-1
 80182e0:	280fd17a 	srai	r7,r5,5
 80182e4:	30c00417 	ldw	r3,16(r6)
 80182e8:	30800504 	addi	r2,r6,20
 80182ec:	39c00044 	addi	r7,r7,1
 80182f0:	18c7883a 	add	r3,r3,r3
 80182f4:	39cf883a 	add	r7,r7,r7
 80182f8:	18c7883a 	add	r3,r3,r3
 80182fc:	39cf883a 	add	r7,r7,r7
 8018300:	10c7883a 	add	r3,r2,r3
 8018304:	21cf883a 	add	r7,r4,r7
 8018308:	10c00d2e 	bgeu	r2,r3,8018340 <__copybits+0x64>
 801830c:	200b883a 	mov	r5,r4
 8018310:	12000017 	ldw	r8,0(r2)
 8018314:	29400104 	addi	r5,r5,4
 8018318:	10800104 	addi	r2,r2,4
 801831c:	2a3fff15 	stw	r8,-4(r5)
 8018320:	10fffb36 	bltu	r2,r3,8018310 <__alt_data_end+0xfc018310>
 8018324:	1985c83a 	sub	r2,r3,r6
 8018328:	10bffac4 	addi	r2,r2,-21
 801832c:	1004d0ba 	srli	r2,r2,2
 8018330:	10800044 	addi	r2,r2,1
 8018334:	1085883a 	add	r2,r2,r2
 8018338:	1085883a 	add	r2,r2,r2
 801833c:	2089883a 	add	r4,r4,r2
 8018340:	21c0032e 	bgeu	r4,r7,8018350 <__copybits+0x74>
 8018344:	20000015 	stw	zero,0(r4)
 8018348:	21000104 	addi	r4,r4,4
 801834c:	21fffd36 	bltu	r4,r7,8018344 <__alt_data_end+0xfc018344>
 8018350:	f800283a 	ret

08018354 <__any_on>:
 8018354:	20c00417 	ldw	r3,16(r4)
 8018358:	2805d17a 	srai	r2,r5,5
 801835c:	21000504 	addi	r4,r4,20
 8018360:	18800d0e 	bge	r3,r2,8018398 <__any_on+0x44>
 8018364:	18c7883a 	add	r3,r3,r3
 8018368:	18c7883a 	add	r3,r3,r3
 801836c:	20c7883a 	add	r3,r4,r3
 8018370:	20c0192e 	bgeu	r4,r3,80183d8 <__any_on+0x84>
 8018374:	18bfff17 	ldw	r2,-4(r3)
 8018378:	18ffff04 	addi	r3,r3,-4
 801837c:	1000041e 	bne	r2,zero,8018390 <__any_on+0x3c>
 8018380:	20c0142e 	bgeu	r4,r3,80183d4 <__any_on+0x80>
 8018384:	18ffff04 	addi	r3,r3,-4
 8018388:	19400017 	ldw	r5,0(r3)
 801838c:	283ffc26 	beq	r5,zero,8018380 <__alt_data_end+0xfc018380>
 8018390:	00800044 	movi	r2,1
 8018394:	f800283a 	ret
 8018398:	10c00a0e 	bge	r2,r3,80183c4 <__any_on+0x70>
 801839c:	1085883a 	add	r2,r2,r2
 80183a0:	1085883a 	add	r2,r2,r2
 80183a4:	294007cc 	andi	r5,r5,31
 80183a8:	2087883a 	add	r3,r4,r2
 80183ac:	283ff026 	beq	r5,zero,8018370 <__alt_data_end+0xfc018370>
 80183b0:	19800017 	ldw	r6,0(r3)
 80183b4:	3144d83a 	srl	r2,r6,r5
 80183b8:	114a983a 	sll	r5,r2,r5
 80183bc:	29bff41e 	bne	r5,r6,8018390 <__alt_data_end+0xfc018390>
 80183c0:	003feb06 	br	8018370 <__alt_data_end+0xfc018370>
 80183c4:	1085883a 	add	r2,r2,r2
 80183c8:	1085883a 	add	r2,r2,r2
 80183cc:	2087883a 	add	r3,r4,r2
 80183d0:	003fe706 	br	8018370 <__alt_data_end+0xfc018370>
 80183d4:	f800283a 	ret
 80183d8:	0005883a 	mov	r2,zero
 80183dc:	f800283a 	ret

080183e0 <_realloc_r>:
 80183e0:	defff604 	addi	sp,sp,-40
 80183e4:	dcc00315 	stw	r19,12(sp)
 80183e8:	dc400115 	stw	r17,4(sp)
 80183ec:	dfc00915 	stw	ra,36(sp)
 80183f0:	df000815 	stw	fp,32(sp)
 80183f4:	ddc00715 	stw	r23,28(sp)
 80183f8:	dd800615 	stw	r22,24(sp)
 80183fc:	dd400515 	stw	r21,20(sp)
 8018400:	dd000415 	stw	r20,16(sp)
 8018404:	dc800215 	stw	r18,8(sp)
 8018408:	dc000015 	stw	r16,0(sp)
 801840c:	2827883a 	mov	r19,r5
 8018410:	3023883a 	mov	r17,r6
 8018414:	2800bf26 	beq	r5,zero,8018714 <_realloc_r+0x334>
 8018418:	2025883a 	mov	r18,r4
 801841c:	801d3780 	call	801d378 <__malloc_lock>
 8018420:	98ffff17 	ldw	r3,-4(r19)
 8018424:	01bfff04 	movi	r6,-4
 8018428:	890002c4 	addi	r4,r17,11
 801842c:	01c00584 	movi	r7,22
 8018430:	9d7ffe04 	addi	r21,r19,-8
 8018434:	19a0703a 	and	r16,r3,r6
 8018438:	39003f2e 	bgeu	r7,r4,8018538 <_realloc_r+0x158>
 801843c:	053ffe04 	movi	r20,-8
 8018440:	2528703a 	and	r20,r4,r20
 8018444:	a00f883a 	mov	r7,r20
 8018448:	a0008216 	blt	r20,zero,8018654 <_realloc_r+0x274>
 801844c:	a4408136 	bltu	r20,r17,8018654 <_realloc_r+0x274>
 8018450:	81c03c0e 	bge	r16,r7,8018544 <_realloc_r+0x164>
 8018454:	070200b4 	movhi	fp,2050
 8018458:	e7036e04 	addi	fp,fp,3512
 801845c:	e1000217 	ldw	r4,8(fp)
 8018460:	ac05883a 	add	r2,r21,r16
 8018464:	2080bf26 	beq	r4,r2,8018764 <_realloc_r+0x384>
 8018468:	11000117 	ldw	r4,4(r2)
 801846c:	023fff84 	movi	r8,-2
 8018470:	2210703a 	and	r8,r4,r8
 8018474:	1211883a 	add	r8,r2,r8
 8018478:	41400117 	ldw	r5,4(r8)
 801847c:	2940004c 	andi	r5,r5,1
 8018480:	28004a1e 	bne	r5,zero,80185ac <_realloc_r+0x1cc>
 8018484:	017fff04 	movi	r5,-4
 8018488:	2148703a 	and	r4,r4,r5
 801848c:	2409883a 	add	r4,r4,r16
 8018490:	21c0ad0e 	bge	r4,r7,8018748 <_realloc_r+0x368>
 8018494:	18c0004c 	andi	r3,r3,1
 8018498:	18007f1e 	bne	r3,zero,8018698 <_realloc_r+0x2b8>
 801849c:	9dfffe17 	ldw	r23,-8(r19)
 80184a0:	adefc83a 	sub	r23,r21,r23
 80184a4:	bd800117 	ldw	r22,4(r23)
 80184a8:	b14a703a 	and	r5,r22,r5
 80184ac:	216d883a 	add	r22,r4,r5
 80184b0:	b1c04516 	blt	r22,r7,80185c8 <_realloc_r+0x1e8>
 80184b4:	10c00317 	ldw	r3,12(r2)
 80184b8:	10800217 	ldw	r2,8(r2)
 80184bc:	81bfff04 	addi	r6,r16,-4
 80184c0:	bc400204 	addi	r17,r23,8
 80184c4:	10c00315 	stw	r3,12(r2)
 80184c8:	18800215 	stw	r2,8(r3)
 80184cc:	b9400217 	ldw	r5,8(r23)
 80184d0:	b8c00317 	ldw	r3,12(r23)
 80184d4:	00800904 	movi	r2,36
 80184d8:	28c00315 	stw	r3,12(r5)
 80184dc:	19400215 	stw	r5,8(r3)
 80184e0:	1180ef36 	bltu	r2,r6,80188a0 <_realloc_r+0x4c0>
 80184e4:	008004c4 	movi	r2,19
 80184e8:	1180da2e 	bgeu	r2,r6,8018854 <_realloc_r+0x474>
 80184ec:	98800017 	ldw	r2,0(r19)
 80184f0:	b8800215 	stw	r2,8(r23)
 80184f4:	98800117 	ldw	r2,4(r19)
 80184f8:	b8800315 	stw	r2,12(r23)
 80184fc:	008006c4 	movi	r2,27
 8018500:	1180fc2e 	bgeu	r2,r6,80188f4 <_realloc_r+0x514>
 8018504:	98800217 	ldw	r2,8(r19)
 8018508:	b8800415 	stw	r2,16(r23)
 801850c:	98800317 	ldw	r2,12(r19)
 8018510:	b8800515 	stw	r2,20(r23)
 8018514:	00800904 	movi	r2,36
 8018518:	3080421e 	bne	r6,r2,8018624 <_realloc_r+0x244>
 801851c:	98800417 	ldw	r2,16(r19)
 8018520:	9cc00604 	addi	r19,r19,24
 8018524:	b8c00804 	addi	r3,r23,32
 8018528:	b8800615 	stw	r2,24(r23)
 801852c:	98bfff17 	ldw	r2,-4(r19)
 8018530:	b8800715 	stw	r2,28(r23)
 8018534:	00003d06 	br	801862c <_realloc_r+0x24c>
 8018538:	01c00404 	movi	r7,16
 801853c:	3829883a 	mov	r20,r7
 8018540:	003fc206 	br	801844c <__alt_data_end+0xfc01844c>
 8018544:	9823883a 	mov	r17,r19
 8018548:	850fc83a 	sub	r7,r16,r20
 801854c:	008003c4 	movi	r2,15
 8018550:	18c0004c 	andi	r3,r3,1
 8018554:	11c04336 	bltu	r2,r7,8018664 <_realloc_r+0x284>
 8018558:	1c06b03a 	or	r3,r3,r16
 801855c:	a8c00115 	stw	r3,4(r21)
 8018560:	ac21883a 	add	r16,r21,r16
 8018564:	80c00117 	ldw	r3,4(r16)
 8018568:	18c00054 	ori	r3,r3,1
 801856c:	80c00115 	stw	r3,4(r16)
 8018570:	9009883a 	mov	r4,r18
 8018574:	801d3980 	call	801d398 <__malloc_unlock>
 8018578:	8805883a 	mov	r2,r17
 801857c:	dfc00917 	ldw	ra,36(sp)
 8018580:	df000817 	ldw	fp,32(sp)
 8018584:	ddc00717 	ldw	r23,28(sp)
 8018588:	dd800617 	ldw	r22,24(sp)
 801858c:	dd400517 	ldw	r21,20(sp)
 8018590:	dd000417 	ldw	r20,16(sp)
 8018594:	dcc00317 	ldw	r19,12(sp)
 8018598:	dc800217 	ldw	r18,8(sp)
 801859c:	dc400117 	ldw	r17,4(sp)
 80185a0:	dc000017 	ldw	r16,0(sp)
 80185a4:	dec00a04 	addi	sp,sp,40
 80185a8:	f800283a 	ret
 80185ac:	18c0004c 	andi	r3,r3,1
 80185b0:	1800391e 	bne	r3,zero,8018698 <_realloc_r+0x2b8>
 80185b4:	9dfffe17 	ldw	r23,-8(r19)
 80185b8:	00bfff04 	movi	r2,-4
 80185bc:	adefc83a 	sub	r23,r21,r23
 80185c0:	b9400117 	ldw	r5,4(r23)
 80185c4:	288a703a 	and	r5,r5,r2
 80185c8:	2c2d883a 	add	r22,r5,r16
 80185cc:	b1c03216 	blt	r22,r7,8018698 <_realloc_r+0x2b8>
 80185d0:	b8800317 	ldw	r2,12(r23)
 80185d4:	b8c00217 	ldw	r3,8(r23)
 80185d8:	81bfff04 	addi	r6,r16,-4
 80185dc:	01000904 	movi	r4,36
 80185e0:	18800315 	stw	r2,12(r3)
 80185e4:	10c00215 	stw	r3,8(r2)
 80185e8:	bc400204 	addi	r17,r23,8
 80185ec:	2180ac36 	bltu	r4,r6,80188a0 <_realloc_r+0x4c0>
 80185f0:	008004c4 	movi	r2,19
 80185f4:	1180972e 	bgeu	r2,r6,8018854 <_realloc_r+0x474>
 80185f8:	98800017 	ldw	r2,0(r19)
 80185fc:	b8800215 	stw	r2,8(r23)
 8018600:	98800117 	ldw	r2,4(r19)
 8018604:	b8800315 	stw	r2,12(r23)
 8018608:	008006c4 	movi	r2,27
 801860c:	1180b92e 	bgeu	r2,r6,80188f4 <_realloc_r+0x514>
 8018610:	98800217 	ldw	r2,8(r19)
 8018614:	b8800415 	stw	r2,16(r23)
 8018618:	98800317 	ldw	r2,12(r19)
 801861c:	b8800515 	stw	r2,20(r23)
 8018620:	313fbe26 	beq	r6,r4,801851c <__alt_data_end+0xfc01851c>
 8018624:	b8c00604 	addi	r3,r23,24
 8018628:	9cc00404 	addi	r19,r19,16
 801862c:	98800017 	ldw	r2,0(r19)
 8018630:	b021883a 	mov	r16,r22
 8018634:	b82b883a 	mov	r21,r23
 8018638:	18800015 	stw	r2,0(r3)
 801863c:	98800117 	ldw	r2,4(r19)
 8018640:	18800115 	stw	r2,4(r3)
 8018644:	98800217 	ldw	r2,8(r19)
 8018648:	18800215 	stw	r2,8(r3)
 801864c:	b8c00117 	ldw	r3,4(r23)
 8018650:	003fbd06 	br	8018548 <__alt_data_end+0xfc018548>
 8018654:	00800304 	movi	r2,12
 8018658:	90800015 	stw	r2,0(r18)
 801865c:	0005883a 	mov	r2,zero
 8018660:	003fc606 	br	801857c <__alt_data_end+0xfc01857c>
 8018664:	1d06b03a 	or	r3,r3,r20
 8018668:	ad0b883a 	add	r5,r21,r20
 801866c:	a8c00115 	stw	r3,4(r21)
 8018670:	38800054 	ori	r2,r7,1
 8018674:	28800115 	stw	r2,4(r5)
 8018678:	29cf883a 	add	r7,r5,r7
 801867c:	38800117 	ldw	r2,4(r7)
 8018680:	9009883a 	mov	r4,r18
 8018684:	29400204 	addi	r5,r5,8
 8018688:	10800054 	ori	r2,r2,1
 801868c:	38800115 	stw	r2,4(r7)
 8018690:	8014f440 	call	8014f44 <_free_r>
 8018694:	003fb606 	br	8018570 <__alt_data_end+0xfc018570>
 8018698:	880b883a 	mov	r5,r17
 801869c:	9009883a 	mov	r4,r18
 80186a0:	80167500 	call	8016750 <_malloc_r>
 80186a4:	1023883a 	mov	r17,r2
 80186a8:	1000aa26 	beq	r2,zero,8018954 <_realloc_r+0x574>
 80186ac:	98ffff17 	ldw	r3,-4(r19)
 80186b0:	113ffe04 	addi	r4,r2,-8
 80186b4:	00bfff84 	movi	r2,-2
 80186b8:	1884703a 	and	r2,r3,r2
 80186bc:	a885883a 	add	r2,r21,r2
 80186c0:	20808626 	beq	r4,r2,80188dc <_realloc_r+0x4fc>
 80186c4:	81bfff04 	addi	r6,r16,-4
 80186c8:	00800904 	movi	r2,36
 80186cc:	11807036 	bltu	r2,r6,8018890 <_realloc_r+0x4b0>
 80186d0:	00c004c4 	movi	r3,19
 80186d4:	19805636 	bltu	r3,r6,8018830 <_realloc_r+0x450>
 80186d8:	8805883a 	mov	r2,r17
 80186dc:	9807883a 	mov	r3,r19
 80186e0:	19000017 	ldw	r4,0(r3)
 80186e4:	11000015 	stw	r4,0(r2)
 80186e8:	19000117 	ldw	r4,4(r3)
 80186ec:	11000115 	stw	r4,4(r2)
 80186f0:	18c00217 	ldw	r3,8(r3)
 80186f4:	10c00215 	stw	r3,8(r2)
 80186f8:	980b883a 	mov	r5,r19
 80186fc:	9009883a 	mov	r4,r18
 8018700:	8014f440 	call	8014f44 <_free_r>
 8018704:	9009883a 	mov	r4,r18
 8018708:	801d3980 	call	801d398 <__malloc_unlock>
 801870c:	8805883a 	mov	r2,r17
 8018710:	003f9a06 	br	801857c <__alt_data_end+0xfc01857c>
 8018714:	300b883a 	mov	r5,r6
 8018718:	dfc00917 	ldw	ra,36(sp)
 801871c:	df000817 	ldw	fp,32(sp)
 8018720:	ddc00717 	ldw	r23,28(sp)
 8018724:	dd800617 	ldw	r22,24(sp)
 8018728:	dd400517 	ldw	r21,20(sp)
 801872c:	dd000417 	ldw	r20,16(sp)
 8018730:	dcc00317 	ldw	r19,12(sp)
 8018734:	dc800217 	ldw	r18,8(sp)
 8018738:	dc400117 	ldw	r17,4(sp)
 801873c:	dc000017 	ldw	r16,0(sp)
 8018740:	dec00a04 	addi	sp,sp,40
 8018744:	80167501 	jmpi	8016750 <_malloc_r>
 8018748:	11400317 	ldw	r5,12(r2)
 801874c:	10800217 	ldw	r2,8(r2)
 8018750:	9823883a 	mov	r17,r19
 8018754:	2021883a 	mov	r16,r4
 8018758:	11400315 	stw	r5,12(r2)
 801875c:	28800215 	stw	r2,8(r5)
 8018760:	003f7906 	br	8018548 <__alt_data_end+0xfc018548>
 8018764:	21000117 	ldw	r4,4(r4)
 8018768:	00bfff04 	movi	r2,-4
 801876c:	a1800404 	addi	r6,r20,16
 8018770:	2088703a 	and	r4,r4,r2
 8018774:	2409883a 	add	r4,r4,r16
 8018778:	2180380e 	bge	r4,r6,801885c <_realloc_r+0x47c>
 801877c:	18c0004c 	andi	r3,r3,1
 8018780:	183fc51e 	bne	r3,zero,8018698 <__alt_data_end+0xfc018698>
 8018784:	9dfffe17 	ldw	r23,-8(r19)
 8018788:	adefc83a 	sub	r23,r21,r23
 801878c:	b9400117 	ldw	r5,4(r23)
 8018790:	288a703a 	and	r5,r5,r2
 8018794:	216d883a 	add	r22,r4,r5
 8018798:	b1bf8b16 	blt	r22,r6,80185c8 <__alt_data_end+0xfc0185c8>
 801879c:	b8800317 	ldw	r2,12(r23)
 80187a0:	b8c00217 	ldw	r3,8(r23)
 80187a4:	81bfff04 	addi	r6,r16,-4
 80187a8:	01000904 	movi	r4,36
 80187ac:	18800315 	stw	r2,12(r3)
 80187b0:	10c00215 	stw	r3,8(r2)
 80187b4:	bc400204 	addi	r17,r23,8
 80187b8:	21805a36 	bltu	r4,r6,8018924 <_realloc_r+0x544>
 80187bc:	008004c4 	movi	r2,19
 80187c0:	1180562e 	bgeu	r2,r6,801891c <_realloc_r+0x53c>
 80187c4:	98800017 	ldw	r2,0(r19)
 80187c8:	b8800215 	stw	r2,8(r23)
 80187cc:	98800117 	ldw	r2,4(r19)
 80187d0:	b8800315 	stw	r2,12(r23)
 80187d4:	008006c4 	movi	r2,27
 80187d8:	11805636 	bltu	r2,r6,8018934 <_realloc_r+0x554>
 80187dc:	b8800404 	addi	r2,r23,16
 80187e0:	9cc00204 	addi	r19,r19,8
 80187e4:	98c00017 	ldw	r3,0(r19)
 80187e8:	10c00015 	stw	r3,0(r2)
 80187ec:	98c00117 	ldw	r3,4(r19)
 80187f0:	10c00115 	stw	r3,4(r2)
 80187f4:	98c00217 	ldw	r3,8(r19)
 80187f8:	10c00215 	stw	r3,8(r2)
 80187fc:	bd07883a 	add	r3,r23,r20
 8018800:	b505c83a 	sub	r2,r22,r20
 8018804:	e0c00215 	stw	r3,8(fp)
 8018808:	10800054 	ori	r2,r2,1
 801880c:	18800115 	stw	r2,4(r3)
 8018810:	b8800117 	ldw	r2,4(r23)
 8018814:	9009883a 	mov	r4,r18
 8018818:	1080004c 	andi	r2,r2,1
 801881c:	a0a8b03a 	or	r20,r20,r2
 8018820:	bd000115 	stw	r20,4(r23)
 8018824:	801d3980 	call	801d398 <__malloc_unlock>
 8018828:	8805883a 	mov	r2,r17
 801882c:	003f5306 	br	801857c <__alt_data_end+0xfc01857c>
 8018830:	98c00017 	ldw	r3,0(r19)
 8018834:	88c00015 	stw	r3,0(r17)
 8018838:	98c00117 	ldw	r3,4(r19)
 801883c:	88c00115 	stw	r3,4(r17)
 8018840:	00c006c4 	movi	r3,27
 8018844:	19801d36 	bltu	r3,r6,80188bc <_realloc_r+0x4dc>
 8018848:	88800204 	addi	r2,r17,8
 801884c:	98c00204 	addi	r3,r19,8
 8018850:	003fa306 	br	80186e0 <__alt_data_end+0xfc0186e0>
 8018854:	8807883a 	mov	r3,r17
 8018858:	003f7406 	br	801862c <__alt_data_end+0xfc01862c>
 801885c:	ad2b883a 	add	r21,r21,r20
 8018860:	2505c83a 	sub	r2,r4,r20
 8018864:	e5400215 	stw	r21,8(fp)
 8018868:	10800054 	ori	r2,r2,1
 801886c:	a8800115 	stw	r2,4(r21)
 8018870:	98bfff17 	ldw	r2,-4(r19)
 8018874:	9009883a 	mov	r4,r18
 8018878:	1080004c 	andi	r2,r2,1
 801887c:	a0a8b03a 	or	r20,r20,r2
 8018880:	9d3fff15 	stw	r20,-4(r19)
 8018884:	801d3980 	call	801d398 <__malloc_unlock>
 8018888:	9805883a 	mov	r2,r19
 801888c:	003f3b06 	br	801857c <__alt_data_end+0xfc01857c>
 8018890:	8809883a 	mov	r4,r17
 8018894:	980b883a 	mov	r5,r19
 8018898:	80171180 	call	8017118 <memmove>
 801889c:	003f9606 	br	80186f8 <__alt_data_end+0xfc0186f8>
 80188a0:	8809883a 	mov	r4,r17
 80188a4:	980b883a 	mov	r5,r19
 80188a8:	80171180 	call	8017118 <memmove>
 80188ac:	b8c00117 	ldw	r3,4(r23)
 80188b0:	b021883a 	mov	r16,r22
 80188b4:	b82b883a 	mov	r21,r23
 80188b8:	003f2306 	br	8018548 <__alt_data_end+0xfc018548>
 80188bc:	98c00217 	ldw	r3,8(r19)
 80188c0:	88c00215 	stw	r3,8(r17)
 80188c4:	98c00317 	ldw	r3,12(r19)
 80188c8:	88c00315 	stw	r3,12(r17)
 80188cc:	30800c26 	beq	r6,r2,8018900 <_realloc_r+0x520>
 80188d0:	88800404 	addi	r2,r17,16
 80188d4:	98c00404 	addi	r3,r19,16
 80188d8:	003f8106 	br	80186e0 <__alt_data_end+0xfc0186e0>
 80188dc:	893fff17 	ldw	r4,-4(r17)
 80188e0:	00bfff04 	movi	r2,-4
 80188e4:	9823883a 	mov	r17,r19
 80188e8:	2084703a 	and	r2,r4,r2
 80188ec:	80a1883a 	add	r16,r16,r2
 80188f0:	003f1506 	br	8018548 <__alt_data_end+0xfc018548>
 80188f4:	b8c00404 	addi	r3,r23,16
 80188f8:	9cc00204 	addi	r19,r19,8
 80188fc:	003f4b06 	br	801862c <__alt_data_end+0xfc01862c>
 8018900:	99000417 	ldw	r4,16(r19)
 8018904:	88800604 	addi	r2,r17,24
 8018908:	98c00604 	addi	r3,r19,24
 801890c:	89000415 	stw	r4,16(r17)
 8018910:	99000517 	ldw	r4,20(r19)
 8018914:	89000515 	stw	r4,20(r17)
 8018918:	003f7106 	br	80186e0 <__alt_data_end+0xfc0186e0>
 801891c:	8805883a 	mov	r2,r17
 8018920:	003fb006 	br	80187e4 <__alt_data_end+0xfc0187e4>
 8018924:	8809883a 	mov	r4,r17
 8018928:	980b883a 	mov	r5,r19
 801892c:	80171180 	call	8017118 <memmove>
 8018930:	003fb206 	br	80187fc <__alt_data_end+0xfc0187fc>
 8018934:	98800217 	ldw	r2,8(r19)
 8018938:	b8800415 	stw	r2,16(r23)
 801893c:	98800317 	ldw	r2,12(r19)
 8018940:	b8800515 	stw	r2,20(r23)
 8018944:	31000726 	beq	r6,r4,8018964 <_realloc_r+0x584>
 8018948:	b8800604 	addi	r2,r23,24
 801894c:	9cc00404 	addi	r19,r19,16
 8018950:	003fa406 	br	80187e4 <__alt_data_end+0xfc0187e4>
 8018954:	9009883a 	mov	r4,r18
 8018958:	801d3980 	call	801d398 <__malloc_unlock>
 801895c:	0005883a 	mov	r2,zero
 8018960:	003f0606 	br	801857c <__alt_data_end+0xfc01857c>
 8018964:	98c00417 	ldw	r3,16(r19)
 8018968:	9cc00604 	addi	r19,r19,24
 801896c:	b8800804 	addi	r2,r23,32
 8018970:	b8c00615 	stw	r3,24(r23)
 8018974:	98ffff17 	ldw	r3,-4(r19)
 8018978:	b8c00715 	stw	r3,28(r23)
 801897c:	003f9906 	br	80187e4 <__alt_data_end+0xfc0187e4>

08018980 <_sbrk_r>:
 8018980:	defffd04 	addi	sp,sp,-12
 8018984:	dc000015 	stw	r16,0(sp)
 8018988:	040200b4 	movhi	r16,2050
 801898c:	dc400115 	stw	r17,4(sp)
 8018990:	840ffd04 	addi	r16,r16,16372
 8018994:	2023883a 	mov	r17,r4
 8018998:	2809883a 	mov	r4,r5
 801899c:	dfc00215 	stw	ra,8(sp)
 80189a0:	80000015 	stw	zero,0(r16)
 80189a4:	801d58c0 	call	801d58c <sbrk>
 80189a8:	00ffffc4 	movi	r3,-1
 80189ac:	10c00526 	beq	r2,r3,80189c4 <_sbrk_r+0x44>
 80189b0:	dfc00217 	ldw	ra,8(sp)
 80189b4:	dc400117 	ldw	r17,4(sp)
 80189b8:	dc000017 	ldw	r16,0(sp)
 80189bc:	dec00304 	addi	sp,sp,12
 80189c0:	f800283a 	ret
 80189c4:	80c00017 	ldw	r3,0(r16)
 80189c8:	183ff926 	beq	r3,zero,80189b0 <__alt_data_end+0xfc0189b0>
 80189cc:	88c00015 	stw	r3,0(r17)
 80189d0:	003ff706 	br	80189b0 <__alt_data_end+0xfc0189b0>

080189d4 <__sread>:
 80189d4:	defffe04 	addi	sp,sp,-8
 80189d8:	dc000015 	stw	r16,0(sp)
 80189dc:	2821883a 	mov	r16,r5
 80189e0:	2940038f 	ldh	r5,14(r5)
 80189e4:	dfc00115 	stw	ra,4(sp)
 80189e8:	801bae80 	call	801bae8 <_read_r>
 80189ec:	10000716 	blt	r2,zero,8018a0c <__sread+0x38>
 80189f0:	80c01417 	ldw	r3,80(r16)
 80189f4:	1887883a 	add	r3,r3,r2
 80189f8:	80c01415 	stw	r3,80(r16)
 80189fc:	dfc00117 	ldw	ra,4(sp)
 8018a00:	dc000017 	ldw	r16,0(sp)
 8018a04:	dec00204 	addi	sp,sp,8
 8018a08:	f800283a 	ret
 8018a0c:	80c0030b 	ldhu	r3,12(r16)
 8018a10:	18fbffcc 	andi	r3,r3,61439
 8018a14:	80c0030d 	sth	r3,12(r16)
 8018a18:	dfc00117 	ldw	ra,4(sp)
 8018a1c:	dc000017 	ldw	r16,0(sp)
 8018a20:	dec00204 	addi	sp,sp,8
 8018a24:	f800283a 	ret

08018a28 <__seofread>:
 8018a28:	0005883a 	mov	r2,zero
 8018a2c:	f800283a 	ret

08018a30 <__swrite>:
 8018a30:	2880030b 	ldhu	r2,12(r5)
 8018a34:	defffb04 	addi	sp,sp,-20
 8018a38:	dcc00315 	stw	r19,12(sp)
 8018a3c:	dc800215 	stw	r18,8(sp)
 8018a40:	dc400115 	stw	r17,4(sp)
 8018a44:	dc000015 	stw	r16,0(sp)
 8018a48:	dfc00415 	stw	ra,16(sp)
 8018a4c:	10c0400c 	andi	r3,r2,256
 8018a50:	2821883a 	mov	r16,r5
 8018a54:	2027883a 	mov	r19,r4
 8018a58:	3025883a 	mov	r18,r6
 8018a5c:	3823883a 	mov	r17,r7
 8018a60:	18000526 	beq	r3,zero,8018a78 <__swrite+0x48>
 8018a64:	2940038f 	ldh	r5,14(r5)
 8018a68:	000d883a 	mov	r6,zero
 8018a6c:	01c00084 	movi	r7,2
 8018a70:	801ba8c0 	call	801ba8c <_lseek_r>
 8018a74:	8080030b 	ldhu	r2,12(r16)
 8018a78:	8140038f 	ldh	r5,14(r16)
 8018a7c:	10bbffcc 	andi	r2,r2,61439
 8018a80:	9809883a 	mov	r4,r19
 8018a84:	900d883a 	mov	r6,r18
 8018a88:	880f883a 	mov	r7,r17
 8018a8c:	8080030d 	sth	r2,12(r16)
 8018a90:	dfc00417 	ldw	ra,16(sp)
 8018a94:	dcc00317 	ldw	r19,12(sp)
 8018a98:	dc800217 	ldw	r18,8(sp)
 8018a9c:	dc400117 	ldw	r17,4(sp)
 8018aa0:	dc000017 	ldw	r16,0(sp)
 8018aa4:	dec00504 	addi	sp,sp,20
 8018aa8:	801b5681 	jmpi	801b568 <_write_r>

08018aac <__sseek>:
 8018aac:	defffe04 	addi	sp,sp,-8
 8018ab0:	dc000015 	stw	r16,0(sp)
 8018ab4:	2821883a 	mov	r16,r5
 8018ab8:	2940038f 	ldh	r5,14(r5)
 8018abc:	dfc00115 	stw	ra,4(sp)
 8018ac0:	801ba8c0 	call	801ba8c <_lseek_r>
 8018ac4:	00ffffc4 	movi	r3,-1
 8018ac8:	10c00826 	beq	r2,r3,8018aec <__sseek+0x40>
 8018acc:	80c0030b 	ldhu	r3,12(r16)
 8018ad0:	80801415 	stw	r2,80(r16)
 8018ad4:	18c40014 	ori	r3,r3,4096
 8018ad8:	80c0030d 	sth	r3,12(r16)
 8018adc:	dfc00117 	ldw	ra,4(sp)
 8018ae0:	dc000017 	ldw	r16,0(sp)
 8018ae4:	dec00204 	addi	sp,sp,8
 8018ae8:	f800283a 	ret
 8018aec:	80c0030b 	ldhu	r3,12(r16)
 8018af0:	18fbffcc 	andi	r3,r3,61439
 8018af4:	80c0030d 	sth	r3,12(r16)
 8018af8:	dfc00117 	ldw	ra,4(sp)
 8018afc:	dc000017 	ldw	r16,0(sp)
 8018b00:	dec00204 	addi	sp,sp,8
 8018b04:	f800283a 	ret

08018b08 <__sclose>:
 8018b08:	2940038f 	ldh	r5,14(r5)
 8018b0c:	801b5c41 	jmpi	801b5c4 <_close_r>

08018b10 <strcmp>:
 8018b10:	2144b03a 	or	r2,r4,r5
 8018b14:	108000cc 	andi	r2,r2,3
 8018b18:	1000171e 	bne	r2,zero,8018b78 <strcmp+0x68>
 8018b1c:	20800017 	ldw	r2,0(r4)
 8018b20:	28c00017 	ldw	r3,0(r5)
 8018b24:	10c0141e 	bne	r2,r3,8018b78 <strcmp+0x68>
 8018b28:	027fbff4 	movhi	r9,65279
 8018b2c:	4a7fbfc4 	addi	r9,r9,-257
 8018b30:	0086303a 	nor	r3,zero,r2
 8018b34:	02202074 	movhi	r8,32897
 8018b38:	1245883a 	add	r2,r2,r9
 8018b3c:	42202004 	addi	r8,r8,-32640
 8018b40:	10c4703a 	and	r2,r2,r3
 8018b44:	1204703a 	and	r2,r2,r8
 8018b48:	10000226 	beq	r2,zero,8018b54 <strcmp+0x44>
 8018b4c:	00001706 	br	8018bac <strcmp+0x9c>
 8018b50:	1000161e 	bne	r2,zero,8018bac <strcmp+0x9c>
 8018b54:	21000104 	addi	r4,r4,4
 8018b58:	20c00017 	ldw	r3,0(r4)
 8018b5c:	29400104 	addi	r5,r5,4
 8018b60:	29800017 	ldw	r6,0(r5)
 8018b64:	1a4f883a 	add	r7,r3,r9
 8018b68:	00c4303a 	nor	r2,zero,r3
 8018b6c:	3884703a 	and	r2,r7,r2
 8018b70:	1204703a 	and	r2,r2,r8
 8018b74:	19bff626 	beq	r3,r6,8018b50 <__alt_data_end+0xfc018b50>
 8018b78:	20800007 	ldb	r2,0(r4)
 8018b7c:	1000051e 	bne	r2,zero,8018b94 <strcmp+0x84>
 8018b80:	00000606 	br	8018b9c <strcmp+0x8c>
 8018b84:	21000044 	addi	r4,r4,1
 8018b88:	20800007 	ldb	r2,0(r4)
 8018b8c:	29400044 	addi	r5,r5,1
 8018b90:	10000226 	beq	r2,zero,8018b9c <strcmp+0x8c>
 8018b94:	28c00007 	ldb	r3,0(r5)
 8018b98:	10fffa26 	beq	r2,r3,8018b84 <__alt_data_end+0xfc018b84>
 8018b9c:	20800003 	ldbu	r2,0(r4)
 8018ba0:	28c00003 	ldbu	r3,0(r5)
 8018ba4:	10c5c83a 	sub	r2,r2,r3
 8018ba8:	f800283a 	ret
 8018bac:	0005883a 	mov	r2,zero
 8018bb0:	f800283a 	ret

08018bb4 <strncmp>:
 8018bb4:	30002126 	beq	r6,zero,8018c3c <strncmp+0x88>
 8018bb8:	2144b03a 	or	r2,r4,r5
 8018bbc:	108000cc 	andi	r2,r2,3
 8018bc0:	1000241e 	bne	r2,zero,8018c54 <strncmp+0xa0>
 8018bc4:	024000c4 	movi	r9,3
 8018bc8:	4980222e 	bgeu	r9,r6,8018c54 <strncmp+0xa0>
 8018bcc:	20800017 	ldw	r2,0(r4)
 8018bd0:	28c00017 	ldw	r3,0(r5)
 8018bd4:	10c01f1e 	bne	r2,r3,8018c54 <strncmp+0xa0>
 8018bd8:	31bfff04 	addi	r6,r6,-4
 8018bdc:	30001726 	beq	r6,zero,8018c3c <strncmp+0x88>
 8018be0:	02ffbff4 	movhi	r11,65279
 8018be4:	5affbfc4 	addi	r11,r11,-257
 8018be8:	0086303a 	nor	r3,zero,r2
 8018bec:	02a02074 	movhi	r10,32897
 8018bf0:	12c5883a 	add	r2,r2,r11
 8018bf4:	52a02004 	addi	r10,r10,-32640
 8018bf8:	10c4703a 	and	r2,r2,r3
 8018bfc:	1284703a 	and	r2,r2,r10
 8018c00:	10000226 	beq	r2,zero,8018c0c <strncmp+0x58>
 8018c04:	00000d06 	br	8018c3c <strncmp+0x88>
 8018c08:	10000c1e 	bne	r2,zero,8018c3c <strncmp+0x88>
 8018c0c:	21000104 	addi	r4,r4,4
 8018c10:	29400104 	addi	r5,r5,4
 8018c14:	49800f2e 	bgeu	r9,r6,8018c54 <strncmp+0xa0>
 8018c18:	20c00017 	ldw	r3,0(r4)
 8018c1c:	29c00017 	ldw	r7,0(r5)
 8018c20:	1ad1883a 	add	r8,r3,r11
 8018c24:	00c4303a 	nor	r2,zero,r3
 8018c28:	4084703a 	and	r2,r8,r2
 8018c2c:	1284703a 	and	r2,r2,r10
 8018c30:	19c0081e 	bne	r3,r7,8018c54 <strncmp+0xa0>
 8018c34:	31bfff04 	addi	r6,r6,-4
 8018c38:	303ff31e 	bne	r6,zero,8018c08 <__alt_data_end+0xfc018c08>
 8018c3c:	0005883a 	mov	r2,zero
 8018c40:	f800283a 	ret
 8018c44:	303ffd26 	beq	r6,zero,8018c3c <__alt_data_end+0xfc018c3c>
 8018c48:	103ffc26 	beq	r2,zero,8018c3c <__alt_data_end+0xfc018c3c>
 8018c4c:	21000044 	addi	r4,r4,1
 8018c50:	29400044 	addi	r5,r5,1
 8018c54:	20800007 	ldb	r2,0(r4)
 8018c58:	28c00007 	ldb	r3,0(r5)
 8018c5c:	31bfffc4 	addi	r6,r6,-1
 8018c60:	10fff826 	beq	r2,r3,8018c44 <__alt_data_end+0xfc018c44>
 8018c64:	20800003 	ldbu	r2,0(r4)
 8018c68:	28c00003 	ldbu	r3,0(r5)
 8018c6c:	10c5c83a 	sub	r2,r2,r3
 8018c70:	f800283a 	ret

08018c74 <__ssprint_r>:
 8018c74:	30800217 	ldw	r2,8(r6)
 8018c78:	defff604 	addi	sp,sp,-40
 8018c7c:	ddc00715 	stw	r23,28(sp)
 8018c80:	dcc00315 	stw	r19,12(sp)
 8018c84:	dfc00915 	stw	ra,36(sp)
 8018c88:	df000815 	stw	fp,32(sp)
 8018c8c:	dd800615 	stw	r22,24(sp)
 8018c90:	dd400515 	stw	r21,20(sp)
 8018c94:	dd000415 	stw	r20,16(sp)
 8018c98:	dc800215 	stw	r18,8(sp)
 8018c9c:	dc400115 	stw	r17,4(sp)
 8018ca0:	dc000015 	stw	r16,0(sp)
 8018ca4:	3027883a 	mov	r19,r6
 8018ca8:	35c00017 	ldw	r23,0(r6)
 8018cac:	10005526 	beq	r2,zero,8018e04 <__ssprint_r+0x190>
 8018cb0:	2029883a 	mov	r20,r4
 8018cb4:	29000017 	ldw	r4,0(r5)
 8018cb8:	2821883a 	mov	r16,r5
 8018cbc:	0039883a 	mov	fp,zero
 8018cc0:	0023883a 	mov	r17,zero
 8018cc4:	88003926 	beq	r17,zero,8018dac <__ssprint_r+0x138>
 8018cc8:	84800217 	ldw	r18,8(r16)
 8018ccc:	902d883a 	mov	r22,r18
 8018cd0:	8c803a36 	bltu	r17,r18,8018dbc <__ssprint_r+0x148>
 8018cd4:	80c0030b 	ldhu	r3,12(r16)
 8018cd8:	1881200c 	andi	r2,r3,1152
 8018cdc:	10002626 	beq	r2,zero,8018d78 <__ssprint_r+0x104>
 8018ce0:	80800517 	ldw	r2,20(r16)
 8018ce4:	81400417 	ldw	r5,16(r16)
 8018ce8:	89c00044 	addi	r7,r17,1
 8018cec:	108d883a 	add	r6,r2,r2
 8018cf0:	3085883a 	add	r2,r6,r2
 8018cf4:	100cd7fa 	srli	r6,r2,31
 8018cf8:	216dc83a 	sub	r22,r4,r5
 8018cfc:	3d89883a 	add	r4,r7,r22
 8018d00:	3085883a 	add	r2,r6,r2
 8018d04:	1025d07a 	srai	r18,r2,1
 8018d08:	900d883a 	mov	r6,r18
 8018d0c:	9100022e 	bgeu	r18,r4,8018d18 <__ssprint_r+0xa4>
 8018d10:	2025883a 	mov	r18,r4
 8018d14:	200d883a 	mov	r6,r4
 8018d18:	18c1000c 	andi	r3,r3,1024
 8018d1c:	a009883a 	mov	r4,r20
 8018d20:	18002926 	beq	r3,zero,8018dc8 <__ssprint_r+0x154>
 8018d24:	300b883a 	mov	r5,r6
 8018d28:	80167500 	call	8016750 <_malloc_r>
 8018d2c:	102b883a 	mov	r21,r2
 8018d30:	10002b26 	beq	r2,zero,8018de0 <__ssprint_r+0x16c>
 8018d34:	81400417 	ldw	r5,16(r16)
 8018d38:	1009883a 	mov	r4,r2
 8018d3c:	b00d883a 	mov	r6,r22
 8018d40:	8016fe00 	call	8016fe0 <memcpy>
 8018d44:	8080030b 	ldhu	r2,12(r16)
 8018d48:	00fedfc4 	movi	r3,-1153
 8018d4c:	10c4703a 	and	r2,r2,r3
 8018d50:	10802014 	ori	r2,r2,128
 8018d54:	8080030d 	sth	r2,12(r16)
 8018d58:	ad89883a 	add	r4,r21,r22
 8018d5c:	95adc83a 	sub	r22,r18,r22
 8018d60:	84800515 	stw	r18,20(r16)
 8018d64:	85800215 	stw	r22,8(r16)
 8018d68:	85400415 	stw	r21,16(r16)
 8018d6c:	81000015 	stw	r4,0(r16)
 8018d70:	8825883a 	mov	r18,r17
 8018d74:	882d883a 	mov	r22,r17
 8018d78:	e00b883a 	mov	r5,fp
 8018d7c:	b00d883a 	mov	r6,r22
 8018d80:	80171180 	call	8017118 <memmove>
 8018d84:	80c00217 	ldw	r3,8(r16)
 8018d88:	81000017 	ldw	r4,0(r16)
 8018d8c:	98800217 	ldw	r2,8(r19)
 8018d90:	1ca5c83a 	sub	r18,r3,r18
 8018d94:	2589883a 	add	r4,r4,r22
 8018d98:	84800215 	stw	r18,8(r16)
 8018d9c:	81000015 	stw	r4,0(r16)
 8018da0:	1463c83a 	sub	r17,r2,r17
 8018da4:	9c400215 	stw	r17,8(r19)
 8018da8:	88001626 	beq	r17,zero,8018e04 <__ssprint_r+0x190>
 8018dac:	bf000017 	ldw	fp,0(r23)
 8018db0:	bc400117 	ldw	r17,4(r23)
 8018db4:	bdc00204 	addi	r23,r23,8
 8018db8:	003fc206 	br	8018cc4 <__alt_data_end+0xfc018cc4>
 8018dbc:	8825883a 	mov	r18,r17
 8018dc0:	882d883a 	mov	r22,r17
 8018dc4:	003fec06 	br	8018d78 <__alt_data_end+0xfc018d78>
 8018dc8:	80183e00 	call	80183e0 <_realloc_r>
 8018dcc:	102b883a 	mov	r21,r2
 8018dd0:	103fe11e 	bne	r2,zero,8018d58 <__alt_data_end+0xfc018d58>
 8018dd4:	81400417 	ldw	r5,16(r16)
 8018dd8:	a009883a 	mov	r4,r20
 8018ddc:	8014f440 	call	8014f44 <_free_r>
 8018de0:	80c0030b 	ldhu	r3,12(r16)
 8018de4:	00800304 	movi	r2,12
 8018de8:	a0800015 	stw	r2,0(r20)
 8018dec:	18c01014 	ori	r3,r3,64
 8018df0:	80c0030d 	sth	r3,12(r16)
 8018df4:	00bfffc4 	movi	r2,-1
 8018df8:	98000215 	stw	zero,8(r19)
 8018dfc:	98000115 	stw	zero,4(r19)
 8018e00:	00000206 	br	8018e0c <__ssprint_r+0x198>
 8018e04:	98000115 	stw	zero,4(r19)
 8018e08:	0005883a 	mov	r2,zero
 8018e0c:	dfc00917 	ldw	ra,36(sp)
 8018e10:	df000817 	ldw	fp,32(sp)
 8018e14:	ddc00717 	ldw	r23,28(sp)
 8018e18:	dd800617 	ldw	r22,24(sp)
 8018e1c:	dd400517 	ldw	r21,20(sp)
 8018e20:	dd000417 	ldw	r20,16(sp)
 8018e24:	dcc00317 	ldw	r19,12(sp)
 8018e28:	dc800217 	ldw	r18,8(sp)
 8018e2c:	dc400117 	ldw	r17,4(sp)
 8018e30:	dc000017 	ldw	r16,0(sp)
 8018e34:	dec00a04 	addi	sp,sp,40
 8018e38:	f800283a 	ret

08018e3c <___svfiprintf_internal_r>:
 8018e3c:	2880030b 	ldhu	r2,12(r5)
 8018e40:	deffc804 	addi	sp,sp,-224
 8018e44:	dd403315 	stw	r21,204(sp)
 8018e48:	dfc03715 	stw	ra,220(sp)
 8018e4c:	df003615 	stw	fp,216(sp)
 8018e50:	ddc03515 	stw	r23,212(sp)
 8018e54:	dd803415 	stw	r22,208(sp)
 8018e58:	dd003215 	stw	r20,200(sp)
 8018e5c:	dcc03115 	stw	r19,196(sp)
 8018e60:	dc803015 	stw	r18,192(sp)
 8018e64:	dc402f15 	stw	r17,188(sp)
 8018e68:	dc002e15 	stw	r16,184(sp)
 8018e6c:	d9402215 	stw	r5,136(sp)
 8018e70:	d9002915 	stw	r4,164(sp)
 8018e74:	1080200c 	andi	r2,r2,128
 8018e78:	d9c02415 	stw	r7,144(sp)
 8018e7c:	302b883a 	mov	r21,r6
 8018e80:	10000226 	beq	r2,zero,8018e8c <___svfiprintf_internal_r+0x50>
 8018e84:	28800417 	ldw	r2,16(r5)
 8018e88:	10042526 	beq	r2,zero,8019f20 <___svfiprintf_internal_r+0x10e4>
 8018e8c:	d8801a04 	addi	r2,sp,104
 8018e90:	d8c019c4 	addi	r3,sp,103
 8018e94:	dc402917 	ldw	r17,164(sp)
 8018e98:	04c200b4 	movhi	r19,2050
 8018e9c:	10c9c83a 	sub	r4,r2,r3
 8018ea0:	9cc22004 	addi	r19,r19,2176
 8018ea4:	d8801e15 	stw	r2,120(sp)
 8018ea8:	d8c01f15 	stw	r3,124(sp)
 8018eac:	dec01a15 	stw	sp,104(sp)
 8018eb0:	d8001c15 	stw	zero,112(sp)
 8018eb4:	d8001b15 	stw	zero,108(sp)
 8018eb8:	d8002a15 	stw	zero,168(sp)
 8018ebc:	d8002615 	stw	zero,152(sp)
 8018ec0:	d811883a 	mov	r8,sp
 8018ec4:	d9002c15 	stw	r4,176(sp)
 8018ec8:	a8800007 	ldb	r2,0(r21)
 8018ecc:	1002af26 	beq	r2,zero,801998c <___svfiprintf_internal_r+0xb50>
 8018ed0:	01000944 	movi	r4,37
 8018ed4:	1102ad26 	beq	r2,r4,801998c <___svfiprintf_internal_r+0xb50>
 8018ed8:	a805883a 	mov	r2,r21
 8018edc:	00000106 	br	8018ee4 <___svfiprintf_internal_r+0xa8>
 8018ee0:	19000326 	beq	r3,r4,8018ef0 <___svfiprintf_internal_r+0xb4>
 8018ee4:	10800044 	addi	r2,r2,1
 8018ee8:	10c00007 	ldb	r3,0(r2)
 8018eec:	183ffc1e 	bne	r3,zero,8018ee0 <__alt_data_end+0xfc018ee0>
 8018ef0:	1561c83a 	sub	r16,r2,r21
 8018ef4:	1025883a 	mov	r18,r2
 8018ef8:	80000e26 	beq	r16,zero,8018f34 <___svfiprintf_internal_r+0xf8>
 8018efc:	d8c01c17 	ldw	r3,112(sp)
 8018f00:	d8801b17 	ldw	r2,108(sp)
 8018f04:	45400015 	stw	r21,0(r8)
 8018f08:	1c07883a 	add	r3,r3,r16
 8018f0c:	10800044 	addi	r2,r2,1
 8018f10:	d8c01c15 	stw	r3,112(sp)
 8018f14:	44000115 	stw	r16,4(r8)
 8018f18:	d8801b15 	stw	r2,108(sp)
 8018f1c:	00c001c4 	movi	r3,7
 8018f20:	18832616 	blt	r3,r2,8019bbc <___svfiprintf_internal_r+0xd80>
 8018f24:	42000204 	addi	r8,r8,8
 8018f28:	d9402617 	ldw	r5,152(sp)
 8018f2c:	2c0b883a 	add	r5,r5,r16
 8018f30:	d9402615 	stw	r5,152(sp)
 8018f34:	90800007 	ldb	r2,0(r18)
 8018f38:	1002b226 	beq	r2,zero,8019a04 <___svfiprintf_internal_r+0xbc8>
 8018f3c:	00bfffc4 	movi	r2,-1
 8018f40:	95400044 	addi	r21,r18,1
 8018f44:	91800047 	ldb	r6,1(r18)
 8018f48:	d8001d85 	stb	zero,118(sp)
 8018f4c:	002d883a 	mov	r22,zero
 8018f50:	d8802015 	stw	r2,128(sp)
 8018f54:	d8002315 	stw	zero,140(sp)
 8018f58:	0021883a 	mov	r16,zero
 8018f5c:	04801604 	movi	r18,88
 8018f60:	05000244 	movi	r20,9
 8018f64:	402f883a 	mov	r23,r8
 8018f68:	ad400044 	addi	r21,r21,1
 8018f6c:	30bff804 	addi	r2,r6,-32
 8018f70:	9081ae36 	bltu	r18,r2,801962c <___svfiprintf_internal_r+0x7f0>
 8018f74:	100490ba 	slli	r2,r2,2
 8018f78:	00c200b4 	movhi	r3,2050
 8018f7c:	18e3e304 	addi	r3,r3,-28788
 8018f80:	10c5883a 	add	r2,r2,r3
 8018f84:	10800017 	ldw	r2,0(r2)
 8018f88:	1000683a 	jmp	r2
 8018f8c:	0801913c 	xorhi	zero,at,1604
 8018f90:	0801962c 	andhi	zero,at,1624
 8018f94:	0801962c 	andhi	zero,at,1624
 8018f98:	08019130 	cmpltui	zero,at,1604
 8018f9c:	0801962c 	andhi	zero,at,1624
 8018fa0:	0801962c 	andhi	zero,at,1624
 8018fa4:	0801962c 	andhi	zero,at,1624
 8018fa8:	0801962c 	andhi	zero,at,1624
 8018fac:	0801962c 	andhi	zero,at,1624
 8018fb0:	0801962c 	andhi	zero,at,1624
 8018fb4:	080190f0 	cmpltui	zero,at,1603
 8018fb8:	08019124 	muli	zero,at,1604
 8018fbc:	0801962c 	andhi	zero,at,1624
 8018fc0:	08019118 	cmpnei	zero,at,1604
 8018fc4:	08019660 	cmpeqi	zero,at,1625
 8018fc8:	0801962c 	andhi	zero,at,1624
 8018fcc:	08019654 	ori	zero,at,1625
 8018fd0:	080195e8 	cmpgeui	zero,at,1623
 8018fd4:	080195e8 	cmpgeui	zero,at,1623
 8018fd8:	080195e8 	cmpgeui	zero,at,1623
 8018fdc:	080195e8 	cmpgeui	zero,at,1623
 8018fe0:	080195e8 	cmpgeui	zero,at,1623
 8018fe4:	080195e8 	cmpgeui	zero,at,1623
 8018fe8:	080195e8 	cmpgeui	zero,at,1623
 8018fec:	080195e8 	cmpgeui	zero,at,1623
 8018ff0:	080195e8 	cmpgeui	zero,at,1623
 8018ff4:	0801962c 	andhi	zero,at,1624
 8018ff8:	0801962c 	andhi	zero,at,1624
 8018ffc:	0801962c 	andhi	zero,at,1624
 8019000:	0801962c 	andhi	zero,at,1624
 8019004:	0801962c 	andhi	zero,at,1624
 8019008:	0801962c 	andhi	zero,at,1624
 801900c:	0801962c 	andhi	zero,at,1624
 8019010:	0801962c 	andhi	zero,at,1624
 8019014:	0801962c 	andhi	zero,at,1624
 8019018:	0801962c 	andhi	zero,at,1624
 801901c:	0801957c 	xorhi	zero,at,1621
 8019020:	0801962c 	andhi	zero,at,1624
 8019024:	0801962c 	andhi	zero,at,1624
 8019028:	0801962c 	andhi	zero,at,1624
 801902c:	0801962c 	andhi	zero,at,1624
 8019030:	0801962c 	andhi	zero,at,1624
 8019034:	0801962c 	andhi	zero,at,1624
 8019038:	0801962c 	andhi	zero,at,1624
 801903c:	0801962c 	andhi	zero,at,1624
 8019040:	0801962c 	andhi	zero,at,1624
 8019044:	0801962c 	andhi	zero,at,1624
 8019048:	080196ec 	andhi	zero,at,1627
 801904c:	0801962c 	andhi	zero,at,1624
 8019050:	0801962c 	andhi	zero,at,1624
 8019054:	0801962c 	andhi	zero,at,1624
 8019058:	0801962c 	andhi	zero,at,1624
 801905c:	0801962c 	andhi	zero,at,1624
 8019060:	080196a8 	cmpgeui	zero,at,1626
 8019064:	0801962c 	andhi	zero,at,1624
 8019068:	0801962c 	andhi	zero,at,1624
 801906c:	08019534 	orhi	zero,at,1620
 8019070:	0801962c 	andhi	zero,at,1624
 8019074:	0801962c 	andhi	zero,at,1624
 8019078:	0801962c 	andhi	zero,at,1624
 801907c:	0801962c 	andhi	zero,at,1624
 8019080:	0801962c 	andhi	zero,at,1624
 8019084:	0801962c 	andhi	zero,at,1624
 8019088:	0801962c 	andhi	zero,at,1624
 801908c:	0801962c 	andhi	zero,at,1624
 8019090:	0801962c 	andhi	zero,at,1624
 8019094:	0801962c 	andhi	zero,at,1624
 8019098:	080193fc 	xorhi	zero,at,1615
 801909c:	080193a0 	cmpeqi	zero,at,1614
 80190a0:	0801962c 	andhi	zero,at,1624
 80190a4:	0801962c 	andhi	zero,at,1624
 80190a8:	0801962c 	andhi	zero,at,1624
 80190ac:	08019394 	ori	zero,at,1614
 80190b0:	080193a0 	cmpeqi	zero,at,1614
 80190b4:	0801962c 	andhi	zero,at,1624
 80190b8:	0801962c 	andhi	zero,at,1624
 80190bc:	080193e4 	muli	zero,at,1615
 80190c0:	0801962c 	andhi	zero,at,1624
 80190c4:	08019360 	cmpeqi	zero,at,1613
 80190c8:	08019330 	cmpltui	zero,at,1612
 80190cc:	080192e8 	cmpgeui	zero,at,1611
 80190d0:	080192dc 	xori	zero,at,1611
 80190d4:	0801962c 	andhi	zero,at,1624
 80190d8:	08019274 	orhi	zero,at,1609
 80190dc:	0801962c 	andhi	zero,at,1624
 80190e0:	080191a4 	muli	zero,at,1606
 80190e4:	0801962c 	andhi	zero,at,1624
 80190e8:	0801962c 	andhi	zero,at,1624
 80190ec:	08019158 	cmpnei	zero,at,1605
 80190f0:	d9402417 	ldw	r5,144(sp)
 80190f4:	d8c02417 	ldw	r3,144(sp)
 80190f8:	29400017 	ldw	r5,0(r5)
 80190fc:	18800104 	addi	r2,r3,4
 8019100:	d9402315 	stw	r5,140(sp)
 8019104:	2802f70e 	bge	r5,zero,8019ce4 <___svfiprintf_internal_r+0xea8>
 8019108:	d9002317 	ldw	r4,140(sp)
 801910c:	d8802415 	stw	r2,144(sp)
 8019110:	0109c83a 	sub	r4,zero,r4
 8019114:	d9002315 	stw	r4,140(sp)
 8019118:	84000114 	ori	r16,r16,4
 801911c:	a9800007 	ldb	r6,0(r21)
 8019120:	003f9106 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019124:	05800ac4 	movi	r22,43
 8019128:	a9800007 	ldb	r6,0(r21)
 801912c:	003f8e06 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019130:	84000054 	ori	r16,r16,1
 8019134:	a9800007 	ldb	r6,0(r21)
 8019138:	003f8b06 	br	8018f68 <__alt_data_end+0xfc018f68>
 801913c:	b0803fcc 	andi	r2,r22,255
 8019140:	1080201c 	xori	r2,r2,128
 8019144:	10bfe004 	addi	r2,r2,-128
 8019148:	1003221e 	bne	r2,zero,8019dd4 <___svfiprintf_internal_r+0xf98>
 801914c:	05800804 	movi	r22,32
 8019150:	a9800007 	ldb	r6,0(r21)
 8019154:	003f8406 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019158:	014200b4 	movhi	r5,2050
 801915c:	29411204 	addi	r5,r5,1096
 8019160:	d9402a15 	stw	r5,168(sp)
 8019164:	dd801d85 	stb	r22,118(sp)
 8019168:	80c0080c 	andi	r3,r16,32
 801916c:	b811883a 	mov	r8,r23
 8019170:	d8802417 	ldw	r2,144(sp)
 8019174:	1800f726 	beq	r3,zero,8019554 <___svfiprintf_internal_r+0x718>
 8019178:	d8c02417 	ldw	r3,144(sp)
 801917c:	14800017 	ldw	r18,0(r2)
 8019180:	15800117 	ldw	r22,4(r2)
 8019184:	18c00204 	addi	r3,r3,8
 8019188:	d8c02415 	stw	r3,144(sp)
 801918c:	8080004c 	andi	r2,r16,1
 8019190:	1002bd26 	beq	r2,zero,8019c88 <___svfiprintf_internal_r+0xe4c>
 8019194:	9586b03a 	or	r3,r18,r22
 8019198:	1803081e 	bne	r3,zero,8019dbc <___svfiprintf_internal_r+0xf80>
 801919c:	00800084 	movi	r2,2
 80191a0:	00000b06 	br	80191d0 <___svfiprintf_internal_r+0x394>
 80191a4:	80c0080c 	andi	r3,r16,32
 80191a8:	b811883a 	mov	r8,r23
 80191ac:	d8802417 	ldw	r2,144(sp)
 80191b0:	18014226 	beq	r3,zero,80196bc <___svfiprintf_internal_r+0x880>
 80191b4:	d9402417 	ldw	r5,144(sp)
 80191b8:	14800017 	ldw	r18,0(r2)
 80191bc:	15800117 	ldw	r22,4(r2)
 80191c0:	29400204 	addi	r5,r5,8
 80191c4:	d9402415 	stw	r5,144(sp)
 80191c8:	00800044 	movi	r2,1
 80191cc:	9586b03a 	or	r3,r18,r22
 80191d0:	dd002017 	ldw	r20,128(sp)
 80191d4:	d8001d85 	stb	zero,118(sp)
 80191d8:	002f883a 	mov	r23,zero
 80191dc:	d9002017 	ldw	r4,128(sp)
 80191e0:	20000216 	blt	r4,zero,80191ec <___svfiprintf_internal_r+0x3b0>
 80191e4:	013fdfc4 	movi	r4,-129
 80191e8:	8120703a 	and	r16,r16,r4
 80191ec:	1801e91e 	bne	r3,zero,8019994 <___svfiprintf_internal_r+0xb58>
 80191f0:	d9402017 	ldw	r5,128(sp)
 80191f4:	28025f26 	beq	r5,zero,8019b74 <___svfiprintf_internal_r+0xd38>
 80191f8:	10803fcc 	andi	r2,r2,255
 80191fc:	00c00044 	movi	r3,1
 8019200:	10c2b226 	beq	r2,r3,8019ccc <___svfiprintf_internal_r+0xe90>
 8019204:	00c00084 	movi	r3,2
 8019208:	10c27c26 	beq	r2,r3,8019bfc <___svfiprintf_internal_r+0xdc0>
 801920c:	d8c01a04 	addi	r3,sp,104
 8019210:	9008d0fa 	srli	r4,r18,3
 8019214:	b00a977a 	slli	r5,r22,29
 8019218:	b02cd0fa 	srli	r22,r22,3
 801921c:	948001cc 	andi	r18,r18,7
 8019220:	90800c04 	addi	r2,r18,48
 8019224:	18ffffc4 	addi	r3,r3,-1
 8019228:	2924b03a 	or	r18,r5,r4
 801922c:	18800005 	stb	r2,0(r3)
 8019230:	9588b03a 	or	r4,r18,r22
 8019234:	203ff61e 	bne	r4,zero,8019210 <__alt_data_end+0xfc019210>
 8019238:	8100004c 	andi	r4,r16,1
 801923c:	d8c02715 	stw	r3,156(sp)
 8019240:	20029d26 	beq	r4,zero,8019cb8 <___svfiprintf_internal_r+0xe7c>
 8019244:	10803fcc 	andi	r2,r2,255
 8019248:	1080201c 	xori	r2,r2,128
 801924c:	10bfe004 	addi	r2,r2,-128
 8019250:	01000c04 	movi	r4,48
 8019254:	11031826 	beq	r2,r4,8019eb8 <___svfiprintf_internal_r+0x107c>
 8019258:	d9402717 	ldw	r5,156(sp)
 801925c:	d8801e17 	ldw	r2,120(sp)
 8019260:	193fffc5 	stb	r4,-1(r3)
 8019264:	297fffc4 	addi	r5,r5,-1
 8019268:	d9402715 	stw	r5,156(sp)
 801926c:	1169c83a 	sub	r20,r2,r5
 8019270:	00024606 	br	8019b8c <___svfiprintf_internal_r+0xd50>
 8019274:	d9402417 	ldw	r5,144(sp)
 8019278:	d8802417 	ldw	r2,144(sp)
 801927c:	d8001d85 	stb	zero,118(sp)
 8019280:	29400017 	ldw	r5,0(r5)
 8019284:	b811883a 	mov	r8,r23
 8019288:	15800104 	addi	r22,r2,4
 801928c:	d9402715 	stw	r5,156(sp)
 8019290:	28031826 	beq	r5,zero,8019ef4 <___svfiprintf_internal_r+0x10b8>
 8019294:	d9002017 	ldw	r4,128(sp)
 8019298:	20030b16 	blt	r4,zero,8019ec8 <___svfiprintf_internal_r+0x108c>
 801929c:	d9002717 	ldw	r4,156(sp)
 80192a0:	d9802017 	ldw	r6,128(sp)
 80192a4:	000b883a 	mov	r5,zero
 80192a8:	ddc02d15 	stw	r23,180(sp)
 80192ac:	8016ef80 	call	8016ef8 <memchr>
 80192b0:	da002d17 	ldw	r8,180(sp)
 80192b4:	10033926 	beq	r2,zero,8019f9c <___svfiprintf_internal_r+0x1160>
 80192b8:	d8c02717 	ldw	r3,156(sp)
 80192bc:	d9002017 	ldw	r4,128(sp)
 80192c0:	10e9c83a 	sub	r20,r2,r3
 80192c4:	2500010e 	bge	r4,r20,80192cc <___svfiprintf_internal_r+0x490>
 80192c8:	2029883a 	mov	r20,r4
 80192cc:	ddc01d83 	ldbu	r23,118(sp)
 80192d0:	dd802415 	stw	r22,144(sp)
 80192d4:	d8002015 	stw	zero,128(sp)
 80192d8:	00022c06 	br	8019b8c <___svfiprintf_internal_r+0xd50>
 80192dc:	84000814 	ori	r16,r16,32
 80192e0:	a9800007 	ldb	r6,0(r21)
 80192e4:	003f2006 	br	8018f68 <__alt_data_end+0xfc018f68>
 80192e8:	d8802417 	ldw	r2,144(sp)
 80192ec:	d8c02417 	ldw	r3,144(sp)
 80192f0:	010200b4 	movhi	r4,2050
 80192f4:	14800017 	ldw	r18,0(r2)
 80192f8:	00800c04 	movi	r2,48
 80192fc:	18c00104 	addi	r3,r3,4
 8019300:	d8801d05 	stb	r2,116(sp)
 8019304:	21011204 	addi	r4,r4,1096
 8019308:	00801e04 	movi	r2,120
 801930c:	d8801d45 	stb	r2,117(sp)
 8019310:	d8c02415 	stw	r3,144(sp)
 8019314:	b811883a 	mov	r8,r23
 8019318:	002d883a 	mov	r22,zero
 801931c:	84000094 	ori	r16,r16,2
 8019320:	d9002a15 	stw	r4,168(sp)
 8019324:	00800084 	movi	r2,2
 8019328:	9007883a 	mov	r3,r18
 801932c:	003fa806 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019330:	80c0080c 	andi	r3,r16,32
 8019334:	b811883a 	mov	r8,r23
 8019338:	d8802417 	ldw	r2,144(sp)
 801933c:	1800f026 	beq	r3,zero,8019700 <___svfiprintf_internal_r+0x8c4>
 8019340:	14800017 	ldw	r18,0(r2)
 8019344:	15800117 	ldw	r22,4(r2)
 8019348:	d8802417 	ldw	r2,144(sp)
 801934c:	9586b03a 	or	r3,r18,r22
 8019350:	10800204 	addi	r2,r2,8
 8019354:	d8802415 	stw	r2,144(sp)
 8019358:	0005883a 	mov	r2,zero
 801935c:	003f9c06 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019360:	dd801d85 	stb	r22,118(sp)
 8019364:	8080080c 	andi	r2,r16,32
 8019368:	b811883a 	mov	r8,r23
 801936c:	10028a1e 	bne	r2,zero,8019d98 <___svfiprintf_internal_r+0xf5c>
 8019370:	8080040c 	andi	r2,r16,16
 8019374:	1002c726 	beq	r2,zero,8019e94 <___svfiprintf_internal_r+0x1058>
 8019378:	d8c02417 	ldw	r3,144(sp)
 801937c:	d9002617 	ldw	r4,152(sp)
 8019380:	18800017 	ldw	r2,0(r3)
 8019384:	18c00104 	addi	r3,r3,4
 8019388:	d8c02415 	stw	r3,144(sp)
 801938c:	11000015 	stw	r4,0(r2)
 8019390:	003ecd06 	br	8018ec8 <__alt_data_end+0xfc018ec8>
 8019394:	84001014 	ori	r16,r16,64
 8019398:	a9800007 	ldb	r6,0(r21)
 801939c:	003ef206 	br	8018f68 <__alt_data_end+0xfc018f68>
 80193a0:	dd801d85 	stb	r22,118(sp)
 80193a4:	8080080c 	andi	r2,r16,32
 80193a8:	b811883a 	mov	r8,r23
 80193ac:	d8c02417 	ldw	r3,144(sp)
 80193b0:	10007826 	beq	r2,zero,8019594 <___svfiprintf_internal_r+0x758>
 80193b4:	d9002417 	ldw	r4,144(sp)
 80193b8:	18800117 	ldw	r2,4(r3)
 80193bc:	1c800017 	ldw	r18,0(r3)
 80193c0:	21000204 	addi	r4,r4,8
 80193c4:	d9002415 	stw	r4,144(sp)
 80193c8:	102d883a 	mov	r22,r2
 80193cc:	10007c16 	blt	r2,zero,80195c0 <___svfiprintf_internal_r+0x784>
 80193d0:	ddc01d83 	ldbu	r23,118(sp)
 80193d4:	dd002017 	ldw	r20,128(sp)
 80193d8:	00800044 	movi	r2,1
 80193dc:	9586b03a 	or	r3,r18,r22
 80193e0:	003f7e06 	br	80191dc <__alt_data_end+0xfc0191dc>
 80193e4:	a9800007 	ldb	r6,0(r21)
 80193e8:	01001b04 	movi	r4,108
 80193ec:	a805883a 	mov	r2,r21
 80193f0:	31027a26 	beq	r6,r4,8019ddc <___svfiprintf_internal_r+0xfa0>
 80193f4:	84000414 	ori	r16,r16,16
 80193f8:	003edb06 	br	8018f68 <__alt_data_end+0xfc018f68>
 80193fc:	d9402417 	ldw	r5,144(sp)
 8019400:	04800044 	movi	r18,1
 8019404:	d8c01004 	addi	r3,sp,64
 8019408:	28800017 	ldw	r2,0(r5)
 801940c:	29400104 	addi	r5,r5,4
 8019410:	b811883a 	mov	r8,r23
 8019414:	d8001d85 	stb	zero,118(sp)
 8019418:	d8801005 	stb	r2,64(sp)
 801941c:	d9402415 	stw	r5,144(sp)
 8019420:	9029883a 	mov	r20,r18
 8019424:	d8c02715 	stw	r3,156(sp)
 8019428:	d8002015 	stw	zero,128(sp)
 801942c:	80c0008c 	andi	r3,r16,2
 8019430:	d8c02115 	stw	r3,132(sp)
 8019434:	18000126 	beq	r3,zero,801943c <___svfiprintf_internal_r+0x600>
 8019438:	94800084 	addi	r18,r18,2
 801943c:	80c0210c 	andi	r3,r16,132
 8019440:	d8c02515 	stw	r3,148(sp)
 8019444:	1800ba1e 	bne	r3,zero,8019730 <___svfiprintf_internal_r+0x8f4>
 8019448:	d9002317 	ldw	r4,140(sp)
 801944c:	24b9c83a 	sub	fp,r4,r18
 8019450:	0700b70e 	bge	zero,fp,8019730 <___svfiprintf_internal_r+0x8f4>
 8019454:	02400404 	movi	r9,16
 8019458:	d8c01c17 	ldw	r3,112(sp)
 801945c:	d8801b17 	ldw	r2,108(sp)
 8019460:	4f02c00e 	bge	r9,fp,8019f64 <___svfiprintf_internal_r+0x1128>
 8019464:	010200b4 	movhi	r4,2050
 8019468:	21022404 	addi	r4,r4,2192
 801946c:	d9002815 	stw	r4,160(sp)
 8019470:	a809883a 	mov	r4,r21
 8019474:	dc002b15 	stw	r16,172(sp)
 8019478:	a02b883a 	mov	r21,r20
 801947c:	482f883a 	mov	r23,r9
 8019480:	9029883a 	mov	r20,r18
 8019484:	058001c4 	movi	r22,7
 8019488:	e025883a 	mov	r18,fp
 801948c:	dc002217 	ldw	r16,136(sp)
 8019490:	2039883a 	mov	fp,r4
 8019494:	00000306 	br	80194a4 <___svfiprintf_internal_r+0x668>
 8019498:	94bffc04 	addi	r18,r18,-16
 801949c:	42000204 	addi	r8,r8,8
 80194a0:	bc80130e 	bge	r23,r18,80194f0 <___svfiprintf_internal_r+0x6b4>
 80194a4:	014200b4 	movhi	r5,2050
 80194a8:	18c00404 	addi	r3,r3,16
 80194ac:	10800044 	addi	r2,r2,1
 80194b0:	29422404 	addi	r5,r5,2192
 80194b4:	41400015 	stw	r5,0(r8)
 80194b8:	45c00115 	stw	r23,4(r8)
 80194bc:	d8c01c15 	stw	r3,112(sp)
 80194c0:	d8801b15 	stw	r2,108(sp)
 80194c4:	b0bff40e 	bge	r22,r2,8019498 <__alt_data_end+0xfc019498>
 80194c8:	8809883a 	mov	r4,r17
 80194cc:	800b883a 	mov	r5,r16
 80194d0:	d9801a04 	addi	r6,sp,104
 80194d4:	8018c740 	call	8018c74 <__ssprint_r>
 80194d8:	1001501e 	bne	r2,zero,8019a1c <___svfiprintf_internal_r+0xbe0>
 80194dc:	94bffc04 	addi	r18,r18,-16
 80194e0:	d8c01c17 	ldw	r3,112(sp)
 80194e4:	d8801b17 	ldw	r2,108(sp)
 80194e8:	d811883a 	mov	r8,sp
 80194ec:	bcbfed16 	blt	r23,r18,80194a4 <__alt_data_end+0xfc0194a4>
 80194f0:	dc002b17 	ldw	r16,172(sp)
 80194f4:	e009883a 	mov	r4,fp
 80194f8:	9039883a 	mov	fp,r18
 80194fc:	a025883a 	mov	r18,r20
 8019500:	a829883a 	mov	r20,r21
 8019504:	202b883a 	mov	r21,r4
 8019508:	d9002817 	ldw	r4,160(sp)
 801950c:	e0c7883a 	add	r3,fp,r3
 8019510:	10800044 	addi	r2,r2,1
 8019514:	41000015 	stw	r4,0(r8)
 8019518:	47000115 	stw	fp,4(r8)
 801951c:	d8c01c15 	stw	r3,112(sp)
 8019520:	d8801b15 	stw	r2,108(sp)
 8019524:	010001c4 	movi	r4,7
 8019528:	2081da16 	blt	r4,r2,8019c94 <___svfiprintf_internal_r+0xe58>
 801952c:	42000204 	addi	r8,r8,8
 8019530:	00008106 	br	8019738 <___svfiprintf_internal_r+0x8fc>
 8019534:	010200b4 	movhi	r4,2050
 8019538:	21010d04 	addi	r4,r4,1076
 801953c:	dd801d85 	stb	r22,118(sp)
 8019540:	d9002a15 	stw	r4,168(sp)
 8019544:	80c0080c 	andi	r3,r16,32
 8019548:	b811883a 	mov	r8,r23
 801954c:	d8802417 	ldw	r2,144(sp)
 8019550:	183f091e 	bne	r3,zero,8019178 <__alt_data_end+0xfc019178>
 8019554:	80c0040c 	andi	r3,r16,16
 8019558:	1801f21e 	bne	r3,zero,8019d24 <___svfiprintf_internal_r+0xee8>
 801955c:	80c0100c 	andi	r3,r16,64
 8019560:	18024626 	beq	r3,zero,8019e7c <___svfiprintf_internal_r+0x1040>
 8019564:	d9402417 	ldw	r5,144(sp)
 8019568:	1480000b 	ldhu	r18,0(r2)
 801956c:	002d883a 	mov	r22,zero
 8019570:	29400104 	addi	r5,r5,4
 8019574:	d9402415 	stw	r5,144(sp)
 8019578:	003f0406 	br	801918c <__alt_data_end+0xfc01918c>
 801957c:	84000414 	ori	r16,r16,16
 8019580:	dd801d85 	stb	r22,118(sp)
 8019584:	8080080c 	andi	r2,r16,32
 8019588:	b811883a 	mov	r8,r23
 801958c:	d8c02417 	ldw	r3,144(sp)
 8019590:	103f881e 	bne	r2,zero,80193b4 <__alt_data_end+0xfc0193b4>
 8019594:	8080040c 	andi	r2,r16,16
 8019598:	1001f81e 	bne	r2,zero,8019d7c <___svfiprintf_internal_r+0xf40>
 801959c:	8080100c 	andi	r2,r16,64
 80195a0:	10021f26 	beq	r2,zero,8019e20 <___svfiprintf_internal_r+0xfe4>
 80195a4:	1c80000f 	ldh	r18,0(r3)
 80195a8:	d8802417 	ldw	r2,144(sp)
 80195ac:	902dd7fa 	srai	r22,r18,31
 80195b0:	10800104 	addi	r2,r2,4
 80195b4:	d8802415 	stw	r2,144(sp)
 80195b8:	b005883a 	mov	r2,r22
 80195bc:	103f840e 	bge	r2,zero,80193d0 <__alt_data_end+0xfc0193d0>
 80195c0:	04a5c83a 	sub	r18,zero,r18
 80195c4:	9004c03a 	cmpne	r2,r18,zero
 80195c8:	05adc83a 	sub	r22,zero,r22
 80195cc:	b0adc83a 	sub	r22,r22,r2
 80195d0:	05c00b44 	movi	r23,45
 80195d4:	ddc01d85 	stb	r23,118(sp)
 80195d8:	dd002017 	ldw	r20,128(sp)
 80195dc:	00800044 	movi	r2,1
 80195e0:	9586b03a 	or	r3,r18,r22
 80195e4:	003efd06 	br	80191dc <__alt_data_end+0xfc0191dc>
 80195e8:	dc002115 	stw	r16,132(sp)
 80195ec:	d8002315 	stw	zero,140(sp)
 80195f0:	373ff404 	addi	fp,r6,-48
 80195f4:	0009883a 	mov	r4,zero
 80195f8:	a821883a 	mov	r16,r21
 80195fc:	01400284 	movi	r5,10
 8019600:	8009fe40 	call	8009fe4 <__mulsi3>
 8019604:	81800007 	ldb	r6,0(r16)
 8019608:	1709883a 	add	r4,r2,fp
 801960c:	ad400044 	addi	r21,r21,1
 8019610:	373ff404 	addi	fp,r6,-48
 8019614:	a821883a 	mov	r16,r21
 8019618:	a73ff82e 	bgeu	r20,fp,80195fc <__alt_data_end+0xfc0195fc>
 801961c:	d9002315 	stw	r4,140(sp)
 8019620:	30bff804 	addi	r2,r6,-32
 8019624:	dc002117 	ldw	r16,132(sp)
 8019628:	90be522e 	bgeu	r18,r2,8018f74 <__alt_data_end+0xfc018f74>
 801962c:	dd801d85 	stb	r22,118(sp)
 8019630:	b811883a 	mov	r8,r23
 8019634:	3000f326 	beq	r6,zero,8019a04 <___svfiprintf_internal_r+0xbc8>
 8019638:	04800044 	movi	r18,1
 801963c:	d8c01004 	addi	r3,sp,64
 8019640:	d9801005 	stb	r6,64(sp)
 8019644:	d8001d85 	stb	zero,118(sp)
 8019648:	9029883a 	mov	r20,r18
 801964c:	d8c02715 	stw	r3,156(sp)
 8019650:	003f7506 	br	8019428 <__alt_data_end+0xfc019428>
 8019654:	84002014 	ori	r16,r16,128
 8019658:	a9800007 	ldb	r6,0(r21)
 801965c:	003e4206 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019660:	a9800007 	ldb	r6,0(r21)
 8019664:	01400a84 	movi	r5,42
 8019668:	a8800044 	addi	r2,r21,1
 801966c:	31425226 	beq	r6,r5,8019fb8 <___svfiprintf_internal_r+0x117c>
 8019670:	373ff404 	addi	fp,r6,-48
 8019674:	102b883a 	mov	r21,r2
 8019678:	0009883a 	mov	r4,zero
 801967c:	a7024536 	bltu	r20,fp,8019f94 <___svfiprintf_internal_r+0x1158>
 8019680:	01400284 	movi	r5,10
 8019684:	8009fe40 	call	8009fe4 <__mulsi3>
 8019688:	a9800007 	ldb	r6,0(r21)
 801968c:	e089883a 	add	r4,fp,r2
 8019690:	ad400044 	addi	r21,r21,1
 8019694:	373ff404 	addi	fp,r6,-48
 8019698:	a73ff92e 	bgeu	r20,fp,8019680 <__alt_data_end+0xfc019680>
 801969c:	20021316 	blt	r4,zero,8019eec <___svfiprintf_internal_r+0x10b0>
 80196a0:	d9002015 	stw	r4,128(sp)
 80196a4:	003e3106 	br	8018f6c <__alt_data_end+0xfc018f6c>
 80196a8:	84000414 	ori	r16,r16,16
 80196ac:	80c0080c 	andi	r3,r16,32
 80196b0:	b811883a 	mov	r8,r23
 80196b4:	d8802417 	ldw	r2,144(sp)
 80196b8:	183ebe1e 	bne	r3,zero,80191b4 <__alt_data_end+0xfc0191b4>
 80196bc:	80c0040c 	andi	r3,r16,16
 80196c0:	18019e1e 	bne	r3,zero,8019d3c <___svfiprintf_internal_r+0xf00>
 80196c4:	80c0100c 	andi	r3,r16,64
 80196c8:	1801dc26 	beq	r3,zero,8019e3c <___svfiprintf_internal_r+0x1000>
 80196cc:	d8c02417 	ldw	r3,144(sp)
 80196d0:	1480000b 	ldhu	r18,0(r2)
 80196d4:	002d883a 	mov	r22,zero
 80196d8:	18c00104 	addi	r3,r3,4
 80196dc:	d8c02415 	stw	r3,144(sp)
 80196e0:	00800044 	movi	r2,1
 80196e4:	9007883a 	mov	r3,r18
 80196e8:	003eb906 	br	80191d0 <__alt_data_end+0xfc0191d0>
 80196ec:	84000414 	ori	r16,r16,16
 80196f0:	80c0080c 	andi	r3,r16,32
 80196f4:	b811883a 	mov	r8,r23
 80196f8:	d8802417 	ldw	r2,144(sp)
 80196fc:	183f101e 	bne	r3,zero,8019340 <__alt_data_end+0xfc019340>
 8019700:	80c0040c 	andi	r3,r16,16
 8019704:	1801951e 	bne	r3,zero,8019d5c <___svfiprintf_internal_r+0xf20>
 8019708:	80c0100c 	andi	r3,r16,64
 801970c:	1801d326 	beq	r3,zero,8019e5c <___svfiprintf_internal_r+0x1020>
 8019710:	d9002417 	ldw	r4,144(sp)
 8019714:	1480000b 	ldhu	r18,0(r2)
 8019718:	002d883a 	mov	r22,zero
 801971c:	21000104 	addi	r4,r4,4
 8019720:	d9002415 	stw	r4,144(sp)
 8019724:	0005883a 	mov	r2,zero
 8019728:	9007883a 	mov	r3,r18
 801972c:	003ea806 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019730:	d8c01c17 	ldw	r3,112(sp)
 8019734:	d8801b17 	ldw	r2,108(sp)
 8019738:	d9001d87 	ldb	r4,118(sp)
 801973c:	20000b26 	beq	r4,zero,801976c <___svfiprintf_internal_r+0x930>
 8019740:	d9001d84 	addi	r4,sp,118
 8019744:	18c00044 	addi	r3,r3,1
 8019748:	10800044 	addi	r2,r2,1
 801974c:	41000015 	stw	r4,0(r8)
 8019750:	01000044 	movi	r4,1
 8019754:	41000115 	stw	r4,4(r8)
 8019758:	d8c01c15 	stw	r3,112(sp)
 801975c:	d8801b15 	stw	r2,108(sp)
 8019760:	010001c4 	movi	r4,7
 8019764:	20813616 	blt	r4,r2,8019c40 <___svfiprintf_internal_r+0xe04>
 8019768:	42000204 	addi	r8,r8,8
 801976c:	d9402117 	ldw	r5,132(sp)
 8019770:	28000b26 	beq	r5,zero,80197a0 <___svfiprintf_internal_r+0x964>
 8019774:	d9001d04 	addi	r4,sp,116
 8019778:	18c00084 	addi	r3,r3,2
 801977c:	10800044 	addi	r2,r2,1
 8019780:	41000015 	stw	r4,0(r8)
 8019784:	01000084 	movi	r4,2
 8019788:	41000115 	stw	r4,4(r8)
 801978c:	d8c01c15 	stw	r3,112(sp)
 8019790:	d8801b15 	stw	r2,108(sp)
 8019794:	010001c4 	movi	r4,7
 8019798:	20813216 	blt	r4,r2,8019c64 <___svfiprintf_internal_r+0xe28>
 801979c:	42000204 	addi	r8,r8,8
 80197a0:	d9402517 	ldw	r5,148(sp)
 80197a4:	01002004 	movi	r4,128
 80197a8:	2900ad26 	beq	r5,r4,8019a60 <___svfiprintf_internal_r+0xc24>
 80197ac:	d9002017 	ldw	r4,128(sp)
 80197b0:	252fc83a 	sub	r23,r4,r20
 80197b4:	05c0330e 	bge	zero,r23,8019884 <___svfiprintf_internal_r+0xa48>
 80197b8:	01c00404 	movi	r7,16
 80197bc:	3dc1940e 	bge	r7,r23,8019e10 <___svfiprintf_internal_r+0xfd4>
 80197c0:	010200b4 	movhi	r4,2050
 80197c4:	21022004 	addi	r4,r4,2176
 80197c8:	d9002115 	stw	r4,132(sp)
 80197cc:	a809883a 	mov	r4,r21
 80197d0:	dc002015 	stw	r16,128(sp)
 80197d4:	a02b883a 	mov	r21,r20
 80197d8:	3839883a 	mov	fp,r7
 80197dc:	9029883a 	mov	r20,r18
 80197e0:	058001c4 	movi	r22,7
 80197e4:	b825883a 	mov	r18,r23
 80197e8:	dc002217 	ldw	r16,136(sp)
 80197ec:	202f883a 	mov	r23,r4
 80197f0:	00000306 	br	8019800 <___svfiprintf_internal_r+0x9c4>
 80197f4:	94bffc04 	addi	r18,r18,-16
 80197f8:	42000204 	addi	r8,r8,8
 80197fc:	e480110e 	bge	fp,r18,8019844 <___svfiprintf_internal_r+0xa08>
 8019800:	18c00404 	addi	r3,r3,16
 8019804:	10800044 	addi	r2,r2,1
 8019808:	44c00015 	stw	r19,0(r8)
 801980c:	47000115 	stw	fp,4(r8)
 8019810:	d8c01c15 	stw	r3,112(sp)
 8019814:	d8801b15 	stw	r2,108(sp)
 8019818:	b0bff60e 	bge	r22,r2,80197f4 <__alt_data_end+0xfc0197f4>
 801981c:	8809883a 	mov	r4,r17
 8019820:	800b883a 	mov	r5,r16
 8019824:	d9801a04 	addi	r6,sp,104
 8019828:	8018c740 	call	8018c74 <__ssprint_r>
 801982c:	10007b1e 	bne	r2,zero,8019a1c <___svfiprintf_internal_r+0xbe0>
 8019830:	94bffc04 	addi	r18,r18,-16
 8019834:	d8c01c17 	ldw	r3,112(sp)
 8019838:	d8801b17 	ldw	r2,108(sp)
 801983c:	d811883a 	mov	r8,sp
 8019840:	e4bfef16 	blt	fp,r18,8019800 <__alt_data_end+0xfc019800>
 8019844:	dc002017 	ldw	r16,128(sp)
 8019848:	b809883a 	mov	r4,r23
 801984c:	902f883a 	mov	r23,r18
 8019850:	a025883a 	mov	r18,r20
 8019854:	a829883a 	mov	r20,r21
 8019858:	202b883a 	mov	r21,r4
 801985c:	d9402117 	ldw	r5,132(sp)
 8019860:	1dc7883a 	add	r3,r3,r23
 8019864:	10800044 	addi	r2,r2,1
 8019868:	41400015 	stw	r5,0(r8)
 801986c:	45c00115 	stw	r23,4(r8)
 8019870:	d8c01c15 	stw	r3,112(sp)
 8019874:	d8801b15 	stw	r2,108(sp)
 8019878:	010001c4 	movi	r4,7
 801987c:	2080d616 	blt	r4,r2,8019bd8 <___svfiprintf_internal_r+0xd9c>
 8019880:	42000204 	addi	r8,r8,8
 8019884:	d9002717 	ldw	r4,156(sp)
 8019888:	a0c7883a 	add	r3,r20,r3
 801988c:	10800044 	addi	r2,r2,1
 8019890:	41000015 	stw	r4,0(r8)
 8019894:	45000115 	stw	r20,4(r8)
 8019898:	d8c01c15 	stw	r3,112(sp)
 801989c:	d8801b15 	stw	r2,108(sp)
 80198a0:	010001c4 	movi	r4,7
 80198a4:	2080a516 	blt	r4,r2,8019b3c <___svfiprintf_internal_r+0xd00>
 80198a8:	42000204 	addi	r8,r8,8
 80198ac:	8400010c 	andi	r16,r16,4
 80198b0:	80002b26 	beq	r16,zero,8019960 <___svfiprintf_internal_r+0xb24>
 80198b4:	d9402317 	ldw	r5,140(sp)
 80198b8:	2ca1c83a 	sub	r16,r5,r18
 80198bc:	0400280e 	bge	zero,r16,8019960 <___svfiprintf_internal_r+0xb24>
 80198c0:	05000404 	movi	r20,16
 80198c4:	d8801b17 	ldw	r2,108(sp)
 80198c8:	a401aa0e 	bge	r20,r16,8019f74 <___svfiprintf_internal_r+0x1138>
 80198cc:	014200b4 	movhi	r5,2050
 80198d0:	29422404 	addi	r5,r5,2192
 80198d4:	d9402815 	stw	r5,160(sp)
 80198d8:	058001c4 	movi	r22,7
 80198dc:	ddc02217 	ldw	r23,136(sp)
 80198e0:	00000306 	br	80198f0 <___svfiprintf_internal_r+0xab4>
 80198e4:	843ffc04 	addi	r16,r16,-16
 80198e8:	42000204 	addi	r8,r8,8
 80198ec:	a400130e 	bge	r20,r16,801993c <___svfiprintf_internal_r+0xb00>
 80198f0:	010200b4 	movhi	r4,2050
 80198f4:	18c00404 	addi	r3,r3,16
 80198f8:	10800044 	addi	r2,r2,1
 80198fc:	21022404 	addi	r4,r4,2192
 8019900:	41000015 	stw	r4,0(r8)
 8019904:	45000115 	stw	r20,4(r8)
 8019908:	d8c01c15 	stw	r3,112(sp)
 801990c:	d8801b15 	stw	r2,108(sp)
 8019910:	b0bff40e 	bge	r22,r2,80198e4 <__alt_data_end+0xfc0198e4>
 8019914:	8809883a 	mov	r4,r17
 8019918:	b80b883a 	mov	r5,r23
 801991c:	d9801a04 	addi	r6,sp,104
 8019920:	8018c740 	call	8018c74 <__ssprint_r>
 8019924:	10003d1e 	bne	r2,zero,8019a1c <___svfiprintf_internal_r+0xbe0>
 8019928:	843ffc04 	addi	r16,r16,-16
 801992c:	d8c01c17 	ldw	r3,112(sp)
 8019930:	d8801b17 	ldw	r2,108(sp)
 8019934:	d811883a 	mov	r8,sp
 8019938:	a43fed16 	blt	r20,r16,80198f0 <__alt_data_end+0xfc0198f0>
 801993c:	d9402817 	ldw	r5,160(sp)
 8019940:	1c07883a 	add	r3,r3,r16
 8019944:	10800044 	addi	r2,r2,1
 8019948:	41400015 	stw	r5,0(r8)
 801994c:	44000115 	stw	r16,4(r8)
 8019950:	d8c01c15 	stw	r3,112(sp)
 8019954:	d8801b15 	stw	r2,108(sp)
 8019958:	010001c4 	movi	r4,7
 801995c:	2080e416 	blt	r4,r2,8019cf0 <___svfiprintf_internal_r+0xeb4>
 8019960:	d8802317 	ldw	r2,140(sp)
 8019964:	9080010e 	bge	r18,r2,801996c <___svfiprintf_internal_r+0xb30>
 8019968:	1025883a 	mov	r18,r2
 801996c:	d9002617 	ldw	r4,152(sp)
 8019970:	2489883a 	add	r4,r4,r18
 8019974:	d9002615 	stw	r4,152(sp)
 8019978:	1800781e 	bne	r3,zero,8019b5c <___svfiprintf_internal_r+0xd20>
 801997c:	a8800007 	ldb	r2,0(r21)
 8019980:	d8001b15 	stw	zero,108(sp)
 8019984:	d811883a 	mov	r8,sp
 8019988:	103d511e 	bne	r2,zero,8018ed0 <__alt_data_end+0xfc018ed0>
 801998c:	a825883a 	mov	r18,r21
 8019990:	003d6806 	br	8018f34 <__alt_data_end+0xfc018f34>
 8019994:	10803fcc 	andi	r2,r2,255
 8019998:	00c00044 	movi	r3,1
 801999c:	10fe191e 	bne	r2,r3,8019204 <__alt_data_end+0xfc019204>
 80199a0:	b000c826 	beq	r22,zero,8019cc4 <___svfiprintf_internal_r+0xe88>
 80199a4:	df001a04 	addi	fp,sp,104
 80199a8:	4029883a 	mov	r20,r8
 80199ac:	9009883a 	mov	r4,r18
 80199b0:	b00b883a 	mov	r5,r22
 80199b4:	01800284 	movi	r6,10
 80199b8:	000f883a 	mov	r7,zero
 80199bc:	801c4f40 	call	801c4f4 <__umoddi3>
 80199c0:	10800c04 	addi	r2,r2,48
 80199c4:	e73fffc4 	addi	fp,fp,-1
 80199c8:	9009883a 	mov	r4,r18
 80199cc:	b00b883a 	mov	r5,r22
 80199d0:	01800284 	movi	r6,10
 80199d4:	000f883a 	mov	r7,zero
 80199d8:	e0800005 	stb	r2,0(fp)
 80199dc:	801beb40 	call	801beb4 <__udivdi3>
 80199e0:	1025883a 	mov	r18,r2
 80199e4:	10c4b03a 	or	r2,r2,r3
 80199e8:	182d883a 	mov	r22,r3
 80199ec:	103fef1e 	bne	r2,zero,80199ac <__alt_data_end+0xfc0199ac>
 80199f0:	d9001e17 	ldw	r4,120(sp)
 80199f4:	a011883a 	mov	r8,r20
 80199f8:	df002715 	stw	fp,156(sp)
 80199fc:	2729c83a 	sub	r20,r4,fp
 8019a00:	00006206 	br	8019b8c <___svfiprintf_internal_r+0xd50>
 8019a04:	d8801c17 	ldw	r2,112(sp)
 8019a08:	10000426 	beq	r2,zero,8019a1c <___svfiprintf_internal_r+0xbe0>
 8019a0c:	d9002917 	ldw	r4,164(sp)
 8019a10:	d9402217 	ldw	r5,136(sp)
 8019a14:	d9801a04 	addi	r6,sp,104
 8019a18:	8018c740 	call	8018c74 <__ssprint_r>
 8019a1c:	d9402217 	ldw	r5,136(sp)
 8019a20:	2880030b 	ldhu	r2,12(r5)
 8019a24:	1080100c 	andi	r2,r2,64
 8019a28:	1000621e 	bne	r2,zero,8019bb4 <___svfiprintf_internal_r+0xd78>
 8019a2c:	d8802617 	ldw	r2,152(sp)
 8019a30:	dfc03717 	ldw	ra,220(sp)
 8019a34:	df003617 	ldw	fp,216(sp)
 8019a38:	ddc03517 	ldw	r23,212(sp)
 8019a3c:	dd803417 	ldw	r22,208(sp)
 8019a40:	dd403317 	ldw	r21,204(sp)
 8019a44:	dd003217 	ldw	r20,200(sp)
 8019a48:	dcc03117 	ldw	r19,196(sp)
 8019a4c:	dc803017 	ldw	r18,192(sp)
 8019a50:	dc402f17 	ldw	r17,188(sp)
 8019a54:	dc002e17 	ldw	r16,184(sp)
 8019a58:	dec03804 	addi	sp,sp,224
 8019a5c:	f800283a 	ret
 8019a60:	d9002317 	ldw	r4,140(sp)
 8019a64:	24afc83a 	sub	r23,r4,r18
 8019a68:	05ff500e 	bge	zero,r23,80197ac <__alt_data_end+0xfc0197ac>
 8019a6c:	01c00404 	movi	r7,16
 8019a70:	3dc1440e 	bge	r7,r23,8019f84 <___svfiprintf_internal_r+0x1148>
 8019a74:	010200b4 	movhi	r4,2050
 8019a78:	21022004 	addi	r4,r4,2176
 8019a7c:	d9002115 	stw	r4,132(sp)
 8019a80:	a809883a 	mov	r4,r21
 8019a84:	dc002515 	stw	r16,148(sp)
 8019a88:	a02b883a 	mov	r21,r20
 8019a8c:	3839883a 	mov	fp,r7
 8019a90:	9029883a 	mov	r20,r18
 8019a94:	058001c4 	movi	r22,7
 8019a98:	b825883a 	mov	r18,r23
 8019a9c:	dc002217 	ldw	r16,136(sp)
 8019aa0:	202f883a 	mov	r23,r4
 8019aa4:	00000306 	br	8019ab4 <___svfiprintf_internal_r+0xc78>
 8019aa8:	94bffc04 	addi	r18,r18,-16
 8019aac:	42000204 	addi	r8,r8,8
 8019ab0:	e480110e 	bge	fp,r18,8019af8 <___svfiprintf_internal_r+0xcbc>
 8019ab4:	18c00404 	addi	r3,r3,16
 8019ab8:	10800044 	addi	r2,r2,1
 8019abc:	44c00015 	stw	r19,0(r8)
 8019ac0:	47000115 	stw	fp,4(r8)
 8019ac4:	d8c01c15 	stw	r3,112(sp)
 8019ac8:	d8801b15 	stw	r2,108(sp)
 8019acc:	b0bff60e 	bge	r22,r2,8019aa8 <__alt_data_end+0xfc019aa8>
 8019ad0:	8809883a 	mov	r4,r17
 8019ad4:	800b883a 	mov	r5,r16
 8019ad8:	d9801a04 	addi	r6,sp,104
 8019adc:	8018c740 	call	8018c74 <__ssprint_r>
 8019ae0:	103fce1e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019ae4:	94bffc04 	addi	r18,r18,-16
 8019ae8:	d8c01c17 	ldw	r3,112(sp)
 8019aec:	d8801b17 	ldw	r2,108(sp)
 8019af0:	d811883a 	mov	r8,sp
 8019af4:	e4bfef16 	blt	fp,r18,8019ab4 <__alt_data_end+0xfc019ab4>
 8019af8:	dc002517 	ldw	r16,148(sp)
 8019afc:	b809883a 	mov	r4,r23
 8019b00:	902f883a 	mov	r23,r18
 8019b04:	a025883a 	mov	r18,r20
 8019b08:	a829883a 	mov	r20,r21
 8019b0c:	202b883a 	mov	r21,r4
 8019b10:	d9402117 	ldw	r5,132(sp)
 8019b14:	1dc7883a 	add	r3,r3,r23
 8019b18:	10800044 	addi	r2,r2,1
 8019b1c:	41400015 	stw	r5,0(r8)
 8019b20:	45c00115 	stw	r23,4(r8)
 8019b24:	d8c01c15 	stw	r3,112(sp)
 8019b28:	d8801b15 	stw	r2,108(sp)
 8019b2c:	010001c4 	movi	r4,7
 8019b30:	2080ae16 	blt	r4,r2,8019dec <___svfiprintf_internal_r+0xfb0>
 8019b34:	42000204 	addi	r8,r8,8
 8019b38:	003f1c06 	br	80197ac <__alt_data_end+0xfc0197ac>
 8019b3c:	d9402217 	ldw	r5,136(sp)
 8019b40:	8809883a 	mov	r4,r17
 8019b44:	d9801a04 	addi	r6,sp,104
 8019b48:	8018c740 	call	8018c74 <__ssprint_r>
 8019b4c:	103fb31e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019b50:	d8c01c17 	ldw	r3,112(sp)
 8019b54:	d811883a 	mov	r8,sp
 8019b58:	003f5406 	br	80198ac <__alt_data_end+0xfc0198ac>
 8019b5c:	d9402217 	ldw	r5,136(sp)
 8019b60:	8809883a 	mov	r4,r17
 8019b64:	d9801a04 	addi	r6,sp,104
 8019b68:	8018c740 	call	8018c74 <__ssprint_r>
 8019b6c:	103f8326 	beq	r2,zero,801997c <__alt_data_end+0xfc01997c>
 8019b70:	003faa06 	br	8019a1c <__alt_data_end+0xfc019a1c>
 8019b74:	10803fcc 	andi	r2,r2,255
 8019b78:	1000021e 	bne	r2,zero,8019b84 <___svfiprintf_internal_r+0xd48>
 8019b7c:	8080004c 	andi	r2,r16,1
 8019b80:	1000621e 	bne	r2,zero,8019d0c <___svfiprintf_internal_r+0xed0>
 8019b84:	d8c01a04 	addi	r3,sp,104
 8019b88:	d8c02715 	stw	r3,156(sp)
 8019b8c:	d9002017 	ldw	r4,128(sp)
 8019b90:	a025883a 	mov	r18,r20
 8019b94:	a100010e 	bge	r20,r4,8019b9c <___svfiprintf_internal_r+0xd60>
 8019b98:	2025883a 	mov	r18,r4
 8019b9c:	bdc03fcc 	andi	r23,r23,255
 8019ba0:	bdc0201c 	xori	r23,r23,128
 8019ba4:	bdffe004 	addi	r23,r23,-128
 8019ba8:	b83e2026 	beq	r23,zero,801942c <__alt_data_end+0xfc01942c>
 8019bac:	94800044 	addi	r18,r18,1
 8019bb0:	003e1e06 	br	801942c <__alt_data_end+0xfc01942c>
 8019bb4:	00bfffc4 	movi	r2,-1
 8019bb8:	003f9d06 	br	8019a30 <__alt_data_end+0xfc019a30>
 8019bbc:	d9402217 	ldw	r5,136(sp)
 8019bc0:	8809883a 	mov	r4,r17
 8019bc4:	d9801a04 	addi	r6,sp,104
 8019bc8:	8018c740 	call	8018c74 <__ssprint_r>
 8019bcc:	103f931e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019bd0:	d811883a 	mov	r8,sp
 8019bd4:	003cd406 	br	8018f28 <__alt_data_end+0xfc018f28>
 8019bd8:	d9402217 	ldw	r5,136(sp)
 8019bdc:	8809883a 	mov	r4,r17
 8019be0:	d9801a04 	addi	r6,sp,104
 8019be4:	8018c740 	call	8018c74 <__ssprint_r>
 8019be8:	103f8c1e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019bec:	d8c01c17 	ldw	r3,112(sp)
 8019bf0:	d8801b17 	ldw	r2,108(sp)
 8019bf4:	d811883a 	mov	r8,sp
 8019bf8:	003f2206 	br	8019884 <__alt_data_end+0xfc019884>
 8019bfc:	d9002a17 	ldw	r4,168(sp)
 8019c00:	df001a04 	addi	fp,sp,104
 8019c04:	908003cc 	andi	r2,r18,15
 8019c08:	b006973a 	slli	r3,r22,28
 8019c0c:	2085883a 	add	r2,r4,r2
 8019c10:	9024d13a 	srli	r18,r18,4
 8019c14:	10800003 	ldbu	r2,0(r2)
 8019c18:	b02cd13a 	srli	r22,r22,4
 8019c1c:	e73fffc4 	addi	fp,fp,-1
 8019c20:	1ca4b03a 	or	r18,r3,r18
 8019c24:	e0800005 	stb	r2,0(fp)
 8019c28:	9584b03a 	or	r2,r18,r22
 8019c2c:	103ff51e 	bne	r2,zero,8019c04 <__alt_data_end+0xfc019c04>
 8019c30:	d9401e17 	ldw	r5,120(sp)
 8019c34:	df002715 	stw	fp,156(sp)
 8019c38:	2f29c83a 	sub	r20,r5,fp
 8019c3c:	003fd306 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019c40:	d9402217 	ldw	r5,136(sp)
 8019c44:	8809883a 	mov	r4,r17
 8019c48:	d9801a04 	addi	r6,sp,104
 8019c4c:	8018c740 	call	8018c74 <__ssprint_r>
 8019c50:	103f721e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019c54:	d8c01c17 	ldw	r3,112(sp)
 8019c58:	d8801b17 	ldw	r2,108(sp)
 8019c5c:	d811883a 	mov	r8,sp
 8019c60:	003ec206 	br	801976c <__alt_data_end+0xfc01976c>
 8019c64:	d9402217 	ldw	r5,136(sp)
 8019c68:	8809883a 	mov	r4,r17
 8019c6c:	d9801a04 	addi	r6,sp,104
 8019c70:	8018c740 	call	8018c74 <__ssprint_r>
 8019c74:	103f691e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019c78:	d8c01c17 	ldw	r3,112(sp)
 8019c7c:	d8801b17 	ldw	r2,108(sp)
 8019c80:	d811883a 	mov	r8,sp
 8019c84:	003ec606 	br	80197a0 <__alt_data_end+0xfc0197a0>
 8019c88:	00800084 	movi	r2,2
 8019c8c:	9586b03a 	or	r3,r18,r22
 8019c90:	003d4f06 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019c94:	d9402217 	ldw	r5,136(sp)
 8019c98:	8809883a 	mov	r4,r17
 8019c9c:	d9801a04 	addi	r6,sp,104
 8019ca0:	8018c740 	call	8018c74 <__ssprint_r>
 8019ca4:	103f5d1e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019ca8:	d8c01c17 	ldw	r3,112(sp)
 8019cac:	d8801b17 	ldw	r2,108(sp)
 8019cb0:	d811883a 	mov	r8,sp
 8019cb4:	003ea006 	br	8019738 <__alt_data_end+0xfc019738>
 8019cb8:	d8801e17 	ldw	r2,120(sp)
 8019cbc:	10e9c83a 	sub	r20,r2,r3
 8019cc0:	003fb206 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019cc4:	00800244 	movi	r2,9
 8019cc8:	14bf3636 	bltu	r2,r18,80199a4 <__alt_data_end+0xfc0199a4>
 8019ccc:	94800c04 	addi	r18,r18,48
 8019cd0:	d8c019c4 	addi	r3,sp,103
 8019cd4:	dc8019c5 	stb	r18,103(sp)
 8019cd8:	dd002c17 	ldw	r20,176(sp)
 8019cdc:	d8c02715 	stw	r3,156(sp)
 8019ce0:	003faa06 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019ce4:	d8802415 	stw	r2,144(sp)
 8019ce8:	a9800007 	ldb	r6,0(r21)
 8019cec:	003c9e06 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019cf0:	d9402217 	ldw	r5,136(sp)
 8019cf4:	8809883a 	mov	r4,r17
 8019cf8:	d9801a04 	addi	r6,sp,104
 8019cfc:	8018c740 	call	8018c74 <__ssprint_r>
 8019d00:	103f461e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019d04:	d8c01c17 	ldw	r3,112(sp)
 8019d08:	003f1506 	br	8019960 <__alt_data_end+0xfc019960>
 8019d0c:	00800c04 	movi	r2,48
 8019d10:	d8c019c4 	addi	r3,sp,103
 8019d14:	d88019c5 	stb	r2,103(sp)
 8019d18:	dd002c17 	ldw	r20,176(sp)
 8019d1c:	d8c02715 	stw	r3,156(sp)
 8019d20:	003f9a06 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019d24:	d9002417 	ldw	r4,144(sp)
 8019d28:	14800017 	ldw	r18,0(r2)
 8019d2c:	002d883a 	mov	r22,zero
 8019d30:	21000104 	addi	r4,r4,4
 8019d34:	d9002415 	stw	r4,144(sp)
 8019d38:	003d1406 	br	801918c <__alt_data_end+0xfc01918c>
 8019d3c:	14800017 	ldw	r18,0(r2)
 8019d40:	d8802417 	ldw	r2,144(sp)
 8019d44:	002d883a 	mov	r22,zero
 8019d48:	9007883a 	mov	r3,r18
 8019d4c:	10800104 	addi	r2,r2,4
 8019d50:	d8802415 	stw	r2,144(sp)
 8019d54:	00800044 	movi	r2,1
 8019d58:	003d1d06 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019d5c:	d8c02417 	ldw	r3,144(sp)
 8019d60:	14800017 	ldw	r18,0(r2)
 8019d64:	002d883a 	mov	r22,zero
 8019d68:	18c00104 	addi	r3,r3,4
 8019d6c:	d8c02415 	stw	r3,144(sp)
 8019d70:	0005883a 	mov	r2,zero
 8019d74:	9007883a 	mov	r3,r18
 8019d78:	003d1506 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019d7c:	1c800017 	ldw	r18,0(r3)
 8019d80:	d9402417 	ldw	r5,144(sp)
 8019d84:	902dd7fa 	srai	r22,r18,31
 8019d88:	29400104 	addi	r5,r5,4
 8019d8c:	d9402415 	stw	r5,144(sp)
 8019d90:	b005883a 	mov	r2,r22
 8019d94:	003d8d06 	br	80193cc <__alt_data_end+0xfc0193cc>
 8019d98:	d9002417 	ldw	r4,144(sp)
 8019d9c:	d9402617 	ldw	r5,152(sp)
 8019da0:	20800017 	ldw	r2,0(r4)
 8019da4:	2807d7fa 	srai	r3,r5,31
 8019da8:	21000104 	addi	r4,r4,4
 8019dac:	d9002415 	stw	r4,144(sp)
 8019db0:	11400015 	stw	r5,0(r2)
 8019db4:	10c00115 	stw	r3,4(r2)
 8019db8:	003c4306 	br	8018ec8 <__alt_data_end+0xfc018ec8>
 8019dbc:	00800c04 	movi	r2,48
 8019dc0:	d8801d05 	stb	r2,116(sp)
 8019dc4:	d9801d45 	stb	r6,117(sp)
 8019dc8:	84000094 	ori	r16,r16,2
 8019dcc:	00800084 	movi	r2,2
 8019dd0:	003cff06 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019dd4:	a9800007 	ldb	r6,0(r21)
 8019dd8:	003c6306 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019ddc:	ad400044 	addi	r21,r21,1
 8019de0:	84000814 	ori	r16,r16,32
 8019de4:	11800047 	ldb	r6,1(r2)
 8019de8:	003c5f06 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019dec:	d9402217 	ldw	r5,136(sp)
 8019df0:	8809883a 	mov	r4,r17
 8019df4:	d9801a04 	addi	r6,sp,104
 8019df8:	8018c740 	call	8018c74 <__ssprint_r>
 8019dfc:	103f071e 	bne	r2,zero,8019a1c <__alt_data_end+0xfc019a1c>
 8019e00:	d8c01c17 	ldw	r3,112(sp)
 8019e04:	d8801b17 	ldw	r2,108(sp)
 8019e08:	d811883a 	mov	r8,sp
 8019e0c:	003e6706 	br	80197ac <__alt_data_end+0xfc0197ac>
 8019e10:	014200b4 	movhi	r5,2050
 8019e14:	29422004 	addi	r5,r5,2176
 8019e18:	d9402115 	stw	r5,132(sp)
 8019e1c:	003e8f06 	br	801985c <__alt_data_end+0xfc01985c>
 8019e20:	1c800017 	ldw	r18,0(r3)
 8019e24:	d8c02417 	ldw	r3,144(sp)
 8019e28:	902dd7fa 	srai	r22,r18,31
 8019e2c:	18c00104 	addi	r3,r3,4
 8019e30:	d8c02415 	stw	r3,144(sp)
 8019e34:	b005883a 	mov	r2,r22
 8019e38:	003d6406 	br	80193cc <__alt_data_end+0xfc0193cc>
 8019e3c:	d9002417 	ldw	r4,144(sp)
 8019e40:	14800017 	ldw	r18,0(r2)
 8019e44:	002d883a 	mov	r22,zero
 8019e48:	21000104 	addi	r4,r4,4
 8019e4c:	d9002415 	stw	r4,144(sp)
 8019e50:	00800044 	movi	r2,1
 8019e54:	9007883a 	mov	r3,r18
 8019e58:	003cdd06 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019e5c:	d9402417 	ldw	r5,144(sp)
 8019e60:	14800017 	ldw	r18,0(r2)
 8019e64:	002d883a 	mov	r22,zero
 8019e68:	29400104 	addi	r5,r5,4
 8019e6c:	d9402415 	stw	r5,144(sp)
 8019e70:	0005883a 	mov	r2,zero
 8019e74:	9007883a 	mov	r3,r18
 8019e78:	003cd506 	br	80191d0 <__alt_data_end+0xfc0191d0>
 8019e7c:	14800017 	ldw	r18,0(r2)
 8019e80:	d8802417 	ldw	r2,144(sp)
 8019e84:	002d883a 	mov	r22,zero
 8019e88:	10800104 	addi	r2,r2,4
 8019e8c:	d8802415 	stw	r2,144(sp)
 8019e90:	003cbe06 	br	801918c <__alt_data_end+0xfc01918c>
 8019e94:	8400100c 	andi	r16,r16,64
 8019e98:	80002b26 	beq	r16,zero,8019f48 <___svfiprintf_internal_r+0x110c>
 8019e9c:	d9402417 	ldw	r5,144(sp)
 8019ea0:	d8c02617 	ldw	r3,152(sp)
 8019ea4:	28800017 	ldw	r2,0(r5)
 8019ea8:	29400104 	addi	r5,r5,4
 8019eac:	d9402415 	stw	r5,144(sp)
 8019eb0:	10c0000d 	sth	r3,0(r2)
 8019eb4:	003c0406 	br	8018ec8 <__alt_data_end+0xfc018ec8>
 8019eb8:	d8c01e17 	ldw	r3,120(sp)
 8019ebc:	d9002717 	ldw	r4,156(sp)
 8019ec0:	1929c83a 	sub	r20,r3,r4
 8019ec4:	003f3106 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019ec8:	d9002717 	ldw	r4,156(sp)
 8019ecc:	ddc02d15 	stw	r23,180(sp)
 8019ed0:	800d1b80 	call	800d1b8 <strlen>
 8019ed4:	1029883a 	mov	r20,r2
 8019ed8:	ddc01d83 	ldbu	r23,118(sp)
 8019edc:	dd802415 	stw	r22,144(sp)
 8019ee0:	d8002015 	stw	zero,128(sp)
 8019ee4:	da002d17 	ldw	r8,180(sp)
 8019ee8:	003f2806 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019eec:	013fffc4 	movi	r4,-1
 8019ef0:	003deb06 	br	80196a0 <__alt_data_end+0xfc0196a0>
 8019ef4:	dd002017 	ldw	r20,128(sp)
 8019ef8:	00800184 	movi	r2,6
 8019efc:	1500012e 	bgeu	r2,r20,8019f04 <___svfiprintf_internal_r+0x10c8>
 8019f00:	1029883a 	mov	r20,r2
 8019f04:	a025883a 	mov	r18,r20
 8019f08:	a0002916 	blt	r20,zero,8019fb0 <___svfiprintf_internal_r+0x1174>
 8019f0c:	00c200b4 	movhi	r3,2050
 8019f10:	18c11704 	addi	r3,r3,1116
 8019f14:	dd802415 	stw	r22,144(sp)
 8019f18:	d8c02715 	stw	r3,156(sp)
 8019f1c:	003d4206 	br	8019428 <__alt_data_end+0xfc019428>
 8019f20:	04001004 	movi	r16,64
 8019f24:	800b883a 	mov	r5,r16
 8019f28:	80167500 	call	8016750 <_malloc_r>
 8019f2c:	d8c02217 	ldw	r3,136(sp)
 8019f30:	18800015 	stw	r2,0(r3)
 8019f34:	18800415 	stw	r2,16(r3)
 8019f38:	10002b26 	beq	r2,zero,8019fe8 <___svfiprintf_internal_r+0x11ac>
 8019f3c:	d9402217 	ldw	r5,136(sp)
 8019f40:	2c000515 	stw	r16,20(r5)
 8019f44:	003bd106 	br	8018e8c <__alt_data_end+0xfc018e8c>
 8019f48:	d9002417 	ldw	r4,144(sp)
 8019f4c:	d9402617 	ldw	r5,152(sp)
 8019f50:	20800017 	ldw	r2,0(r4)
 8019f54:	21000104 	addi	r4,r4,4
 8019f58:	d9002415 	stw	r4,144(sp)
 8019f5c:	11400015 	stw	r5,0(r2)
 8019f60:	003bd906 	br	8018ec8 <__alt_data_end+0xfc018ec8>
 8019f64:	014200b4 	movhi	r5,2050
 8019f68:	29422404 	addi	r5,r5,2192
 8019f6c:	d9402815 	stw	r5,160(sp)
 8019f70:	003d6506 	br	8019508 <__alt_data_end+0xfc019508>
 8019f74:	010200b4 	movhi	r4,2050
 8019f78:	21022404 	addi	r4,r4,2192
 8019f7c:	d9002815 	stw	r4,160(sp)
 8019f80:	003e6e06 	br	801993c <__alt_data_end+0xfc01993c>
 8019f84:	014200b4 	movhi	r5,2050
 8019f88:	29422004 	addi	r5,r5,2176
 8019f8c:	d9402115 	stw	r5,132(sp)
 8019f90:	003edf06 	br	8019b10 <__alt_data_end+0xfc019b10>
 8019f94:	d8002015 	stw	zero,128(sp)
 8019f98:	003bf406 	br	8018f6c <__alt_data_end+0xfc018f6c>
 8019f9c:	dd002017 	ldw	r20,128(sp)
 8019fa0:	ddc01d83 	ldbu	r23,118(sp)
 8019fa4:	dd802415 	stw	r22,144(sp)
 8019fa8:	d8002015 	stw	zero,128(sp)
 8019fac:	003ef706 	br	8019b8c <__alt_data_end+0xfc019b8c>
 8019fb0:	0025883a 	mov	r18,zero
 8019fb4:	003fd506 	br	8019f0c <__alt_data_end+0xfc019f0c>
 8019fb8:	d8c02417 	ldw	r3,144(sp)
 8019fbc:	a809883a 	mov	r4,r21
 8019fc0:	102b883a 	mov	r21,r2
 8019fc4:	18c00017 	ldw	r3,0(r3)
 8019fc8:	d8c02015 	stw	r3,128(sp)
 8019fcc:	d8c02417 	ldw	r3,144(sp)
 8019fd0:	d8802017 	ldw	r2,128(sp)
 8019fd4:	19400104 	addi	r5,r3,4
 8019fd8:	d9402415 	stw	r5,144(sp)
 8019fdc:	10000716 	blt	r2,zero,8019ffc <___svfiprintf_internal_r+0x11c0>
 8019fe0:	21800047 	ldb	r6,1(r4)
 8019fe4:	003be006 	br	8018f68 <__alt_data_end+0xfc018f68>
 8019fe8:	d9002917 	ldw	r4,164(sp)
 8019fec:	00800304 	movi	r2,12
 8019ff0:	20800015 	stw	r2,0(r4)
 8019ff4:	00bfffc4 	movi	r2,-1
 8019ff8:	003e8d06 	br	8019a30 <__alt_data_end+0xfc019a30>
 8019ffc:	00ffffc4 	movi	r3,-1
 801a000:	d8c02015 	stw	r3,128(sp)
 801a004:	21800047 	ldb	r6,1(r4)
 801a008:	003bd706 	br	8018f68 <__alt_data_end+0xfc018f68>

0801a00c <__sprint_r.part.0>:
 801a00c:	28801917 	ldw	r2,100(r5)
 801a010:	defff604 	addi	sp,sp,-40
 801a014:	dd400515 	stw	r21,20(sp)
 801a018:	dcc00315 	stw	r19,12(sp)
 801a01c:	dfc00915 	stw	ra,36(sp)
 801a020:	df000815 	stw	fp,32(sp)
 801a024:	ddc00715 	stw	r23,28(sp)
 801a028:	dd800615 	stw	r22,24(sp)
 801a02c:	dd000415 	stw	r20,16(sp)
 801a030:	dc800215 	stw	r18,8(sp)
 801a034:	dc400115 	stw	r17,4(sp)
 801a038:	dc000015 	stw	r16,0(sp)
 801a03c:	1088000c 	andi	r2,r2,8192
 801a040:	2827883a 	mov	r19,r5
 801a044:	302b883a 	mov	r21,r6
 801a048:	10002d26 	beq	r2,zero,801a100 <__sprint_r.part.0+0xf4>
 801a04c:	30800217 	ldw	r2,8(r6)
 801a050:	35800017 	ldw	r22,0(r6)
 801a054:	10002826 	beq	r2,zero,801a0f8 <__sprint_r.part.0+0xec>
 801a058:	2029883a 	mov	r20,r4
 801a05c:	b5c00104 	addi	r23,r22,4
 801a060:	04bfffc4 	movi	r18,-1
 801a064:	bc400017 	ldw	r17,0(r23)
 801a068:	b4000017 	ldw	r16,0(r22)
 801a06c:	0039883a 	mov	fp,zero
 801a070:	8822d0ba 	srli	r17,r17,2
 801a074:	04400316 	blt	zero,r17,801a084 <__sprint_r.part.0+0x78>
 801a078:	00001706 	br	801a0d8 <__sprint_r.part.0+0xcc>
 801a07c:	84000104 	addi	r16,r16,4
 801a080:	8f001526 	beq	r17,fp,801a0d8 <__sprint_r.part.0+0xcc>
 801a084:	81400017 	ldw	r5,0(r16)
 801a088:	a009883a 	mov	r4,r20
 801a08c:	980d883a 	mov	r6,r19
 801a090:	801b8040 	call	801b804 <_fputwc_r>
 801a094:	e7000044 	addi	fp,fp,1
 801a098:	14bff81e 	bne	r2,r18,801a07c <__alt_data_end+0xfc01a07c>
 801a09c:	9005883a 	mov	r2,r18
 801a0a0:	a8000215 	stw	zero,8(r21)
 801a0a4:	a8000115 	stw	zero,4(r21)
 801a0a8:	dfc00917 	ldw	ra,36(sp)
 801a0ac:	df000817 	ldw	fp,32(sp)
 801a0b0:	ddc00717 	ldw	r23,28(sp)
 801a0b4:	dd800617 	ldw	r22,24(sp)
 801a0b8:	dd400517 	ldw	r21,20(sp)
 801a0bc:	dd000417 	ldw	r20,16(sp)
 801a0c0:	dcc00317 	ldw	r19,12(sp)
 801a0c4:	dc800217 	ldw	r18,8(sp)
 801a0c8:	dc400117 	ldw	r17,4(sp)
 801a0cc:	dc000017 	ldw	r16,0(sp)
 801a0d0:	dec00a04 	addi	sp,sp,40
 801a0d4:	f800283a 	ret
 801a0d8:	a8c00217 	ldw	r3,8(r21)
 801a0dc:	8c63883a 	add	r17,r17,r17
 801a0e0:	8c63883a 	add	r17,r17,r17
 801a0e4:	1c45c83a 	sub	r2,r3,r17
 801a0e8:	a8800215 	stw	r2,8(r21)
 801a0ec:	b5800204 	addi	r22,r22,8
 801a0f0:	bdc00204 	addi	r23,r23,8
 801a0f4:	103fdb1e 	bne	r2,zero,801a064 <__alt_data_end+0xfc01a064>
 801a0f8:	0005883a 	mov	r2,zero
 801a0fc:	003fe806 	br	801a0a0 <__alt_data_end+0xfc01a0a0>
 801a100:	80152340 	call	8015234 <__sfvwrite_r>
 801a104:	003fe606 	br	801a0a0 <__alt_data_end+0xfc01a0a0>

0801a108 <__sprint_r>:
 801a108:	30c00217 	ldw	r3,8(r6)
 801a10c:	18000126 	beq	r3,zero,801a114 <__sprint_r+0xc>
 801a110:	801a00c1 	jmpi	801a00c <__sprint_r.part.0>
 801a114:	30000115 	stw	zero,4(r6)
 801a118:	0005883a 	mov	r2,zero
 801a11c:	f800283a 	ret

0801a120 <___vfiprintf_internal_r>:
 801a120:	defeca04 	addi	sp,sp,-1240
 801a124:	dcc12f15 	stw	r19,1212(sp)
 801a128:	dfc13515 	stw	ra,1236(sp)
 801a12c:	df013415 	stw	fp,1232(sp)
 801a130:	ddc13315 	stw	r23,1228(sp)
 801a134:	dd813215 	stw	r22,1224(sp)
 801a138:	dd413115 	stw	r21,1220(sp)
 801a13c:	dd013015 	stw	r20,1216(sp)
 801a140:	dc812e15 	stw	r18,1208(sp)
 801a144:	dc412d15 	stw	r17,1204(sp)
 801a148:	dc012c15 	stw	r16,1200(sp)
 801a14c:	d9012115 	stw	r4,1156(sp)
 801a150:	d9412015 	stw	r5,1152(sp)
 801a154:	d9c12315 	stw	r7,1164(sp)
 801a158:	3027883a 	mov	r19,r6
 801a15c:	20000226 	beq	r4,zero,801a168 <___vfiprintf_internal_r+0x48>
 801a160:	20800e17 	ldw	r2,56(r4)
 801a164:	1000f726 	beq	r2,zero,801a544 <___vfiprintf_internal_r+0x424>
 801a168:	d8812017 	ldw	r2,1152(sp)
 801a16c:	10c0030b 	ldhu	r3,12(r2)
 801a170:	1908000c 	andi	r4,r3,8192
 801a174:	1805883a 	mov	r2,r3
 801a178:	2000081e 	bne	r4,zero,801a19c <___vfiprintf_internal_r+0x7c>
 801a17c:	d9412017 	ldw	r5,1152(sp)
 801a180:	18880014 	ori	r2,r3,8192
 801a184:	00f7ffc4 	movi	r3,-8193
 801a188:	29001917 	ldw	r4,100(r5)
 801a18c:	2880030d 	sth	r2,12(r5)
 801a190:	20c8703a 	and	r4,r4,r3
 801a194:	29001915 	stw	r4,100(r5)
 801a198:	1007883a 	mov	r3,r2
 801a19c:	1100020c 	andi	r4,r2,8
 801a1a0:	2000a726 	beq	r4,zero,801a440 <___vfiprintf_internal_r+0x320>
 801a1a4:	d9412017 	ldw	r5,1152(sp)
 801a1a8:	29000417 	ldw	r4,16(r5)
 801a1ac:	2000a426 	beq	r4,zero,801a440 <___vfiprintf_internal_r+0x320>
 801a1b0:	1080068c 	andi	r2,r2,26
 801a1b4:	01000284 	movi	r4,10
 801a1b8:	1100ab26 	beq	r2,r4,801a468 <___vfiprintf_internal_r+0x348>
 801a1bc:	d9010a04 	addi	r4,sp,1064
 801a1c0:	d94109c4 	addi	r5,sp,1063
 801a1c4:	070200b4 	movhi	fp,2050
 801a1c8:	044200b4 	movhi	r17,2050
 801a1cc:	2145c83a 	sub	r2,r4,r5
 801a1d0:	e7022c04 	addi	fp,fp,2224
 801a1d4:	8c422804 	addi	r17,r17,2208
 801a1d8:	d9011e15 	stw	r4,1144(sp)
 801a1dc:	d9411f15 	stw	r5,1148(sp)
 801a1e0:	dec11a15 	stw	sp,1128(sp)
 801a1e4:	d8011c15 	stw	zero,1136(sp)
 801a1e8:	d8011b15 	stw	zero,1132(sp)
 801a1ec:	d8012715 	stw	zero,1180(sp)
 801a1f0:	d8012515 	stw	zero,1172(sp)
 801a1f4:	d811883a 	mov	r8,sp
 801a1f8:	d8812815 	stw	r2,1184(sp)
 801a1fc:	982f883a 	mov	r23,r19
 801a200:	b8800007 	ldb	r2,0(r23)
 801a204:	1003b026 	beq	r2,zero,801b0c8 <___vfiprintf_internal_r+0xfa8>
 801a208:	01000944 	movi	r4,37
 801a20c:	1103ae26 	beq	r2,r4,801b0c8 <___vfiprintf_internal_r+0xfa8>
 801a210:	b805883a 	mov	r2,r23
 801a214:	00000106 	br	801a21c <___vfiprintf_internal_r+0xfc>
 801a218:	19000326 	beq	r3,r4,801a228 <___vfiprintf_internal_r+0x108>
 801a21c:	10800044 	addi	r2,r2,1
 801a220:	10c00007 	ldb	r3,0(r2)
 801a224:	183ffc1e 	bne	r3,zero,801a218 <__alt_data_end+0xfc01a218>
 801a228:	15e1c83a 	sub	r16,r2,r23
 801a22c:	1029883a 	mov	r20,r2
 801a230:	80001026 	beq	r16,zero,801a274 <___vfiprintf_internal_r+0x154>
 801a234:	d8c11c17 	ldw	r3,1136(sp)
 801a238:	d8811b17 	ldw	r2,1132(sp)
 801a23c:	45c00015 	stw	r23,0(r8)
 801a240:	80c7883a 	add	r3,r16,r3
 801a244:	10800044 	addi	r2,r2,1
 801a248:	44000115 	stw	r16,4(r8)
 801a24c:	d8c11c15 	stw	r3,1136(sp)
 801a250:	d8811b15 	stw	r2,1132(sp)
 801a254:	010001c4 	movi	r4,7
 801a258:	2080740e 	bge	r4,r2,801a42c <___vfiprintf_internal_r+0x30c>
 801a25c:	1803a71e 	bne	r3,zero,801b0fc <___vfiprintf_internal_r+0xfdc>
 801a260:	d8c12517 	ldw	r3,1172(sp)
 801a264:	d8011b15 	stw	zero,1132(sp)
 801a268:	d811883a 	mov	r8,sp
 801a26c:	1c07883a 	add	r3,r3,r16
 801a270:	d8c12515 	stw	r3,1172(sp)
 801a274:	a0800007 	ldb	r2,0(r20)
 801a278:	1002bf26 	beq	r2,zero,801ad78 <___vfiprintf_internal_r+0xc58>
 801a27c:	a5c00044 	addi	r23,r20,1
 801a280:	a1800047 	ldb	r6,1(r20)
 801a284:	d8011d85 	stb	zero,1142(sp)
 801a288:	d8012205 	stb	zero,1160(sp)
 801a28c:	043fffc4 	movi	r16,-1
 801a290:	d8012415 	stw	zero,1168(sp)
 801a294:	0025883a 	mov	r18,zero
 801a298:	05001604 	movi	r20,88
 801a29c:	05400244 	movi	r21,9
 801a2a0:	4027883a 	mov	r19,r8
 801a2a4:	bdc00044 	addi	r23,r23,1
 801a2a8:	30bff804 	addi	r2,r6,-32
 801a2ac:	a0825636 	bltu	r20,r2,801ac08 <___vfiprintf_internal_r+0xae8>
 801a2b0:	100490ba 	slli	r2,r2,2
 801a2b4:	010200b4 	movhi	r4,2050
 801a2b8:	2128b204 	addi	r4,r4,-23864
 801a2bc:	1105883a 	add	r2,r2,r4
 801a2c0:	10800017 	ldw	r2,0(r2)
 801a2c4:	1000683a 	jmp	r2
 801a2c8:	0801ab98 	cmpnei	zero,at,1710
 801a2cc:	0801ac08 	cmpgei	zero,at,1712
 801a2d0:	0801ac08 	cmpgei	zero,at,1712
 801a2d4:	0801abfc 	xorhi	zero,at,1711
 801a2d8:	0801ac08 	cmpgei	zero,at,1712
 801a2dc:	0801ac08 	cmpgei	zero,at,1712
 801a2e0:	0801ac08 	cmpgei	zero,at,1712
 801a2e4:	0801ac08 	cmpgei	zero,at,1712
 801a2e8:	0801ac08 	cmpgei	zero,at,1712
 801a2ec:	0801ac08 	cmpgei	zero,at,1712
 801a2f0:	0801a988 	cmpgei	zero,at,1702
 801a2f4:	0801abb0 	cmpltui	zero,at,1710
 801a2f8:	0801ac08 	cmpgei	zero,at,1712
 801a2fc:	0801a55c 	xori	zero,at,1685
 801a300:	0801a9ac 	andhi	zero,at,1702
 801a304:	0801ac08 	cmpgei	zero,at,1712
 801a308:	0801a568 	cmpgeui	zero,at,1685
 801a30c:	0801a574 	orhi	zero,at,1685
 801a310:	0801a574 	orhi	zero,at,1685
 801a314:	0801a574 	orhi	zero,at,1685
 801a318:	0801a574 	orhi	zero,at,1685
 801a31c:	0801a574 	orhi	zero,at,1685
 801a320:	0801a574 	orhi	zero,at,1685
 801a324:	0801a574 	orhi	zero,at,1685
 801a328:	0801a574 	orhi	zero,at,1685
 801a32c:	0801a574 	orhi	zero,at,1685
 801a330:	0801ac08 	cmpgei	zero,at,1712
 801a334:	0801ac08 	cmpgei	zero,at,1712
 801a338:	0801ac08 	cmpgei	zero,at,1712
 801a33c:	0801ac08 	cmpgei	zero,at,1712
 801a340:	0801ac08 	cmpgei	zero,at,1712
 801a344:	0801ac08 	cmpgei	zero,at,1712
 801a348:	0801ac08 	cmpgei	zero,at,1712
 801a34c:	0801ac08 	cmpgei	zero,at,1712
 801a350:	0801ac08 	cmpgei	zero,at,1712
 801a354:	0801ac08 	cmpgei	zero,at,1712
 801a358:	0801a5b4 	orhi	zero,at,1686
 801a35c:	0801ac08 	cmpgei	zero,at,1712
 801a360:	0801ac08 	cmpgei	zero,at,1712
 801a364:	0801ac08 	cmpgei	zero,at,1712
 801a368:	0801ac08 	cmpgei	zero,at,1712
 801a36c:	0801ac08 	cmpgei	zero,at,1712
 801a370:	0801ac08 	cmpgei	zero,at,1712
 801a374:	0801ac08 	cmpgei	zero,at,1712
 801a378:	0801ac08 	cmpgei	zero,at,1712
 801a37c:	0801ac08 	cmpgei	zero,at,1712
 801a380:	0801ac08 	cmpgei	zero,at,1712
 801a384:	0801a8a4 	muli	zero,at,1698
 801a388:	0801ac08 	cmpgei	zero,at,1712
 801a38c:	0801ac08 	cmpgei	zero,at,1712
 801a390:	0801ac08 	cmpgei	zero,at,1712
 801a394:	0801ac08 	cmpgei	zero,at,1712
 801a398:	0801ac08 	cmpgei	zero,at,1712
 801a39c:	0801a8e4 	muli	zero,at,1699
 801a3a0:	0801ac08 	cmpgei	zero,at,1712
 801a3a4:	0801ac08 	cmpgei	zero,at,1712
 801a3a8:	0801a928 	cmpgeui	zero,at,1700
 801a3ac:	0801ac08 	cmpgei	zero,at,1712
 801a3b0:	0801ac08 	cmpgei	zero,at,1712
 801a3b4:	0801ac08 	cmpgei	zero,at,1712
 801a3b8:	0801ac08 	cmpgei	zero,at,1712
 801a3bc:	0801ac08 	cmpgei	zero,at,1712
 801a3c0:	0801ac08 	cmpgei	zero,at,1712
 801a3c4:	0801ac08 	cmpgei	zero,at,1712
 801a3c8:	0801ac08 	cmpgei	zero,at,1712
 801a3cc:	0801ac08 	cmpgei	zero,at,1712
 801a3d0:	0801ac08 	cmpgei	zero,at,1712
 801a3d4:	0801a870 	cmpltui	zero,at,1697
 801a3d8:	0801abc0 	call	801abc <__alt_mem_onchip_memory2_0+0x801abc>
 801a3dc:	0801ac08 	cmpgei	zero,at,1712
 801a3e0:	0801ac08 	cmpgei	zero,at,1712
 801a3e4:	0801ac08 	cmpgei	zero,at,1712
 801a3e8:	0801a9fc 	xorhi	zero,at,1703
 801a3ec:	0801abc0 	call	801abc <__alt_mem_onchip_memory2_0+0x801abc>
 801a3f0:	0801ac08 	cmpgei	zero,at,1712
 801a3f4:	0801ac08 	cmpgei	zero,at,1712
 801a3f8:	0801a914 	ori	zero,at,1700
 801a3fc:	0801ac08 	cmpgei	zero,at,1712
 801a400:	0801ab60 	cmpeqi	zero,at,1709
 801a404:	0801aae8 	cmpgeui	zero,at,1707
 801a408:	0801ab1c 	xori	zero,at,1708
 801a40c:	0801aa08 	cmpgei	zero,at,1704
 801a410:	0801ac08 	cmpgei	zero,at,1712
 801a414:	0801aa14 	ori	zero,at,1704
 801a418:	0801ac08 	cmpgei	zero,at,1712
 801a41c:	0801aa70 	cmpltui	zero,at,1705
 801a420:	0801ac08 	cmpgei	zero,at,1712
 801a424:	0801ac08 	cmpgei	zero,at,1712
 801a428:	0801aaa4 	muli	zero,at,1706
 801a42c:	42000204 	addi	r8,r8,8
 801a430:	d8c12517 	ldw	r3,1172(sp)
 801a434:	1c07883a 	add	r3,r3,r16
 801a438:	d8c12515 	stw	r3,1172(sp)
 801a43c:	003f8d06 	br	801a274 <__alt_data_end+0xfc01a274>
 801a440:	d9012117 	ldw	r4,1156(sp)
 801a444:	d9412017 	ldw	r5,1152(sp)
 801a448:	8012d940 	call	8012d94 <__swsetup_r>
 801a44c:	1000301e 	bne	r2,zero,801a510 <___vfiprintf_internal_r+0x3f0>
 801a450:	d8812017 	ldw	r2,1152(sp)
 801a454:	01000284 	movi	r4,10
 801a458:	10c0030b 	ldhu	r3,12(r2)
 801a45c:	1805883a 	mov	r2,r3
 801a460:	1080068c 	andi	r2,r2,26
 801a464:	113f551e 	bne	r2,r4,801a1bc <__alt_data_end+0xfc01a1bc>
 801a468:	d9012017 	ldw	r4,1152(sp)
 801a46c:	2080038b 	ldhu	r2,14(r4)
 801a470:	113fffcc 	andi	r4,r2,65535
 801a474:	2120001c 	xori	r4,r4,32768
 801a478:	21200004 	addi	r4,r4,-32768
 801a47c:	203f4f16 	blt	r4,zero,801a1bc <__alt_data_end+0xfc01a1bc>
 801a480:	d9412017 	ldw	r5,1152(sp)
 801a484:	d9012117 	ldw	r4,1156(sp)
 801a488:	d9c12317 	ldw	r7,1164(sp)
 801a48c:	2b001917 	ldw	r12,100(r5)
 801a490:	2ac00717 	ldw	r11,28(r5)
 801a494:	2a800917 	ldw	r10,36(r5)
 801a498:	02010004 	movi	r8,1024
 801a49c:	18ffff4c 	andi	r3,r3,65533
 801a4a0:	da0b883a 	add	r5,sp,r8
 801a4a4:	980d883a 	mov	r6,r19
 801a4a8:	d8c1030d 	sth	r3,1036(sp)
 801a4ac:	db011915 	stw	r12,1124(sp)
 801a4b0:	d881038d 	sth	r2,1038(sp)
 801a4b4:	dac10715 	stw	r11,1052(sp)
 801a4b8:	da810915 	stw	r10,1060(sp)
 801a4bc:	dec10015 	stw	sp,1024(sp)
 801a4c0:	dec10415 	stw	sp,1040(sp)
 801a4c4:	da010215 	stw	r8,1032(sp)
 801a4c8:	da010515 	stw	r8,1044(sp)
 801a4cc:	d8010615 	stw	zero,1048(sp)
 801a4d0:	801a1200 	call	801a120 <___vfiprintf_internal_r>
 801a4d4:	1021883a 	mov	r16,r2
 801a4d8:	10000416 	blt	r2,zero,801a4ec <___vfiprintf_internal_r+0x3cc>
 801a4dc:	d9012117 	ldw	r4,1156(sp)
 801a4e0:	d9410004 	addi	r5,sp,1024
 801a4e4:	80148140 	call	8014814 <_fflush_r>
 801a4e8:	10040f1e 	bne	r2,zero,801b528 <___vfiprintf_internal_r+0x1408>
 801a4ec:	d881030b 	ldhu	r2,1036(sp)
 801a4f0:	1080100c 	andi	r2,r2,64
 801a4f4:	10000426 	beq	r2,zero,801a508 <___vfiprintf_internal_r+0x3e8>
 801a4f8:	d8c12017 	ldw	r3,1152(sp)
 801a4fc:	1880030b 	ldhu	r2,12(r3)
 801a500:	10801014 	ori	r2,r2,64
 801a504:	1880030d 	sth	r2,12(r3)
 801a508:	8005883a 	mov	r2,r16
 801a50c:	00000106 	br	801a514 <___vfiprintf_internal_r+0x3f4>
 801a510:	00bfffc4 	movi	r2,-1
 801a514:	dfc13517 	ldw	ra,1236(sp)
 801a518:	df013417 	ldw	fp,1232(sp)
 801a51c:	ddc13317 	ldw	r23,1228(sp)
 801a520:	dd813217 	ldw	r22,1224(sp)
 801a524:	dd413117 	ldw	r21,1220(sp)
 801a528:	dd013017 	ldw	r20,1216(sp)
 801a52c:	dcc12f17 	ldw	r19,1212(sp)
 801a530:	dc812e17 	ldw	r18,1208(sp)
 801a534:	dc412d17 	ldw	r17,1204(sp)
 801a538:	dc012c17 	ldw	r16,1200(sp)
 801a53c:	dec13604 	addi	sp,sp,1240
 801a540:	f800283a 	ret
 801a544:	8014dd00 	call	8014dd0 <__sinit>
 801a548:	003f0706 	br	801a168 <__alt_data_end+0xfc01a168>
 801a54c:	d8c12417 	ldw	r3,1168(sp)
 801a550:	d8812315 	stw	r2,1164(sp)
 801a554:	00c7c83a 	sub	r3,zero,r3
 801a558:	d8c12415 	stw	r3,1168(sp)
 801a55c:	94800114 	ori	r18,r18,4
 801a560:	b9800007 	ldb	r6,0(r23)
 801a564:	003f4f06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801a568:	94802014 	ori	r18,r18,128
 801a56c:	b9800007 	ldb	r6,0(r23)
 801a570:	003f4c06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801a574:	dc012615 	stw	r16,1176(sp)
 801a578:	d8012415 	stw	zero,1168(sp)
 801a57c:	35bff404 	addi	r22,r6,-48
 801a580:	0009883a 	mov	r4,zero
 801a584:	b821883a 	mov	r16,r23
 801a588:	01400284 	movi	r5,10
 801a58c:	8009fe40 	call	8009fe4 <__mulsi3>
 801a590:	81800007 	ldb	r6,0(r16)
 801a594:	1589883a 	add	r4,r2,r22
 801a598:	bdc00044 	addi	r23,r23,1
 801a59c:	35bff404 	addi	r22,r6,-48
 801a5a0:	b821883a 	mov	r16,r23
 801a5a4:	adbff82e 	bgeu	r21,r22,801a588 <__alt_data_end+0xfc01a588>
 801a5a8:	d9012415 	stw	r4,1168(sp)
 801a5ac:	dc012617 	ldw	r16,1176(sp)
 801a5b0:	003f3d06 	br	801a2a8 <__alt_data_end+0xfc01a2a8>
 801a5b4:	d8c12203 	ldbu	r3,1160(sp)
 801a5b8:	94800414 	ori	r18,r18,16
 801a5bc:	9080080c 	andi	r2,r18,32
 801a5c0:	d8c11d85 	stb	r3,1142(sp)
 801a5c4:	9811883a 	mov	r8,r19
 801a5c8:	d8c12317 	ldw	r3,1164(sp)
 801a5cc:	10018226 	beq	r2,zero,801abd8 <___vfiprintf_internal_r+0xab8>
 801a5d0:	d9012317 	ldw	r4,1164(sp)
 801a5d4:	18800117 	ldw	r2,4(r3)
 801a5d8:	1cc00017 	ldw	r19,0(r3)
 801a5dc:	21000204 	addi	r4,r4,8
 801a5e0:	d9012315 	stw	r4,1164(sp)
 801a5e4:	102b883a 	mov	r21,r2
 801a5e8:	10030016 	blt	r2,zero,801b1ec <___vfiprintf_internal_r+0x10cc>
 801a5ec:	dd811d83 	ldbu	r22,1142(sp)
 801a5f0:	8029883a 	mov	r20,r16
 801a5f4:	00800044 	movi	r2,1
 801a5f8:	9d46b03a 	or	r3,r19,r21
 801a5fc:	80000216 	blt	r16,zero,801a608 <___vfiprintf_internal_r+0x4e8>
 801a600:	013fdfc4 	movi	r4,-129
 801a604:	9124703a 	and	r18,r18,r4
 801a608:	1801b41e 	bne	r3,zero,801acdc <___vfiprintf_internal_r+0xbbc>
 801a60c:	80028126 	beq	r16,zero,801b014 <___vfiprintf_internal_r+0xef4>
 801a610:	10803fcc 	andi	r2,r2,255
 801a614:	00c00044 	movi	r3,1
 801a618:	10c1d126 	beq	r2,r3,801ad60 <___vfiprintf_internal_r+0xc40>
 801a61c:	00c00084 	movi	r3,2
 801a620:	10c28626 	beq	r2,r3,801b03c <___vfiprintf_internal_r+0xf1c>
 801a624:	d8c10a04 	addi	r3,sp,1064
 801a628:	9808d0fa 	srli	r4,r19,3
 801a62c:	a80a977a 	slli	r5,r21,29
 801a630:	a82ad0fa 	srli	r21,r21,3
 801a634:	9cc001cc 	andi	r19,r19,7
 801a638:	98800c04 	addi	r2,r19,48
 801a63c:	18ffffc4 	addi	r3,r3,-1
 801a640:	2926b03a 	or	r19,r5,r4
 801a644:	18800005 	stb	r2,0(r3)
 801a648:	9d48b03a 	or	r4,r19,r21
 801a64c:	203ff61e 	bne	r4,zero,801a628 <__alt_data_end+0xfc01a628>
 801a650:	9100004c 	andi	r4,r18,1
 801a654:	d8c12215 	stw	r3,1160(sp)
 801a658:	2002b31e 	bne	r4,zero,801b128 <___vfiprintf_internal_r+0x1008>
 801a65c:	d9411e17 	ldw	r5,1144(sp)
 801a660:	28e9c83a 	sub	r20,r5,r3
 801a664:	a02b883a 	mov	r21,r20
 801a668:	a400010e 	bge	r20,r16,801a670 <___vfiprintf_internal_r+0x550>
 801a66c:	802b883a 	mov	r21,r16
 801a670:	b5803fcc 	andi	r22,r22,255
 801a674:	b580201c 	xori	r22,r22,128
 801a678:	b5bfe004 	addi	r22,r22,-128
 801a67c:	b0000126 	beq	r22,zero,801a684 <___vfiprintf_internal_r+0x564>
 801a680:	ad400044 	addi	r21,r21,1
 801a684:	9280008c 	andi	r10,r18,2
 801a688:	50000126 	beq	r10,zero,801a690 <___vfiprintf_internal_r+0x570>
 801a68c:	ad400084 	addi	r21,r21,2
 801a690:	9580210c 	andi	r22,r18,132
 801a694:	b001751e 	bne	r22,zero,801ac6c <___vfiprintf_internal_r+0xb4c>
 801a698:	d9012417 	ldw	r4,1168(sp)
 801a69c:	2567c83a 	sub	r19,r4,r21
 801a6a0:	04c1720e 	bge	zero,r19,801ac6c <___vfiprintf_internal_r+0xb4c>
 801a6a4:	01c00404 	movi	r7,16
 801a6a8:	d8c11c17 	ldw	r3,1136(sp)
 801a6ac:	3cc36b0e 	bge	r7,r19,801b45c <___vfiprintf_internal_r+0x133c>
 801a6b0:	008200b4 	movhi	r2,2050
 801a6b4:	10822c04 	addi	r2,r2,2224
 801a6b8:	dc012915 	stw	r16,1188(sp)
 801a6bc:	d9011b17 	ldw	r4,1132(sp)
 801a6c0:	9821883a 	mov	r16,r19
 801a6c4:	d8812615 	stw	r2,1176(sp)
 801a6c8:	030001c4 	movi	r12,7
 801a6cc:	5027883a 	mov	r19,r10
 801a6d0:	00000506 	br	801a6e8 <___vfiprintf_internal_r+0x5c8>
 801a6d4:	21400084 	addi	r5,r4,2
 801a6d8:	42000204 	addi	r8,r8,8
 801a6dc:	1009883a 	mov	r4,r2
 801a6e0:	843ffc04 	addi	r16,r16,-16
 801a6e4:	3c000d0e 	bge	r7,r16,801a71c <___vfiprintf_internal_r+0x5fc>
 801a6e8:	18c00404 	addi	r3,r3,16
 801a6ec:	20800044 	addi	r2,r4,1
 801a6f0:	47000015 	stw	fp,0(r8)
 801a6f4:	41c00115 	stw	r7,4(r8)
 801a6f8:	d8c11c15 	stw	r3,1136(sp)
 801a6fc:	d8811b15 	stw	r2,1132(sp)
 801a700:	60bff40e 	bge	r12,r2,801a6d4 <__alt_data_end+0xfc01a6d4>
 801a704:	18014b1e 	bne	r3,zero,801ac34 <___vfiprintf_internal_r+0xb14>
 801a708:	843ffc04 	addi	r16,r16,-16
 801a70c:	0009883a 	mov	r4,zero
 801a710:	01400044 	movi	r5,1
 801a714:	d811883a 	mov	r8,sp
 801a718:	3c3ff316 	blt	r7,r16,801a6e8 <__alt_data_end+0xfc01a6e8>
 801a71c:	9815883a 	mov	r10,r19
 801a720:	8027883a 	mov	r19,r16
 801a724:	dc012917 	ldw	r16,1188(sp)
 801a728:	d9012617 	ldw	r4,1176(sp)
 801a72c:	98c7883a 	add	r3,r19,r3
 801a730:	44c00115 	stw	r19,4(r8)
 801a734:	41000015 	stw	r4,0(r8)
 801a738:	d8c11c15 	stw	r3,1136(sp)
 801a73c:	d9411b15 	stw	r5,1132(sp)
 801a740:	008001c4 	movi	r2,7
 801a744:	11425116 	blt	r2,r5,801b08c <___vfiprintf_internal_r+0xf6c>
 801a748:	d9011d87 	ldb	r4,1142(sp)
 801a74c:	42000204 	addi	r8,r8,8
 801a750:	28800044 	addi	r2,r5,1
 801a754:	20014a1e 	bne	r4,zero,801ac80 <___vfiprintf_internal_r+0xb60>
 801a758:	50000c26 	beq	r10,zero,801a78c <___vfiprintf_internal_r+0x66c>
 801a75c:	d9011d04 	addi	r4,sp,1140
 801a760:	18c00084 	addi	r3,r3,2
 801a764:	41000015 	stw	r4,0(r8)
 801a768:	01000084 	movi	r4,2
 801a76c:	41000115 	stw	r4,4(r8)
 801a770:	d8c11c15 	stw	r3,1136(sp)
 801a774:	d8811b15 	stw	r2,1132(sp)
 801a778:	010001c4 	movi	r4,7
 801a77c:	20822016 	blt	r4,r2,801b000 <___vfiprintf_internal_r+0xee0>
 801a780:	100b883a 	mov	r5,r2
 801a784:	42000204 	addi	r8,r8,8
 801a788:	10800044 	addi	r2,r2,1
 801a78c:	01002004 	movi	r4,128
 801a790:	b101de26 	beq	r22,r4,801af0c <___vfiprintf_internal_r+0xdec>
 801a794:	8521c83a 	sub	r16,r16,r20
 801a798:	0400230e 	bge	zero,r16,801a828 <___vfiprintf_internal_r+0x708>
 801a79c:	04c00404 	movi	r19,16
 801a7a0:	9c030d0e 	bge	r19,r16,801b3d8 <___vfiprintf_internal_r+0x12b8>
 801a7a4:	008200b4 	movhi	r2,2050
 801a7a8:	10822804 	addi	r2,r2,2208
 801a7ac:	d8812615 	stw	r2,1176(sp)
 801a7b0:	058001c4 	movi	r22,7
 801a7b4:	00000506 	br	801a7cc <___vfiprintf_internal_r+0x6ac>
 801a7b8:	28800084 	addi	r2,r5,2
 801a7bc:	42000204 	addi	r8,r8,8
 801a7c0:	200b883a 	mov	r5,r4
 801a7c4:	843ffc04 	addi	r16,r16,-16
 801a7c8:	9c000d0e 	bge	r19,r16,801a800 <___vfiprintf_internal_r+0x6e0>
 801a7cc:	18c00404 	addi	r3,r3,16
 801a7d0:	29000044 	addi	r4,r5,1
 801a7d4:	44400015 	stw	r17,0(r8)
 801a7d8:	44c00115 	stw	r19,4(r8)
 801a7dc:	d8c11c15 	stw	r3,1136(sp)
 801a7e0:	d9011b15 	stw	r4,1132(sp)
 801a7e4:	b13ff40e 	bge	r22,r4,801a7b8 <__alt_data_end+0xfc01a7b8>
 801a7e8:	1801321e 	bne	r3,zero,801acb4 <___vfiprintf_internal_r+0xb94>
 801a7ec:	843ffc04 	addi	r16,r16,-16
 801a7f0:	000b883a 	mov	r5,zero
 801a7f4:	00800044 	movi	r2,1
 801a7f8:	d811883a 	mov	r8,sp
 801a7fc:	9c3ff316 	blt	r19,r16,801a7cc <__alt_data_end+0xfc01a7cc>
 801a800:	d9012617 	ldw	r4,1176(sp)
 801a804:	1c07883a 	add	r3,r3,r16
 801a808:	44000115 	stw	r16,4(r8)
 801a80c:	41000015 	stw	r4,0(r8)
 801a810:	d8c11c15 	stw	r3,1136(sp)
 801a814:	d8811b15 	stw	r2,1132(sp)
 801a818:	010001c4 	movi	r4,7
 801a81c:	20816216 	blt	r4,r2,801ada8 <___vfiprintf_internal_r+0xc88>
 801a820:	42000204 	addi	r8,r8,8
 801a824:	10800044 	addi	r2,r2,1
 801a828:	d9012217 	ldw	r4,1160(sp)
 801a82c:	1d07883a 	add	r3,r3,r20
 801a830:	45000115 	stw	r20,4(r8)
 801a834:	41000015 	stw	r4,0(r8)
 801a838:	d8c11c15 	stw	r3,1136(sp)
 801a83c:	d8811b15 	stw	r2,1132(sp)
 801a840:	010001c4 	movi	r4,7
 801a844:	2081610e 	bge	r4,r2,801adcc <___vfiprintf_internal_r+0xcac>
 801a848:	1802211e 	bne	r3,zero,801b0d0 <___vfiprintf_internal_r+0xfb0>
 801a84c:	d8011b15 	stw	zero,1132(sp)
 801a850:	9480010c 	andi	r18,r18,4
 801a854:	9002171e 	bne	r18,zero,801b0b4 <___vfiprintf_internal_r+0xf94>
 801a858:	d9412417 	ldw	r5,1168(sp)
 801a85c:	a9433716 	blt	r21,r5,801b53c <___vfiprintf_internal_r+0x141c>
 801a860:	d8812517 	ldw	r2,1172(sp)
 801a864:	1545883a 	add	r2,r2,r21
 801a868:	d8812515 	stw	r2,1172(sp)
 801a86c:	00019a06 	br	801aed8 <___vfiprintf_internal_r+0xdb8>
 801a870:	d8c12317 	ldw	r3,1164(sp)
 801a874:	05400044 	movi	r21,1
 801a878:	9811883a 	mov	r8,r19
 801a87c:	18800017 	ldw	r2,0(r3)
 801a880:	18c00104 	addi	r3,r3,4
 801a884:	d8c12315 	stw	r3,1164(sp)
 801a888:	d8c10004 	addi	r3,sp,1024
 801a88c:	d8011d85 	stb	zero,1142(sp)
 801a890:	d8810005 	stb	r2,1024(sp)
 801a894:	a829883a 	mov	r20,r21
 801a898:	d8c12215 	stw	r3,1160(sp)
 801a89c:	0021883a 	mov	r16,zero
 801a8a0:	003f7806 	br	801a684 <__alt_data_end+0xfc01a684>
 801a8a4:	94800414 	ori	r18,r18,16
 801a8a8:	9080080c 	andi	r2,r18,32
 801a8ac:	9811883a 	mov	r8,r19
 801a8b0:	10009026 	beq	r2,zero,801aaf4 <___vfiprintf_internal_r+0x9d4>
 801a8b4:	d8812317 	ldw	r2,1164(sp)
 801a8b8:	d8c12317 	ldw	r3,1164(sp)
 801a8bc:	14c00017 	ldw	r19,0(r2)
 801a8c0:	15400117 	ldw	r21,4(r2)
 801a8c4:	18c00204 	addi	r3,r3,8
 801a8c8:	d8c12315 	stw	r3,1164(sp)
 801a8cc:	0005883a 	mov	r2,zero
 801a8d0:	9d46b03a 	or	r3,r19,r21
 801a8d4:	d8011d85 	stb	zero,1142(sp)
 801a8d8:	8029883a 	mov	r20,r16
 801a8dc:	002d883a 	mov	r22,zero
 801a8e0:	003f4606 	br	801a5fc <__alt_data_end+0xfc01a5fc>
 801a8e4:	94800414 	ori	r18,r18,16
 801a8e8:	9080080c 	andi	r2,r18,32
 801a8ec:	9811883a 	mov	r8,r19
 801a8f0:	10006226 	beq	r2,zero,801aa7c <___vfiprintf_internal_r+0x95c>
 801a8f4:	d9012317 	ldw	r4,1164(sp)
 801a8f8:	00800044 	movi	r2,1
 801a8fc:	24c00017 	ldw	r19,0(r4)
 801a900:	25400117 	ldw	r21,4(r4)
 801a904:	21000204 	addi	r4,r4,8
 801a908:	d9012315 	stw	r4,1164(sp)
 801a90c:	9d46b03a 	or	r3,r19,r21
 801a910:	003ff006 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801a914:	b9800007 	ldb	r6,0(r23)
 801a918:	00801b04 	movi	r2,108
 801a91c:	3082b226 	beq	r6,r2,801b3e8 <___vfiprintf_internal_r+0x12c8>
 801a920:	94800414 	ori	r18,r18,16
 801a924:	003e5f06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801a928:	d8c12203 	ldbu	r3,1160(sp)
 801a92c:	010200b4 	movhi	r4,2050
 801a930:	21010d04 	addi	r4,r4,1076
 801a934:	d8c11d85 	stb	r3,1142(sp)
 801a938:	d9012715 	stw	r4,1180(sp)
 801a93c:	90c0080c 	andi	r3,r18,32
 801a940:	9811883a 	mov	r8,r19
 801a944:	d8812317 	ldw	r2,1164(sp)
 801a948:	18005f26 	beq	r3,zero,801aac8 <___vfiprintf_internal_r+0x9a8>
 801a94c:	d9012317 	ldw	r4,1164(sp)
 801a950:	14c00017 	ldw	r19,0(r2)
 801a954:	15400117 	ldw	r21,4(r2)
 801a958:	21000204 	addi	r4,r4,8
 801a95c:	d9012315 	stw	r4,1164(sp)
 801a960:	9080004c 	andi	r2,r18,1
 801a964:	1001e226 	beq	r2,zero,801b0f0 <___vfiprintf_internal_r+0xfd0>
 801a968:	9d46b03a 	or	r3,r19,r21
 801a96c:	18024e26 	beq	r3,zero,801b2a8 <___vfiprintf_internal_r+0x1188>
 801a970:	00800c04 	movi	r2,48
 801a974:	d8811d05 	stb	r2,1140(sp)
 801a978:	d9811d45 	stb	r6,1141(sp)
 801a97c:	94800094 	ori	r18,r18,2
 801a980:	00800084 	movi	r2,2
 801a984:	003fd306 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801a988:	d9012317 	ldw	r4,1164(sp)
 801a98c:	d9412317 	ldw	r5,1164(sp)
 801a990:	21000017 	ldw	r4,0(r4)
 801a994:	28800104 	addi	r2,r5,4
 801a998:	d9012415 	stw	r4,1168(sp)
 801a99c:	203eeb16 	blt	r4,zero,801a54c <__alt_data_end+0xfc01a54c>
 801a9a0:	d8812315 	stw	r2,1164(sp)
 801a9a4:	b9800007 	ldb	r6,0(r23)
 801a9a8:	003e3e06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801a9ac:	b9800007 	ldb	r6,0(r23)
 801a9b0:	01000a84 	movi	r4,42
 801a9b4:	b8800044 	addi	r2,r23,1
 801a9b8:	3102d226 	beq	r6,r4,801b504 <___vfiprintf_internal_r+0x13e4>
 801a9bc:	35bff404 	addi	r22,r6,-48
 801a9c0:	102f883a 	mov	r23,r2
 801a9c4:	0021883a 	mov	r16,zero
 801a9c8:	adbe3736 	bltu	r21,r22,801a2a8 <__alt_data_end+0xfc01a2a8>
 801a9cc:	0009883a 	mov	r4,zero
 801a9d0:	01400284 	movi	r5,10
 801a9d4:	8009fe40 	call	8009fe4 <__mulsi3>
 801a9d8:	b9800007 	ldb	r6,0(r23)
 801a9dc:	b089883a 	add	r4,r22,r2
 801a9e0:	bdc00044 	addi	r23,r23,1
 801a9e4:	35bff404 	addi	r22,r6,-48
 801a9e8:	adbff92e 	bgeu	r21,r22,801a9d0 <__alt_data_end+0xfc01a9d0>
 801a9ec:	2021883a 	mov	r16,r4
 801a9f0:	203e2d0e 	bge	r4,zero,801a2a8 <__alt_data_end+0xfc01a2a8>
 801a9f4:	043fffc4 	movi	r16,-1
 801a9f8:	003e2b06 	br	801a2a8 <__alt_data_end+0xfc01a2a8>
 801a9fc:	94801014 	ori	r18,r18,64
 801aa00:	b9800007 	ldb	r6,0(r23)
 801aa04:	003e2706 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801aa08:	94800814 	ori	r18,r18,32
 801aa0c:	b9800007 	ldb	r6,0(r23)
 801aa10:	003e2406 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801aa14:	d9412317 	ldw	r5,1164(sp)
 801aa18:	d8812317 	ldw	r2,1164(sp)
 801aa1c:	d8011d85 	stb	zero,1142(sp)
 801aa20:	29400017 	ldw	r5,0(r5)
 801aa24:	9811883a 	mov	r8,r19
 801aa28:	14c00104 	addi	r19,r2,4
 801aa2c:	d9412215 	stw	r5,1160(sp)
 801aa30:	28029026 	beq	r5,zero,801b474 <___vfiprintf_internal_r+0x1354>
 801aa34:	d9012217 	ldw	r4,1160(sp)
 801aa38:	80027616 	blt	r16,zero,801b414 <___vfiprintf_internal_r+0x12f4>
 801aa3c:	000b883a 	mov	r5,zero
 801aa40:	800d883a 	mov	r6,r16
 801aa44:	da012a15 	stw	r8,1192(sp)
 801aa48:	8016ef80 	call	8016ef8 <memchr>
 801aa4c:	da012a17 	ldw	r8,1192(sp)
 801aa50:	1002a026 	beq	r2,zero,801b4d4 <___vfiprintf_internal_r+0x13b4>
 801aa54:	d8c12217 	ldw	r3,1160(sp)
 801aa58:	10e9c83a 	sub	r20,r2,r3
 801aa5c:	85023816 	blt	r16,r20,801b340 <___vfiprintf_internal_r+0x1220>
 801aa60:	dd811d83 	ldbu	r22,1142(sp)
 801aa64:	dcc12315 	stw	r19,1164(sp)
 801aa68:	0021883a 	mov	r16,zero
 801aa6c:	003efd06 	br	801a664 <__alt_data_end+0xfc01a664>
 801aa70:	9080080c 	andi	r2,r18,32
 801aa74:	9811883a 	mov	r8,r19
 801aa78:	103f9e1e 	bne	r2,zero,801a8f4 <__alt_data_end+0xfc01a8f4>
 801aa7c:	9080040c 	andi	r2,r18,16
 801aa80:	10021726 	beq	r2,zero,801b2e0 <___vfiprintf_internal_r+0x11c0>
 801aa84:	d9412317 	ldw	r5,1164(sp)
 801aa88:	002b883a 	mov	r21,zero
 801aa8c:	00800044 	movi	r2,1
 801aa90:	2cc00017 	ldw	r19,0(r5)
 801aa94:	29400104 	addi	r5,r5,4
 801aa98:	d9412315 	stw	r5,1164(sp)
 801aa9c:	9807883a 	mov	r3,r19
 801aaa0:	003f8c06 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801aaa4:	d8c12203 	ldbu	r3,1160(sp)
 801aaa8:	010200b4 	movhi	r4,2050
 801aaac:	21011204 	addi	r4,r4,1096
 801aab0:	d8c11d85 	stb	r3,1142(sp)
 801aab4:	d9012715 	stw	r4,1180(sp)
 801aab8:	90c0080c 	andi	r3,r18,32
 801aabc:	9811883a 	mov	r8,r19
 801aac0:	d8812317 	ldw	r2,1164(sp)
 801aac4:	183fa11e 	bne	r3,zero,801a94c <__alt_data_end+0xfc01a94c>
 801aac8:	90c0040c 	andi	r3,r18,16
 801aacc:	1801e526 	beq	r3,zero,801b264 <___vfiprintf_internal_r+0x1144>
 801aad0:	d9412317 	ldw	r5,1164(sp)
 801aad4:	14c00017 	ldw	r19,0(r2)
 801aad8:	002b883a 	mov	r21,zero
 801aadc:	29400104 	addi	r5,r5,4
 801aae0:	d9412315 	stw	r5,1164(sp)
 801aae4:	003f9e06 	br	801a960 <__alt_data_end+0xfc01a960>
 801aae8:	9080080c 	andi	r2,r18,32
 801aaec:	9811883a 	mov	r8,r19
 801aaf0:	103f701e 	bne	r2,zero,801a8b4 <__alt_data_end+0xfc01a8b4>
 801aaf4:	9080040c 	andi	r2,r18,16
 801aaf8:	1001ef26 	beq	r2,zero,801b2b8 <___vfiprintf_internal_r+0x1198>
 801aafc:	d9012317 	ldw	r4,1164(sp)
 801ab00:	002b883a 	mov	r21,zero
 801ab04:	0005883a 	mov	r2,zero
 801ab08:	24c00017 	ldw	r19,0(r4)
 801ab0c:	21000104 	addi	r4,r4,4
 801ab10:	d9012315 	stw	r4,1164(sp)
 801ab14:	9807883a 	mov	r3,r19
 801ab18:	003f6e06 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801ab1c:	d8c12317 	ldw	r3,1164(sp)
 801ab20:	9811883a 	mov	r8,r19
 801ab24:	00800c04 	movi	r2,48
 801ab28:	1cc00017 	ldw	r19,0(r3)
 801ab2c:	010200b4 	movhi	r4,2050
 801ab30:	18c00104 	addi	r3,r3,4
 801ab34:	d8811d05 	stb	r2,1140(sp)
 801ab38:	21011204 	addi	r4,r4,1096
 801ab3c:	00801e04 	movi	r2,120
 801ab40:	d8811d45 	stb	r2,1141(sp)
 801ab44:	d8c12315 	stw	r3,1164(sp)
 801ab48:	002b883a 	mov	r21,zero
 801ab4c:	94800094 	ori	r18,r18,2
 801ab50:	d9012715 	stw	r4,1180(sp)
 801ab54:	00800084 	movi	r2,2
 801ab58:	9807883a 	mov	r3,r19
 801ab5c:	003f5d06 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801ab60:	d8c12203 	ldbu	r3,1160(sp)
 801ab64:	9080080c 	andi	r2,r18,32
 801ab68:	9811883a 	mov	r8,r19
 801ab6c:	d8c11d85 	stb	r3,1142(sp)
 801ab70:	1001b126 	beq	r2,zero,801b238 <___vfiprintf_internal_r+0x1118>
 801ab74:	d9012317 	ldw	r4,1164(sp)
 801ab78:	d9412517 	ldw	r5,1172(sp)
 801ab7c:	20800017 	ldw	r2,0(r4)
 801ab80:	2807d7fa 	srai	r3,r5,31
 801ab84:	21000104 	addi	r4,r4,4
 801ab88:	d9012315 	stw	r4,1164(sp)
 801ab8c:	11400015 	stw	r5,0(r2)
 801ab90:	10c00115 	stw	r3,4(r2)
 801ab94:	003d9a06 	br	801a200 <__alt_data_end+0xfc01a200>
 801ab98:	d8812207 	ldb	r2,1160(sp)
 801ab9c:	1001c41e 	bne	r2,zero,801b2b0 <___vfiprintf_internal_r+0x1190>
 801aba0:	00c00804 	movi	r3,32
 801aba4:	d8c12205 	stb	r3,1160(sp)
 801aba8:	b9800007 	ldb	r6,0(r23)
 801abac:	003dbd06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801abb0:	00c00ac4 	movi	r3,43
 801abb4:	d8c12205 	stb	r3,1160(sp)
 801abb8:	b9800007 	ldb	r6,0(r23)
 801abbc:	003db906 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801abc0:	d8c12203 	ldbu	r3,1160(sp)
 801abc4:	9080080c 	andi	r2,r18,32
 801abc8:	9811883a 	mov	r8,r19
 801abcc:	d8c11d85 	stb	r3,1142(sp)
 801abd0:	d8c12317 	ldw	r3,1164(sp)
 801abd4:	103e7e1e 	bne	r2,zero,801a5d0 <__alt_data_end+0xfc01a5d0>
 801abd8:	9080040c 	andi	r2,r18,16
 801abdc:	1001a926 	beq	r2,zero,801b284 <___vfiprintf_internal_r+0x1164>
 801abe0:	1cc00017 	ldw	r19,0(r3)
 801abe4:	d9412317 	ldw	r5,1164(sp)
 801abe8:	982bd7fa 	srai	r21,r19,31
 801abec:	29400104 	addi	r5,r5,4
 801abf0:	d9412315 	stw	r5,1164(sp)
 801abf4:	a805883a 	mov	r2,r21
 801abf8:	003e7b06 	br	801a5e8 <__alt_data_end+0xfc01a5e8>
 801abfc:	94800054 	ori	r18,r18,1
 801ac00:	b9800007 	ldb	r6,0(r23)
 801ac04:	003da706 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801ac08:	d8c12203 	ldbu	r3,1160(sp)
 801ac0c:	9811883a 	mov	r8,r19
 801ac10:	d8c11d85 	stb	r3,1142(sp)
 801ac14:	30005826 	beq	r6,zero,801ad78 <___vfiprintf_internal_r+0xc58>
 801ac18:	05400044 	movi	r21,1
 801ac1c:	d8c10004 	addi	r3,sp,1024
 801ac20:	d9810005 	stb	r6,1024(sp)
 801ac24:	d8011d85 	stb	zero,1142(sp)
 801ac28:	a829883a 	mov	r20,r21
 801ac2c:	d8c12215 	stw	r3,1160(sp)
 801ac30:	003f1a06 	br	801a89c <__alt_data_end+0xfc01a89c>
 801ac34:	d9012117 	ldw	r4,1156(sp)
 801ac38:	d9412017 	ldw	r5,1152(sp)
 801ac3c:	d9811a04 	addi	r6,sp,1128
 801ac40:	d9c12a15 	stw	r7,1192(sp)
 801ac44:	db012b15 	stw	r12,1196(sp)
 801ac48:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801ac4c:	d9c12a17 	ldw	r7,1192(sp)
 801ac50:	db012b17 	ldw	r12,1196(sp)
 801ac54:	10004e1e 	bne	r2,zero,801ad90 <___vfiprintf_internal_r+0xc70>
 801ac58:	d9011b17 	ldw	r4,1132(sp)
 801ac5c:	d8c11c17 	ldw	r3,1136(sp)
 801ac60:	d811883a 	mov	r8,sp
 801ac64:	21400044 	addi	r5,r4,1
 801ac68:	003e9d06 	br	801a6e0 <__alt_data_end+0xfc01a6e0>
 801ac6c:	d9411b17 	ldw	r5,1132(sp)
 801ac70:	d8c11c17 	ldw	r3,1136(sp)
 801ac74:	28800044 	addi	r2,r5,1
 801ac78:	d9011d87 	ldb	r4,1142(sp)
 801ac7c:	203eb626 	beq	r4,zero,801a758 <__alt_data_end+0xfc01a758>
 801ac80:	01000044 	movi	r4,1
 801ac84:	d9411d84 	addi	r5,sp,1142
 801ac88:	1907883a 	add	r3,r3,r4
 801ac8c:	41400015 	stw	r5,0(r8)
 801ac90:	41000115 	stw	r4,4(r8)
 801ac94:	d8c11c15 	stw	r3,1136(sp)
 801ac98:	d8811b15 	stw	r2,1132(sp)
 801ac9c:	014001c4 	movi	r5,7
 801aca0:	2880ce16 	blt	r5,r2,801afdc <___vfiprintf_internal_r+0xebc>
 801aca4:	100b883a 	mov	r5,r2
 801aca8:	42000204 	addi	r8,r8,8
 801acac:	10800044 	addi	r2,r2,1
 801acb0:	003ea906 	br	801a758 <__alt_data_end+0xfc01a758>
 801acb4:	d9012117 	ldw	r4,1156(sp)
 801acb8:	d9412017 	ldw	r5,1152(sp)
 801acbc:	d9811a04 	addi	r6,sp,1128
 801acc0:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801acc4:	1000321e 	bne	r2,zero,801ad90 <___vfiprintf_internal_r+0xc70>
 801acc8:	d9411b17 	ldw	r5,1132(sp)
 801accc:	d8c11c17 	ldw	r3,1136(sp)
 801acd0:	d811883a 	mov	r8,sp
 801acd4:	28800044 	addi	r2,r5,1
 801acd8:	003eba06 	br	801a7c4 <__alt_data_end+0xfc01a7c4>
 801acdc:	10803fcc 	andi	r2,r2,255
 801ace0:	00c00044 	movi	r3,1
 801ace4:	10fe4d1e 	bne	r2,r3,801a61c <__alt_data_end+0xfc01a61c>
 801ace8:	a800021e 	bne	r21,zero,801acf4 <___vfiprintf_internal_r+0xbd4>
 801acec:	00800244 	movi	r2,9
 801acf0:	14c01b2e 	bgeu	r2,r19,801ad60 <___vfiprintf_internal_r+0xc40>
 801acf4:	dc012215 	stw	r16,1160(sp)
 801acf8:	dd010a04 	addi	r20,sp,1064
 801acfc:	a821883a 	mov	r16,r21
 801ad00:	402b883a 	mov	r21,r8
 801ad04:	9809883a 	mov	r4,r19
 801ad08:	800b883a 	mov	r5,r16
 801ad0c:	01800284 	movi	r6,10
 801ad10:	000f883a 	mov	r7,zero
 801ad14:	801c4f40 	call	801c4f4 <__umoddi3>
 801ad18:	10800c04 	addi	r2,r2,48
 801ad1c:	a53fffc4 	addi	r20,r20,-1
 801ad20:	9809883a 	mov	r4,r19
 801ad24:	800b883a 	mov	r5,r16
 801ad28:	01800284 	movi	r6,10
 801ad2c:	000f883a 	mov	r7,zero
 801ad30:	a0800005 	stb	r2,0(r20)
 801ad34:	801beb40 	call	801beb4 <__udivdi3>
 801ad38:	1027883a 	mov	r19,r2
 801ad3c:	10c4b03a 	or	r2,r2,r3
 801ad40:	1821883a 	mov	r16,r3
 801ad44:	103fef1e 	bne	r2,zero,801ad04 <__alt_data_end+0xfc01ad04>
 801ad48:	d9011e17 	ldw	r4,1144(sp)
 801ad4c:	dc012217 	ldw	r16,1160(sp)
 801ad50:	a811883a 	mov	r8,r21
 801ad54:	dd012215 	stw	r20,1160(sp)
 801ad58:	2529c83a 	sub	r20,r4,r20
 801ad5c:	003e4106 	br	801a664 <__alt_data_end+0xfc01a664>
 801ad60:	9cc00c04 	addi	r19,r19,48
 801ad64:	d8c109c4 	addi	r3,sp,1063
 801ad68:	dcc109c5 	stb	r19,1063(sp)
 801ad6c:	dd012817 	ldw	r20,1184(sp)
 801ad70:	d8c12215 	stw	r3,1160(sp)
 801ad74:	003e3b06 	br	801a664 <__alt_data_end+0xfc01a664>
 801ad78:	d8811c17 	ldw	r2,1136(sp)
 801ad7c:	10000426 	beq	r2,zero,801ad90 <___vfiprintf_internal_r+0xc70>
 801ad80:	d9012117 	ldw	r4,1156(sp)
 801ad84:	d9412017 	ldw	r5,1152(sp)
 801ad88:	d9811a04 	addi	r6,sp,1128
 801ad8c:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801ad90:	d9412017 	ldw	r5,1152(sp)
 801ad94:	2880030b 	ldhu	r2,12(r5)
 801ad98:	1080100c 	andi	r2,r2,64
 801ad9c:	103ddc1e 	bne	r2,zero,801a510 <__alt_data_end+0xfc01a510>
 801ada0:	d8812517 	ldw	r2,1172(sp)
 801ada4:	003ddb06 	br	801a514 <__alt_data_end+0xfc01a514>
 801ada8:	1801061e 	bne	r3,zero,801b1c4 <___vfiprintf_internal_r+0x10a4>
 801adac:	d8c12217 	ldw	r3,1160(sp)
 801adb0:	00800044 	movi	r2,1
 801adb4:	dd000115 	stw	r20,4(sp)
 801adb8:	d8c00015 	stw	r3,0(sp)
 801adbc:	dd011c15 	stw	r20,1136(sp)
 801adc0:	d8811b15 	stw	r2,1132(sp)
 801adc4:	a007883a 	mov	r3,r20
 801adc8:	d811883a 	mov	r8,sp
 801adcc:	42000204 	addi	r8,r8,8
 801add0:	9480010c 	andi	r18,r18,4
 801add4:	90003426 	beq	r18,zero,801aea8 <___vfiprintf_internal_r+0xd88>
 801add8:	d9412417 	ldw	r5,1168(sp)
 801addc:	2d65c83a 	sub	r18,r5,r21
 801ade0:	0480310e 	bge	zero,r18,801aea8 <___vfiprintf_internal_r+0xd88>
 801ade4:	04000404 	movi	r16,16
 801ade8:	8481ad0e 	bge	r16,r18,801b4a0 <___vfiprintf_internal_r+0x1380>
 801adec:	014200b4 	movhi	r5,2050
 801adf0:	29422c04 	addi	r5,r5,2224
 801adf4:	d9011b17 	ldw	r4,1132(sp)
 801adf8:	d9412615 	stw	r5,1176(sp)
 801adfc:	04c001c4 	movi	r19,7
 801ae00:	dd012117 	ldw	r20,1156(sp)
 801ae04:	dd812017 	ldw	r22,1152(sp)
 801ae08:	00000506 	br	801ae20 <___vfiprintf_internal_r+0xd00>
 801ae0c:	21400084 	addi	r5,r4,2
 801ae10:	42000204 	addi	r8,r8,8
 801ae14:	1009883a 	mov	r4,r2
 801ae18:	94bffc04 	addi	r18,r18,-16
 801ae1c:	84800d0e 	bge	r16,r18,801ae54 <___vfiprintf_internal_r+0xd34>
 801ae20:	18c00404 	addi	r3,r3,16
 801ae24:	20800044 	addi	r2,r4,1
 801ae28:	47000015 	stw	fp,0(r8)
 801ae2c:	44000115 	stw	r16,4(r8)
 801ae30:	d8c11c15 	stw	r3,1136(sp)
 801ae34:	d8811b15 	stw	r2,1132(sp)
 801ae38:	98bff40e 	bge	r19,r2,801ae0c <__alt_data_end+0xfc01ae0c>
 801ae3c:	1800291e 	bne	r3,zero,801aee4 <___vfiprintf_internal_r+0xdc4>
 801ae40:	94bffc04 	addi	r18,r18,-16
 801ae44:	0009883a 	mov	r4,zero
 801ae48:	01400044 	movi	r5,1
 801ae4c:	d811883a 	mov	r8,sp
 801ae50:	84bff316 	blt	r16,r18,801ae20 <__alt_data_end+0xfc01ae20>
 801ae54:	d8812617 	ldw	r2,1176(sp)
 801ae58:	1c87883a 	add	r3,r3,r18
 801ae5c:	44800115 	stw	r18,4(r8)
 801ae60:	40800015 	stw	r2,0(r8)
 801ae64:	d8c11c15 	stw	r3,1136(sp)
 801ae68:	d9411b15 	stw	r5,1132(sp)
 801ae6c:	008001c4 	movi	r2,7
 801ae70:	11400d0e 	bge	r2,r5,801aea8 <___vfiprintf_internal_r+0xd88>
 801ae74:	1800061e 	bne	r3,zero,801ae90 <___vfiprintf_internal_r+0xd70>
 801ae78:	d8c12417 	ldw	r3,1168(sp)
 801ae7c:	a8c12e16 	blt	r21,r3,801b338 <___vfiprintf_internal_r+0x1218>
 801ae80:	d9012517 	ldw	r4,1172(sp)
 801ae84:	2549883a 	add	r4,r4,r21
 801ae88:	d9012515 	stw	r4,1172(sp)
 801ae8c:	00001206 	br	801aed8 <___vfiprintf_internal_r+0xdb8>
 801ae90:	d9012117 	ldw	r4,1156(sp)
 801ae94:	d9412017 	ldw	r5,1152(sp)
 801ae98:	d9811a04 	addi	r6,sp,1128
 801ae9c:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801aea0:	103fbb1e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801aea4:	d8c11c17 	ldw	r3,1136(sp)
 801aea8:	d8812417 	ldw	r2,1168(sp)
 801aeac:	a880010e 	bge	r21,r2,801aeb4 <___vfiprintf_internal_r+0xd94>
 801aeb0:	102b883a 	mov	r21,r2
 801aeb4:	d9012517 	ldw	r4,1172(sp)
 801aeb8:	2549883a 	add	r4,r4,r21
 801aebc:	d9012515 	stw	r4,1172(sp)
 801aec0:	18000526 	beq	r3,zero,801aed8 <___vfiprintf_internal_r+0xdb8>
 801aec4:	d9012117 	ldw	r4,1156(sp)
 801aec8:	d9412017 	ldw	r5,1152(sp)
 801aecc:	d9811a04 	addi	r6,sp,1128
 801aed0:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801aed4:	103fae1e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801aed8:	d8011b15 	stw	zero,1132(sp)
 801aedc:	d811883a 	mov	r8,sp
 801aee0:	003cc706 	br	801a200 <__alt_data_end+0xfc01a200>
 801aee4:	a009883a 	mov	r4,r20
 801aee8:	b00b883a 	mov	r5,r22
 801aeec:	d9811a04 	addi	r6,sp,1128
 801aef0:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801aef4:	103fa61e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801aef8:	d9011b17 	ldw	r4,1132(sp)
 801aefc:	d8c11c17 	ldw	r3,1136(sp)
 801af00:	d811883a 	mov	r8,sp
 801af04:	21400044 	addi	r5,r4,1
 801af08:	003fc306 	br	801ae18 <__alt_data_end+0xfc01ae18>
 801af0c:	d9012417 	ldw	r4,1168(sp)
 801af10:	256dc83a 	sub	r22,r4,r21
 801af14:	05be1f0e 	bge	zero,r22,801a794 <__alt_data_end+0xfc01a794>
 801af18:	04c00404 	movi	r19,16
 801af1c:	9d81720e 	bge	r19,r22,801b4e8 <___vfiprintf_internal_r+0x13c8>
 801af20:	008200b4 	movhi	r2,2050
 801af24:	10822804 	addi	r2,r2,2208
 801af28:	d8812615 	stw	r2,1176(sp)
 801af2c:	028001c4 	movi	r10,7
 801af30:	00000506 	br	801af48 <___vfiprintf_internal_r+0xe28>
 801af34:	29000084 	addi	r4,r5,2
 801af38:	42000204 	addi	r8,r8,8
 801af3c:	100b883a 	mov	r5,r2
 801af40:	b5bffc04 	addi	r22,r22,-16
 801af44:	9d800d0e 	bge	r19,r22,801af7c <___vfiprintf_internal_r+0xe5c>
 801af48:	18c00404 	addi	r3,r3,16
 801af4c:	28800044 	addi	r2,r5,1
 801af50:	44400015 	stw	r17,0(r8)
 801af54:	44c00115 	stw	r19,4(r8)
 801af58:	d8c11c15 	stw	r3,1136(sp)
 801af5c:	d8811b15 	stw	r2,1132(sp)
 801af60:	50bff40e 	bge	r10,r2,801af34 <__alt_data_end+0xfc01af34>
 801af64:	1800111e 	bne	r3,zero,801afac <___vfiprintf_internal_r+0xe8c>
 801af68:	b5bffc04 	addi	r22,r22,-16
 801af6c:	000b883a 	mov	r5,zero
 801af70:	01000044 	movi	r4,1
 801af74:	d811883a 	mov	r8,sp
 801af78:	9dbff316 	blt	r19,r22,801af48 <__alt_data_end+0xfc01af48>
 801af7c:	d9412617 	ldw	r5,1176(sp)
 801af80:	1d87883a 	add	r3,r3,r22
 801af84:	45800115 	stw	r22,4(r8)
 801af88:	41400015 	stw	r5,0(r8)
 801af8c:	d8c11c15 	stw	r3,1136(sp)
 801af90:	d9011b15 	stw	r4,1132(sp)
 801af94:	008001c4 	movi	r2,7
 801af98:	11008516 	blt	r2,r4,801b1b0 <___vfiprintf_internal_r+0x1090>
 801af9c:	42000204 	addi	r8,r8,8
 801afa0:	20800044 	addi	r2,r4,1
 801afa4:	200b883a 	mov	r5,r4
 801afa8:	003dfa06 	br	801a794 <__alt_data_end+0xfc01a794>
 801afac:	d9012117 	ldw	r4,1156(sp)
 801afb0:	d9412017 	ldw	r5,1152(sp)
 801afb4:	d9811a04 	addi	r6,sp,1128
 801afb8:	da812a15 	stw	r10,1192(sp)
 801afbc:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801afc0:	da812a17 	ldw	r10,1192(sp)
 801afc4:	103f721e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801afc8:	d9411b17 	ldw	r5,1132(sp)
 801afcc:	d8c11c17 	ldw	r3,1136(sp)
 801afd0:	d811883a 	mov	r8,sp
 801afd4:	29000044 	addi	r4,r5,1
 801afd8:	003fd906 	br	801af40 <__alt_data_end+0xfc01af40>
 801afdc:	1800681e 	bne	r3,zero,801b180 <___vfiprintf_internal_r+0x1060>
 801afe0:	50004d26 	beq	r10,zero,801b118 <___vfiprintf_internal_r+0xff8>
 801afe4:	d8811d04 	addi	r2,sp,1140
 801afe8:	00c00084 	movi	r3,2
 801afec:	d8800015 	stw	r2,0(sp)
 801aff0:	d8c00115 	stw	r3,4(sp)
 801aff4:	2005883a 	mov	r2,r4
 801aff8:	d811883a 	mov	r8,sp
 801affc:	003de006 	br	801a780 <__alt_data_end+0xfc01a780>
 801b000:	1800551e 	bne	r3,zero,801b158 <___vfiprintf_internal_r+0x1038>
 801b004:	000b883a 	mov	r5,zero
 801b008:	00800044 	movi	r2,1
 801b00c:	d811883a 	mov	r8,sp
 801b010:	003dde06 	br	801a78c <__alt_data_end+0xfc01a78c>
 801b014:	10803fcc 	andi	r2,r2,255
 801b018:	1000191e 	bne	r2,zero,801b080 <___vfiprintf_internal_r+0xf60>
 801b01c:	9080004c 	andi	r2,r18,1
 801b020:	10001726 	beq	r2,zero,801b080 <___vfiprintf_internal_r+0xf60>
 801b024:	00800c04 	movi	r2,48
 801b028:	d8c109c4 	addi	r3,sp,1063
 801b02c:	d88109c5 	stb	r2,1063(sp)
 801b030:	dd012817 	ldw	r20,1184(sp)
 801b034:	d8c12215 	stw	r3,1160(sp)
 801b038:	003d8a06 	br	801a664 <__alt_data_end+0xfc01a664>
 801b03c:	d9012717 	ldw	r4,1180(sp)
 801b040:	dd010a04 	addi	r20,sp,1064
 801b044:	988003cc 	andi	r2,r19,15
 801b048:	a806973a 	slli	r3,r21,28
 801b04c:	2085883a 	add	r2,r4,r2
 801b050:	9826d13a 	srli	r19,r19,4
 801b054:	10800003 	ldbu	r2,0(r2)
 801b058:	a82ad13a 	srli	r21,r21,4
 801b05c:	a53fffc4 	addi	r20,r20,-1
 801b060:	1ce6b03a 	or	r19,r3,r19
 801b064:	a0800005 	stb	r2,0(r20)
 801b068:	9d44b03a 	or	r2,r19,r21
 801b06c:	103ff51e 	bne	r2,zero,801b044 <__alt_data_end+0xfc01b044>
 801b070:	d9411e17 	ldw	r5,1144(sp)
 801b074:	dd012215 	stw	r20,1160(sp)
 801b078:	2d29c83a 	sub	r20,r5,r20
 801b07c:	003d7906 	br	801a664 <__alt_data_end+0xfc01a664>
 801b080:	d8c10a04 	addi	r3,sp,1064
 801b084:	d8c12215 	stw	r3,1160(sp)
 801b088:	003d7606 	br	801a664 <__alt_data_end+0xfc01a664>
 801b08c:	18009e1e 	bne	r3,zero,801b308 <___vfiprintf_internal_r+0x11e8>
 801b090:	d8811d87 	ldb	r2,1142(sp)
 801b094:	10005f26 	beq	r2,zero,801b214 <___vfiprintf_internal_r+0x10f4>
 801b098:	00c00044 	movi	r3,1
 801b09c:	d9011d84 	addi	r4,sp,1142
 801b0a0:	1805883a 	mov	r2,r3
 801b0a4:	d9000015 	stw	r4,0(sp)
 801b0a8:	d8c00115 	stw	r3,4(sp)
 801b0ac:	d811883a 	mov	r8,sp
 801b0b0:	003efc06 	br	801aca4 <__alt_data_end+0xfc01aca4>
 801b0b4:	d9412417 	ldw	r5,1168(sp)
 801b0b8:	d811883a 	mov	r8,sp
 801b0bc:	2d65c83a 	sub	r18,r5,r21
 801b0c0:	04bf4816 	blt	zero,r18,801ade4 <__alt_data_end+0xfc01ade4>
 801b0c4:	003f6c06 	br	801ae78 <__alt_data_end+0xfc01ae78>
 801b0c8:	b829883a 	mov	r20,r23
 801b0cc:	003c6906 	br	801a274 <__alt_data_end+0xfc01a274>
 801b0d0:	d9012117 	ldw	r4,1156(sp)
 801b0d4:	d9412017 	ldw	r5,1152(sp)
 801b0d8:	d9811a04 	addi	r6,sp,1128
 801b0dc:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b0e0:	103f2b1e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b0e4:	d8c11c17 	ldw	r3,1136(sp)
 801b0e8:	d811883a 	mov	r8,sp
 801b0ec:	003f3806 	br	801add0 <__alt_data_end+0xfc01add0>
 801b0f0:	00800084 	movi	r2,2
 801b0f4:	9d46b03a 	or	r3,r19,r21
 801b0f8:	003df606 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801b0fc:	d9012117 	ldw	r4,1156(sp)
 801b100:	d9412017 	ldw	r5,1152(sp)
 801b104:	d9811a04 	addi	r6,sp,1128
 801b108:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b10c:	103f201e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b110:	d811883a 	mov	r8,sp
 801b114:	003cc606 	br	801a430 <__alt_data_end+0xfc01a430>
 801b118:	000b883a 	mov	r5,zero
 801b11c:	2005883a 	mov	r2,r4
 801b120:	d811883a 	mov	r8,sp
 801b124:	003d9906 	br	801a78c <__alt_data_end+0xfc01a78c>
 801b128:	10803fcc 	andi	r2,r2,255
 801b12c:	1080201c 	xori	r2,r2,128
 801b130:	10bfe004 	addi	r2,r2,-128
 801b134:	01000c04 	movi	r4,48
 801b138:	1100b226 	beq	r2,r4,801b404 <___vfiprintf_internal_r+0x12e4>
 801b13c:	d9412217 	ldw	r5,1160(sp)
 801b140:	d8811e17 	ldw	r2,1144(sp)
 801b144:	193fffc5 	stb	r4,-1(r3)
 801b148:	297fffc4 	addi	r5,r5,-1
 801b14c:	d9412215 	stw	r5,1160(sp)
 801b150:	1169c83a 	sub	r20,r2,r5
 801b154:	003d4306 	br	801a664 <__alt_data_end+0xfc01a664>
 801b158:	d9012117 	ldw	r4,1156(sp)
 801b15c:	d9412017 	ldw	r5,1152(sp)
 801b160:	d9811a04 	addi	r6,sp,1128
 801b164:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b168:	103f091e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b16c:	d9411b17 	ldw	r5,1132(sp)
 801b170:	d8c11c17 	ldw	r3,1136(sp)
 801b174:	d811883a 	mov	r8,sp
 801b178:	28800044 	addi	r2,r5,1
 801b17c:	003d8306 	br	801a78c <__alt_data_end+0xfc01a78c>
 801b180:	d9012117 	ldw	r4,1156(sp)
 801b184:	d9412017 	ldw	r5,1152(sp)
 801b188:	d9811a04 	addi	r6,sp,1128
 801b18c:	da812a15 	stw	r10,1192(sp)
 801b190:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b194:	da812a17 	ldw	r10,1192(sp)
 801b198:	103efd1e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b19c:	d9411b17 	ldw	r5,1132(sp)
 801b1a0:	d8c11c17 	ldw	r3,1136(sp)
 801b1a4:	d811883a 	mov	r8,sp
 801b1a8:	28800044 	addi	r2,r5,1
 801b1ac:	003d6a06 	br	801a758 <__alt_data_end+0xfc01a758>
 801b1b0:	1800a01e 	bne	r3,zero,801b434 <___vfiprintf_internal_r+0x1314>
 801b1b4:	000b883a 	mov	r5,zero
 801b1b8:	00800044 	movi	r2,1
 801b1bc:	d811883a 	mov	r8,sp
 801b1c0:	003d7406 	br	801a794 <__alt_data_end+0xfc01a794>
 801b1c4:	d9012117 	ldw	r4,1156(sp)
 801b1c8:	d9412017 	ldw	r5,1152(sp)
 801b1cc:	d9811a04 	addi	r6,sp,1128
 801b1d0:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b1d4:	103eee1e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b1d8:	d8811b17 	ldw	r2,1132(sp)
 801b1dc:	d8c11c17 	ldw	r3,1136(sp)
 801b1e0:	d811883a 	mov	r8,sp
 801b1e4:	10800044 	addi	r2,r2,1
 801b1e8:	003d8f06 	br	801a828 <__alt_data_end+0xfc01a828>
 801b1ec:	04e7c83a 	sub	r19,zero,r19
 801b1f0:	9804c03a 	cmpne	r2,r19,zero
 801b1f4:	056bc83a 	sub	r21,zero,r21
 801b1f8:	a8abc83a 	sub	r21,r21,r2
 801b1fc:	05800b44 	movi	r22,45
 801b200:	dd811d85 	stb	r22,1142(sp)
 801b204:	8029883a 	mov	r20,r16
 801b208:	00800044 	movi	r2,1
 801b20c:	9d46b03a 	or	r3,r19,r21
 801b210:	003cfa06 	br	801a5fc <__alt_data_end+0xfc01a5fc>
 801b214:	000b883a 	mov	r5,zero
 801b218:	00800044 	movi	r2,1
 801b21c:	d811883a 	mov	r8,sp
 801b220:	503d5a26 	beq	r10,zero,801a78c <__alt_data_end+0xfc01a78c>
 801b224:	00c00084 	movi	r3,2
 801b228:	d9011d04 	addi	r4,sp,1140
 801b22c:	d9000015 	stw	r4,0(sp)
 801b230:	d8c00115 	stw	r3,4(sp)
 801b234:	003d5206 	br	801a780 <__alt_data_end+0xfc01a780>
 801b238:	9080040c 	andi	r2,r18,16
 801b23c:	1000421e 	bne	r2,zero,801b348 <___vfiprintf_internal_r+0x1228>
 801b240:	9480100c 	andi	r18,r18,64
 801b244:	90009c26 	beq	r18,zero,801b4b8 <___vfiprintf_internal_r+0x1398>
 801b248:	d9412317 	ldw	r5,1164(sp)
 801b24c:	d8c12517 	ldw	r3,1172(sp)
 801b250:	28800017 	ldw	r2,0(r5)
 801b254:	29400104 	addi	r5,r5,4
 801b258:	d9412315 	stw	r5,1164(sp)
 801b25c:	10c0000d 	sth	r3,0(r2)
 801b260:	003be706 	br	801a200 <__alt_data_end+0xfc01a200>
 801b264:	90c0100c 	andi	r3,r18,64
 801b268:	18003e26 	beq	r3,zero,801b364 <___vfiprintf_internal_r+0x1244>
 801b26c:	d8c12317 	ldw	r3,1164(sp)
 801b270:	14c0000b 	ldhu	r19,0(r2)
 801b274:	002b883a 	mov	r21,zero
 801b278:	18c00104 	addi	r3,r3,4
 801b27c:	d8c12315 	stw	r3,1164(sp)
 801b280:	003db706 	br	801a960 <__alt_data_end+0xfc01a960>
 801b284:	9080100c 	andi	r2,r18,64
 801b288:	10004c26 	beq	r2,zero,801b3bc <___vfiprintf_internal_r+0x129c>
 801b28c:	1cc0000f 	ldh	r19,0(r3)
 801b290:	d8812317 	ldw	r2,1164(sp)
 801b294:	982bd7fa 	srai	r21,r19,31
 801b298:	10800104 	addi	r2,r2,4
 801b29c:	d8812315 	stw	r2,1164(sp)
 801b2a0:	a805883a 	mov	r2,r21
 801b2a4:	003cd006 	br	801a5e8 <__alt_data_end+0xfc01a5e8>
 801b2a8:	00800084 	movi	r2,2
 801b2ac:	003d8906 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801b2b0:	b9800007 	ldb	r6,0(r23)
 801b2b4:	003bfb06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801b2b8:	9080100c 	andi	r2,r18,64
 801b2bc:	10003726 	beq	r2,zero,801b39c <___vfiprintf_internal_r+0x127c>
 801b2c0:	d9412317 	ldw	r5,1164(sp)
 801b2c4:	002b883a 	mov	r21,zero
 801b2c8:	0005883a 	mov	r2,zero
 801b2cc:	2cc0000b 	ldhu	r19,0(r5)
 801b2d0:	29400104 	addi	r5,r5,4
 801b2d4:	d9412315 	stw	r5,1164(sp)
 801b2d8:	9807883a 	mov	r3,r19
 801b2dc:	003d7d06 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801b2e0:	9080100c 	andi	r2,r18,64
 801b2e4:	10002526 	beq	r2,zero,801b37c <___vfiprintf_internal_r+0x125c>
 801b2e8:	d8812317 	ldw	r2,1164(sp)
 801b2ec:	002b883a 	mov	r21,zero
 801b2f0:	14c0000b 	ldhu	r19,0(r2)
 801b2f4:	10800104 	addi	r2,r2,4
 801b2f8:	d8812315 	stw	r2,1164(sp)
 801b2fc:	9807883a 	mov	r3,r19
 801b300:	00800044 	movi	r2,1
 801b304:	003d7306 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801b308:	d9012117 	ldw	r4,1156(sp)
 801b30c:	d9412017 	ldw	r5,1152(sp)
 801b310:	d9811a04 	addi	r6,sp,1128
 801b314:	da812a15 	stw	r10,1192(sp)
 801b318:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b31c:	da812a17 	ldw	r10,1192(sp)
 801b320:	103e9b1e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b324:	d9411b17 	ldw	r5,1132(sp)
 801b328:	d8c11c17 	ldw	r3,1136(sp)
 801b32c:	d811883a 	mov	r8,sp
 801b330:	28800044 	addi	r2,r5,1
 801b334:	003e5006 	br	801ac78 <__alt_data_end+0xfc01ac78>
 801b338:	182b883a 	mov	r21,r3
 801b33c:	003ed006 	br	801ae80 <__alt_data_end+0xfc01ae80>
 801b340:	8029883a 	mov	r20,r16
 801b344:	003dc606 	br	801aa60 <__alt_data_end+0xfc01aa60>
 801b348:	d8c12317 	ldw	r3,1164(sp)
 801b34c:	d9012517 	ldw	r4,1172(sp)
 801b350:	18800017 	ldw	r2,0(r3)
 801b354:	18c00104 	addi	r3,r3,4
 801b358:	d8c12315 	stw	r3,1164(sp)
 801b35c:	11000015 	stw	r4,0(r2)
 801b360:	003ba706 	br	801a200 <__alt_data_end+0xfc01a200>
 801b364:	d9012317 	ldw	r4,1164(sp)
 801b368:	14c00017 	ldw	r19,0(r2)
 801b36c:	002b883a 	mov	r21,zero
 801b370:	21000104 	addi	r4,r4,4
 801b374:	d9012315 	stw	r4,1164(sp)
 801b378:	003d7906 	br	801a960 <__alt_data_end+0xfc01a960>
 801b37c:	d8c12317 	ldw	r3,1164(sp)
 801b380:	002b883a 	mov	r21,zero
 801b384:	00800044 	movi	r2,1
 801b388:	1cc00017 	ldw	r19,0(r3)
 801b38c:	18c00104 	addi	r3,r3,4
 801b390:	d8c12315 	stw	r3,1164(sp)
 801b394:	9807883a 	mov	r3,r19
 801b398:	003d4e06 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801b39c:	d8812317 	ldw	r2,1164(sp)
 801b3a0:	002b883a 	mov	r21,zero
 801b3a4:	14c00017 	ldw	r19,0(r2)
 801b3a8:	10800104 	addi	r2,r2,4
 801b3ac:	d8812315 	stw	r2,1164(sp)
 801b3b0:	9807883a 	mov	r3,r19
 801b3b4:	0005883a 	mov	r2,zero
 801b3b8:	003d4606 	br	801a8d4 <__alt_data_end+0xfc01a8d4>
 801b3bc:	1cc00017 	ldw	r19,0(r3)
 801b3c0:	d8c12317 	ldw	r3,1164(sp)
 801b3c4:	982bd7fa 	srai	r21,r19,31
 801b3c8:	18c00104 	addi	r3,r3,4
 801b3cc:	d8c12315 	stw	r3,1164(sp)
 801b3d0:	a805883a 	mov	r2,r21
 801b3d4:	003c8406 	br	801a5e8 <__alt_data_end+0xfc01a5e8>
 801b3d8:	010200b4 	movhi	r4,2050
 801b3dc:	21022804 	addi	r4,r4,2208
 801b3e0:	d9012615 	stw	r4,1176(sp)
 801b3e4:	003d0606 	br	801a800 <__alt_data_end+0xfc01a800>
 801b3e8:	b9800043 	ldbu	r6,1(r23)
 801b3ec:	94800814 	ori	r18,r18,32
 801b3f0:	bdc00044 	addi	r23,r23,1
 801b3f4:	31803fcc 	andi	r6,r6,255
 801b3f8:	3180201c 	xori	r6,r6,128
 801b3fc:	31bfe004 	addi	r6,r6,-128
 801b400:	003ba806 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801b404:	d8811e17 	ldw	r2,1144(sp)
 801b408:	d8c12217 	ldw	r3,1160(sp)
 801b40c:	10e9c83a 	sub	r20,r2,r3
 801b410:	003c9406 	br	801a664 <__alt_data_end+0xfc01a664>
 801b414:	da012a15 	stw	r8,1192(sp)
 801b418:	800d1b80 	call	800d1b8 <strlen>
 801b41c:	1029883a 	mov	r20,r2
 801b420:	dd811d83 	ldbu	r22,1142(sp)
 801b424:	dcc12315 	stw	r19,1164(sp)
 801b428:	0021883a 	mov	r16,zero
 801b42c:	da012a17 	ldw	r8,1192(sp)
 801b430:	003c8c06 	br	801a664 <__alt_data_end+0xfc01a664>
 801b434:	d9012117 	ldw	r4,1156(sp)
 801b438:	d9412017 	ldw	r5,1152(sp)
 801b43c:	d9811a04 	addi	r6,sp,1128
 801b440:	801a00c0 	call	801a00c <__sprint_r.part.0>
 801b444:	103e521e 	bne	r2,zero,801ad90 <__alt_data_end+0xfc01ad90>
 801b448:	d9411b17 	ldw	r5,1132(sp)
 801b44c:	d8c11c17 	ldw	r3,1136(sp)
 801b450:	d811883a 	mov	r8,sp
 801b454:	28800044 	addi	r2,r5,1
 801b458:	003cce06 	br	801a794 <__alt_data_end+0xfc01a794>
 801b45c:	014200b4 	movhi	r5,2050
 801b460:	29422c04 	addi	r5,r5,2224
 801b464:	d9412615 	stw	r5,1176(sp)
 801b468:	d9411b17 	ldw	r5,1132(sp)
 801b46c:	29400044 	addi	r5,r5,1
 801b470:	003cad06 	br	801a728 <__alt_data_end+0xfc01a728>
 801b474:	00800184 	movi	r2,6
 801b478:	1400012e 	bgeu	r2,r16,801b480 <___vfiprintf_internal_r+0x1360>
 801b47c:	1021883a 	mov	r16,r2
 801b480:	8029883a 	mov	r20,r16
 801b484:	802b883a 	mov	r21,r16
 801b488:	80001c16 	blt	r16,zero,801b4fc <___vfiprintf_internal_r+0x13dc>
 801b48c:	00c200b4 	movhi	r3,2050
 801b490:	18c11704 	addi	r3,r3,1116
 801b494:	dcc12315 	stw	r19,1164(sp)
 801b498:	d8c12215 	stw	r3,1160(sp)
 801b49c:	003cff06 	br	801a89c <__alt_data_end+0xfc01a89c>
 801b4a0:	d9411b17 	ldw	r5,1132(sp)
 801b4a4:	008200b4 	movhi	r2,2050
 801b4a8:	10822c04 	addi	r2,r2,2224
 801b4ac:	d8812615 	stw	r2,1176(sp)
 801b4b0:	29400044 	addi	r5,r5,1
 801b4b4:	003e6706 	br	801ae54 <__alt_data_end+0xfc01ae54>
 801b4b8:	d9012317 	ldw	r4,1164(sp)
 801b4bc:	d9412517 	ldw	r5,1172(sp)
 801b4c0:	20800017 	ldw	r2,0(r4)
 801b4c4:	21000104 	addi	r4,r4,4
 801b4c8:	d9012315 	stw	r4,1164(sp)
 801b4cc:	11400015 	stw	r5,0(r2)
 801b4d0:	003b4b06 	br	801a200 <__alt_data_end+0xfc01a200>
 801b4d4:	8029883a 	mov	r20,r16
 801b4d8:	dd811d83 	ldbu	r22,1142(sp)
 801b4dc:	dcc12315 	stw	r19,1164(sp)
 801b4e0:	0021883a 	mov	r16,zero
 801b4e4:	003c5f06 	br	801a664 <__alt_data_end+0xfc01a664>
 801b4e8:	010200b4 	movhi	r4,2050
 801b4ec:	21022804 	addi	r4,r4,2208
 801b4f0:	d9012615 	stw	r4,1176(sp)
 801b4f4:	1009883a 	mov	r4,r2
 801b4f8:	003ea006 	br	801af7c <__alt_data_end+0xfc01af7c>
 801b4fc:	002b883a 	mov	r21,zero
 801b500:	003fe206 	br	801b48c <__alt_data_end+0xfc01b48c>
 801b504:	d9412317 	ldw	r5,1164(sp)
 801b508:	b807883a 	mov	r3,r23
 801b50c:	102f883a 	mov	r23,r2
 801b510:	2c000017 	ldw	r16,0(r5)
 801b514:	29000104 	addi	r4,r5,4
 801b518:	d9012315 	stw	r4,1164(sp)
 801b51c:	80000416 	blt	r16,zero,801b530 <___vfiprintf_internal_r+0x1410>
 801b520:	19800047 	ldb	r6,1(r3)
 801b524:	003b5f06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801b528:	043fffc4 	movi	r16,-1
 801b52c:	003bef06 	br	801a4ec <__alt_data_end+0xfc01a4ec>
 801b530:	043fffc4 	movi	r16,-1
 801b534:	19800047 	ldb	r6,1(r3)
 801b538:	003b5a06 	br	801a2a4 <__alt_data_end+0xfc01a2a4>
 801b53c:	282b883a 	mov	r21,r5
 801b540:	003cc706 	br	801a860 <__alt_data_end+0xfc01a860>

0801b544 <__vfiprintf_internal>:
 801b544:	2007883a 	mov	r3,r4
 801b548:	010200b4 	movhi	r4,2050
 801b54c:	2108f804 	addi	r4,r4,9184
 801b550:	21000017 	ldw	r4,0(r4)
 801b554:	2805883a 	mov	r2,r5
 801b558:	300f883a 	mov	r7,r6
 801b55c:	180b883a 	mov	r5,r3
 801b560:	100d883a 	mov	r6,r2
 801b564:	801a1201 	jmpi	801a120 <___vfiprintf_internal_r>

0801b568 <_write_r>:
 801b568:	defffd04 	addi	sp,sp,-12
 801b56c:	dc000015 	stw	r16,0(sp)
 801b570:	040200b4 	movhi	r16,2050
 801b574:	dc400115 	stw	r17,4(sp)
 801b578:	840ffd04 	addi	r16,r16,16372
 801b57c:	2023883a 	mov	r17,r4
 801b580:	2809883a 	mov	r4,r5
 801b584:	300b883a 	mov	r5,r6
 801b588:	380d883a 	mov	r6,r7
 801b58c:	dfc00215 	stw	ra,8(sp)
 801b590:	80000015 	stw	zero,0(r16)
 801b594:	801d6bc0 	call	801d6bc <write>
 801b598:	00ffffc4 	movi	r3,-1
 801b59c:	10c00526 	beq	r2,r3,801b5b4 <_write_r+0x4c>
 801b5a0:	dfc00217 	ldw	ra,8(sp)
 801b5a4:	dc400117 	ldw	r17,4(sp)
 801b5a8:	dc000017 	ldw	r16,0(sp)
 801b5ac:	dec00304 	addi	sp,sp,12
 801b5b0:	f800283a 	ret
 801b5b4:	80c00017 	ldw	r3,0(r16)
 801b5b8:	183ff926 	beq	r3,zero,801b5a0 <__alt_data_end+0xfc01b5a0>
 801b5bc:	88c00015 	stw	r3,0(r17)
 801b5c0:	003ff706 	br	801b5a0 <__alt_data_end+0xfc01b5a0>

0801b5c4 <_close_r>:
 801b5c4:	defffd04 	addi	sp,sp,-12
 801b5c8:	dc000015 	stw	r16,0(sp)
 801b5cc:	040200b4 	movhi	r16,2050
 801b5d0:	dc400115 	stw	r17,4(sp)
 801b5d4:	840ffd04 	addi	r16,r16,16372
 801b5d8:	2023883a 	mov	r17,r4
 801b5dc:	2809883a 	mov	r4,r5
 801b5e0:	dfc00215 	stw	ra,8(sp)
 801b5e4:	80000015 	stw	zero,0(r16)
 801b5e8:	801cde80 	call	801cde8 <close>
 801b5ec:	00ffffc4 	movi	r3,-1
 801b5f0:	10c00526 	beq	r2,r3,801b608 <_close_r+0x44>
 801b5f4:	dfc00217 	ldw	ra,8(sp)
 801b5f8:	dc400117 	ldw	r17,4(sp)
 801b5fc:	dc000017 	ldw	r16,0(sp)
 801b600:	dec00304 	addi	sp,sp,12
 801b604:	f800283a 	ret
 801b608:	80c00017 	ldw	r3,0(r16)
 801b60c:	183ff926 	beq	r3,zero,801b5f4 <__alt_data_end+0xfc01b5f4>
 801b610:	88c00015 	stw	r3,0(r17)
 801b614:	003ff706 	br	801b5f4 <__alt_data_end+0xfc01b5f4>

0801b618 <_calloc_r>:
 801b618:	defffe04 	addi	sp,sp,-8
 801b61c:	dc000015 	stw	r16,0(sp)
 801b620:	2021883a 	mov	r16,r4
 801b624:	2809883a 	mov	r4,r5
 801b628:	300b883a 	mov	r5,r6
 801b62c:	dfc00115 	stw	ra,4(sp)
 801b630:	8009fe40 	call	8009fe4 <__mulsi3>
 801b634:	8009883a 	mov	r4,r16
 801b638:	100b883a 	mov	r5,r2
 801b63c:	80167500 	call	8016750 <_malloc_r>
 801b640:	1021883a 	mov	r16,r2
 801b644:	10002826 	beq	r2,zero,801b6e8 <_calloc_r+0xd0>
 801b648:	11bfff17 	ldw	r6,-4(r2)
 801b64c:	00bfff04 	movi	r2,-4
 801b650:	00c00904 	movi	r3,36
 801b654:	308c703a 	and	r6,r6,r2
 801b658:	308d883a 	add	r6,r6,r2
 801b65c:	19801436 	bltu	r3,r6,801b6b0 <_calloc_r+0x98>
 801b660:	008004c4 	movi	r2,19
 801b664:	11800936 	bltu	r2,r6,801b68c <_calloc_r+0x74>
 801b668:	8005883a 	mov	r2,r16
 801b66c:	10000015 	stw	zero,0(r2)
 801b670:	10000115 	stw	zero,4(r2)
 801b674:	10000215 	stw	zero,8(r2)
 801b678:	8005883a 	mov	r2,r16
 801b67c:	dfc00117 	ldw	ra,4(sp)
 801b680:	dc000017 	ldw	r16,0(sp)
 801b684:	dec00204 	addi	sp,sp,8
 801b688:	f800283a 	ret
 801b68c:	80000015 	stw	zero,0(r16)
 801b690:	80000115 	stw	zero,4(r16)
 801b694:	008006c4 	movi	r2,27
 801b698:	11800d2e 	bgeu	r2,r6,801b6d0 <_calloc_r+0xb8>
 801b69c:	80000215 	stw	zero,8(r16)
 801b6a0:	80000315 	stw	zero,12(r16)
 801b6a4:	30c00c26 	beq	r6,r3,801b6d8 <_calloc_r+0xc0>
 801b6a8:	80800404 	addi	r2,r16,16
 801b6ac:	003fef06 	br	801b66c <__alt_data_end+0xfc01b66c>
 801b6b0:	8009883a 	mov	r4,r16
 801b6b4:	000b883a 	mov	r5,zero
 801b6b8:	80172740 	call	8017274 <memset>
 801b6bc:	8005883a 	mov	r2,r16
 801b6c0:	dfc00117 	ldw	ra,4(sp)
 801b6c4:	dc000017 	ldw	r16,0(sp)
 801b6c8:	dec00204 	addi	sp,sp,8
 801b6cc:	f800283a 	ret
 801b6d0:	80800204 	addi	r2,r16,8
 801b6d4:	003fe506 	br	801b66c <__alt_data_end+0xfc01b66c>
 801b6d8:	80000415 	stw	zero,16(r16)
 801b6dc:	80800604 	addi	r2,r16,24
 801b6e0:	80000515 	stw	zero,20(r16)
 801b6e4:	003fe106 	br	801b66c <__alt_data_end+0xfc01b66c>
 801b6e8:	0005883a 	mov	r2,zero
 801b6ec:	003fe306 	br	801b67c <__alt_data_end+0xfc01b67c>

0801b6f0 <_fclose_r>:
 801b6f0:	28003226 	beq	r5,zero,801b7bc <_fclose_r+0xcc>
 801b6f4:	defffc04 	addi	sp,sp,-16
 801b6f8:	dc400115 	stw	r17,4(sp)
 801b6fc:	2023883a 	mov	r17,r4
 801b700:	dc000015 	stw	r16,0(sp)
 801b704:	dfc00315 	stw	ra,12(sp)
 801b708:	dc800215 	stw	r18,8(sp)
 801b70c:	2821883a 	mov	r16,r5
 801b710:	8014de00 	call	8014de0 <__sfp_lock_acquire>
 801b714:	88000226 	beq	r17,zero,801b720 <_fclose_r+0x30>
 801b718:	88800e17 	ldw	r2,56(r17)
 801b71c:	10002926 	beq	r2,zero,801b7c4 <_fclose_r+0xd4>
 801b720:	8080030f 	ldh	r2,12(r16)
 801b724:	10002226 	beq	r2,zero,801b7b0 <_fclose_r+0xc0>
 801b728:	8809883a 	mov	r4,r17
 801b72c:	800b883a 	mov	r5,r16
 801b730:	80148140 	call	8014814 <_fflush_r>
 801b734:	1025883a 	mov	r18,r2
 801b738:	80800b17 	ldw	r2,44(r16)
 801b73c:	10000426 	beq	r2,zero,801b750 <_fclose_r+0x60>
 801b740:	81400717 	ldw	r5,28(r16)
 801b744:	8809883a 	mov	r4,r17
 801b748:	103ee83a 	callr	r2
 801b74c:	10002616 	blt	r2,zero,801b7e8 <_fclose_r+0xf8>
 801b750:	8080030b 	ldhu	r2,12(r16)
 801b754:	1080200c 	andi	r2,r2,128
 801b758:	10001f1e 	bne	r2,zero,801b7d8 <_fclose_r+0xe8>
 801b75c:	81400c17 	ldw	r5,48(r16)
 801b760:	28000526 	beq	r5,zero,801b778 <_fclose_r+0x88>
 801b764:	80801004 	addi	r2,r16,64
 801b768:	28800226 	beq	r5,r2,801b774 <_fclose_r+0x84>
 801b76c:	8809883a 	mov	r4,r17
 801b770:	8014f440 	call	8014f44 <_free_r>
 801b774:	80000c15 	stw	zero,48(r16)
 801b778:	81401117 	ldw	r5,68(r16)
 801b77c:	28000326 	beq	r5,zero,801b78c <_fclose_r+0x9c>
 801b780:	8809883a 	mov	r4,r17
 801b784:	8014f440 	call	8014f44 <_free_r>
 801b788:	80001115 	stw	zero,68(r16)
 801b78c:	8000030d 	sth	zero,12(r16)
 801b790:	8014de40 	call	8014de4 <__sfp_lock_release>
 801b794:	9005883a 	mov	r2,r18
 801b798:	dfc00317 	ldw	ra,12(sp)
 801b79c:	dc800217 	ldw	r18,8(sp)
 801b7a0:	dc400117 	ldw	r17,4(sp)
 801b7a4:	dc000017 	ldw	r16,0(sp)
 801b7a8:	dec00404 	addi	sp,sp,16
 801b7ac:	f800283a 	ret
 801b7b0:	8014de40 	call	8014de4 <__sfp_lock_release>
 801b7b4:	0005883a 	mov	r2,zero
 801b7b8:	003ff706 	br	801b798 <__alt_data_end+0xfc01b798>
 801b7bc:	0005883a 	mov	r2,zero
 801b7c0:	f800283a 	ret
 801b7c4:	8809883a 	mov	r4,r17
 801b7c8:	8014dd00 	call	8014dd0 <__sinit>
 801b7cc:	8080030f 	ldh	r2,12(r16)
 801b7d0:	103fd51e 	bne	r2,zero,801b728 <__alt_data_end+0xfc01b728>
 801b7d4:	003ff606 	br	801b7b0 <__alt_data_end+0xfc01b7b0>
 801b7d8:	81400417 	ldw	r5,16(r16)
 801b7dc:	8809883a 	mov	r4,r17
 801b7e0:	8014f440 	call	8014f44 <_free_r>
 801b7e4:	003fdd06 	br	801b75c <__alt_data_end+0xfc01b75c>
 801b7e8:	04bfffc4 	movi	r18,-1
 801b7ec:	003fd806 	br	801b750 <__alt_data_end+0xfc01b750>

0801b7f0 <fclose>:
 801b7f0:	008200b4 	movhi	r2,2050
 801b7f4:	1088f804 	addi	r2,r2,9184
 801b7f8:	200b883a 	mov	r5,r4
 801b7fc:	11000017 	ldw	r4,0(r2)
 801b800:	801b6f01 	jmpi	801b6f0 <_fclose_r>

0801b804 <_fputwc_r>:
 801b804:	3080030b 	ldhu	r2,12(r6)
 801b808:	defff804 	addi	sp,sp,-32
 801b80c:	dcc00415 	stw	r19,16(sp)
 801b810:	dc800315 	stw	r18,12(sp)
 801b814:	dc000115 	stw	r16,4(sp)
 801b818:	dfc00715 	stw	ra,28(sp)
 801b81c:	dd400615 	stw	r21,24(sp)
 801b820:	dd000515 	stw	r20,20(sp)
 801b824:	dc400215 	stw	r17,8(sp)
 801b828:	10c8000c 	andi	r3,r2,8192
 801b82c:	3021883a 	mov	r16,r6
 801b830:	2027883a 	mov	r19,r4
 801b834:	2825883a 	mov	r18,r5
 801b838:	1800051e 	bne	r3,zero,801b850 <_fputwc_r+0x4c>
 801b83c:	30c01917 	ldw	r3,100(r6)
 801b840:	10880014 	ori	r2,r2,8192
 801b844:	3080030d 	sth	r2,12(r6)
 801b848:	18880014 	ori	r2,r3,8192
 801b84c:	30801915 	stw	r2,100(r6)
 801b850:	80165400 	call	8016540 <__locale_mb_cur_max>
 801b854:	00c00044 	movi	r3,1
 801b858:	10c03e26 	beq	r2,r3,801b954 <_fputwc_r+0x150>
 801b85c:	9809883a 	mov	r4,r19
 801b860:	d80b883a 	mov	r5,sp
 801b864:	900d883a 	mov	r6,r18
 801b868:	81c01704 	addi	r7,r16,92
 801b86c:	801bcb40 	call	801bcb4 <_wcrtomb_r>
 801b870:	1029883a 	mov	r20,r2
 801b874:	00bfffc4 	movi	r2,-1
 801b878:	a0802026 	beq	r20,r2,801b8fc <_fputwc_r+0xf8>
 801b87c:	d9400003 	ldbu	r5,0(sp)
 801b880:	a0001c26 	beq	r20,zero,801b8f4 <_fputwc_r+0xf0>
 801b884:	0023883a 	mov	r17,zero
 801b888:	05400284 	movi	r21,10
 801b88c:	00000906 	br	801b8b4 <_fputwc_r+0xb0>
 801b890:	80800017 	ldw	r2,0(r16)
 801b894:	11400005 	stb	r5,0(r2)
 801b898:	80c00017 	ldw	r3,0(r16)
 801b89c:	18c00044 	addi	r3,r3,1
 801b8a0:	80c00015 	stw	r3,0(r16)
 801b8a4:	8c400044 	addi	r17,r17,1
 801b8a8:	dc45883a 	add	r2,sp,r17
 801b8ac:	8d00112e 	bgeu	r17,r20,801b8f4 <_fputwc_r+0xf0>
 801b8b0:	11400003 	ldbu	r5,0(r2)
 801b8b4:	80c00217 	ldw	r3,8(r16)
 801b8b8:	18ffffc4 	addi	r3,r3,-1
 801b8bc:	80c00215 	stw	r3,8(r16)
 801b8c0:	183ff30e 	bge	r3,zero,801b890 <__alt_data_end+0xfc01b890>
 801b8c4:	80800617 	ldw	r2,24(r16)
 801b8c8:	18801916 	blt	r3,r2,801b930 <_fputwc_r+0x12c>
 801b8cc:	80800017 	ldw	r2,0(r16)
 801b8d0:	11400005 	stb	r5,0(r2)
 801b8d4:	80800017 	ldw	r2,0(r16)
 801b8d8:	10c00003 	ldbu	r3,0(r2)
 801b8dc:	10800044 	addi	r2,r2,1
 801b8e0:	1d402326 	beq	r3,r21,801b970 <_fputwc_r+0x16c>
 801b8e4:	80800015 	stw	r2,0(r16)
 801b8e8:	8c400044 	addi	r17,r17,1
 801b8ec:	dc45883a 	add	r2,sp,r17
 801b8f0:	8d3fef36 	bltu	r17,r20,801b8b0 <__alt_data_end+0xfc01b8b0>
 801b8f4:	9005883a 	mov	r2,r18
 801b8f8:	00000406 	br	801b90c <_fputwc_r+0x108>
 801b8fc:	80c0030b 	ldhu	r3,12(r16)
 801b900:	a005883a 	mov	r2,r20
 801b904:	18c01014 	ori	r3,r3,64
 801b908:	80c0030d 	sth	r3,12(r16)
 801b90c:	dfc00717 	ldw	ra,28(sp)
 801b910:	dd400617 	ldw	r21,24(sp)
 801b914:	dd000517 	ldw	r20,20(sp)
 801b918:	dcc00417 	ldw	r19,16(sp)
 801b91c:	dc800317 	ldw	r18,12(sp)
 801b920:	dc400217 	ldw	r17,8(sp)
 801b924:	dc000117 	ldw	r16,4(sp)
 801b928:	dec00804 	addi	sp,sp,32
 801b92c:	f800283a 	ret
 801b930:	9809883a 	mov	r4,r19
 801b934:	29403fcc 	andi	r5,r5,255
 801b938:	800d883a 	mov	r6,r16
 801b93c:	801bb440 	call	801bb44 <__swbuf_r>
 801b940:	10bfffe0 	cmpeqi	r2,r2,-1
 801b944:	10803fcc 	andi	r2,r2,255
 801b948:	103fd626 	beq	r2,zero,801b8a4 <__alt_data_end+0xfc01b8a4>
 801b94c:	00bfffc4 	movi	r2,-1
 801b950:	003fee06 	br	801b90c <__alt_data_end+0xfc01b90c>
 801b954:	90ffffc4 	addi	r3,r18,-1
 801b958:	01003f84 	movi	r4,254
 801b95c:	20ffbf36 	bltu	r4,r3,801b85c <__alt_data_end+0xfc01b85c>
 801b960:	900b883a 	mov	r5,r18
 801b964:	dc800005 	stb	r18,0(sp)
 801b968:	1029883a 	mov	r20,r2
 801b96c:	003fc506 	br	801b884 <__alt_data_end+0xfc01b884>
 801b970:	9809883a 	mov	r4,r19
 801b974:	a80b883a 	mov	r5,r21
 801b978:	800d883a 	mov	r6,r16
 801b97c:	801bb440 	call	801bb44 <__swbuf_r>
 801b980:	10bfffe0 	cmpeqi	r2,r2,-1
 801b984:	003fef06 	br	801b944 <__alt_data_end+0xfc01b944>

0801b988 <fputwc>:
 801b988:	defffc04 	addi	sp,sp,-16
 801b98c:	dc000115 	stw	r16,4(sp)
 801b990:	040200b4 	movhi	r16,2050
 801b994:	8408f804 	addi	r16,r16,9184
 801b998:	dc400215 	stw	r17,8(sp)
 801b99c:	2023883a 	mov	r17,r4
 801b9a0:	81000017 	ldw	r4,0(r16)
 801b9a4:	dfc00315 	stw	ra,12(sp)
 801b9a8:	280d883a 	mov	r6,r5
 801b9ac:	20000626 	beq	r4,zero,801b9c8 <fputwc+0x40>
 801b9b0:	20800e17 	ldw	r2,56(r4)
 801b9b4:	1000041e 	bne	r2,zero,801b9c8 <fputwc+0x40>
 801b9b8:	d9400015 	stw	r5,0(sp)
 801b9bc:	8014dd00 	call	8014dd0 <__sinit>
 801b9c0:	81000017 	ldw	r4,0(r16)
 801b9c4:	d9800017 	ldw	r6,0(sp)
 801b9c8:	880b883a 	mov	r5,r17
 801b9cc:	dfc00317 	ldw	ra,12(sp)
 801b9d0:	dc400217 	ldw	r17,8(sp)
 801b9d4:	dc000117 	ldw	r16,4(sp)
 801b9d8:	dec00404 	addi	sp,sp,16
 801b9dc:	801b8041 	jmpi	801b804 <_fputwc_r>

0801b9e0 <_fstat_r>:
 801b9e0:	defffd04 	addi	sp,sp,-12
 801b9e4:	dc000015 	stw	r16,0(sp)
 801b9e8:	040200b4 	movhi	r16,2050
 801b9ec:	dc400115 	stw	r17,4(sp)
 801b9f0:	840ffd04 	addi	r16,r16,16372
 801b9f4:	2023883a 	mov	r17,r4
 801b9f8:	2809883a 	mov	r4,r5
 801b9fc:	300b883a 	mov	r5,r6
 801ba00:	dfc00215 	stw	ra,8(sp)
 801ba04:	80000015 	stw	zero,0(r16)
 801ba08:	801cf3c0 	call	801cf3c <fstat>
 801ba0c:	00ffffc4 	movi	r3,-1
 801ba10:	10c00526 	beq	r2,r3,801ba28 <_fstat_r+0x48>
 801ba14:	dfc00217 	ldw	ra,8(sp)
 801ba18:	dc400117 	ldw	r17,4(sp)
 801ba1c:	dc000017 	ldw	r16,0(sp)
 801ba20:	dec00304 	addi	sp,sp,12
 801ba24:	f800283a 	ret
 801ba28:	80c00017 	ldw	r3,0(r16)
 801ba2c:	183ff926 	beq	r3,zero,801ba14 <__alt_data_end+0xfc01ba14>
 801ba30:	88c00015 	stw	r3,0(r17)
 801ba34:	003ff706 	br	801ba14 <__alt_data_end+0xfc01ba14>

0801ba38 <_isatty_r>:
 801ba38:	defffd04 	addi	sp,sp,-12
 801ba3c:	dc000015 	stw	r16,0(sp)
 801ba40:	040200b4 	movhi	r16,2050
 801ba44:	dc400115 	stw	r17,4(sp)
 801ba48:	840ffd04 	addi	r16,r16,16372
 801ba4c:	2023883a 	mov	r17,r4
 801ba50:	2809883a 	mov	r4,r5
 801ba54:	dfc00215 	stw	ra,8(sp)
 801ba58:	80000015 	stw	zero,0(r16)
 801ba5c:	801d0440 	call	801d044 <isatty>
 801ba60:	00ffffc4 	movi	r3,-1
 801ba64:	10c00526 	beq	r2,r3,801ba7c <_isatty_r+0x44>
 801ba68:	dfc00217 	ldw	ra,8(sp)
 801ba6c:	dc400117 	ldw	r17,4(sp)
 801ba70:	dc000017 	ldw	r16,0(sp)
 801ba74:	dec00304 	addi	sp,sp,12
 801ba78:	f800283a 	ret
 801ba7c:	80c00017 	ldw	r3,0(r16)
 801ba80:	183ff926 	beq	r3,zero,801ba68 <__alt_data_end+0xfc01ba68>
 801ba84:	88c00015 	stw	r3,0(r17)
 801ba88:	003ff706 	br	801ba68 <__alt_data_end+0xfc01ba68>

0801ba8c <_lseek_r>:
 801ba8c:	defffd04 	addi	sp,sp,-12
 801ba90:	dc000015 	stw	r16,0(sp)
 801ba94:	040200b4 	movhi	r16,2050
 801ba98:	dc400115 	stw	r17,4(sp)
 801ba9c:	840ffd04 	addi	r16,r16,16372
 801baa0:	2023883a 	mov	r17,r4
 801baa4:	2809883a 	mov	r4,r5
 801baa8:	300b883a 	mov	r5,r6
 801baac:	380d883a 	mov	r6,r7
 801bab0:	dfc00215 	stw	ra,8(sp)
 801bab4:	80000015 	stw	zero,0(r16)
 801bab8:	801d2240 	call	801d224 <lseek>
 801babc:	00ffffc4 	movi	r3,-1
 801bac0:	10c00526 	beq	r2,r3,801bad8 <_lseek_r+0x4c>
 801bac4:	dfc00217 	ldw	ra,8(sp)
 801bac8:	dc400117 	ldw	r17,4(sp)
 801bacc:	dc000017 	ldw	r16,0(sp)
 801bad0:	dec00304 	addi	sp,sp,12
 801bad4:	f800283a 	ret
 801bad8:	80c00017 	ldw	r3,0(r16)
 801badc:	183ff926 	beq	r3,zero,801bac4 <__alt_data_end+0xfc01bac4>
 801bae0:	88c00015 	stw	r3,0(r17)
 801bae4:	003ff706 	br	801bac4 <__alt_data_end+0xfc01bac4>

0801bae8 <_read_r>:
 801bae8:	defffd04 	addi	sp,sp,-12
 801baec:	dc000015 	stw	r16,0(sp)
 801baf0:	040200b4 	movhi	r16,2050
 801baf4:	dc400115 	stw	r17,4(sp)
 801baf8:	840ffd04 	addi	r16,r16,16372
 801bafc:	2023883a 	mov	r17,r4
 801bb00:	2809883a 	mov	r4,r5
 801bb04:	300b883a 	mov	r5,r6
 801bb08:	380d883a 	mov	r6,r7
 801bb0c:	dfc00215 	stw	ra,8(sp)
 801bb10:	80000015 	stw	zero,0(r16)
 801bb14:	801d4080 	call	801d408 <read>
 801bb18:	00ffffc4 	movi	r3,-1
 801bb1c:	10c00526 	beq	r2,r3,801bb34 <_read_r+0x4c>
 801bb20:	dfc00217 	ldw	ra,8(sp)
 801bb24:	dc400117 	ldw	r17,4(sp)
 801bb28:	dc000017 	ldw	r16,0(sp)
 801bb2c:	dec00304 	addi	sp,sp,12
 801bb30:	f800283a 	ret
 801bb34:	80c00017 	ldw	r3,0(r16)
 801bb38:	183ff926 	beq	r3,zero,801bb20 <__alt_data_end+0xfc01bb20>
 801bb3c:	88c00015 	stw	r3,0(r17)
 801bb40:	003ff706 	br	801bb20 <__alt_data_end+0xfc01bb20>

0801bb44 <__swbuf_r>:
 801bb44:	defffc04 	addi	sp,sp,-16
 801bb48:	dc800215 	stw	r18,8(sp)
 801bb4c:	dc400115 	stw	r17,4(sp)
 801bb50:	dc000015 	stw	r16,0(sp)
 801bb54:	dfc00315 	stw	ra,12(sp)
 801bb58:	2025883a 	mov	r18,r4
 801bb5c:	2823883a 	mov	r17,r5
 801bb60:	3021883a 	mov	r16,r6
 801bb64:	20000226 	beq	r4,zero,801bb70 <__swbuf_r+0x2c>
 801bb68:	20800e17 	ldw	r2,56(r4)
 801bb6c:	10004126 	beq	r2,zero,801bc74 <__swbuf_r+0x130>
 801bb70:	80c00617 	ldw	r3,24(r16)
 801bb74:	8180030b 	ldhu	r6,12(r16)
 801bb78:	80c00215 	stw	r3,8(r16)
 801bb7c:	30c0020c 	andi	r3,r6,8
 801bb80:	18003526 	beq	r3,zero,801bc58 <__swbuf_r+0x114>
 801bb84:	80c00417 	ldw	r3,16(r16)
 801bb88:	18003326 	beq	r3,zero,801bc58 <__swbuf_r+0x114>
 801bb8c:	3088000c 	andi	r2,r6,8192
 801bb90:	8c403fcc 	andi	r17,r17,255
 801bb94:	10001726 	beq	r2,zero,801bbf4 <__swbuf_r+0xb0>
 801bb98:	80800017 	ldw	r2,0(r16)
 801bb9c:	81000517 	ldw	r4,20(r16)
 801bba0:	10c7c83a 	sub	r3,r2,r3
 801bba4:	19001d0e 	bge	r3,r4,801bc1c <__swbuf_r+0xd8>
 801bba8:	18c00044 	addi	r3,r3,1
 801bbac:	81400217 	ldw	r5,8(r16)
 801bbb0:	11000044 	addi	r4,r2,1
 801bbb4:	81000015 	stw	r4,0(r16)
 801bbb8:	297fffc4 	addi	r5,r5,-1
 801bbbc:	81400215 	stw	r5,8(r16)
 801bbc0:	14400005 	stb	r17,0(r2)
 801bbc4:	80800517 	ldw	r2,20(r16)
 801bbc8:	10c01d26 	beq	r2,r3,801bc40 <__swbuf_r+0xfc>
 801bbcc:	8080030b 	ldhu	r2,12(r16)
 801bbd0:	1080004c 	andi	r2,r2,1
 801bbd4:	1000181e 	bne	r2,zero,801bc38 <__swbuf_r+0xf4>
 801bbd8:	8805883a 	mov	r2,r17
 801bbdc:	dfc00317 	ldw	ra,12(sp)
 801bbe0:	dc800217 	ldw	r18,8(sp)
 801bbe4:	dc400117 	ldw	r17,4(sp)
 801bbe8:	dc000017 	ldw	r16,0(sp)
 801bbec:	dec00404 	addi	sp,sp,16
 801bbf0:	f800283a 	ret
 801bbf4:	81001917 	ldw	r4,100(r16)
 801bbf8:	00b7ffc4 	movi	r2,-8193
 801bbfc:	31880014 	ori	r6,r6,8192
 801bc00:	2084703a 	and	r2,r4,r2
 801bc04:	80801915 	stw	r2,100(r16)
 801bc08:	80800017 	ldw	r2,0(r16)
 801bc0c:	81000517 	ldw	r4,20(r16)
 801bc10:	8180030d 	sth	r6,12(r16)
 801bc14:	10c7c83a 	sub	r3,r2,r3
 801bc18:	193fe316 	blt	r3,r4,801bba8 <__alt_data_end+0xfc01bba8>
 801bc1c:	9009883a 	mov	r4,r18
 801bc20:	800b883a 	mov	r5,r16
 801bc24:	80148140 	call	8014814 <_fflush_r>
 801bc28:	1000091e 	bne	r2,zero,801bc50 <__swbuf_r+0x10c>
 801bc2c:	80800017 	ldw	r2,0(r16)
 801bc30:	00c00044 	movi	r3,1
 801bc34:	003fdd06 	br	801bbac <__alt_data_end+0xfc01bbac>
 801bc38:	00800284 	movi	r2,10
 801bc3c:	88bfe61e 	bne	r17,r2,801bbd8 <__alt_data_end+0xfc01bbd8>
 801bc40:	9009883a 	mov	r4,r18
 801bc44:	800b883a 	mov	r5,r16
 801bc48:	80148140 	call	8014814 <_fflush_r>
 801bc4c:	103fe226 	beq	r2,zero,801bbd8 <__alt_data_end+0xfc01bbd8>
 801bc50:	00bfffc4 	movi	r2,-1
 801bc54:	003fe106 	br	801bbdc <__alt_data_end+0xfc01bbdc>
 801bc58:	9009883a 	mov	r4,r18
 801bc5c:	800b883a 	mov	r5,r16
 801bc60:	8012d940 	call	8012d94 <__swsetup_r>
 801bc64:	1000051e 	bne	r2,zero,801bc7c <__swbuf_r+0x138>
 801bc68:	8180030b 	ldhu	r6,12(r16)
 801bc6c:	80c00417 	ldw	r3,16(r16)
 801bc70:	003fc606 	br	801bb8c <__alt_data_end+0xfc01bb8c>
 801bc74:	8014dd00 	call	8014dd0 <__sinit>
 801bc78:	003fbd06 	br	801bb70 <__alt_data_end+0xfc01bb70>
 801bc7c:	80c0030b 	ldhu	r3,12(r16)
 801bc80:	00bfffc4 	movi	r2,-1
 801bc84:	18c01014 	ori	r3,r3,64
 801bc88:	80c0030d 	sth	r3,12(r16)
 801bc8c:	00c00244 	movi	r3,9
 801bc90:	90c00015 	stw	r3,0(r18)
 801bc94:	003fd106 	br	801bbdc <__alt_data_end+0xfc01bbdc>

0801bc98 <__swbuf>:
 801bc98:	00c200b4 	movhi	r3,2050
 801bc9c:	18c8f804 	addi	r3,r3,9184
 801bca0:	2005883a 	mov	r2,r4
 801bca4:	19000017 	ldw	r4,0(r3)
 801bca8:	280d883a 	mov	r6,r5
 801bcac:	100b883a 	mov	r5,r2
 801bcb0:	801bb441 	jmpi	801bb44 <__swbuf_r>

0801bcb4 <_wcrtomb_r>:
 801bcb4:	defff604 	addi	sp,sp,-40
 801bcb8:	008200b4 	movhi	r2,2050
 801bcbc:	dc800815 	stw	r18,32(sp)
 801bcc0:	dc400715 	stw	r17,28(sp)
 801bcc4:	dc000615 	stw	r16,24(sp)
 801bcc8:	1088fd04 	addi	r2,r2,9204
 801bccc:	dfc00915 	stw	ra,36(sp)
 801bcd0:	2021883a 	mov	r16,r4
 801bcd4:	3823883a 	mov	r17,r7
 801bcd8:	14800017 	ldw	r18,0(r2)
 801bcdc:	28001426 	beq	r5,zero,801bd30 <_wcrtomb_r+0x7c>
 801bce0:	d9400415 	stw	r5,16(sp)
 801bce4:	d9800515 	stw	r6,20(sp)
 801bce8:	80165340 	call	8016534 <__locale_charset>
 801bcec:	d9400417 	ldw	r5,16(sp)
 801bcf0:	d9800517 	ldw	r6,20(sp)
 801bcf4:	8009883a 	mov	r4,r16
 801bcf8:	dc400015 	stw	r17,0(sp)
 801bcfc:	100f883a 	mov	r7,r2
 801bd00:	903ee83a 	callr	r18
 801bd04:	00ffffc4 	movi	r3,-1
 801bd08:	10c0031e 	bne	r2,r3,801bd18 <_wcrtomb_r+0x64>
 801bd0c:	88000015 	stw	zero,0(r17)
 801bd10:	00c02284 	movi	r3,138
 801bd14:	80c00015 	stw	r3,0(r16)
 801bd18:	dfc00917 	ldw	ra,36(sp)
 801bd1c:	dc800817 	ldw	r18,32(sp)
 801bd20:	dc400717 	ldw	r17,28(sp)
 801bd24:	dc000617 	ldw	r16,24(sp)
 801bd28:	dec00a04 	addi	sp,sp,40
 801bd2c:	f800283a 	ret
 801bd30:	80165340 	call	8016534 <__locale_charset>
 801bd34:	8009883a 	mov	r4,r16
 801bd38:	dc400015 	stw	r17,0(sp)
 801bd3c:	d9400104 	addi	r5,sp,4
 801bd40:	000d883a 	mov	r6,zero
 801bd44:	100f883a 	mov	r7,r2
 801bd48:	903ee83a 	callr	r18
 801bd4c:	003fed06 	br	801bd04 <__alt_data_end+0xfc01bd04>

0801bd50 <wcrtomb>:
 801bd50:	defff504 	addi	sp,sp,-44
 801bd54:	dc400515 	stw	r17,20(sp)
 801bd58:	dc000415 	stw	r16,16(sp)
 801bd5c:	dfc00a15 	stw	ra,40(sp)
 801bd60:	dd400915 	stw	r21,36(sp)
 801bd64:	dd000815 	stw	r20,32(sp)
 801bd68:	dcc00715 	stw	r19,28(sp)
 801bd6c:	dc800615 	stw	r18,24(sp)
 801bd70:	2021883a 	mov	r16,r4
 801bd74:	3023883a 	mov	r17,r6
 801bd78:	20001d26 	beq	r4,zero,801bdf0 <wcrtomb+0xa0>
 801bd7c:	048200b4 	movhi	r18,2050
 801bd80:	9488f804 	addi	r18,r18,9184
 801bd84:	008200b4 	movhi	r2,2050
 801bd88:	95400017 	ldw	r21,0(r18)
 801bd8c:	1088fd04 	addi	r2,r2,9204
 801bd90:	15000017 	ldw	r20,0(r2)
 801bd94:	2827883a 	mov	r19,r5
 801bd98:	80165340 	call	8016534 <__locale_charset>
 801bd9c:	a809883a 	mov	r4,r21
 801bda0:	dc400015 	stw	r17,0(sp)
 801bda4:	800b883a 	mov	r5,r16
 801bda8:	980d883a 	mov	r6,r19
 801bdac:	100f883a 	mov	r7,r2
 801bdb0:	a03ee83a 	callr	r20
 801bdb4:	00ffffc4 	movi	r3,-1
 801bdb8:	10c0041e 	bne	r2,r3,801bdcc <wcrtomb+0x7c>
 801bdbc:	90c00017 	ldw	r3,0(r18)
 801bdc0:	01002284 	movi	r4,138
 801bdc4:	88000015 	stw	zero,0(r17)
 801bdc8:	19000015 	stw	r4,0(r3)
 801bdcc:	dfc00a17 	ldw	ra,40(sp)
 801bdd0:	dd400917 	ldw	r21,36(sp)
 801bdd4:	dd000817 	ldw	r20,32(sp)
 801bdd8:	dcc00717 	ldw	r19,28(sp)
 801bddc:	dc800617 	ldw	r18,24(sp)
 801bde0:	dc400517 	ldw	r17,20(sp)
 801bde4:	dc000417 	ldw	r16,16(sp)
 801bde8:	dec00b04 	addi	sp,sp,44
 801bdec:	f800283a 	ret
 801bdf0:	048200b4 	movhi	r18,2050
 801bdf4:	9488f804 	addi	r18,r18,9184
 801bdf8:	008200b4 	movhi	r2,2050
 801bdfc:	94c00017 	ldw	r19,0(r18)
 801be00:	1088fd04 	addi	r2,r2,9204
 801be04:	14000017 	ldw	r16,0(r2)
 801be08:	80165340 	call	8016534 <__locale_charset>
 801be0c:	9809883a 	mov	r4,r19
 801be10:	dc400015 	stw	r17,0(sp)
 801be14:	d9400104 	addi	r5,sp,4
 801be18:	000d883a 	mov	r6,zero
 801be1c:	100f883a 	mov	r7,r2
 801be20:	803ee83a 	callr	r16
 801be24:	003fe306 	br	801bdb4 <__alt_data_end+0xfc01bdb4>

0801be28 <__ascii_wctomb>:
 801be28:	28000526 	beq	r5,zero,801be40 <__ascii_wctomb+0x18>
 801be2c:	00803fc4 	movi	r2,255
 801be30:	11800536 	bltu	r2,r6,801be48 <__ascii_wctomb+0x20>
 801be34:	29800005 	stb	r6,0(r5)
 801be38:	00800044 	movi	r2,1
 801be3c:	f800283a 	ret
 801be40:	0005883a 	mov	r2,zero
 801be44:	f800283a 	ret
 801be48:	00802284 	movi	r2,138
 801be4c:	20800015 	stw	r2,0(r4)
 801be50:	00bfffc4 	movi	r2,-1
 801be54:	f800283a 	ret

0801be58 <_wctomb_r>:
 801be58:	008200b4 	movhi	r2,2050
 801be5c:	defff904 	addi	sp,sp,-28
 801be60:	1088fd04 	addi	r2,r2,9204
 801be64:	dfc00615 	stw	ra,24(sp)
 801be68:	dc400515 	stw	r17,20(sp)
 801be6c:	dc000415 	stw	r16,16(sp)
 801be70:	3823883a 	mov	r17,r7
 801be74:	14000017 	ldw	r16,0(r2)
 801be78:	d9000115 	stw	r4,4(sp)
 801be7c:	d9400215 	stw	r5,8(sp)
 801be80:	d9800315 	stw	r6,12(sp)
 801be84:	80165340 	call	8016534 <__locale_charset>
 801be88:	d9000117 	ldw	r4,4(sp)
 801be8c:	d9400217 	ldw	r5,8(sp)
 801be90:	d9800317 	ldw	r6,12(sp)
 801be94:	dc400015 	stw	r17,0(sp)
 801be98:	100f883a 	mov	r7,r2
 801be9c:	803ee83a 	callr	r16
 801bea0:	dfc00617 	ldw	ra,24(sp)
 801bea4:	dc400517 	ldw	r17,20(sp)
 801bea8:	dc000417 	ldw	r16,16(sp)
 801beac:	dec00704 	addi	sp,sp,28
 801beb0:	f800283a 	ret

0801beb4 <__udivdi3>:
 801beb4:	defff504 	addi	sp,sp,-44
 801beb8:	dcc00415 	stw	r19,16(sp)
 801bebc:	dc000115 	stw	r16,4(sp)
 801bec0:	dfc00a15 	stw	ra,40(sp)
 801bec4:	df000915 	stw	fp,36(sp)
 801bec8:	ddc00815 	stw	r23,32(sp)
 801becc:	dd800715 	stw	r22,28(sp)
 801bed0:	dd400615 	stw	r21,24(sp)
 801bed4:	dd000515 	stw	r20,20(sp)
 801bed8:	dc800315 	stw	r18,12(sp)
 801bedc:	dc400215 	stw	r17,8(sp)
 801bee0:	2027883a 	mov	r19,r4
 801bee4:	2821883a 	mov	r16,r5
 801bee8:	3800471e 	bne	r7,zero,801c008 <__udivdi3+0x154>
 801beec:	3025883a 	mov	r18,r6
 801bef0:	2023883a 	mov	r17,r4
 801bef4:	2980592e 	bgeu	r5,r6,801c05c <__udivdi3+0x1a8>
 801bef8:	00bfffd4 	movui	r2,65535
 801befc:	2829883a 	mov	r20,r5
 801bf00:	1180b236 	bltu	r2,r6,801c1cc <__udivdi3+0x318>
 801bf04:	00803fc4 	movi	r2,255
 801bf08:	1181622e 	bgeu	r2,r6,801c494 <__udivdi3+0x5e0>
 801bf0c:	00800204 	movi	r2,8
 801bf10:	1007883a 	mov	r3,r2
 801bf14:	3084d83a 	srl	r2,r6,r2
 801bf18:	010200b4 	movhi	r4,2050
 801bf1c:	2100b904 	addi	r4,r4,740
 801bf20:	2085883a 	add	r2,r4,r2
 801bf24:	11000003 	ldbu	r4,0(r2)
 801bf28:	20c9883a 	add	r4,r4,r3
 801bf2c:	00c00804 	movi	r3,32
 801bf30:	1907c83a 	sub	r3,r3,r4
 801bf34:	18000526 	beq	r3,zero,801bf4c <__udivdi3+0x98>
 801bf38:	80e0983a 	sll	r16,r16,r3
 801bf3c:	9908d83a 	srl	r4,r19,r4
 801bf40:	30e4983a 	sll	r18,r6,r3
 801bf44:	98e2983a 	sll	r17,r19,r3
 801bf48:	8128b03a 	or	r20,r16,r4
 801bf4c:	902ad43a 	srli	r21,r18,16
 801bf50:	a009883a 	mov	r4,r20
 801bf54:	95bfffcc 	andi	r22,r18,65535
 801bf58:	a80b883a 	mov	r5,r21
 801bf5c:	8009fdc0 	call	8009fdc <__umodsi3>
 801bf60:	a009883a 	mov	r4,r20
 801bf64:	a80b883a 	mov	r5,r21
 801bf68:	102f883a 	mov	r23,r2
 801bf6c:	8009fd40 	call	8009fd4 <__udivsi3>
 801bf70:	1009883a 	mov	r4,r2
 801bf74:	b00b883a 	mov	r5,r22
 801bf78:	1021883a 	mov	r16,r2
 801bf7c:	8009fe40 	call	8009fe4 <__mulsi3>
 801bf80:	b82e943a 	slli	r23,r23,16
 801bf84:	8808d43a 	srli	r4,r17,16
 801bf88:	b906b03a 	or	r3,r23,r4
 801bf8c:	1880052e 	bgeu	r3,r2,801bfa4 <__udivdi3+0xf0>
 801bf90:	1c87883a 	add	r3,r3,r18
 801bf94:	813fffc4 	addi	r4,r16,-1
 801bf98:	1c800136 	bltu	r3,r18,801bfa0 <__udivdi3+0xec>
 801bf9c:	18815236 	bltu	r3,r2,801c4e8 <__udivdi3+0x634>
 801bfa0:	2021883a 	mov	r16,r4
 801bfa4:	18a7c83a 	sub	r19,r3,r2
 801bfa8:	9809883a 	mov	r4,r19
 801bfac:	a80b883a 	mov	r5,r21
 801bfb0:	8009fdc0 	call	8009fdc <__umodsi3>
 801bfb4:	1029883a 	mov	r20,r2
 801bfb8:	9809883a 	mov	r4,r19
 801bfbc:	a80b883a 	mov	r5,r21
 801bfc0:	a028943a 	slli	r20,r20,16
 801bfc4:	8009fd40 	call	8009fd4 <__udivsi3>
 801bfc8:	1009883a 	mov	r4,r2
 801bfcc:	b00b883a 	mov	r5,r22
 801bfd0:	8c7fffcc 	andi	r17,r17,65535
 801bfd4:	1027883a 	mov	r19,r2
 801bfd8:	a462b03a 	or	r17,r20,r17
 801bfdc:	8009fe40 	call	8009fe4 <__mulsi3>
 801bfe0:	8880052e 	bgeu	r17,r2,801bff8 <__udivdi3+0x144>
 801bfe4:	8ca3883a 	add	r17,r17,r18
 801bfe8:	98ffffc4 	addi	r3,r19,-1
 801bfec:	8c811036 	bltu	r17,r18,801c430 <__udivdi3+0x57c>
 801bff0:	88810f2e 	bgeu	r17,r2,801c430 <__udivdi3+0x57c>
 801bff4:	9cffff84 	addi	r19,r19,-2
 801bff8:	8020943a 	slli	r16,r16,16
 801bffc:	0007883a 	mov	r3,zero
 801c000:	9c04b03a 	or	r2,r19,r16
 801c004:	00006006 	br	801c188 <__udivdi3+0x2d4>
 801c008:	29c05d36 	bltu	r5,r7,801c180 <__udivdi3+0x2cc>
 801c00c:	00bfffd4 	movui	r2,65535
 801c010:	11c0692e 	bgeu	r2,r7,801c1b8 <__udivdi3+0x304>
 801c014:	00804034 	movhi	r2,256
 801c018:	10bfffc4 	addi	r2,r2,-1
 801c01c:	11c10e2e 	bgeu	r2,r7,801c458 <__udivdi3+0x5a4>
 801c020:	01400604 	movi	r5,24
 801c024:	2811883a 	mov	r8,r5
 801c028:	394ad83a 	srl	r5,r7,r5
 801c02c:	008200b4 	movhi	r2,2050
 801c030:	1080b904 	addi	r2,r2,740
 801c034:	114b883a 	add	r5,r2,r5
 801c038:	29400003 	ldbu	r5,0(r5)
 801c03c:	00c00804 	movi	r3,32
 801c040:	2a0b883a 	add	r5,r5,r8
 801c044:	196fc83a 	sub	r23,r3,r5
 801c048:	b8006b1e 	bne	r23,zero,801c1f8 <__udivdi3+0x344>
 801c04c:	3c011436 	bltu	r7,r16,801c4a0 <__udivdi3+0x5ec>
 801c050:	9985403a 	cmpgeu	r2,r19,r6
 801c054:	0007883a 	mov	r3,zero
 801c058:	00004b06 	br	801c188 <__udivdi3+0x2d4>
 801c05c:	3000041e 	bne	r6,zero,801c070 <__udivdi3+0x1bc>
 801c060:	01000044 	movi	r4,1
 801c064:	000b883a 	mov	r5,zero
 801c068:	8009fd40 	call	8009fd4 <__udivsi3>
 801c06c:	1025883a 	mov	r18,r2
 801c070:	00bfffd4 	movui	r2,65535
 801c074:	14805b2e 	bgeu	r2,r18,801c1e4 <__udivdi3+0x330>
 801c078:	00804034 	movhi	r2,256
 801c07c:	10bfffc4 	addi	r2,r2,-1
 801c080:	1480fe2e 	bgeu	r2,r18,801c47c <__udivdi3+0x5c8>
 801c084:	00800604 	movi	r2,24
 801c088:	1007883a 	mov	r3,r2
 801c08c:	9084d83a 	srl	r2,r18,r2
 801c090:	010200b4 	movhi	r4,2050
 801c094:	2100b904 	addi	r4,r4,740
 801c098:	2085883a 	add	r2,r4,r2
 801c09c:	11800003 	ldbu	r6,0(r2)
 801c0a0:	01c00804 	movi	r7,32
 801c0a4:	30c7883a 	add	r3,r6,r3
 801c0a8:	38cfc83a 	sub	r7,r7,r3
 801c0ac:	3800a71e 	bne	r7,zero,801c34c <__udivdi3+0x498>
 801c0b0:	9028d43a 	srli	r20,r18,16
 801c0b4:	84a1c83a 	sub	r16,r16,r18
 801c0b8:	957fffcc 	andi	r21,r18,65535
 801c0bc:	00c00044 	movi	r3,1
 801c0c0:	8009883a 	mov	r4,r16
 801c0c4:	a00b883a 	mov	r5,r20
 801c0c8:	d8c00015 	stw	r3,0(sp)
 801c0cc:	8009fdc0 	call	8009fdc <__umodsi3>
 801c0d0:	8009883a 	mov	r4,r16
 801c0d4:	a00b883a 	mov	r5,r20
 801c0d8:	102d883a 	mov	r22,r2
 801c0dc:	8009fd40 	call	8009fd4 <__udivsi3>
 801c0e0:	1009883a 	mov	r4,r2
 801c0e4:	a80b883a 	mov	r5,r21
 801c0e8:	1021883a 	mov	r16,r2
 801c0ec:	8009fe40 	call	8009fe4 <__mulsi3>
 801c0f0:	b02c943a 	slli	r22,r22,16
 801c0f4:	880ed43a 	srli	r7,r17,16
 801c0f8:	d8c00017 	ldw	r3,0(sp)
 801c0fc:	b1ccb03a 	or	r6,r22,r7
 801c100:	3080052e 	bgeu	r6,r2,801c118 <__udivdi3+0x264>
 801c104:	348d883a 	add	r6,r6,r18
 801c108:	813fffc4 	addi	r4,r16,-1
 801c10c:	34800136 	bltu	r6,r18,801c114 <__udivdi3+0x260>
 801c110:	3080f236 	bltu	r6,r2,801c4dc <__udivdi3+0x628>
 801c114:	2021883a 	mov	r16,r4
 801c118:	30a7c83a 	sub	r19,r6,r2
 801c11c:	9809883a 	mov	r4,r19
 801c120:	a00b883a 	mov	r5,r20
 801c124:	d8c00015 	stw	r3,0(sp)
 801c128:	8009fdc0 	call	8009fdc <__umodsi3>
 801c12c:	102d883a 	mov	r22,r2
 801c130:	9809883a 	mov	r4,r19
 801c134:	a00b883a 	mov	r5,r20
 801c138:	b02c943a 	slli	r22,r22,16
 801c13c:	8009fd40 	call	8009fd4 <__udivsi3>
 801c140:	1009883a 	mov	r4,r2
 801c144:	a80b883a 	mov	r5,r21
 801c148:	8c7fffcc 	andi	r17,r17,65535
 801c14c:	1027883a 	mov	r19,r2
 801c150:	b462b03a 	or	r17,r22,r17
 801c154:	8009fe40 	call	8009fe4 <__mulsi3>
 801c158:	d8c00017 	ldw	r3,0(sp)
 801c15c:	8880052e 	bgeu	r17,r2,801c174 <__udivdi3+0x2c0>
 801c160:	8ca3883a 	add	r17,r17,r18
 801c164:	993fffc4 	addi	r4,r19,-1
 801c168:	8c80af36 	bltu	r17,r18,801c428 <__udivdi3+0x574>
 801c16c:	8880ae2e 	bgeu	r17,r2,801c428 <__udivdi3+0x574>
 801c170:	9cffff84 	addi	r19,r19,-2
 801c174:	8020943a 	slli	r16,r16,16
 801c178:	9c04b03a 	or	r2,r19,r16
 801c17c:	00000206 	br	801c188 <__udivdi3+0x2d4>
 801c180:	0007883a 	mov	r3,zero
 801c184:	0005883a 	mov	r2,zero
 801c188:	dfc00a17 	ldw	ra,40(sp)
 801c18c:	df000917 	ldw	fp,36(sp)
 801c190:	ddc00817 	ldw	r23,32(sp)
 801c194:	dd800717 	ldw	r22,28(sp)
 801c198:	dd400617 	ldw	r21,24(sp)
 801c19c:	dd000517 	ldw	r20,20(sp)
 801c1a0:	dcc00417 	ldw	r19,16(sp)
 801c1a4:	dc800317 	ldw	r18,12(sp)
 801c1a8:	dc400217 	ldw	r17,8(sp)
 801c1ac:	dc000117 	ldw	r16,4(sp)
 801c1b0:	dec00b04 	addi	sp,sp,44
 801c1b4:	f800283a 	ret
 801c1b8:	00803fc4 	movi	r2,255
 801c1bc:	11c0a92e 	bgeu	r2,r7,801c464 <__udivdi3+0x5b0>
 801c1c0:	01400204 	movi	r5,8
 801c1c4:	2811883a 	mov	r8,r5
 801c1c8:	003f9706 	br	801c028 <__alt_data_end+0xfc01c028>
 801c1cc:	00804034 	movhi	r2,256
 801c1d0:	10bfffc4 	addi	r2,r2,-1
 801c1d4:	1180a62e 	bgeu	r2,r6,801c470 <__udivdi3+0x5bc>
 801c1d8:	00800604 	movi	r2,24
 801c1dc:	1007883a 	mov	r3,r2
 801c1e0:	003f4c06 	br	801bf14 <__alt_data_end+0xfc01bf14>
 801c1e4:	00803fc4 	movi	r2,255
 801c1e8:	1480a72e 	bgeu	r2,r18,801c488 <__udivdi3+0x5d4>
 801c1ec:	00800204 	movi	r2,8
 801c1f0:	1007883a 	mov	r3,r2
 801c1f4:	003fa506 	br	801c08c <__alt_data_end+0xfc01c08c>
 801c1f8:	3178d83a 	srl	fp,r6,r5
 801c1fc:	3dce983a 	sll	r7,r7,r23
 801c200:	8168d83a 	srl	r20,r16,r5
 801c204:	9950d83a 	srl	r8,r19,r5
 801c208:	3f38b03a 	or	fp,r7,fp
 801c20c:	e024d43a 	srli	r18,fp,16
 801c210:	85e0983a 	sll	r16,r16,r23
 801c214:	a009883a 	mov	r4,r20
 801c218:	900b883a 	mov	r5,r18
 801c21c:	8220b03a 	or	r16,r16,r8
 801c220:	35ea983a 	sll	r21,r6,r23
 801c224:	8009fdc0 	call	8009fdc <__umodsi3>
 801c228:	a009883a 	mov	r4,r20
 801c22c:	900b883a 	mov	r5,r18
 801c230:	1023883a 	mov	r17,r2
 801c234:	e5bfffcc 	andi	r22,fp,65535
 801c238:	8009fd40 	call	8009fd4 <__udivsi3>
 801c23c:	1009883a 	mov	r4,r2
 801c240:	b00b883a 	mov	r5,r22
 801c244:	1029883a 	mov	r20,r2
 801c248:	8009fe40 	call	8009fe4 <__mulsi3>
 801c24c:	8806943a 	slli	r3,r17,16
 801c250:	8014d43a 	srli	r10,r16,16
 801c254:	1a92b03a 	or	r9,r3,r10
 801c258:	4880042e 	bgeu	r9,r2,801c26c <__udivdi3+0x3b8>
 801c25c:	4f13883a 	add	r9,r9,fp
 801c260:	a0ffffc4 	addi	r3,r20,-1
 801c264:	4f00952e 	bgeu	r9,fp,801c4bc <__udivdi3+0x608>
 801c268:	1829883a 	mov	r20,r3
 801c26c:	48a3c83a 	sub	r17,r9,r2
 801c270:	8809883a 	mov	r4,r17
 801c274:	900b883a 	mov	r5,r18
 801c278:	8009fdc0 	call	8009fdc <__umodsi3>
 801c27c:	8809883a 	mov	r4,r17
 801c280:	900b883a 	mov	r5,r18
 801c284:	d8800015 	stw	r2,0(sp)
 801c288:	8009fd40 	call	8009fd4 <__udivsi3>
 801c28c:	1009883a 	mov	r4,r2
 801c290:	b00b883a 	mov	r5,r22
 801c294:	1023883a 	mov	r17,r2
 801c298:	8009fe40 	call	8009fe4 <__mulsi3>
 801c29c:	d8c00017 	ldw	r3,0(sp)
 801c2a0:	823fffcc 	andi	r8,r16,65535
 801c2a4:	1806943a 	slli	r3,r3,16
 801c2a8:	1a20b03a 	or	r16,r3,r8
 801c2ac:	8080042e 	bgeu	r16,r2,801c2c0 <__udivdi3+0x40c>
 801c2b0:	8721883a 	add	r16,r16,fp
 801c2b4:	88ffffc4 	addi	r3,r17,-1
 801c2b8:	87007c2e 	bgeu	r16,fp,801c4ac <__udivdi3+0x5f8>
 801c2bc:	1823883a 	mov	r17,r3
 801c2c0:	a028943a 	slli	r20,r20,16
 801c2c4:	acbfffcc 	andi	r18,r21,65535
 801c2c8:	900b883a 	mov	r5,r18
 801c2cc:	8d28b03a 	or	r20,r17,r20
 801c2d0:	a022d43a 	srli	r17,r20,16
 801c2d4:	a5bfffcc 	andi	r22,r20,65535
 801c2d8:	b009883a 	mov	r4,r22
 801c2dc:	a82ad43a 	srli	r21,r21,16
 801c2e0:	80a1c83a 	sub	r16,r16,r2
 801c2e4:	8009fe40 	call	8009fe4 <__mulsi3>
 801c2e8:	8809883a 	mov	r4,r17
 801c2ec:	900b883a 	mov	r5,r18
 801c2f0:	1039883a 	mov	fp,r2
 801c2f4:	8009fe40 	call	8009fe4 <__mulsi3>
 801c2f8:	8809883a 	mov	r4,r17
 801c2fc:	a80b883a 	mov	r5,r21
 801c300:	1025883a 	mov	r18,r2
 801c304:	8009fe40 	call	8009fe4 <__mulsi3>
 801c308:	b009883a 	mov	r4,r22
 801c30c:	a80b883a 	mov	r5,r21
 801c310:	1023883a 	mov	r17,r2
 801c314:	8009fe40 	call	8009fe4 <__mulsi3>
 801c318:	e006d43a 	srli	r3,fp,16
 801c31c:	9085883a 	add	r2,r18,r2
 801c320:	10c7883a 	add	r3,r2,r3
 801c324:	1c80022e 	bgeu	r3,r18,801c330 <__udivdi3+0x47c>
 801c328:	00800074 	movhi	r2,1
 801c32c:	88a3883a 	add	r17,r17,r2
 801c330:	1808d43a 	srli	r4,r3,16
 801c334:	8909883a 	add	r4,r17,r4
 801c338:	81004436 	bltu	r16,r4,801c44c <__udivdi3+0x598>
 801c33c:	81003e26 	beq	r16,r4,801c438 <__udivdi3+0x584>
 801c340:	a005883a 	mov	r2,r20
 801c344:	0007883a 	mov	r3,zero
 801c348:	003f8f06 	br	801c188 <__alt_data_end+0xfc01c188>
 801c34c:	91e4983a 	sll	r18,r18,r7
 801c350:	80eed83a 	srl	r23,r16,r3
 801c354:	81cc983a 	sll	r6,r16,r7
 801c358:	9028d43a 	srli	r20,r18,16
 801c35c:	98c6d83a 	srl	r3,r19,r3
 801c360:	b809883a 	mov	r4,r23
 801c364:	a00b883a 	mov	r5,r20
 801c368:	30ecb03a 	or	r22,r6,r3
 801c36c:	99e2983a 	sll	r17,r19,r7
 801c370:	8009fdc0 	call	8009fdc <__umodsi3>
 801c374:	b809883a 	mov	r4,r23
 801c378:	a00b883a 	mov	r5,r20
 801c37c:	1021883a 	mov	r16,r2
 801c380:	957fffcc 	andi	r21,r18,65535
 801c384:	8009fd40 	call	8009fd4 <__udivsi3>
 801c388:	a80b883a 	mov	r5,r21
 801c38c:	1009883a 	mov	r4,r2
 801c390:	102f883a 	mov	r23,r2
 801c394:	8009fe40 	call	8009fe4 <__mulsi3>
 801c398:	8020943a 	slli	r16,r16,16
 801c39c:	b00ad43a 	srli	r5,r22,16
 801c3a0:	814cb03a 	or	r6,r16,r5
 801c3a4:	3080062e 	bgeu	r6,r2,801c3c0 <__udivdi3+0x50c>
 801c3a8:	348d883a 	add	r6,r6,r18
 801c3ac:	b8ffffc4 	addi	r3,r23,-1
 801c3b0:	34804836 	bltu	r6,r18,801c4d4 <__udivdi3+0x620>
 801c3b4:	3080472e 	bgeu	r6,r2,801c4d4 <__udivdi3+0x620>
 801c3b8:	bdffff84 	addi	r23,r23,-2
 801c3bc:	348d883a 	add	r6,r6,r18
 801c3c0:	30a7c83a 	sub	r19,r6,r2
 801c3c4:	9809883a 	mov	r4,r19
 801c3c8:	a00b883a 	mov	r5,r20
 801c3cc:	8009fdc0 	call	8009fdc <__umodsi3>
 801c3d0:	9809883a 	mov	r4,r19
 801c3d4:	a00b883a 	mov	r5,r20
 801c3d8:	1039883a 	mov	fp,r2
 801c3dc:	8009fd40 	call	8009fd4 <__udivsi3>
 801c3e0:	1009883a 	mov	r4,r2
 801c3e4:	a80b883a 	mov	r5,r21
 801c3e8:	e038943a 	slli	fp,fp,16
 801c3ec:	1027883a 	mov	r19,r2
 801c3f0:	8009fe40 	call	8009fe4 <__mulsi3>
 801c3f4:	b1bfffcc 	andi	r6,r22,65535
 801c3f8:	e18cb03a 	or	r6,fp,r6
 801c3fc:	3080062e 	bgeu	r6,r2,801c418 <__udivdi3+0x564>
 801c400:	348d883a 	add	r6,r6,r18
 801c404:	98ffffc4 	addi	r3,r19,-1
 801c408:	34803036 	bltu	r6,r18,801c4cc <__udivdi3+0x618>
 801c40c:	30802f2e 	bgeu	r6,r2,801c4cc <__udivdi3+0x618>
 801c410:	9cffff84 	addi	r19,r19,-2
 801c414:	348d883a 	add	r6,r6,r18
 801c418:	b82e943a 	slli	r23,r23,16
 801c41c:	30a1c83a 	sub	r16,r6,r2
 801c420:	9dc6b03a 	or	r3,r19,r23
 801c424:	003f2606 	br	801c0c0 <__alt_data_end+0xfc01c0c0>
 801c428:	2027883a 	mov	r19,r4
 801c42c:	003f5106 	br	801c174 <__alt_data_end+0xfc01c174>
 801c430:	1827883a 	mov	r19,r3
 801c434:	003ef006 	br	801bff8 <__alt_data_end+0xfc01bff8>
 801c438:	1808943a 	slli	r4,r3,16
 801c43c:	9dc6983a 	sll	r3,r19,r23
 801c440:	e73fffcc 	andi	fp,fp,65535
 801c444:	2709883a 	add	r4,r4,fp
 801c448:	193fbd2e 	bgeu	r3,r4,801c340 <__alt_data_end+0xfc01c340>
 801c44c:	a0bfffc4 	addi	r2,r20,-1
 801c450:	0007883a 	mov	r3,zero
 801c454:	003f4c06 	br	801c188 <__alt_data_end+0xfc01c188>
 801c458:	01400404 	movi	r5,16
 801c45c:	2811883a 	mov	r8,r5
 801c460:	003ef106 	br	801c028 <__alt_data_end+0xfc01c028>
 801c464:	000b883a 	mov	r5,zero
 801c468:	0011883a 	mov	r8,zero
 801c46c:	003eee06 	br	801c028 <__alt_data_end+0xfc01c028>
 801c470:	00800404 	movi	r2,16
 801c474:	1007883a 	mov	r3,r2
 801c478:	003ea606 	br	801bf14 <__alt_data_end+0xfc01bf14>
 801c47c:	00800404 	movi	r2,16
 801c480:	1007883a 	mov	r3,r2
 801c484:	003f0106 	br	801c08c <__alt_data_end+0xfc01c08c>
 801c488:	0005883a 	mov	r2,zero
 801c48c:	0007883a 	mov	r3,zero
 801c490:	003efe06 	br	801c08c <__alt_data_end+0xfc01c08c>
 801c494:	0005883a 	mov	r2,zero
 801c498:	0007883a 	mov	r3,zero
 801c49c:	003e9d06 	br	801bf14 <__alt_data_end+0xfc01bf14>
 801c4a0:	0007883a 	mov	r3,zero
 801c4a4:	00800044 	movi	r2,1
 801c4a8:	003f3706 	br	801c188 <__alt_data_end+0xfc01c188>
 801c4ac:	80bf832e 	bgeu	r16,r2,801c2bc <__alt_data_end+0xfc01c2bc>
 801c4b0:	8c7fff84 	addi	r17,r17,-2
 801c4b4:	8721883a 	add	r16,r16,fp
 801c4b8:	003f8106 	br	801c2c0 <__alt_data_end+0xfc01c2c0>
 801c4bc:	48bf6a2e 	bgeu	r9,r2,801c268 <__alt_data_end+0xfc01c268>
 801c4c0:	a53fff84 	addi	r20,r20,-2
 801c4c4:	4f13883a 	add	r9,r9,fp
 801c4c8:	003f6806 	br	801c26c <__alt_data_end+0xfc01c26c>
 801c4cc:	1827883a 	mov	r19,r3
 801c4d0:	003fd106 	br	801c418 <__alt_data_end+0xfc01c418>
 801c4d4:	182f883a 	mov	r23,r3
 801c4d8:	003fb906 	br	801c3c0 <__alt_data_end+0xfc01c3c0>
 801c4dc:	843fff84 	addi	r16,r16,-2
 801c4e0:	348d883a 	add	r6,r6,r18
 801c4e4:	003f0c06 	br	801c118 <__alt_data_end+0xfc01c118>
 801c4e8:	843fff84 	addi	r16,r16,-2
 801c4ec:	1c87883a 	add	r3,r3,r18
 801c4f0:	003eac06 	br	801bfa4 <__alt_data_end+0xfc01bfa4>

0801c4f4 <__umoddi3>:
 801c4f4:	defff404 	addi	sp,sp,-48
 801c4f8:	dd800815 	stw	r22,32(sp)
 801c4fc:	dc400315 	stw	r17,12(sp)
 801c500:	dc000215 	stw	r16,8(sp)
 801c504:	dfc00b15 	stw	ra,44(sp)
 801c508:	df000a15 	stw	fp,40(sp)
 801c50c:	ddc00915 	stw	r23,36(sp)
 801c510:	dd400715 	stw	r21,28(sp)
 801c514:	dd000615 	stw	r20,24(sp)
 801c518:	dcc00515 	stw	r19,20(sp)
 801c51c:	dc800415 	stw	r18,16(sp)
 801c520:	2021883a 	mov	r16,r4
 801c524:	2823883a 	mov	r17,r5
 801c528:	282d883a 	mov	r22,r5
 801c52c:	38003c1e 	bne	r7,zero,801c620 <__umoddi3+0x12c>
 801c530:	3027883a 	mov	r19,r6
 801c534:	2029883a 	mov	r20,r4
 801c538:	2980522e 	bgeu	r5,r6,801c684 <__umoddi3+0x190>
 801c53c:	00bfffd4 	movui	r2,65535
 801c540:	1180a436 	bltu	r2,r6,801c7d4 <__umoddi3+0x2e0>
 801c544:	00803fc4 	movi	r2,255
 801c548:	11815e2e 	bgeu	r2,r6,801cac4 <__umoddi3+0x5d0>
 801c54c:	01400204 	movi	r5,8
 801c550:	2805883a 	mov	r2,r5
 801c554:	314ad83a 	srl	r5,r6,r5
 801c558:	00c200b4 	movhi	r3,2050
 801c55c:	18c0b904 	addi	r3,r3,740
 801c560:	194b883a 	add	r5,r3,r5
 801c564:	29000003 	ldbu	r4,0(r5)
 801c568:	2089883a 	add	r4,r4,r2
 801c56c:	00800804 	movi	r2,32
 801c570:	1105c83a 	sub	r2,r2,r4
 801c574:	10010c26 	beq	r2,zero,801c9a8 <__umoddi3+0x4b4>
 801c578:	88a2983a 	sll	r17,r17,r2
 801c57c:	8108d83a 	srl	r4,r16,r4
 801c580:	30a6983a 	sll	r19,r6,r2
 801c584:	80a8983a 	sll	r20,r16,r2
 801c588:	1025883a 	mov	r18,r2
 801c58c:	892cb03a 	or	r22,r17,r4
 801c590:	9822d43a 	srli	r17,r19,16
 801c594:	b009883a 	mov	r4,r22
 801c598:	9d7fffcc 	andi	r21,r19,65535
 801c59c:	880b883a 	mov	r5,r17
 801c5a0:	8009fdc0 	call	8009fdc <__umodsi3>
 801c5a4:	b009883a 	mov	r4,r22
 801c5a8:	880b883a 	mov	r5,r17
 801c5ac:	102f883a 	mov	r23,r2
 801c5b0:	8009fd40 	call	8009fd4 <__udivsi3>
 801c5b4:	1009883a 	mov	r4,r2
 801c5b8:	a80b883a 	mov	r5,r21
 801c5bc:	8009fe40 	call	8009fe4 <__mulsi3>
 801c5c0:	b82e943a 	slli	r23,r23,16
 801c5c4:	a008d43a 	srli	r4,r20,16
 801c5c8:	b906b03a 	or	r3,r23,r4
 801c5cc:	1880042e 	bgeu	r3,r2,801c5e0 <__umoddi3+0xec>
 801c5d0:	1cc7883a 	add	r3,r3,r19
 801c5d4:	1cc00236 	bltu	r3,r19,801c5e0 <__umoddi3+0xec>
 801c5d8:	1880012e 	bgeu	r3,r2,801c5e0 <__umoddi3+0xec>
 801c5dc:	1cc7883a 	add	r3,r3,r19
 801c5e0:	18a1c83a 	sub	r16,r3,r2
 801c5e4:	8009883a 	mov	r4,r16
 801c5e8:	880b883a 	mov	r5,r17
 801c5ec:	8009fdc0 	call	8009fdc <__umodsi3>
 801c5f0:	8009883a 	mov	r4,r16
 801c5f4:	880b883a 	mov	r5,r17
 801c5f8:	102d883a 	mov	r22,r2
 801c5fc:	8009fd40 	call	8009fd4 <__udivsi3>
 801c600:	1009883a 	mov	r4,r2
 801c604:	a80b883a 	mov	r5,r21
 801c608:	b02c943a 	slli	r22,r22,16
 801c60c:	8009fe40 	call	8009fe4 <__mulsi3>
 801c610:	a13fffcc 	andi	r4,r20,65535
 801c614:	b106b03a 	or	r3,r22,r4
 801c618:	1880572e 	bgeu	r3,r2,801c778 <__umoddi3+0x284>
 801c61c:	00005206 	br	801c768 <__umoddi3+0x274>
 801c620:	29c05936 	bltu	r5,r7,801c788 <__umoddi3+0x294>
 801c624:	00bfffd4 	movui	r2,65535
 801c628:	11c0652e 	bgeu	r2,r7,801c7c0 <__umoddi3+0x2cc>
 801c62c:	00804034 	movhi	r2,256
 801c630:	10bfffc4 	addi	r2,r2,-1
 801c634:	11c1172e 	bgeu	r2,r7,801ca94 <__umoddi3+0x5a0>
 801c638:	01400604 	movi	r5,24
 801c63c:	282b883a 	mov	r21,r5
 801c640:	394ad83a 	srl	r5,r7,r5
 801c644:	00c200b4 	movhi	r3,2050
 801c648:	18c0b904 	addi	r3,r3,740
 801c64c:	194b883a 	add	r5,r3,r5
 801c650:	28800003 	ldbu	r2,0(r5)
 801c654:	00c00804 	movi	r3,32
 801c658:	156b883a 	add	r21,r2,r21
 801c65c:	1d69c83a 	sub	r20,r3,r21
 801c660:	a000671e 	bne	r20,zero,801c800 <__umoddi3+0x30c>
 801c664:	3c400136 	bltu	r7,r17,801c66c <__umoddi3+0x178>
 801c668:	81812336 	bltu	r16,r6,801caf8 <__umoddi3+0x604>
 801c66c:	8185c83a 	sub	r2,r16,r6
 801c670:	89e3c83a 	sub	r17,r17,r7
 801c674:	8087803a 	cmpltu	r3,r16,r2
 801c678:	88edc83a 	sub	r22,r17,r3
 801c67c:	b007883a 	mov	r3,r22
 801c680:	00004306 	br	801c790 <__umoddi3+0x29c>
 801c684:	3000041e 	bne	r6,zero,801c698 <__umoddi3+0x1a4>
 801c688:	01000044 	movi	r4,1
 801c68c:	000b883a 	mov	r5,zero
 801c690:	8009fd40 	call	8009fd4 <__udivsi3>
 801c694:	1027883a 	mov	r19,r2
 801c698:	00bfffd4 	movui	r2,65535
 801c69c:	14c0532e 	bgeu	r2,r19,801c7ec <__umoddi3+0x2f8>
 801c6a0:	00804034 	movhi	r2,256
 801c6a4:	10bfffc4 	addi	r2,r2,-1
 801c6a8:	14c1032e 	bgeu	r2,r19,801cab8 <__umoddi3+0x5c4>
 801c6ac:	00800604 	movi	r2,24
 801c6b0:	1007883a 	mov	r3,r2
 801c6b4:	9884d83a 	srl	r2,r19,r2
 801c6b8:	010200b4 	movhi	r4,2050
 801c6bc:	2100b904 	addi	r4,r4,740
 801c6c0:	2085883a 	add	r2,r4,r2
 801c6c4:	11000003 	ldbu	r4,0(r2)
 801c6c8:	00800804 	movi	r2,32
 801c6cc:	20c7883a 	add	r3,r4,r3
 801c6d0:	10c5c83a 	sub	r2,r2,r3
 801c6d4:	1000b61e 	bne	r2,zero,801c9b0 <__umoddi3+0x4bc>
 801c6d8:	982ad43a 	srli	r21,r19,16
 801c6dc:	8ce3c83a 	sub	r17,r17,r19
 801c6e0:	9dbfffcc 	andi	r22,r19,65535
 801c6e4:	0025883a 	mov	r18,zero
 801c6e8:	8809883a 	mov	r4,r17
 801c6ec:	a80b883a 	mov	r5,r21
 801c6f0:	8009fdc0 	call	8009fdc <__umodsi3>
 801c6f4:	8809883a 	mov	r4,r17
 801c6f8:	a80b883a 	mov	r5,r21
 801c6fc:	102f883a 	mov	r23,r2
 801c700:	8009fd40 	call	8009fd4 <__udivsi3>
 801c704:	1009883a 	mov	r4,r2
 801c708:	b00b883a 	mov	r5,r22
 801c70c:	8009fe40 	call	8009fe4 <__mulsi3>
 801c710:	b82e943a 	slli	r23,r23,16
 801c714:	a008d43a 	srli	r4,r20,16
 801c718:	b906b03a 	or	r3,r23,r4
 801c71c:	1880032e 	bgeu	r3,r2,801c72c <__umoddi3+0x238>
 801c720:	1cc7883a 	add	r3,r3,r19
 801c724:	1cc00136 	bltu	r3,r19,801c72c <__umoddi3+0x238>
 801c728:	1880f136 	bltu	r3,r2,801caf0 <__umoddi3+0x5fc>
 801c72c:	18a1c83a 	sub	r16,r3,r2
 801c730:	8009883a 	mov	r4,r16
 801c734:	a80b883a 	mov	r5,r21
 801c738:	8009fdc0 	call	8009fdc <__umodsi3>
 801c73c:	8009883a 	mov	r4,r16
 801c740:	a80b883a 	mov	r5,r21
 801c744:	1023883a 	mov	r17,r2
 801c748:	8009fd40 	call	8009fd4 <__udivsi3>
 801c74c:	1009883a 	mov	r4,r2
 801c750:	b00b883a 	mov	r5,r22
 801c754:	8822943a 	slli	r17,r17,16
 801c758:	8009fe40 	call	8009fe4 <__mulsi3>
 801c75c:	a13fffcc 	andi	r4,r20,65535
 801c760:	8906b03a 	or	r3,r17,r4
 801c764:	1880042e 	bgeu	r3,r2,801c778 <__umoddi3+0x284>
 801c768:	1cc7883a 	add	r3,r3,r19
 801c76c:	1cc00236 	bltu	r3,r19,801c778 <__umoddi3+0x284>
 801c770:	1880012e 	bgeu	r3,r2,801c778 <__umoddi3+0x284>
 801c774:	1cc7883a 	add	r3,r3,r19
 801c778:	1887c83a 	sub	r3,r3,r2
 801c77c:	1c84d83a 	srl	r2,r3,r18
 801c780:	0007883a 	mov	r3,zero
 801c784:	00000206 	br	801c790 <__umoddi3+0x29c>
 801c788:	2005883a 	mov	r2,r4
 801c78c:	2807883a 	mov	r3,r5
 801c790:	dfc00b17 	ldw	ra,44(sp)
 801c794:	df000a17 	ldw	fp,40(sp)
 801c798:	ddc00917 	ldw	r23,36(sp)
 801c79c:	dd800817 	ldw	r22,32(sp)
 801c7a0:	dd400717 	ldw	r21,28(sp)
 801c7a4:	dd000617 	ldw	r20,24(sp)
 801c7a8:	dcc00517 	ldw	r19,20(sp)
 801c7ac:	dc800417 	ldw	r18,16(sp)
 801c7b0:	dc400317 	ldw	r17,12(sp)
 801c7b4:	dc000217 	ldw	r16,8(sp)
 801c7b8:	dec00c04 	addi	sp,sp,48
 801c7bc:	f800283a 	ret
 801c7c0:	00803fc4 	movi	r2,255
 801c7c4:	11c0b02e 	bgeu	r2,r7,801ca88 <__umoddi3+0x594>
 801c7c8:	01400204 	movi	r5,8
 801c7cc:	282b883a 	mov	r21,r5
 801c7d0:	003f9b06 	br	801c640 <__alt_data_end+0xfc01c640>
 801c7d4:	00804034 	movhi	r2,256
 801c7d8:	10bfffc4 	addi	r2,r2,-1
 801c7dc:	1180b02e 	bgeu	r2,r6,801caa0 <__umoddi3+0x5ac>
 801c7e0:	01400604 	movi	r5,24
 801c7e4:	2805883a 	mov	r2,r5
 801c7e8:	003f5a06 	br	801c554 <__alt_data_end+0xfc01c554>
 801c7ec:	00803fc4 	movi	r2,255
 801c7f0:	14c0ae2e 	bgeu	r2,r19,801caac <__umoddi3+0x5b8>
 801c7f4:	00800204 	movi	r2,8
 801c7f8:	1007883a 	mov	r3,r2
 801c7fc:	003fad06 	br	801c6b4 <__alt_data_end+0xfc01c6b4>
 801c800:	3d0a983a 	sll	r5,r7,r20
 801c804:	356cd83a 	srl	r22,r6,r21
 801c808:	8d78d83a 	srl	fp,r17,r21
 801c80c:	8d10983a 	sll	r8,r17,r20
 801c810:	2dacb03a 	or	r22,r5,r22
 801c814:	b02ed43a 	srli	r23,r22,16
 801c818:	8564d83a 	srl	r18,r16,r21
 801c81c:	e009883a 	mov	r4,fp
 801c820:	b80b883a 	mov	r5,r23
 801c824:	44a4b03a 	or	r18,r8,r18
 801c828:	3526983a 	sll	r19,r6,r20
 801c82c:	8009fdc0 	call	8009fdc <__umodsi3>
 801c830:	e009883a 	mov	r4,fp
 801c834:	b80b883a 	mov	r5,r23
 801c838:	b47fffcc 	andi	r17,r22,65535
 801c83c:	d8800015 	stw	r2,0(sp)
 801c840:	8009fd40 	call	8009fd4 <__udivsi3>
 801c844:	1009883a 	mov	r4,r2
 801c848:	880b883a 	mov	r5,r17
 801c84c:	1039883a 	mov	fp,r2
 801c850:	8009fe40 	call	8009fe4 <__mulsi3>
 801c854:	d9800017 	ldw	r6,0(sp)
 801c858:	9008d43a 	srli	r4,r18,16
 801c85c:	8520983a 	sll	r16,r16,r20
 801c860:	300c943a 	slli	r6,r6,16
 801c864:	3106b03a 	or	r3,r6,r4
 801c868:	1880042e 	bgeu	r3,r2,801c87c <__umoddi3+0x388>
 801c86c:	1d87883a 	add	r3,r3,r22
 801c870:	e13fffc4 	addi	r4,fp,-1
 801c874:	1d809a2e 	bgeu	r3,r22,801cae0 <__umoddi3+0x5ec>
 801c878:	2039883a 	mov	fp,r4
 801c87c:	1887c83a 	sub	r3,r3,r2
 801c880:	1809883a 	mov	r4,r3
 801c884:	b80b883a 	mov	r5,r23
 801c888:	d8c00115 	stw	r3,4(sp)
 801c88c:	8009fdc0 	call	8009fdc <__umodsi3>
 801c890:	d8c00117 	ldw	r3,4(sp)
 801c894:	b80b883a 	mov	r5,r23
 801c898:	d8800015 	stw	r2,0(sp)
 801c89c:	1809883a 	mov	r4,r3
 801c8a0:	8009fd40 	call	8009fd4 <__udivsi3>
 801c8a4:	880b883a 	mov	r5,r17
 801c8a8:	1009883a 	mov	r4,r2
 801c8ac:	102f883a 	mov	r23,r2
 801c8b0:	8009fe40 	call	8009fe4 <__mulsi3>
 801c8b4:	d9800017 	ldw	r6,0(sp)
 801c8b8:	947fffcc 	andi	r17,r18,65535
 801c8bc:	300c943a 	slli	r6,r6,16
 801c8c0:	3464b03a 	or	r18,r6,r17
 801c8c4:	9080042e 	bgeu	r18,r2,801c8d8 <__umoddi3+0x3e4>
 801c8c8:	95a5883a 	add	r18,r18,r22
 801c8cc:	b8ffffc4 	addi	r3,r23,-1
 801c8d0:	95807f2e 	bgeu	r18,r22,801cad0 <__umoddi3+0x5dc>
 801c8d4:	182f883a 	mov	r23,r3
 801c8d8:	e038943a 	slli	fp,fp,16
 801c8dc:	980cd43a 	srli	r6,r19,16
 801c8e0:	98ffffcc 	andi	r3,r19,65535
 801c8e4:	bf38b03a 	or	fp,r23,fp
 801c8e8:	e02ed43a 	srli	r23,fp,16
 801c8ec:	e73fffcc 	andi	fp,fp,65535
 801c8f0:	180b883a 	mov	r5,r3
 801c8f4:	e009883a 	mov	r4,fp
 801c8f8:	d9800015 	stw	r6,0(sp)
 801c8fc:	d8c00115 	stw	r3,4(sp)
 801c900:	90a5c83a 	sub	r18,r18,r2
 801c904:	8009fe40 	call	8009fe4 <__mulsi3>
 801c908:	d8c00117 	ldw	r3,4(sp)
 801c90c:	b809883a 	mov	r4,r23
 801c910:	1023883a 	mov	r17,r2
 801c914:	180b883a 	mov	r5,r3
 801c918:	8009fe40 	call	8009fe4 <__mulsi3>
 801c91c:	d9800017 	ldw	r6,0(sp)
 801c920:	b809883a 	mov	r4,r23
 801c924:	d8800115 	stw	r2,4(sp)
 801c928:	300b883a 	mov	r5,r6
 801c92c:	302f883a 	mov	r23,r6
 801c930:	8009fe40 	call	8009fe4 <__mulsi3>
 801c934:	e009883a 	mov	r4,fp
 801c938:	b80b883a 	mov	r5,r23
 801c93c:	d8800015 	stw	r2,0(sp)
 801c940:	8009fe40 	call	8009fe4 <__mulsi3>
 801c944:	d8c00117 	ldw	r3,4(sp)
 801c948:	880cd43a 	srli	r6,r17,16
 801c94c:	d9c00017 	ldw	r7,0(sp)
 801c950:	1885883a 	add	r2,r3,r2
 801c954:	118d883a 	add	r6,r2,r6
 801c958:	30c0022e 	bgeu	r6,r3,801c964 <__umoddi3+0x470>
 801c95c:	00800074 	movhi	r2,1
 801c960:	388f883a 	add	r7,r7,r2
 801c964:	3006d43a 	srli	r3,r6,16
 801c968:	300c943a 	slli	r6,r6,16
 801c96c:	8c7fffcc 	andi	r17,r17,65535
 801c970:	38c7883a 	add	r3,r7,r3
 801c974:	3463883a 	add	r17,r6,r17
 801c978:	90c03d36 	bltu	r18,r3,801ca70 <__umoddi3+0x57c>
 801c97c:	90c06026 	beq	r18,r3,801cb00 <__umoddi3+0x60c>
 801c980:	90c9c83a 	sub	r4,r18,r3
 801c984:	880f883a 	mov	r7,r17
 801c988:	81cfc83a 	sub	r7,r16,r7
 801c98c:	81c7803a 	cmpltu	r3,r16,r7
 801c990:	20c7c83a 	sub	r3,r4,r3
 801c994:	1d44983a 	sll	r2,r3,r21
 801c998:	3d0ed83a 	srl	r7,r7,r20
 801c99c:	1d06d83a 	srl	r3,r3,r20
 801c9a0:	11c4b03a 	or	r2,r2,r7
 801c9a4:	003f7a06 	br	801c790 <__alt_data_end+0xfc01c790>
 801c9a8:	0025883a 	mov	r18,zero
 801c9ac:	003ef806 	br	801c590 <__alt_data_end+0xfc01c590>
 801c9b0:	98a6983a 	sll	r19,r19,r2
 801c9b4:	88e8d83a 	srl	r20,r17,r3
 801c9b8:	80c6d83a 	srl	r3,r16,r3
 801c9bc:	982ad43a 	srli	r21,r19,16
 801c9c0:	88a2983a 	sll	r17,r17,r2
 801c9c4:	a009883a 	mov	r4,r20
 801c9c8:	a80b883a 	mov	r5,r21
 801c9cc:	88eeb03a 	or	r23,r17,r3
 801c9d0:	1025883a 	mov	r18,r2
 801c9d4:	8009fdc0 	call	8009fdc <__umodsi3>
 801c9d8:	a009883a 	mov	r4,r20
 801c9dc:	a80b883a 	mov	r5,r21
 801c9e0:	1023883a 	mov	r17,r2
 801c9e4:	9dbfffcc 	andi	r22,r19,65535
 801c9e8:	8009fd40 	call	8009fd4 <__udivsi3>
 801c9ec:	1009883a 	mov	r4,r2
 801c9f0:	b00b883a 	mov	r5,r22
 801c9f4:	8009fe40 	call	8009fe4 <__mulsi3>
 801c9f8:	8822943a 	slli	r17,r17,16
 801c9fc:	b808d43a 	srli	r4,r23,16
 801ca00:	84a8983a 	sll	r20,r16,r18
 801ca04:	8906b03a 	or	r3,r17,r4
 801ca08:	1880042e 	bgeu	r3,r2,801ca1c <__umoddi3+0x528>
 801ca0c:	1cc7883a 	add	r3,r3,r19
 801ca10:	1cc00236 	bltu	r3,r19,801ca1c <__umoddi3+0x528>
 801ca14:	1880012e 	bgeu	r3,r2,801ca1c <__umoddi3+0x528>
 801ca18:	1cc7883a 	add	r3,r3,r19
 801ca1c:	18a1c83a 	sub	r16,r3,r2
 801ca20:	8009883a 	mov	r4,r16
 801ca24:	a80b883a 	mov	r5,r21
 801ca28:	8009fdc0 	call	8009fdc <__umodsi3>
 801ca2c:	8009883a 	mov	r4,r16
 801ca30:	a80b883a 	mov	r5,r21
 801ca34:	1039883a 	mov	fp,r2
 801ca38:	8009fd40 	call	8009fd4 <__udivsi3>
 801ca3c:	1009883a 	mov	r4,r2
 801ca40:	b00b883a 	mov	r5,r22
 801ca44:	8009fe40 	call	8009fe4 <__mulsi3>
 801ca48:	e006943a 	slli	r3,fp,16
 801ca4c:	b93fffcc 	andi	r4,r23,65535
 801ca50:	1906b03a 	or	r3,r3,r4
 801ca54:	1880042e 	bgeu	r3,r2,801ca68 <__umoddi3+0x574>
 801ca58:	1cc7883a 	add	r3,r3,r19
 801ca5c:	1cc00236 	bltu	r3,r19,801ca68 <__umoddi3+0x574>
 801ca60:	1880012e 	bgeu	r3,r2,801ca68 <__umoddi3+0x574>
 801ca64:	1cc7883a 	add	r3,r3,r19
 801ca68:	18a3c83a 	sub	r17,r3,r2
 801ca6c:	003f1e06 	br	801c6e8 <__alt_data_end+0xfc01c6e8>
 801ca70:	8ccfc83a 	sub	r7,r17,r19
 801ca74:	1d89c83a 	sub	r4,r3,r22
 801ca78:	89e3803a 	cmpltu	r17,r17,r7
 801ca7c:	2463c83a 	sub	r17,r4,r17
 801ca80:	9449c83a 	sub	r4,r18,r17
 801ca84:	003fc006 	br	801c988 <__alt_data_end+0xfc01c988>
 801ca88:	000b883a 	mov	r5,zero
 801ca8c:	002b883a 	mov	r21,zero
 801ca90:	003eeb06 	br	801c640 <__alt_data_end+0xfc01c640>
 801ca94:	01400404 	movi	r5,16
 801ca98:	282b883a 	mov	r21,r5
 801ca9c:	003ee806 	br	801c640 <__alt_data_end+0xfc01c640>
 801caa0:	01400404 	movi	r5,16
 801caa4:	2805883a 	mov	r2,r5
 801caa8:	003eaa06 	br	801c554 <__alt_data_end+0xfc01c554>
 801caac:	0005883a 	mov	r2,zero
 801cab0:	0007883a 	mov	r3,zero
 801cab4:	003eff06 	br	801c6b4 <__alt_data_end+0xfc01c6b4>
 801cab8:	00800404 	movi	r2,16
 801cabc:	1007883a 	mov	r3,r2
 801cac0:	003efc06 	br	801c6b4 <__alt_data_end+0xfc01c6b4>
 801cac4:	000b883a 	mov	r5,zero
 801cac8:	0005883a 	mov	r2,zero
 801cacc:	003ea106 	br	801c554 <__alt_data_end+0xfc01c554>
 801cad0:	90bf802e 	bgeu	r18,r2,801c8d4 <__alt_data_end+0xfc01c8d4>
 801cad4:	bdffff84 	addi	r23,r23,-2
 801cad8:	95a5883a 	add	r18,r18,r22
 801cadc:	003f7e06 	br	801c8d8 <__alt_data_end+0xfc01c8d8>
 801cae0:	18bf652e 	bgeu	r3,r2,801c878 <__alt_data_end+0xfc01c878>
 801cae4:	e73fff84 	addi	fp,fp,-2
 801cae8:	1d87883a 	add	r3,r3,r22
 801caec:	003f6306 	br	801c87c <__alt_data_end+0xfc01c87c>
 801caf0:	1cc7883a 	add	r3,r3,r19
 801caf4:	003f0d06 	br	801c72c <__alt_data_end+0xfc01c72c>
 801caf8:	8005883a 	mov	r2,r16
 801cafc:	003edf06 	br	801c67c <__alt_data_end+0xfc01c67c>
 801cb00:	847fdb36 	bltu	r16,r17,801ca70 <__alt_data_end+0xfc01ca70>
 801cb04:	880f883a 	mov	r7,r17
 801cb08:	0009883a 	mov	r4,zero
 801cb0c:	003f9e06 	br	801c988 <__alt_data_end+0xfc01c988>

0801cb10 <__eqsf2>:
 801cb10:	2006d5fa 	srli	r3,r4,23
 801cb14:	280cd5fa 	srli	r6,r5,23
 801cb18:	01c02034 	movhi	r7,128
 801cb1c:	39ffffc4 	addi	r7,r7,-1
 801cb20:	18c03fcc 	andi	r3,r3,255
 801cb24:	02003fc4 	movi	r8,255
 801cb28:	3904703a 	and	r2,r7,r4
 801cb2c:	31803fcc 	andi	r6,r6,255
 801cb30:	394e703a 	and	r7,r7,r5
 801cb34:	2008d7fa 	srli	r4,r4,31
 801cb38:	280ad7fa 	srli	r5,r5,31
 801cb3c:	1a000c26 	beq	r3,r8,801cb70 <__eqsf2+0x60>
 801cb40:	02003fc4 	movi	r8,255
 801cb44:	32000326 	beq	r6,r8,801cb54 <__eqsf2+0x44>
 801cb48:	19800426 	beq	r3,r6,801cb5c <__eqsf2+0x4c>
 801cb4c:	00800044 	movi	r2,1
 801cb50:	f800283a 	ret
 801cb54:	383ffd1e 	bne	r7,zero,801cb4c <__alt_data_end+0xfc01cb4c>
 801cb58:	19bffc1e 	bne	r3,r6,801cb4c <__alt_data_end+0xfc01cb4c>
 801cb5c:	11fffb1e 	bne	r2,r7,801cb4c <__alt_data_end+0xfc01cb4c>
 801cb60:	21400626 	beq	r4,r5,801cb7c <__eqsf2+0x6c>
 801cb64:	183ff91e 	bne	r3,zero,801cb4c <__alt_data_end+0xfc01cb4c>
 801cb68:	1004c03a 	cmpne	r2,r2,zero
 801cb6c:	f800283a 	ret
 801cb70:	103ff326 	beq	r2,zero,801cb40 <__alt_data_end+0xfc01cb40>
 801cb74:	00800044 	movi	r2,1
 801cb78:	f800283a 	ret
 801cb7c:	0005883a 	mov	r2,zero
 801cb80:	f800283a 	ret

0801cb84 <__gesf2>:
 801cb84:	2004d5fa 	srli	r2,r4,23
 801cb88:	2806d5fa 	srli	r3,r5,23
 801cb8c:	01802034 	movhi	r6,128
 801cb90:	31bfffc4 	addi	r6,r6,-1
 801cb94:	10803fcc 	andi	r2,r2,255
 801cb98:	01c03fc4 	movi	r7,255
 801cb9c:	3110703a 	and	r8,r6,r4
 801cba0:	18c03fcc 	andi	r3,r3,255
 801cba4:	314c703a 	and	r6,r6,r5
 801cba8:	2008d7fa 	srli	r4,r4,31
 801cbac:	280ad7fa 	srli	r5,r5,31
 801cbb0:	11c00926 	beq	r2,r7,801cbd8 <__gesf2+0x54>
 801cbb4:	19c01226 	beq	r3,r7,801cc00 <__gesf2+0x7c>
 801cbb8:	1000091e 	bne	r2,zero,801cbe0 <__gesf2+0x5c>
 801cbbc:	4013003a 	cmpeq	r9,r8,zero
 801cbc0:	480f883a 	mov	r7,r9
 801cbc4:	1800091e 	bne	r3,zero,801cbec <__gesf2+0x68>
 801cbc8:	3000081e 	bne	r6,zero,801cbec <__gesf2+0x68>
 801cbcc:	48001026 	beq	r9,zero,801cc10 <__gesf2+0x8c>
 801cbd0:	0005883a 	mov	r2,zero
 801cbd4:	f800283a 	ret
 801cbd8:	4000161e 	bne	r8,zero,801cc34 <__gesf2+0xb0>
 801cbdc:	18800826 	beq	r3,r2,801cc00 <__gesf2+0x7c>
 801cbe0:	1800091e 	bne	r3,zero,801cc08 <__gesf2+0x84>
 801cbe4:	000f883a 	mov	r7,zero
 801cbe8:	30000926 	beq	r6,zero,801cc10 <__gesf2+0x8c>
 801cbec:	29403fcc 	andi	r5,r5,255
 801cbf0:	38000626 	beq	r7,zero,801cc0c <__gesf2+0x88>
 801cbf4:	2800071e 	bne	r5,zero,801cc14 <__gesf2+0x90>
 801cbf8:	00bfffc4 	movi	r2,-1
 801cbfc:	f800283a 	ret
 801cc00:	30000c1e 	bne	r6,zero,801cc34 <__gesf2+0xb0>
 801cc04:	103fed26 	beq	r2,zero,801cbbc <__alt_data_end+0xfc01cbbc>
 801cc08:	29403fcc 	andi	r5,r5,255
 801cc0c:	21400326 	beq	r4,r5,801cc1c <__gesf2+0x98>
 801cc10:	203ff91e 	bne	r4,zero,801cbf8 <__alt_data_end+0xfc01cbf8>
 801cc14:	00800044 	movi	r2,1
 801cc18:	f800283a 	ret
 801cc1c:	18bffc16 	blt	r3,r2,801cc10 <__alt_data_end+0xfc01cc10>
 801cc20:	10c00216 	blt	r2,r3,801cc2c <__gesf2+0xa8>
 801cc24:	323ffa36 	bltu	r6,r8,801cc10 <__alt_data_end+0xfc01cc10>
 801cc28:	41bfe92e 	bgeu	r8,r6,801cbd0 <__alt_data_end+0xfc01cbd0>
 801cc2c:	203ff226 	beq	r4,zero,801cbf8 <__alt_data_end+0xfc01cbf8>
 801cc30:	003ff806 	br	801cc14 <__alt_data_end+0xfc01cc14>
 801cc34:	00bfff84 	movi	r2,-2
 801cc38:	f800283a 	ret

0801cc3c <__lesf2>:
 801cc3c:	2004d5fa 	srli	r2,r4,23
 801cc40:	280cd5fa 	srli	r6,r5,23
 801cc44:	00c02034 	movhi	r3,128
 801cc48:	18ffffc4 	addi	r3,r3,-1
 801cc4c:	10803fcc 	andi	r2,r2,255
 801cc50:	01c03fc4 	movi	r7,255
 801cc54:	1910703a 	and	r8,r3,r4
 801cc58:	31803fcc 	andi	r6,r6,255
 801cc5c:	1946703a 	and	r3,r3,r5
 801cc60:	2008d7fa 	srli	r4,r4,31
 801cc64:	280ad7fa 	srli	r5,r5,31
 801cc68:	11c00a26 	beq	r2,r7,801cc94 <__lesf2+0x58>
 801cc6c:	31c01526 	beq	r6,r7,801ccc4 <__lesf2+0x88>
 801cc70:	10000a1e 	bne	r2,zero,801cc9c <__lesf2+0x60>
 801cc74:	4013003a 	cmpeq	r9,r8,zero
 801cc78:	480f883a 	mov	r7,r9
 801cc7c:	30000d26 	beq	r6,zero,801ccb4 <__lesf2+0x78>
 801cc80:	29403fcc 	andi	r5,r5,255
 801cc84:	38001426 	beq	r7,zero,801ccd8 <__lesf2+0x9c>
 801cc88:	2800081e 	bne	r5,zero,801ccac <__lesf2+0x70>
 801cc8c:	00bfffc4 	movi	r2,-1
 801cc90:	f800283a 	ret
 801cc94:	40000c1e 	bne	r8,zero,801ccc8 <__lesf2+0x8c>
 801cc98:	30800a26 	beq	r6,r2,801ccc4 <__lesf2+0x88>
 801cc9c:	30000d1e 	bne	r6,zero,801ccd4 <__lesf2+0x98>
 801cca0:	000f883a 	mov	r7,zero
 801cca4:	183ff61e 	bne	r3,zero,801cc80 <__alt_data_end+0xfc01cc80>
 801cca8:	203ff81e 	bne	r4,zero,801cc8c <__alt_data_end+0xfc01cc8c>
 801ccac:	00800044 	movi	r2,1
 801ccb0:	f800283a 	ret
 801ccb4:	183ff21e 	bne	r3,zero,801cc80 <__alt_data_end+0xfc01cc80>
 801ccb8:	483ffb26 	beq	r9,zero,801cca8 <__alt_data_end+0xfc01cca8>
 801ccbc:	0005883a 	mov	r2,zero
 801ccc0:	f800283a 	ret
 801ccc4:	18000226 	beq	r3,zero,801ccd0 <__lesf2+0x94>
 801ccc8:	00800084 	movi	r2,2
 801cccc:	f800283a 	ret
 801ccd0:	103fe826 	beq	r2,zero,801cc74 <__alt_data_end+0xfc01cc74>
 801ccd4:	29403fcc 	andi	r5,r5,255
 801ccd8:	217ff31e 	bne	r4,r5,801cca8 <__alt_data_end+0xfc01cca8>
 801ccdc:	30bff216 	blt	r6,r2,801cca8 <__alt_data_end+0xfc01cca8>
 801cce0:	11800216 	blt	r2,r6,801ccec <__lesf2+0xb0>
 801cce4:	1a3ff036 	bltu	r3,r8,801cca8 <__alt_data_end+0xfc01cca8>
 801cce8:	40fff42e 	bgeu	r8,r3,801ccbc <__alt_data_end+0xfc01ccbc>
 801ccec:	203fe726 	beq	r4,zero,801cc8c <__alt_data_end+0xfc01cc8c>
 801ccf0:	003fee06 	br	801ccac <__alt_data_end+0xfc01ccac>

0801ccf4 <__floatunsidf>:
 801ccf4:	defffe04 	addi	sp,sp,-8
 801ccf8:	dc000015 	stw	r16,0(sp)
 801ccfc:	dfc00115 	stw	ra,4(sp)
 801cd00:	2021883a 	mov	r16,r4
 801cd04:	20001026 	beq	r4,zero,801cd48 <__floatunsidf+0x54>
 801cd08:	800cf2c0 	call	800cf2c <__clzsi2>
 801cd0c:	01410784 	movi	r5,1054
 801cd10:	100d883a 	mov	r6,r2
 801cd14:	288bc83a 	sub	r5,r5,r2
 801cd18:	00800284 	movi	r2,10
 801cd1c:	11801616 	blt	r2,r6,801cd78 <__floatunsidf+0x84>
 801cd20:	008002c4 	movi	r2,11
 801cd24:	1185c83a 	sub	r2,r2,r6
 801cd28:	8084d83a 	srl	r2,r16,r2
 801cd2c:	00c00434 	movhi	r3,16
 801cd30:	31c00544 	addi	r7,r6,21
 801cd34:	18ffffc4 	addi	r3,r3,-1
 801cd38:	81e0983a 	sll	r16,r16,r7
 801cd3c:	10cc703a 	and	r6,r2,r3
 801cd40:	2941ffcc 	andi	r5,r5,2047
 801cd44:	00000206 	br	801cd50 <__floatunsidf+0x5c>
 801cd48:	000b883a 	mov	r5,zero
 801cd4c:	000d883a 	mov	r6,zero
 801cd50:	280a953a 	slli	r5,r5,20
 801cd54:	00c00434 	movhi	r3,16
 801cd58:	18ffffc4 	addi	r3,r3,-1
 801cd5c:	30c6703a 	and	r3,r6,r3
 801cd60:	8005883a 	mov	r2,r16
 801cd64:	1946b03a 	or	r3,r3,r5
 801cd68:	dfc00117 	ldw	ra,4(sp)
 801cd6c:	dc000017 	ldw	r16,0(sp)
 801cd70:	dec00204 	addi	sp,sp,8
 801cd74:	f800283a 	ret
 801cd78:	31bffd44 	addi	r6,r6,-11
 801cd7c:	818c983a 	sll	r6,r16,r6
 801cd80:	00800434 	movhi	r2,16
 801cd84:	10bfffc4 	addi	r2,r2,-1
 801cd88:	2941ffcc 	andi	r5,r5,2047
 801cd8c:	0021883a 	mov	r16,zero
 801cd90:	308c703a 	and	r6,r6,r2
 801cd94:	003fee06 	br	801cd50 <__alt_data_end+0xfc01cd50>

0801cd98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801cd98:	defffe04 	addi	sp,sp,-8
 801cd9c:	dfc00115 	stw	ra,4(sp)
 801cda0:	df000015 	stw	fp,0(sp)
 801cda4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801cda8:	008200b4 	movhi	r2,2050
 801cdac:	10890304 	addi	r2,r2,9228
 801cdb0:	10800017 	ldw	r2,0(r2)
 801cdb4:	10000526 	beq	r2,zero,801cdcc <alt_get_errno+0x34>
 801cdb8:	008200b4 	movhi	r2,2050
 801cdbc:	10890304 	addi	r2,r2,9228
 801cdc0:	10800017 	ldw	r2,0(r2)
 801cdc4:	103ee83a 	callr	r2
 801cdc8:	00000206 	br	801cdd4 <alt_get_errno+0x3c>
 801cdcc:	008200b4 	movhi	r2,2050
 801cdd0:	108ffd04 	addi	r2,r2,16372
}
 801cdd4:	e037883a 	mov	sp,fp
 801cdd8:	dfc00117 	ldw	ra,4(sp)
 801cddc:	df000017 	ldw	fp,0(sp)
 801cde0:	dec00204 	addi	sp,sp,8
 801cde4:	f800283a 	ret

0801cde8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 801cde8:	defffb04 	addi	sp,sp,-20
 801cdec:	dfc00415 	stw	ra,16(sp)
 801cdf0:	df000315 	stw	fp,12(sp)
 801cdf4:	df000304 	addi	fp,sp,12
 801cdf8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 801cdfc:	e0bfff17 	ldw	r2,-4(fp)
 801ce00:	10000816 	blt	r2,zero,801ce24 <close+0x3c>
 801ce04:	e13fff17 	ldw	r4,-4(fp)
 801ce08:	01400304 	movi	r5,12
 801ce0c:	8009fe40 	call	8009fe4 <__mulsi3>
 801ce10:	1007883a 	mov	r3,r2
 801ce14:	008200b4 	movhi	r2,2050
 801ce18:	10847a04 	addi	r2,r2,4584
 801ce1c:	1885883a 	add	r2,r3,r2
 801ce20:	00000106 	br	801ce28 <close+0x40>
 801ce24:	0005883a 	mov	r2,zero
 801ce28:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 801ce2c:	e0bffd17 	ldw	r2,-12(fp)
 801ce30:	10001926 	beq	r2,zero,801ce98 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 801ce34:	e0bffd17 	ldw	r2,-12(fp)
 801ce38:	10800017 	ldw	r2,0(r2)
 801ce3c:	10800417 	ldw	r2,16(r2)
 801ce40:	10000626 	beq	r2,zero,801ce5c <close+0x74>
 801ce44:	e0bffd17 	ldw	r2,-12(fp)
 801ce48:	10800017 	ldw	r2,0(r2)
 801ce4c:	10800417 	ldw	r2,16(r2)
 801ce50:	e13ffd17 	ldw	r4,-12(fp)
 801ce54:	103ee83a 	callr	r2
 801ce58:	00000106 	br	801ce60 <close+0x78>
 801ce5c:	0005883a 	mov	r2,zero
 801ce60:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 801ce64:	e13fff17 	ldw	r4,-4(fp)
 801ce68:	801d50c0 	call	801d50c <alt_release_fd>
    if (rval < 0)
 801ce6c:	e0bffe17 	ldw	r2,-8(fp)
 801ce70:	1000070e 	bge	r2,zero,801ce90 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 801ce74:	801cd980 	call	801cd98 <alt_get_errno>
 801ce78:	1007883a 	mov	r3,r2
 801ce7c:	e0bffe17 	ldw	r2,-8(fp)
 801ce80:	0085c83a 	sub	r2,zero,r2
 801ce84:	18800015 	stw	r2,0(r3)
      return -1;
 801ce88:	00bfffc4 	movi	r2,-1
 801ce8c:	00000706 	br	801ceac <close+0xc4>
    }
    return 0;
 801ce90:	0005883a 	mov	r2,zero
 801ce94:	00000506 	br	801ceac <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801ce98:	801cd980 	call	801cd98 <alt_get_errno>
 801ce9c:	1007883a 	mov	r3,r2
 801cea0:	00801444 	movi	r2,81
 801cea4:	18800015 	stw	r2,0(r3)
    return -1;
 801cea8:	00bfffc4 	movi	r2,-1
  }
}
 801ceac:	e037883a 	mov	sp,fp
 801ceb0:	dfc00117 	ldw	ra,4(sp)
 801ceb4:	df000017 	ldw	fp,0(sp)
 801ceb8:	dec00204 	addi	sp,sp,8
 801cebc:	f800283a 	ret

0801cec0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 801cec0:	defffc04 	addi	sp,sp,-16
 801cec4:	df000315 	stw	fp,12(sp)
 801cec8:	df000304 	addi	fp,sp,12
 801cecc:	e13ffd15 	stw	r4,-12(fp)
 801ced0:	e17ffe15 	stw	r5,-8(fp)
 801ced4:	e1bfff15 	stw	r6,-4(fp)
  return len;
 801ced8:	e0bfff17 	ldw	r2,-4(fp)
}
 801cedc:	e037883a 	mov	sp,fp
 801cee0:	df000017 	ldw	fp,0(sp)
 801cee4:	dec00104 	addi	sp,sp,4
 801cee8:	f800283a 	ret

0801ceec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801ceec:	defffe04 	addi	sp,sp,-8
 801cef0:	dfc00115 	stw	ra,4(sp)
 801cef4:	df000015 	stw	fp,0(sp)
 801cef8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801cefc:	008200b4 	movhi	r2,2050
 801cf00:	10890304 	addi	r2,r2,9228
 801cf04:	10800017 	ldw	r2,0(r2)
 801cf08:	10000526 	beq	r2,zero,801cf20 <alt_get_errno+0x34>
 801cf0c:	008200b4 	movhi	r2,2050
 801cf10:	10890304 	addi	r2,r2,9228
 801cf14:	10800017 	ldw	r2,0(r2)
 801cf18:	103ee83a 	callr	r2
 801cf1c:	00000206 	br	801cf28 <alt_get_errno+0x3c>
 801cf20:	008200b4 	movhi	r2,2050
 801cf24:	108ffd04 	addi	r2,r2,16372
}
 801cf28:	e037883a 	mov	sp,fp
 801cf2c:	dfc00117 	ldw	ra,4(sp)
 801cf30:	df000017 	ldw	fp,0(sp)
 801cf34:	dec00204 	addi	sp,sp,8
 801cf38:	f800283a 	ret

0801cf3c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 801cf3c:	defffb04 	addi	sp,sp,-20
 801cf40:	dfc00415 	stw	ra,16(sp)
 801cf44:	df000315 	stw	fp,12(sp)
 801cf48:	df000304 	addi	fp,sp,12
 801cf4c:	e13ffe15 	stw	r4,-8(fp)
 801cf50:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801cf54:	e0bffe17 	ldw	r2,-8(fp)
 801cf58:	10000816 	blt	r2,zero,801cf7c <fstat+0x40>
 801cf5c:	e13ffe17 	ldw	r4,-8(fp)
 801cf60:	01400304 	movi	r5,12
 801cf64:	8009fe40 	call	8009fe4 <__mulsi3>
 801cf68:	1007883a 	mov	r3,r2
 801cf6c:	008200b4 	movhi	r2,2050
 801cf70:	10847a04 	addi	r2,r2,4584
 801cf74:	1885883a 	add	r2,r3,r2
 801cf78:	00000106 	br	801cf80 <fstat+0x44>
 801cf7c:	0005883a 	mov	r2,zero
 801cf80:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 801cf84:	e0bffd17 	ldw	r2,-12(fp)
 801cf88:	10001026 	beq	r2,zero,801cfcc <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 801cf8c:	e0bffd17 	ldw	r2,-12(fp)
 801cf90:	10800017 	ldw	r2,0(r2)
 801cf94:	10800817 	ldw	r2,32(r2)
 801cf98:	10000726 	beq	r2,zero,801cfb8 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 801cf9c:	e0bffd17 	ldw	r2,-12(fp)
 801cfa0:	10800017 	ldw	r2,0(r2)
 801cfa4:	10800817 	ldw	r2,32(r2)
 801cfa8:	e13ffd17 	ldw	r4,-12(fp)
 801cfac:	e17fff17 	ldw	r5,-4(fp)
 801cfb0:	103ee83a 	callr	r2
 801cfb4:	00000a06 	br	801cfe0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 801cfb8:	e0bfff17 	ldw	r2,-4(fp)
 801cfbc:	00c80004 	movi	r3,8192
 801cfc0:	10c00115 	stw	r3,4(r2)
      return 0;
 801cfc4:	0005883a 	mov	r2,zero
 801cfc8:	00000506 	br	801cfe0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801cfcc:	801ceec0 	call	801ceec <alt_get_errno>
 801cfd0:	1007883a 	mov	r3,r2
 801cfd4:	00801444 	movi	r2,81
 801cfd8:	18800015 	stw	r2,0(r3)
    return -1;
 801cfdc:	00bfffc4 	movi	r2,-1
  }
}
 801cfe0:	e037883a 	mov	sp,fp
 801cfe4:	dfc00117 	ldw	ra,4(sp)
 801cfe8:	df000017 	ldw	fp,0(sp)
 801cfec:	dec00204 	addi	sp,sp,8
 801cff0:	f800283a 	ret

0801cff4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801cff4:	defffe04 	addi	sp,sp,-8
 801cff8:	dfc00115 	stw	ra,4(sp)
 801cffc:	df000015 	stw	fp,0(sp)
 801d000:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801d004:	008200b4 	movhi	r2,2050
 801d008:	10890304 	addi	r2,r2,9228
 801d00c:	10800017 	ldw	r2,0(r2)
 801d010:	10000526 	beq	r2,zero,801d028 <alt_get_errno+0x34>
 801d014:	008200b4 	movhi	r2,2050
 801d018:	10890304 	addi	r2,r2,9228
 801d01c:	10800017 	ldw	r2,0(r2)
 801d020:	103ee83a 	callr	r2
 801d024:	00000206 	br	801d030 <alt_get_errno+0x3c>
 801d028:	008200b4 	movhi	r2,2050
 801d02c:	108ffd04 	addi	r2,r2,16372
}
 801d030:	e037883a 	mov	sp,fp
 801d034:	dfc00117 	ldw	ra,4(sp)
 801d038:	df000017 	ldw	fp,0(sp)
 801d03c:	dec00204 	addi	sp,sp,8
 801d040:	f800283a 	ret

0801d044 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 801d044:	deffed04 	addi	sp,sp,-76
 801d048:	dfc01215 	stw	ra,72(sp)
 801d04c:	df001115 	stw	fp,68(sp)
 801d050:	df001104 	addi	fp,sp,68
 801d054:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801d058:	e0bfff17 	ldw	r2,-4(fp)
 801d05c:	10000816 	blt	r2,zero,801d080 <isatty+0x3c>
 801d060:	e13fff17 	ldw	r4,-4(fp)
 801d064:	01400304 	movi	r5,12
 801d068:	8009fe40 	call	8009fe4 <__mulsi3>
 801d06c:	1007883a 	mov	r3,r2
 801d070:	008200b4 	movhi	r2,2050
 801d074:	10847a04 	addi	r2,r2,4584
 801d078:	1885883a 	add	r2,r3,r2
 801d07c:	00000106 	br	801d084 <isatty+0x40>
 801d080:	0005883a 	mov	r2,zero
 801d084:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 801d088:	e0bfef17 	ldw	r2,-68(fp)
 801d08c:	10000e26 	beq	r2,zero,801d0c8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 801d090:	e0bfef17 	ldw	r2,-68(fp)
 801d094:	10800017 	ldw	r2,0(r2)
 801d098:	10800817 	ldw	r2,32(r2)
 801d09c:	1000021e 	bne	r2,zero,801d0a8 <isatty+0x64>
    {
      return 1;
 801d0a0:	00800044 	movi	r2,1
 801d0a4:	00000d06 	br	801d0dc <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 801d0a8:	e0bff004 	addi	r2,fp,-64
 801d0ac:	e13fff17 	ldw	r4,-4(fp)
 801d0b0:	100b883a 	mov	r5,r2
 801d0b4:	801cf3c0 	call	801cf3c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 801d0b8:	e0bff117 	ldw	r2,-60(fp)
 801d0bc:	10880020 	cmpeqi	r2,r2,8192
 801d0c0:	10803fcc 	andi	r2,r2,255
 801d0c4:	00000506 	br	801d0dc <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801d0c8:	801cff40 	call	801cff4 <alt_get_errno>
 801d0cc:	1007883a 	mov	r3,r2
 801d0d0:	00801444 	movi	r2,81
 801d0d4:	18800015 	stw	r2,0(r3)
    return 0;
 801d0d8:	0005883a 	mov	r2,zero
  }
}
 801d0dc:	e037883a 	mov	sp,fp
 801d0e0:	dfc00117 	ldw	ra,4(sp)
 801d0e4:	df000017 	ldw	fp,0(sp)
 801d0e8:	dec00204 	addi	sp,sp,8
 801d0ec:	f800283a 	ret

0801d0f0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 801d0f0:	defffc04 	addi	sp,sp,-16
 801d0f4:	df000315 	stw	fp,12(sp)
 801d0f8:	df000304 	addi	fp,sp,12
 801d0fc:	e13ffd15 	stw	r4,-12(fp)
 801d100:	e17ffe15 	stw	r5,-8(fp)
 801d104:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 801d108:	e0fffe17 	ldw	r3,-8(fp)
 801d10c:	e0bffd17 	ldw	r2,-12(fp)
 801d110:	18800c26 	beq	r3,r2,801d144 <alt_load_section+0x54>
  {
    while( to != end )
 801d114:	00000806 	br	801d138 <alt_load_section+0x48>
    {
      *to++ = *from++;
 801d118:	e0bffe17 	ldw	r2,-8(fp)
 801d11c:	10c00104 	addi	r3,r2,4
 801d120:	e0fffe15 	stw	r3,-8(fp)
 801d124:	e0fffd17 	ldw	r3,-12(fp)
 801d128:	19000104 	addi	r4,r3,4
 801d12c:	e13ffd15 	stw	r4,-12(fp)
 801d130:	18c00017 	ldw	r3,0(r3)
 801d134:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 801d138:	e0fffe17 	ldw	r3,-8(fp)
 801d13c:	e0bfff17 	ldw	r2,-4(fp)
 801d140:	18bff51e 	bne	r3,r2,801d118 <__alt_data_end+0xfc01d118>
    {
      *to++ = *from++;
    }
  }
}
 801d144:	e037883a 	mov	sp,fp
 801d148:	df000017 	ldw	fp,0(sp)
 801d14c:	dec00104 	addi	sp,sp,4
 801d150:	f800283a 	ret

0801d154 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 801d154:	defffe04 	addi	sp,sp,-8
 801d158:	dfc00115 	stw	ra,4(sp)
 801d15c:	df000015 	stw	fp,0(sp)
 801d160:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 801d164:	010200b4 	movhi	r4,2050
 801d168:	21090804 	addi	r4,r4,9248
 801d16c:	014200b4 	movhi	r5,2050
 801d170:	29423d04 	addi	r5,r5,2292
 801d174:	018200b4 	movhi	r6,2050
 801d178:	31890804 	addi	r6,r6,9248
 801d17c:	801d0f00 	call	801d0f0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 801d180:	01020034 	movhi	r4,2048
 801d184:	21000804 	addi	r4,r4,32
 801d188:	01420034 	movhi	r5,2048
 801d18c:	29400804 	addi	r5,r5,32
 801d190:	01820034 	movhi	r6,2048
 801d194:	31806f04 	addi	r6,r6,444
 801d198:	801d0f00 	call	801d0f0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 801d19c:	010200b4 	movhi	r4,2050
 801d1a0:	213d7704 	addi	r4,r4,-2596
 801d1a4:	014200b4 	movhi	r5,2050
 801d1a8:	297d7704 	addi	r5,r5,-2596
 801d1ac:	018200b4 	movhi	r6,2050
 801d1b0:	31823d04 	addi	r6,r6,2292
 801d1b4:	801d0f00 	call	801d0f0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 801d1b8:	801e5540 	call	801e554 <alt_dcache_flush_all>
  alt_icache_flush_all();
 801d1bc:	801e71c0 	call	801e71c <alt_icache_flush_all>
}
 801d1c0:	e037883a 	mov	sp,fp
 801d1c4:	dfc00117 	ldw	ra,4(sp)
 801d1c8:	df000017 	ldw	fp,0(sp)
 801d1cc:	dec00204 	addi	sp,sp,8
 801d1d0:	f800283a 	ret

0801d1d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801d1d4:	defffe04 	addi	sp,sp,-8
 801d1d8:	dfc00115 	stw	ra,4(sp)
 801d1dc:	df000015 	stw	fp,0(sp)
 801d1e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801d1e4:	008200b4 	movhi	r2,2050
 801d1e8:	10890304 	addi	r2,r2,9228
 801d1ec:	10800017 	ldw	r2,0(r2)
 801d1f0:	10000526 	beq	r2,zero,801d208 <alt_get_errno+0x34>
 801d1f4:	008200b4 	movhi	r2,2050
 801d1f8:	10890304 	addi	r2,r2,9228
 801d1fc:	10800017 	ldw	r2,0(r2)
 801d200:	103ee83a 	callr	r2
 801d204:	00000206 	br	801d210 <alt_get_errno+0x3c>
 801d208:	008200b4 	movhi	r2,2050
 801d20c:	108ffd04 	addi	r2,r2,16372
}
 801d210:	e037883a 	mov	sp,fp
 801d214:	dfc00117 	ldw	ra,4(sp)
 801d218:	df000017 	ldw	fp,0(sp)
 801d21c:	dec00204 	addi	sp,sp,8
 801d220:	f800283a 	ret

0801d224 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 801d224:	defff904 	addi	sp,sp,-28
 801d228:	dfc00615 	stw	ra,24(sp)
 801d22c:	df000515 	stw	fp,20(sp)
 801d230:	df000504 	addi	fp,sp,20
 801d234:	e13ffd15 	stw	r4,-12(fp)
 801d238:	e17ffe15 	stw	r5,-8(fp)
 801d23c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 801d240:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801d244:	e0bffd17 	ldw	r2,-12(fp)
 801d248:	10000816 	blt	r2,zero,801d26c <lseek+0x48>
 801d24c:	e13ffd17 	ldw	r4,-12(fp)
 801d250:	01400304 	movi	r5,12
 801d254:	8009fe40 	call	8009fe4 <__mulsi3>
 801d258:	1007883a 	mov	r3,r2
 801d25c:	008200b4 	movhi	r2,2050
 801d260:	10847a04 	addi	r2,r2,4584
 801d264:	1885883a 	add	r2,r3,r2
 801d268:	00000106 	br	801d270 <lseek+0x4c>
 801d26c:	0005883a 	mov	r2,zero
 801d270:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 801d274:	e0bffc17 	ldw	r2,-16(fp)
 801d278:	10001026 	beq	r2,zero,801d2bc <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 801d27c:	e0bffc17 	ldw	r2,-16(fp)
 801d280:	10800017 	ldw	r2,0(r2)
 801d284:	10800717 	ldw	r2,28(r2)
 801d288:	10000926 	beq	r2,zero,801d2b0 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 801d28c:	e0bffc17 	ldw	r2,-16(fp)
 801d290:	10800017 	ldw	r2,0(r2)
 801d294:	10800717 	ldw	r2,28(r2)
 801d298:	e13ffc17 	ldw	r4,-16(fp)
 801d29c:	e17ffe17 	ldw	r5,-8(fp)
 801d2a0:	e1bfff17 	ldw	r6,-4(fp)
 801d2a4:	103ee83a 	callr	r2
 801d2a8:	e0bffb15 	stw	r2,-20(fp)
 801d2ac:	00000506 	br	801d2c4 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 801d2b0:	00bfde84 	movi	r2,-134
 801d2b4:	e0bffb15 	stw	r2,-20(fp)
 801d2b8:	00000206 	br	801d2c4 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 801d2bc:	00bfebc4 	movi	r2,-81
 801d2c0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 801d2c4:	e0bffb17 	ldw	r2,-20(fp)
 801d2c8:	1000070e 	bge	r2,zero,801d2e8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 801d2cc:	801d1d40 	call	801d1d4 <alt_get_errno>
 801d2d0:	1007883a 	mov	r3,r2
 801d2d4:	e0bffb17 	ldw	r2,-20(fp)
 801d2d8:	0085c83a 	sub	r2,zero,r2
 801d2dc:	18800015 	stw	r2,0(r3)
    rc = -1;
 801d2e0:	00bfffc4 	movi	r2,-1
 801d2e4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 801d2e8:	e0bffb17 	ldw	r2,-20(fp)
}
 801d2ec:	e037883a 	mov	sp,fp
 801d2f0:	dfc00117 	ldw	ra,4(sp)
 801d2f4:	df000017 	ldw	fp,0(sp)
 801d2f8:	dec00204 	addi	sp,sp,8
 801d2fc:	f800283a 	ret

0801d300 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 801d300:	defffd04 	addi	sp,sp,-12
 801d304:	dfc00215 	stw	ra,8(sp)
 801d308:	df000115 	stw	fp,4(sp)
 801d30c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 801d310:	0009883a 	mov	r4,zero
 801d314:	801d7f40 	call	801d7f4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 801d318:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 801d31c:	801d8280 	call	801d828 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 801d320:	010200b4 	movhi	r4,2050
 801d324:	21023304 	addi	r4,r4,2252
 801d328:	014200b4 	movhi	r5,2050
 801d32c:	29423304 	addi	r5,r5,2252
 801d330:	018200b4 	movhi	r6,2050
 801d334:	31823304 	addi	r6,r6,2252
 801d338:	801eae80 	call	801eae8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 801d33c:	801e6640 	call	801e664 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 801d340:	010200b4 	movhi	r4,2050
 801d344:	2139b004 	addi	r4,r4,-6464
 801d348:	801f2380 	call	801f238 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 801d34c:	d1270c17 	ldw	r4,-25552(gp)
 801d350:	d0e70d17 	ldw	r3,-25548(gp)
 801d354:	d0a70e17 	ldw	r2,-25544(gp)
 801d358:	180b883a 	mov	r5,r3
 801d35c:	100d883a 	mov	r6,r2
 801d360:	80036140 	call	8003614 <main>
 801d364:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 801d368:	01000044 	movi	r4,1
 801d36c:	801cde80 	call	801cde8 <close>
  exit (result);
 801d370:	e13fff17 	ldw	r4,-4(fp)
 801d374:	801f24c0 	call	801f24c <exit>

0801d378 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 801d378:	defffe04 	addi	sp,sp,-8
 801d37c:	df000115 	stw	fp,4(sp)
 801d380:	df000104 	addi	fp,sp,4
 801d384:	e13fff15 	stw	r4,-4(fp)
}
 801d388:	e037883a 	mov	sp,fp
 801d38c:	df000017 	ldw	fp,0(sp)
 801d390:	dec00104 	addi	sp,sp,4
 801d394:	f800283a 	ret

0801d398 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 801d398:	defffe04 	addi	sp,sp,-8
 801d39c:	df000115 	stw	fp,4(sp)
 801d3a0:	df000104 	addi	fp,sp,4
 801d3a4:	e13fff15 	stw	r4,-4(fp)
}
 801d3a8:	e037883a 	mov	sp,fp
 801d3ac:	df000017 	ldw	fp,0(sp)
 801d3b0:	dec00104 	addi	sp,sp,4
 801d3b4:	f800283a 	ret

0801d3b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801d3b8:	defffe04 	addi	sp,sp,-8
 801d3bc:	dfc00115 	stw	ra,4(sp)
 801d3c0:	df000015 	stw	fp,0(sp)
 801d3c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801d3c8:	008200b4 	movhi	r2,2050
 801d3cc:	10890304 	addi	r2,r2,9228
 801d3d0:	10800017 	ldw	r2,0(r2)
 801d3d4:	10000526 	beq	r2,zero,801d3ec <alt_get_errno+0x34>
 801d3d8:	008200b4 	movhi	r2,2050
 801d3dc:	10890304 	addi	r2,r2,9228
 801d3e0:	10800017 	ldw	r2,0(r2)
 801d3e4:	103ee83a 	callr	r2
 801d3e8:	00000206 	br	801d3f4 <alt_get_errno+0x3c>
 801d3ec:	008200b4 	movhi	r2,2050
 801d3f0:	108ffd04 	addi	r2,r2,16372
}
 801d3f4:	e037883a 	mov	sp,fp
 801d3f8:	dfc00117 	ldw	ra,4(sp)
 801d3fc:	df000017 	ldw	fp,0(sp)
 801d400:	dec00204 	addi	sp,sp,8
 801d404:	f800283a 	ret

0801d408 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 801d408:	defff904 	addi	sp,sp,-28
 801d40c:	dfc00615 	stw	ra,24(sp)
 801d410:	df000515 	stw	fp,20(sp)
 801d414:	df000504 	addi	fp,sp,20
 801d418:	e13ffd15 	stw	r4,-12(fp)
 801d41c:	e17ffe15 	stw	r5,-8(fp)
 801d420:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801d424:	e0bffd17 	ldw	r2,-12(fp)
 801d428:	10000816 	blt	r2,zero,801d44c <read+0x44>
 801d42c:	e13ffd17 	ldw	r4,-12(fp)
 801d430:	01400304 	movi	r5,12
 801d434:	8009fe40 	call	8009fe4 <__mulsi3>
 801d438:	1007883a 	mov	r3,r2
 801d43c:	008200b4 	movhi	r2,2050
 801d440:	10847a04 	addi	r2,r2,4584
 801d444:	1885883a 	add	r2,r3,r2
 801d448:	00000106 	br	801d450 <read+0x48>
 801d44c:	0005883a 	mov	r2,zero
 801d450:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801d454:	e0bffb17 	ldw	r2,-20(fp)
 801d458:	10002226 	beq	r2,zero,801d4e4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801d45c:	e0bffb17 	ldw	r2,-20(fp)
 801d460:	10800217 	ldw	r2,8(r2)
 801d464:	108000cc 	andi	r2,r2,3
 801d468:	10800060 	cmpeqi	r2,r2,1
 801d46c:	1000181e 	bne	r2,zero,801d4d0 <read+0xc8>
        (fd->dev->read))
 801d470:	e0bffb17 	ldw	r2,-20(fp)
 801d474:	10800017 	ldw	r2,0(r2)
 801d478:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801d47c:	10001426 	beq	r2,zero,801d4d0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 801d480:	e0bffb17 	ldw	r2,-20(fp)
 801d484:	10800017 	ldw	r2,0(r2)
 801d488:	10800517 	ldw	r2,20(r2)
 801d48c:	e0ffff17 	ldw	r3,-4(fp)
 801d490:	e13ffb17 	ldw	r4,-20(fp)
 801d494:	e17ffe17 	ldw	r5,-8(fp)
 801d498:	180d883a 	mov	r6,r3
 801d49c:	103ee83a 	callr	r2
 801d4a0:	e0bffc15 	stw	r2,-16(fp)
 801d4a4:	e0bffc17 	ldw	r2,-16(fp)
 801d4a8:	1000070e 	bge	r2,zero,801d4c8 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 801d4ac:	801d3b80 	call	801d3b8 <alt_get_errno>
 801d4b0:	1007883a 	mov	r3,r2
 801d4b4:	e0bffc17 	ldw	r2,-16(fp)
 801d4b8:	0085c83a 	sub	r2,zero,r2
 801d4bc:	18800015 	stw	r2,0(r3)
          return -1;
 801d4c0:	00bfffc4 	movi	r2,-1
 801d4c4:	00000c06 	br	801d4f8 <read+0xf0>
        }
        return rval;
 801d4c8:	e0bffc17 	ldw	r2,-16(fp)
 801d4cc:	00000a06 	br	801d4f8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 801d4d0:	801d3b80 	call	801d3b8 <alt_get_errno>
 801d4d4:	1007883a 	mov	r3,r2
 801d4d8:	00800344 	movi	r2,13
 801d4dc:	18800015 	stw	r2,0(r3)
 801d4e0:	00000406 	br	801d4f4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 801d4e4:	801d3b80 	call	801d3b8 <alt_get_errno>
 801d4e8:	1007883a 	mov	r3,r2
 801d4ec:	00801444 	movi	r2,81
 801d4f0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801d4f4:	00bfffc4 	movi	r2,-1
}
 801d4f8:	e037883a 	mov	sp,fp
 801d4fc:	dfc00117 	ldw	ra,4(sp)
 801d500:	df000017 	ldw	fp,0(sp)
 801d504:	dec00204 	addi	sp,sp,8
 801d508:	f800283a 	ret

0801d50c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 801d50c:	defffc04 	addi	sp,sp,-16
 801d510:	dfc00315 	stw	ra,12(sp)
 801d514:	df000215 	stw	fp,8(sp)
 801d518:	dc000115 	stw	r16,4(sp)
 801d51c:	df000204 	addi	fp,sp,8
 801d520:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 801d524:	e0bffe17 	ldw	r2,-8(fp)
 801d528:	108000d0 	cmplti	r2,r2,3
 801d52c:	1000111e 	bne	r2,zero,801d574 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 801d530:	040200b4 	movhi	r16,2050
 801d534:	84047a04 	addi	r16,r16,4584
 801d538:	e0bffe17 	ldw	r2,-8(fp)
 801d53c:	1009883a 	mov	r4,r2
 801d540:	01400304 	movi	r5,12
 801d544:	8009fe40 	call	8009fe4 <__mulsi3>
 801d548:	8085883a 	add	r2,r16,r2
 801d54c:	10800204 	addi	r2,r2,8
 801d550:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 801d554:	040200b4 	movhi	r16,2050
 801d558:	84047a04 	addi	r16,r16,4584
 801d55c:	e0bffe17 	ldw	r2,-8(fp)
 801d560:	1009883a 	mov	r4,r2
 801d564:	01400304 	movi	r5,12
 801d568:	8009fe40 	call	8009fe4 <__mulsi3>
 801d56c:	8085883a 	add	r2,r16,r2
 801d570:	10000015 	stw	zero,0(r2)
  }
}
 801d574:	e6ffff04 	addi	sp,fp,-4
 801d578:	dfc00217 	ldw	ra,8(sp)
 801d57c:	df000117 	ldw	fp,4(sp)
 801d580:	dc000017 	ldw	r16,0(sp)
 801d584:	dec00304 	addi	sp,sp,12
 801d588:	f800283a 	ret

0801d58c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 801d58c:	defff904 	addi	sp,sp,-28
 801d590:	df000615 	stw	fp,24(sp)
 801d594:	df000604 	addi	fp,sp,24
 801d598:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801d59c:	0005303a 	rdctl	r2,status
 801d5a0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801d5a4:	e0fffc17 	ldw	r3,-16(fp)
 801d5a8:	00bfff84 	movi	r2,-2
 801d5ac:	1884703a 	and	r2,r3,r2
 801d5b0:	1001703a 	wrctl	status,r2
  
  return context;
 801d5b4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 801d5b8:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 801d5bc:	d0a01217 	ldw	r2,-32696(gp)
 801d5c0:	10c000c4 	addi	r3,r2,3
 801d5c4:	00bfff04 	movi	r2,-4
 801d5c8:	1884703a 	and	r2,r3,r2
 801d5cc:	d0a01215 	stw	r2,-32696(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 801d5d0:	d0e01217 	ldw	r3,-32696(gp)
 801d5d4:	e0bfff17 	ldw	r2,-4(fp)
 801d5d8:	1887883a 	add	r3,r3,r2
 801d5dc:	00830034 	movhi	r2,3072
 801d5e0:	10800004 	addi	r2,r2,0
 801d5e4:	10c0062e 	bgeu	r2,r3,801d600 <sbrk+0x74>
 801d5e8:	e0bffa17 	ldw	r2,-24(fp)
 801d5ec:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801d5f0:	e0bffd17 	ldw	r2,-12(fp)
 801d5f4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 801d5f8:	00bfffc4 	movi	r2,-1
 801d5fc:	00000b06 	br	801d62c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 801d600:	d0a01217 	ldw	r2,-32696(gp)
 801d604:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 801d608:	d0e01217 	ldw	r3,-32696(gp)
 801d60c:	e0bfff17 	ldw	r2,-4(fp)
 801d610:	1885883a 	add	r2,r3,r2
 801d614:	d0a01215 	stw	r2,-32696(gp)
 801d618:	e0bffa17 	ldw	r2,-24(fp)
 801d61c:	e0bffe15 	stw	r2,-8(fp)
 801d620:	e0bffe17 	ldw	r2,-8(fp)
 801d624:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 801d628:	e0bffb17 	ldw	r2,-20(fp)
} 
 801d62c:	e037883a 	mov	sp,fp
 801d630:	df000017 	ldw	fp,0(sp)
 801d634:	dec00104 	addi	sp,sp,4
 801d638:	f800283a 	ret

0801d63c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 801d63c:	defffd04 	addi	sp,sp,-12
 801d640:	dfc00215 	stw	ra,8(sp)
 801d644:	df000115 	stw	fp,4(sp)
 801d648:	df000104 	addi	fp,sp,4
 801d64c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 801d650:	e13fff17 	ldw	r4,-4(fp)
 801d654:	801e3fc0 	call	801e3fc <alt_busy_sleep>
}
 801d658:	e037883a 	mov	sp,fp
 801d65c:	dfc00117 	ldw	ra,4(sp)
 801d660:	df000017 	ldw	fp,0(sp)
 801d664:	dec00204 	addi	sp,sp,8
 801d668:	f800283a 	ret

0801d66c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801d66c:	defffe04 	addi	sp,sp,-8
 801d670:	dfc00115 	stw	ra,4(sp)
 801d674:	df000015 	stw	fp,0(sp)
 801d678:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801d67c:	008200b4 	movhi	r2,2050
 801d680:	10890304 	addi	r2,r2,9228
 801d684:	10800017 	ldw	r2,0(r2)
 801d688:	10000526 	beq	r2,zero,801d6a0 <alt_get_errno+0x34>
 801d68c:	008200b4 	movhi	r2,2050
 801d690:	10890304 	addi	r2,r2,9228
 801d694:	10800017 	ldw	r2,0(r2)
 801d698:	103ee83a 	callr	r2
 801d69c:	00000206 	br	801d6a8 <alt_get_errno+0x3c>
 801d6a0:	008200b4 	movhi	r2,2050
 801d6a4:	108ffd04 	addi	r2,r2,16372
}
 801d6a8:	e037883a 	mov	sp,fp
 801d6ac:	dfc00117 	ldw	ra,4(sp)
 801d6b0:	df000017 	ldw	fp,0(sp)
 801d6b4:	dec00204 	addi	sp,sp,8
 801d6b8:	f800283a 	ret

0801d6bc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 801d6bc:	defff904 	addi	sp,sp,-28
 801d6c0:	dfc00615 	stw	ra,24(sp)
 801d6c4:	df000515 	stw	fp,20(sp)
 801d6c8:	df000504 	addi	fp,sp,20
 801d6cc:	e13ffd15 	stw	r4,-12(fp)
 801d6d0:	e17ffe15 	stw	r5,-8(fp)
 801d6d4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801d6d8:	e0bffd17 	ldw	r2,-12(fp)
 801d6dc:	10000816 	blt	r2,zero,801d700 <write+0x44>
 801d6e0:	e13ffd17 	ldw	r4,-12(fp)
 801d6e4:	01400304 	movi	r5,12
 801d6e8:	8009fe40 	call	8009fe4 <__mulsi3>
 801d6ec:	1007883a 	mov	r3,r2
 801d6f0:	008200b4 	movhi	r2,2050
 801d6f4:	10847a04 	addi	r2,r2,4584
 801d6f8:	1885883a 	add	r2,r3,r2
 801d6fc:	00000106 	br	801d704 <write+0x48>
 801d700:	0005883a 	mov	r2,zero
 801d704:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801d708:	e0bffb17 	ldw	r2,-20(fp)
 801d70c:	10002126 	beq	r2,zero,801d794 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 801d710:	e0bffb17 	ldw	r2,-20(fp)
 801d714:	10800217 	ldw	r2,8(r2)
 801d718:	108000cc 	andi	r2,r2,3
 801d71c:	10001826 	beq	r2,zero,801d780 <write+0xc4>
 801d720:	e0bffb17 	ldw	r2,-20(fp)
 801d724:	10800017 	ldw	r2,0(r2)
 801d728:	10800617 	ldw	r2,24(r2)
 801d72c:	10001426 	beq	r2,zero,801d780 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 801d730:	e0bffb17 	ldw	r2,-20(fp)
 801d734:	10800017 	ldw	r2,0(r2)
 801d738:	10800617 	ldw	r2,24(r2)
 801d73c:	e0ffff17 	ldw	r3,-4(fp)
 801d740:	e13ffb17 	ldw	r4,-20(fp)
 801d744:	e17ffe17 	ldw	r5,-8(fp)
 801d748:	180d883a 	mov	r6,r3
 801d74c:	103ee83a 	callr	r2
 801d750:	e0bffc15 	stw	r2,-16(fp)
 801d754:	e0bffc17 	ldw	r2,-16(fp)
 801d758:	1000070e 	bge	r2,zero,801d778 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 801d75c:	801d66c0 	call	801d66c <alt_get_errno>
 801d760:	1007883a 	mov	r3,r2
 801d764:	e0bffc17 	ldw	r2,-16(fp)
 801d768:	0085c83a 	sub	r2,zero,r2
 801d76c:	18800015 	stw	r2,0(r3)
        return -1;
 801d770:	00bfffc4 	movi	r2,-1
 801d774:	00000c06 	br	801d7a8 <write+0xec>
      }
      return rval;
 801d778:	e0bffc17 	ldw	r2,-16(fp)
 801d77c:	00000a06 	br	801d7a8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 801d780:	801d66c0 	call	801d66c <alt_get_errno>
 801d784:	1007883a 	mov	r3,r2
 801d788:	00800344 	movi	r2,13
 801d78c:	18800015 	stw	r2,0(r3)
 801d790:	00000406 	br	801d7a4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 801d794:	801d66c0 	call	801d66c <alt_get_errno>
 801d798:	1007883a 	mov	r3,r2
 801d79c:	00801444 	movi	r2,81
 801d7a0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801d7a4:	00bfffc4 	movi	r2,-1
}
 801d7a8:	e037883a 	mov	sp,fp
 801d7ac:	dfc00117 	ldw	ra,4(sp)
 801d7b0:	df000017 	ldw	fp,0(sp)
 801d7b4:	dec00204 	addi	sp,sp,8
 801d7b8:	f800283a 	ret

0801d7bc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 801d7bc:	defffd04 	addi	sp,sp,-12
 801d7c0:	dfc00215 	stw	ra,8(sp)
 801d7c4:	df000115 	stw	fp,4(sp)
 801d7c8:	df000104 	addi	fp,sp,4
 801d7cc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 801d7d0:	e13fff17 	ldw	r4,-4(fp)
 801d7d4:	014200b4 	movhi	r5,2050
 801d7d8:	29490004 	addi	r5,r5,9216
 801d7dc:	801e5c00 	call	801e5c0 <alt_dev_llist_insert>
}
 801d7e0:	e037883a 	mov	sp,fp
 801d7e4:	dfc00117 	ldw	ra,4(sp)
 801d7e8:	df000017 	ldw	fp,0(sp)
 801d7ec:	dec00204 	addi	sp,sp,8
 801d7f0:	f800283a 	ret

0801d7f4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 801d7f4:	defffd04 	addi	sp,sp,-12
 801d7f8:	dfc00215 	stw	ra,8(sp)
 801d7fc:	df000115 	stw	fp,4(sp)
 801d800:	df000104 	addi	fp,sp,4
 801d804:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 801d808:	801efa00 	call	801efa0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 801d80c:	00800044 	movi	r2,1
 801d810:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 801d814:	e037883a 	mov	sp,fp
 801d818:	dfc00117 	ldw	ra,4(sp)
 801d81c:	df000017 	ldw	fp,0(sp)
 801d820:	dec00204 	addi	sp,sp,8
 801d824:	f800283a 	ret

0801d828 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 801d828:	defffe04 	addi	sp,sp,-8
 801d82c:	dfc00115 	stw	ra,4(sp)
 801d830:	df000015 	stw	fp,0(sp)
 801d834:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 801d838:	010200b4 	movhi	r4,2050
 801d83c:	2104e404 	addi	r4,r4,5008
 801d840:	000b883a 	mov	r5,zero
 801d844:	01800144 	movi	r6,5
 801d848:	801d9d40 	call	801d9d4 <altera_avalon_jtag_uart_init>
 801d84c:	010200b4 	movhi	r4,2050
 801d850:	2104da04 	addi	r4,r4,4968
 801d854:	801d7bc0 	call	801d7bc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 801d858:	0001883a 	nop
}
 801d85c:	e037883a 	mov	sp,fp
 801d860:	dfc00117 	ldw	ra,4(sp)
 801d864:	df000017 	ldw	fp,0(sp)
 801d868:	dec00204 	addi	sp,sp,8
 801d86c:	f800283a 	ret

0801d870 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 801d870:	defffa04 	addi	sp,sp,-24
 801d874:	dfc00515 	stw	ra,20(sp)
 801d878:	df000415 	stw	fp,16(sp)
 801d87c:	df000404 	addi	fp,sp,16
 801d880:	e13ffd15 	stw	r4,-12(fp)
 801d884:	e17ffe15 	stw	r5,-8(fp)
 801d888:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801d88c:	e0bffd17 	ldw	r2,-12(fp)
 801d890:	10800017 	ldw	r2,0(r2)
 801d894:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 801d898:	e0bffc17 	ldw	r2,-16(fp)
 801d89c:	10c00a04 	addi	r3,r2,40
 801d8a0:	e0bffd17 	ldw	r2,-12(fp)
 801d8a4:	10800217 	ldw	r2,8(r2)
 801d8a8:	1809883a 	mov	r4,r3
 801d8ac:	e17ffe17 	ldw	r5,-8(fp)
 801d8b0:	e1bfff17 	ldw	r6,-4(fp)
 801d8b4:	100f883a 	mov	r7,r2
 801d8b8:	801de980 	call	801de98 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 801d8bc:	e037883a 	mov	sp,fp
 801d8c0:	dfc00117 	ldw	ra,4(sp)
 801d8c4:	df000017 	ldw	fp,0(sp)
 801d8c8:	dec00204 	addi	sp,sp,8
 801d8cc:	f800283a 	ret

0801d8d0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 801d8d0:	defffa04 	addi	sp,sp,-24
 801d8d4:	dfc00515 	stw	ra,20(sp)
 801d8d8:	df000415 	stw	fp,16(sp)
 801d8dc:	df000404 	addi	fp,sp,16
 801d8e0:	e13ffd15 	stw	r4,-12(fp)
 801d8e4:	e17ffe15 	stw	r5,-8(fp)
 801d8e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801d8ec:	e0bffd17 	ldw	r2,-12(fp)
 801d8f0:	10800017 	ldw	r2,0(r2)
 801d8f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 801d8f8:	e0bffc17 	ldw	r2,-16(fp)
 801d8fc:	10c00a04 	addi	r3,r2,40
 801d900:	e0bffd17 	ldw	r2,-12(fp)
 801d904:	10800217 	ldw	r2,8(r2)
 801d908:	1809883a 	mov	r4,r3
 801d90c:	e17ffe17 	ldw	r5,-8(fp)
 801d910:	e1bfff17 	ldw	r6,-4(fp)
 801d914:	100f883a 	mov	r7,r2
 801d918:	801e0a40 	call	801e0a4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 801d91c:	e037883a 	mov	sp,fp
 801d920:	dfc00117 	ldw	ra,4(sp)
 801d924:	df000017 	ldw	fp,0(sp)
 801d928:	dec00204 	addi	sp,sp,8
 801d92c:	f800283a 	ret

0801d930 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 801d930:	defffc04 	addi	sp,sp,-16
 801d934:	dfc00315 	stw	ra,12(sp)
 801d938:	df000215 	stw	fp,8(sp)
 801d93c:	df000204 	addi	fp,sp,8
 801d940:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801d944:	e0bfff17 	ldw	r2,-4(fp)
 801d948:	10800017 	ldw	r2,0(r2)
 801d94c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 801d950:	e0bffe17 	ldw	r2,-8(fp)
 801d954:	10c00a04 	addi	r3,r2,40
 801d958:	e0bfff17 	ldw	r2,-4(fp)
 801d95c:	10800217 	ldw	r2,8(r2)
 801d960:	1809883a 	mov	r4,r3
 801d964:	100b883a 	mov	r5,r2
 801d968:	801dd440 	call	801dd44 <altera_avalon_jtag_uart_close>
}
 801d96c:	e037883a 	mov	sp,fp
 801d970:	dfc00117 	ldw	ra,4(sp)
 801d974:	df000017 	ldw	fp,0(sp)
 801d978:	dec00204 	addi	sp,sp,8
 801d97c:	f800283a 	ret

0801d980 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 801d980:	defffa04 	addi	sp,sp,-24
 801d984:	dfc00515 	stw	ra,20(sp)
 801d988:	df000415 	stw	fp,16(sp)
 801d98c:	df000404 	addi	fp,sp,16
 801d990:	e13ffd15 	stw	r4,-12(fp)
 801d994:	e17ffe15 	stw	r5,-8(fp)
 801d998:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 801d99c:	e0bffd17 	ldw	r2,-12(fp)
 801d9a0:	10800017 	ldw	r2,0(r2)
 801d9a4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 801d9a8:	e0bffc17 	ldw	r2,-16(fp)
 801d9ac:	10800a04 	addi	r2,r2,40
 801d9b0:	1009883a 	mov	r4,r2
 801d9b4:	e17ffe17 	ldw	r5,-8(fp)
 801d9b8:	e1bfff17 	ldw	r6,-4(fp)
 801d9bc:	801ddac0 	call	801ddac <altera_avalon_jtag_uart_ioctl>
}
 801d9c0:	e037883a 	mov	sp,fp
 801d9c4:	dfc00117 	ldw	ra,4(sp)
 801d9c8:	df000017 	ldw	fp,0(sp)
 801d9cc:	dec00204 	addi	sp,sp,8
 801d9d0:	f800283a 	ret

0801d9d4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 801d9d4:	defffa04 	addi	sp,sp,-24
 801d9d8:	dfc00515 	stw	ra,20(sp)
 801d9dc:	df000415 	stw	fp,16(sp)
 801d9e0:	df000404 	addi	fp,sp,16
 801d9e4:	e13ffd15 	stw	r4,-12(fp)
 801d9e8:	e17ffe15 	stw	r5,-8(fp)
 801d9ec:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801d9f0:	e0bffd17 	ldw	r2,-12(fp)
 801d9f4:	00c00044 	movi	r3,1
 801d9f8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 801d9fc:	e0bffd17 	ldw	r2,-12(fp)
 801da00:	10800017 	ldw	r2,0(r2)
 801da04:	10800104 	addi	r2,r2,4
 801da08:	1007883a 	mov	r3,r2
 801da0c:	e0bffd17 	ldw	r2,-12(fp)
 801da10:	10800817 	ldw	r2,32(r2)
 801da14:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 801da18:	e0fffe17 	ldw	r3,-8(fp)
 801da1c:	e0bfff17 	ldw	r2,-4(fp)
 801da20:	d8000015 	stw	zero,0(sp)
 801da24:	1809883a 	mov	r4,r3
 801da28:	100b883a 	mov	r5,r2
 801da2c:	018200b4 	movhi	r6,2050
 801da30:	31b6a604 	addi	r6,r6,-9576
 801da34:	e1fffd17 	ldw	r7,-12(fp)
 801da38:	801e7380 	call	801e738 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 801da3c:	e0bffd17 	ldw	r2,-12(fp)
 801da40:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 801da44:	e0bffd17 	ldw	r2,-12(fp)
 801da48:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 801da4c:	008200b4 	movhi	r2,2050
 801da50:	10900204 	addi	r2,r2,16392
 801da54:	10800017 	ldw	r2,0(r2)
 801da58:	1809883a 	mov	r4,r3
 801da5c:	100b883a 	mov	r5,r2
 801da60:	018200b4 	movhi	r6,2050
 801da64:	31b72704 	addi	r6,r6,-9060
 801da68:	e1fffd17 	ldw	r7,-12(fp)
 801da6c:	801e2bc0 	call	801e2bc <alt_alarm_start>
 801da70:	1000040e 	bge	r2,zero,801da84 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 801da74:	e0fffd17 	ldw	r3,-12(fp)
 801da78:	00a00034 	movhi	r2,32768
 801da7c:	10bfffc4 	addi	r2,r2,-1
 801da80:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 801da84:	e037883a 	mov	sp,fp
 801da88:	dfc00117 	ldw	ra,4(sp)
 801da8c:	df000017 	ldw	fp,0(sp)
 801da90:	dec00204 	addi	sp,sp,8
 801da94:	f800283a 	ret

0801da98 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 801da98:	defff804 	addi	sp,sp,-32
 801da9c:	df000715 	stw	fp,28(sp)
 801daa0:	df000704 	addi	fp,sp,28
 801daa4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 801daa8:	e0bfff17 	ldw	r2,-4(fp)
 801daac:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 801dab0:	e0bffb17 	ldw	r2,-20(fp)
 801dab4:	10800017 	ldw	r2,0(r2)
 801dab8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801dabc:	e0bffc17 	ldw	r2,-16(fp)
 801dac0:	10800104 	addi	r2,r2,4
 801dac4:	10800037 	ldwio	r2,0(r2)
 801dac8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 801dacc:	e0bffd17 	ldw	r2,-12(fp)
 801dad0:	1080c00c 	andi	r2,r2,768
 801dad4:	1000011e 	bne	r2,zero,801dadc <altera_avalon_jtag_uart_irq+0x44>
      break;
 801dad8:	00006c06 	br	801dc8c <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 801dadc:	e0bffd17 	ldw	r2,-12(fp)
 801dae0:	1080400c 	andi	r2,r2,256
 801dae4:	10003426 	beq	r2,zero,801dbb8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 801dae8:	00800074 	movhi	r2,1
 801daec:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801daf0:	e0bffb17 	ldw	r2,-20(fp)
 801daf4:	10800a17 	ldw	r2,40(r2)
 801daf8:	10800044 	addi	r2,r2,1
 801dafc:	1081ffcc 	andi	r2,r2,2047
 801db00:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 801db04:	e0bffb17 	ldw	r2,-20(fp)
 801db08:	10c00b17 	ldw	r3,44(r2)
 801db0c:	e0bffe17 	ldw	r2,-8(fp)
 801db10:	1880011e 	bne	r3,r2,801db18 <altera_avalon_jtag_uart_irq+0x80>
          break;
 801db14:	00001606 	br	801db70 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 801db18:	e0bffc17 	ldw	r2,-16(fp)
 801db1c:	10800037 	ldwio	r2,0(r2)
 801db20:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 801db24:	e0bff917 	ldw	r2,-28(fp)
 801db28:	10a0000c 	andi	r2,r2,32768
 801db2c:	1000011e 	bne	r2,zero,801db34 <altera_avalon_jtag_uart_irq+0x9c>
          break;
 801db30:	00000f06 	br	801db70 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 801db34:	e0bffb17 	ldw	r2,-20(fp)
 801db38:	10800a17 	ldw	r2,40(r2)
 801db3c:	e0fff917 	ldw	r3,-28(fp)
 801db40:	1809883a 	mov	r4,r3
 801db44:	e0fffb17 	ldw	r3,-20(fp)
 801db48:	1885883a 	add	r2,r3,r2
 801db4c:	10800e04 	addi	r2,r2,56
 801db50:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801db54:	e0bffb17 	ldw	r2,-20(fp)
 801db58:	10800a17 	ldw	r2,40(r2)
 801db5c:	10800044 	addi	r2,r2,1
 801db60:	10c1ffcc 	andi	r3,r2,2047
 801db64:	e0bffb17 	ldw	r2,-20(fp)
 801db68:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 801db6c:	003fe006 	br	801daf0 <__alt_data_end+0xfc01daf0>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 801db70:	e0bff917 	ldw	r2,-28(fp)
 801db74:	10bfffec 	andhi	r2,r2,65535
 801db78:	10000f26 	beq	r2,zero,801dbb8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801db7c:	e0bffb17 	ldw	r2,-20(fp)
 801db80:	10c00817 	ldw	r3,32(r2)
 801db84:	00bfff84 	movi	r2,-2
 801db88:	1886703a 	and	r3,r3,r2
 801db8c:	e0bffb17 	ldw	r2,-20(fp)
 801db90:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 801db94:	e0bffc17 	ldw	r2,-16(fp)
 801db98:	10800104 	addi	r2,r2,4
 801db9c:	1007883a 	mov	r3,r2
 801dba0:	e0bffb17 	ldw	r2,-20(fp)
 801dba4:	10800817 	ldw	r2,32(r2)
 801dba8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801dbac:	e0bffc17 	ldw	r2,-16(fp)
 801dbb0:	10800104 	addi	r2,r2,4
 801dbb4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 801dbb8:	e0bffd17 	ldw	r2,-12(fp)
 801dbbc:	1080800c 	andi	r2,r2,512
 801dbc0:	10003126 	beq	r2,zero,801dc88 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 801dbc4:	e0bffd17 	ldw	r2,-12(fp)
 801dbc8:	1004d43a 	srli	r2,r2,16
 801dbcc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 801dbd0:	00001406 	br	801dc24 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 801dbd4:	e0bffc17 	ldw	r2,-16(fp)
 801dbd8:	e0fffb17 	ldw	r3,-20(fp)
 801dbdc:	18c00d17 	ldw	r3,52(r3)
 801dbe0:	e13ffb17 	ldw	r4,-20(fp)
 801dbe4:	20c7883a 	add	r3,r4,r3
 801dbe8:	18c20e04 	addi	r3,r3,2104
 801dbec:	18c00003 	ldbu	r3,0(r3)
 801dbf0:	18c03fcc 	andi	r3,r3,255
 801dbf4:	18c0201c 	xori	r3,r3,128
 801dbf8:	18ffe004 	addi	r3,r3,-128
 801dbfc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801dc00:	e0bffb17 	ldw	r2,-20(fp)
 801dc04:	10800d17 	ldw	r2,52(r2)
 801dc08:	10800044 	addi	r2,r2,1
 801dc0c:	10c1ffcc 	andi	r3,r2,2047
 801dc10:	e0bffb17 	ldw	r2,-20(fp)
 801dc14:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 801dc18:	e0bffa17 	ldw	r2,-24(fp)
 801dc1c:	10bfffc4 	addi	r2,r2,-1
 801dc20:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 801dc24:	e0bffa17 	ldw	r2,-24(fp)
 801dc28:	10000526 	beq	r2,zero,801dc40 <altera_avalon_jtag_uart_irq+0x1a8>
 801dc2c:	e0bffb17 	ldw	r2,-20(fp)
 801dc30:	10c00d17 	ldw	r3,52(r2)
 801dc34:	e0bffb17 	ldw	r2,-20(fp)
 801dc38:	10800c17 	ldw	r2,48(r2)
 801dc3c:	18bfe51e 	bne	r3,r2,801dbd4 <__alt_data_end+0xfc01dbd4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 801dc40:	e0bffa17 	ldw	r2,-24(fp)
 801dc44:	10001026 	beq	r2,zero,801dc88 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 801dc48:	e0bffb17 	ldw	r2,-20(fp)
 801dc4c:	10c00817 	ldw	r3,32(r2)
 801dc50:	00bfff44 	movi	r2,-3
 801dc54:	1886703a 	and	r3,r3,r2
 801dc58:	e0bffb17 	ldw	r2,-20(fp)
 801dc5c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801dc60:	e0bffb17 	ldw	r2,-20(fp)
 801dc64:	10800017 	ldw	r2,0(r2)
 801dc68:	10800104 	addi	r2,r2,4
 801dc6c:	1007883a 	mov	r3,r2
 801dc70:	e0bffb17 	ldw	r2,-20(fp)
 801dc74:	10800817 	ldw	r2,32(r2)
 801dc78:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801dc7c:	e0bffc17 	ldw	r2,-16(fp)
 801dc80:	10800104 	addi	r2,r2,4
 801dc84:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 801dc88:	003f8c06 	br	801dabc <__alt_data_end+0xfc01dabc>
}
 801dc8c:	e037883a 	mov	sp,fp
 801dc90:	df000017 	ldw	fp,0(sp)
 801dc94:	dec00104 	addi	sp,sp,4
 801dc98:	f800283a 	ret

0801dc9c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 801dc9c:	defff804 	addi	sp,sp,-32
 801dca0:	df000715 	stw	fp,28(sp)
 801dca4:	df000704 	addi	fp,sp,28
 801dca8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 801dcac:	e0bffb17 	ldw	r2,-20(fp)
 801dcb0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 801dcb4:	e0bff917 	ldw	r2,-28(fp)
 801dcb8:	10800017 	ldw	r2,0(r2)
 801dcbc:	10800104 	addi	r2,r2,4
 801dcc0:	10800037 	ldwio	r2,0(r2)
 801dcc4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 801dcc8:	e0bffa17 	ldw	r2,-24(fp)
 801dccc:	1081000c 	andi	r2,r2,1024
 801dcd0:	10000b26 	beq	r2,zero,801dd00 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 801dcd4:	e0bff917 	ldw	r2,-28(fp)
 801dcd8:	10800017 	ldw	r2,0(r2)
 801dcdc:	10800104 	addi	r2,r2,4
 801dce0:	1007883a 	mov	r3,r2
 801dce4:	e0bff917 	ldw	r2,-28(fp)
 801dce8:	10800817 	ldw	r2,32(r2)
 801dcec:	10810014 	ori	r2,r2,1024
 801dcf0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 801dcf4:	e0bff917 	ldw	r2,-28(fp)
 801dcf8:	10000915 	stw	zero,36(r2)
 801dcfc:	00000a06 	br	801dd28 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 801dd00:	e0bff917 	ldw	r2,-28(fp)
 801dd04:	10c00917 	ldw	r3,36(r2)
 801dd08:	00a00034 	movhi	r2,32768
 801dd0c:	10bfff04 	addi	r2,r2,-4
 801dd10:	10c00536 	bltu	r2,r3,801dd28 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 801dd14:	e0bff917 	ldw	r2,-28(fp)
 801dd18:	10800917 	ldw	r2,36(r2)
 801dd1c:	10c00044 	addi	r3,r2,1
 801dd20:	e0bff917 	ldw	r2,-28(fp)
 801dd24:	10c00915 	stw	r3,36(r2)
 801dd28:	008200b4 	movhi	r2,2050
 801dd2c:	10900204 	addi	r2,r2,16392
 801dd30:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 801dd34:	e037883a 	mov	sp,fp
 801dd38:	df000017 	ldw	fp,0(sp)
 801dd3c:	dec00104 	addi	sp,sp,4
 801dd40:	f800283a 	ret

0801dd44 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 801dd44:	defffd04 	addi	sp,sp,-12
 801dd48:	df000215 	stw	fp,8(sp)
 801dd4c:	df000204 	addi	fp,sp,8
 801dd50:	e13ffe15 	stw	r4,-8(fp)
 801dd54:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 801dd58:	00000506 	br	801dd70 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 801dd5c:	e0bfff17 	ldw	r2,-4(fp)
 801dd60:	1090000c 	andi	r2,r2,16384
 801dd64:	10000226 	beq	r2,zero,801dd70 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 801dd68:	00bffd44 	movi	r2,-11
 801dd6c:	00000b06 	br	801dd9c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 801dd70:	e0bffe17 	ldw	r2,-8(fp)
 801dd74:	10c00d17 	ldw	r3,52(r2)
 801dd78:	e0bffe17 	ldw	r2,-8(fp)
 801dd7c:	10800c17 	ldw	r2,48(r2)
 801dd80:	18800526 	beq	r3,r2,801dd98 <altera_avalon_jtag_uart_close+0x54>
 801dd84:	e0bffe17 	ldw	r2,-8(fp)
 801dd88:	10c00917 	ldw	r3,36(r2)
 801dd8c:	e0bffe17 	ldw	r2,-8(fp)
 801dd90:	10800117 	ldw	r2,4(r2)
 801dd94:	18bff136 	bltu	r3,r2,801dd5c <__alt_data_end+0xfc01dd5c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 801dd98:	0005883a 	mov	r2,zero
}
 801dd9c:	e037883a 	mov	sp,fp
 801dda0:	df000017 	ldw	fp,0(sp)
 801dda4:	dec00104 	addi	sp,sp,4
 801dda8:	f800283a 	ret

0801ddac <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 801ddac:	defffa04 	addi	sp,sp,-24
 801ddb0:	df000515 	stw	fp,20(sp)
 801ddb4:	df000504 	addi	fp,sp,20
 801ddb8:	e13ffd15 	stw	r4,-12(fp)
 801ddbc:	e17ffe15 	stw	r5,-8(fp)
 801ddc0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 801ddc4:	00bff9c4 	movi	r2,-25
 801ddc8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 801ddcc:	e0bffe17 	ldw	r2,-8(fp)
 801ddd0:	10da8060 	cmpeqi	r3,r2,27137
 801ddd4:	1800031e 	bne	r3,zero,801dde4 <altera_avalon_jtag_uart_ioctl+0x38>
 801ddd8:	109a80a0 	cmpeqi	r2,r2,27138
 801dddc:	1000191e 	bne	r2,zero,801de44 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 801dde0:	00002806 	br	801de84 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 801dde4:	e0bffd17 	ldw	r2,-12(fp)
 801dde8:	10c00117 	ldw	r3,4(r2)
 801ddec:	00a00034 	movhi	r2,32768
 801ddf0:	10bfffc4 	addi	r2,r2,-1
 801ddf4:	18801226 	beq	r3,r2,801de40 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 801ddf8:	e0bfff17 	ldw	r2,-4(fp)
 801ddfc:	10800017 	ldw	r2,0(r2)
 801de00:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 801de04:	e0bffc17 	ldw	r2,-16(fp)
 801de08:	10800090 	cmplti	r2,r2,2
 801de0c:	1000061e 	bne	r2,zero,801de28 <altera_avalon_jtag_uart_ioctl+0x7c>
 801de10:	e0fffc17 	ldw	r3,-16(fp)
 801de14:	00a00034 	movhi	r2,32768
 801de18:	10bfffc4 	addi	r2,r2,-1
 801de1c:	18800226 	beq	r3,r2,801de28 <altera_avalon_jtag_uart_ioctl+0x7c>
 801de20:	e0bffc17 	ldw	r2,-16(fp)
 801de24:	00000206 	br	801de30 <altera_avalon_jtag_uart_ioctl+0x84>
 801de28:	00a00034 	movhi	r2,32768
 801de2c:	10bfff84 	addi	r2,r2,-2
 801de30:	e0fffd17 	ldw	r3,-12(fp)
 801de34:	18800115 	stw	r2,4(r3)
      rc = 0;
 801de38:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801de3c:	00001106 	br	801de84 <altera_avalon_jtag_uart_ioctl+0xd8>
 801de40:	00001006 	br	801de84 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 801de44:	e0bffd17 	ldw	r2,-12(fp)
 801de48:	10c00117 	ldw	r3,4(r2)
 801de4c:	00a00034 	movhi	r2,32768
 801de50:	10bfffc4 	addi	r2,r2,-1
 801de54:	18800a26 	beq	r3,r2,801de80 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 801de58:	e0bffd17 	ldw	r2,-12(fp)
 801de5c:	10c00917 	ldw	r3,36(r2)
 801de60:	e0bffd17 	ldw	r2,-12(fp)
 801de64:	10800117 	ldw	r2,4(r2)
 801de68:	1885803a 	cmpltu	r2,r3,r2
 801de6c:	10c03fcc 	andi	r3,r2,255
 801de70:	e0bfff17 	ldw	r2,-4(fp)
 801de74:	10c00015 	stw	r3,0(r2)
      rc = 0;
 801de78:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801de7c:	00000006 	br	801de80 <altera_avalon_jtag_uart_ioctl+0xd4>
 801de80:	0001883a 	nop

  default:
    break;
  }

  return rc;
 801de84:	e0bffb17 	ldw	r2,-20(fp)
}
 801de88:	e037883a 	mov	sp,fp
 801de8c:	df000017 	ldw	fp,0(sp)
 801de90:	dec00104 	addi	sp,sp,4
 801de94:	f800283a 	ret

0801de98 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 801de98:	defff304 	addi	sp,sp,-52
 801de9c:	dfc00c15 	stw	ra,48(sp)
 801dea0:	df000b15 	stw	fp,44(sp)
 801dea4:	df000b04 	addi	fp,sp,44
 801dea8:	e13ffc15 	stw	r4,-16(fp)
 801deac:	e17ffd15 	stw	r5,-12(fp)
 801deb0:	e1bffe15 	stw	r6,-8(fp)
 801deb4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 801deb8:	e0bffd17 	ldw	r2,-12(fp)
 801debc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801dec0:	00004906 	br	801dfe8 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 801dec4:	e0bffc17 	ldw	r2,-16(fp)
 801dec8:	10800a17 	ldw	r2,40(r2)
 801decc:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 801ded0:	e0bffc17 	ldw	r2,-16(fp)
 801ded4:	10800b17 	ldw	r2,44(r2)
 801ded8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 801dedc:	e0fff717 	ldw	r3,-36(fp)
 801dee0:	e0bff817 	ldw	r2,-32(fp)
 801dee4:	18800536 	bltu	r3,r2,801defc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 801dee8:	e0fff717 	ldw	r3,-36(fp)
 801deec:	e0bff817 	ldw	r2,-32(fp)
 801def0:	1885c83a 	sub	r2,r3,r2
 801def4:	e0bff615 	stw	r2,-40(fp)
 801def8:	00000406 	br	801df0c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 801defc:	00c20004 	movi	r3,2048
 801df00:	e0bff817 	ldw	r2,-32(fp)
 801df04:	1885c83a 	sub	r2,r3,r2
 801df08:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801df0c:	e0bff617 	ldw	r2,-40(fp)
 801df10:	1000011e 	bne	r2,zero,801df18 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 801df14:	00001d06 	br	801df8c <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 801df18:	e0fffe17 	ldw	r3,-8(fp)
 801df1c:	e0bff617 	ldw	r2,-40(fp)
 801df20:	1880022e 	bgeu	r3,r2,801df2c <altera_avalon_jtag_uart_read+0x94>
        n = space;
 801df24:	e0bffe17 	ldw	r2,-8(fp)
 801df28:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 801df2c:	e0bff817 	ldw	r2,-32(fp)
 801df30:	10800e04 	addi	r2,r2,56
 801df34:	e0fffc17 	ldw	r3,-16(fp)
 801df38:	1885883a 	add	r2,r3,r2
 801df3c:	e13ff517 	ldw	r4,-44(fp)
 801df40:	100b883a 	mov	r5,r2
 801df44:	e1bff617 	ldw	r6,-40(fp)
 801df48:	8016fe00 	call	8016fe0 <memcpy>
      ptr   += n;
 801df4c:	e0fff517 	ldw	r3,-44(fp)
 801df50:	e0bff617 	ldw	r2,-40(fp)
 801df54:	1885883a 	add	r2,r3,r2
 801df58:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 801df5c:	e0fffe17 	ldw	r3,-8(fp)
 801df60:	e0bff617 	ldw	r2,-40(fp)
 801df64:	1885c83a 	sub	r2,r3,r2
 801df68:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801df6c:	e0fff817 	ldw	r3,-32(fp)
 801df70:	e0bff617 	ldw	r2,-40(fp)
 801df74:	1885883a 	add	r2,r3,r2
 801df78:	10c1ffcc 	andi	r3,r2,2047
 801df7c:	e0bffc17 	ldw	r2,-16(fp)
 801df80:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 801df84:	e0bffe17 	ldw	r2,-8(fp)
 801df88:	00bfce16 	blt	zero,r2,801dec4 <__alt_data_end+0xfc01dec4>

    /* If we read any data then return it */
    if (ptr != buffer)
 801df8c:	e0fff517 	ldw	r3,-44(fp)
 801df90:	e0bffd17 	ldw	r2,-12(fp)
 801df94:	18800126 	beq	r3,r2,801df9c <altera_avalon_jtag_uart_read+0x104>
      break;
 801df98:	00001506 	br	801dff0 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 801df9c:	e0bfff17 	ldw	r2,-4(fp)
 801dfa0:	1090000c 	andi	r2,r2,16384
 801dfa4:	10000126 	beq	r2,zero,801dfac <altera_avalon_jtag_uart_read+0x114>
      break;
 801dfa8:	00001106 	br	801dff0 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 801dfac:	0001883a 	nop
 801dfb0:	e0bffc17 	ldw	r2,-16(fp)
 801dfb4:	10c00a17 	ldw	r3,40(r2)
 801dfb8:	e0bff717 	ldw	r2,-36(fp)
 801dfbc:	1880051e 	bne	r3,r2,801dfd4 <altera_avalon_jtag_uart_read+0x13c>
 801dfc0:	e0bffc17 	ldw	r2,-16(fp)
 801dfc4:	10c00917 	ldw	r3,36(r2)
 801dfc8:	e0bffc17 	ldw	r2,-16(fp)
 801dfcc:	10800117 	ldw	r2,4(r2)
 801dfd0:	18bff736 	bltu	r3,r2,801dfb0 <__alt_data_end+0xfc01dfb0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 801dfd4:	e0bffc17 	ldw	r2,-16(fp)
 801dfd8:	10c00a17 	ldw	r3,40(r2)
 801dfdc:	e0bff717 	ldw	r2,-36(fp)
 801dfe0:	1880011e 	bne	r3,r2,801dfe8 <altera_avalon_jtag_uart_read+0x150>
      break;
 801dfe4:	00000206 	br	801dff0 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801dfe8:	e0bffe17 	ldw	r2,-8(fp)
 801dfec:	00bfb516 	blt	zero,r2,801dec4 <__alt_data_end+0xfc01dec4>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 801dff0:	e0fff517 	ldw	r3,-44(fp)
 801dff4:	e0bffd17 	ldw	r2,-12(fp)
 801dff8:	18801826 	beq	r3,r2,801e05c <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801dffc:	0005303a 	rdctl	r2,status
 801e000:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e004:	e0fffa17 	ldw	r3,-24(fp)
 801e008:	00bfff84 	movi	r2,-2
 801e00c:	1884703a 	and	r2,r3,r2
 801e010:	1001703a 	wrctl	status,r2
  
  return context;
 801e014:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 801e018:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801e01c:	e0bffc17 	ldw	r2,-16(fp)
 801e020:	10800817 	ldw	r2,32(r2)
 801e024:	10c00054 	ori	r3,r2,1
 801e028:	e0bffc17 	ldw	r2,-16(fp)
 801e02c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801e030:	e0bffc17 	ldw	r2,-16(fp)
 801e034:	10800017 	ldw	r2,0(r2)
 801e038:	10800104 	addi	r2,r2,4
 801e03c:	1007883a 	mov	r3,r2
 801e040:	e0bffc17 	ldw	r2,-16(fp)
 801e044:	10800817 	ldw	r2,32(r2)
 801e048:	18800035 	stwio	r2,0(r3)
 801e04c:	e0bff917 	ldw	r2,-28(fp)
 801e050:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e054:	e0bffb17 	ldw	r2,-20(fp)
 801e058:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 801e05c:	e0fff517 	ldw	r3,-44(fp)
 801e060:	e0bffd17 	ldw	r2,-12(fp)
 801e064:	18800426 	beq	r3,r2,801e078 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 801e068:	e0fff517 	ldw	r3,-44(fp)
 801e06c:	e0bffd17 	ldw	r2,-12(fp)
 801e070:	1885c83a 	sub	r2,r3,r2
 801e074:	00000606 	br	801e090 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 801e078:	e0bfff17 	ldw	r2,-4(fp)
 801e07c:	1090000c 	andi	r2,r2,16384
 801e080:	10000226 	beq	r2,zero,801e08c <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 801e084:	00bffd44 	movi	r2,-11
 801e088:	00000106 	br	801e090 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 801e08c:	00bffec4 	movi	r2,-5
}
 801e090:	e037883a 	mov	sp,fp
 801e094:	dfc00117 	ldw	ra,4(sp)
 801e098:	df000017 	ldw	fp,0(sp)
 801e09c:	dec00204 	addi	sp,sp,8
 801e0a0:	f800283a 	ret

0801e0a4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 801e0a4:	defff304 	addi	sp,sp,-52
 801e0a8:	dfc00c15 	stw	ra,48(sp)
 801e0ac:	df000b15 	stw	fp,44(sp)
 801e0b0:	df000b04 	addi	fp,sp,44
 801e0b4:	e13ffc15 	stw	r4,-16(fp)
 801e0b8:	e17ffd15 	stw	r5,-12(fp)
 801e0bc:	e1bffe15 	stw	r6,-8(fp)
 801e0c0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 801e0c4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 801e0c8:	e0bffd17 	ldw	r2,-12(fp)
 801e0cc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801e0d0:	00003806 	br	801e1b4 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 801e0d4:	e0bffc17 	ldw	r2,-16(fp)
 801e0d8:	10800c17 	ldw	r2,48(r2)
 801e0dc:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 801e0e0:	e0bffc17 	ldw	r2,-16(fp)
 801e0e4:	10800d17 	ldw	r2,52(r2)
 801e0e8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 801e0ec:	e0fff817 	ldw	r3,-32(fp)
 801e0f0:	e0bff517 	ldw	r2,-44(fp)
 801e0f4:	1880062e 	bgeu	r3,r2,801e110 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 801e0f8:	e0fff517 	ldw	r3,-44(fp)
 801e0fc:	e0bff817 	ldw	r2,-32(fp)
 801e100:	1885c83a 	sub	r2,r3,r2
 801e104:	10bfffc4 	addi	r2,r2,-1
 801e108:	e0bff615 	stw	r2,-40(fp)
 801e10c:	00000b06 	br	801e13c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 801e110:	e0bff517 	ldw	r2,-44(fp)
 801e114:	10000526 	beq	r2,zero,801e12c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 801e118:	00c20004 	movi	r3,2048
 801e11c:	e0bff817 	ldw	r2,-32(fp)
 801e120:	1885c83a 	sub	r2,r3,r2
 801e124:	e0bff615 	stw	r2,-40(fp)
 801e128:	00000406 	br	801e13c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 801e12c:	00c1ffc4 	movi	r3,2047
 801e130:	e0bff817 	ldw	r2,-32(fp)
 801e134:	1885c83a 	sub	r2,r3,r2
 801e138:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801e13c:	e0bff617 	ldw	r2,-40(fp)
 801e140:	1000011e 	bne	r2,zero,801e148 <altera_avalon_jtag_uart_write+0xa4>
        break;
 801e144:	00001d06 	br	801e1bc <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 801e148:	e0fffe17 	ldw	r3,-8(fp)
 801e14c:	e0bff617 	ldw	r2,-40(fp)
 801e150:	1880022e 	bgeu	r3,r2,801e15c <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 801e154:	e0bffe17 	ldw	r2,-8(fp)
 801e158:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 801e15c:	e0bff817 	ldw	r2,-32(fp)
 801e160:	10820e04 	addi	r2,r2,2104
 801e164:	e0fffc17 	ldw	r3,-16(fp)
 801e168:	1885883a 	add	r2,r3,r2
 801e16c:	1009883a 	mov	r4,r2
 801e170:	e17ffd17 	ldw	r5,-12(fp)
 801e174:	e1bff617 	ldw	r6,-40(fp)
 801e178:	8016fe00 	call	8016fe0 <memcpy>
      ptr   += n;
 801e17c:	e0fffd17 	ldw	r3,-12(fp)
 801e180:	e0bff617 	ldw	r2,-40(fp)
 801e184:	1885883a 	add	r2,r3,r2
 801e188:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 801e18c:	e0fffe17 	ldw	r3,-8(fp)
 801e190:	e0bff617 	ldw	r2,-40(fp)
 801e194:	1885c83a 	sub	r2,r3,r2
 801e198:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801e19c:	e0fff817 	ldw	r3,-32(fp)
 801e1a0:	e0bff617 	ldw	r2,-40(fp)
 801e1a4:	1885883a 	add	r2,r3,r2
 801e1a8:	10c1ffcc 	andi	r3,r2,2047
 801e1ac:	e0bffc17 	ldw	r2,-16(fp)
 801e1b0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801e1b4:	e0bffe17 	ldw	r2,-8(fp)
 801e1b8:	00bfc616 	blt	zero,r2,801e0d4 <__alt_data_end+0xfc01e0d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e1bc:	0005303a 	rdctl	r2,status
 801e1c0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e1c4:	e0fffa17 	ldw	r3,-24(fp)
 801e1c8:	00bfff84 	movi	r2,-2
 801e1cc:	1884703a 	and	r2,r3,r2
 801e1d0:	1001703a 	wrctl	status,r2
  
  return context;
 801e1d4:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 801e1d8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 801e1dc:	e0bffc17 	ldw	r2,-16(fp)
 801e1e0:	10800817 	ldw	r2,32(r2)
 801e1e4:	10c00094 	ori	r3,r2,2
 801e1e8:	e0bffc17 	ldw	r2,-16(fp)
 801e1ec:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801e1f0:	e0bffc17 	ldw	r2,-16(fp)
 801e1f4:	10800017 	ldw	r2,0(r2)
 801e1f8:	10800104 	addi	r2,r2,4
 801e1fc:	1007883a 	mov	r3,r2
 801e200:	e0bffc17 	ldw	r2,-16(fp)
 801e204:	10800817 	ldw	r2,32(r2)
 801e208:	18800035 	stwio	r2,0(r3)
 801e20c:	e0bff917 	ldw	r2,-28(fp)
 801e210:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e214:	e0bffb17 	ldw	r2,-20(fp)
 801e218:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 801e21c:	e0bffe17 	ldw	r2,-8(fp)
 801e220:	0080120e 	bge	zero,r2,801e26c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 801e224:	e0bfff17 	ldw	r2,-4(fp)
 801e228:	1090000c 	andi	r2,r2,16384
 801e22c:	10000126 	beq	r2,zero,801e234 <altera_avalon_jtag_uart_write+0x190>
        break;
 801e230:	00001006 	br	801e274 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 801e234:	0001883a 	nop
 801e238:	e0bffc17 	ldw	r2,-16(fp)
 801e23c:	10c00d17 	ldw	r3,52(r2)
 801e240:	e0bff517 	ldw	r2,-44(fp)
 801e244:	1880051e 	bne	r3,r2,801e25c <altera_avalon_jtag_uart_write+0x1b8>
 801e248:	e0bffc17 	ldw	r2,-16(fp)
 801e24c:	10c00917 	ldw	r3,36(r2)
 801e250:	e0bffc17 	ldw	r2,-16(fp)
 801e254:	10800117 	ldw	r2,4(r2)
 801e258:	18bff736 	bltu	r3,r2,801e238 <__alt_data_end+0xfc01e238>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 801e25c:	e0bffc17 	ldw	r2,-16(fp)
 801e260:	10800917 	ldw	r2,36(r2)
 801e264:	10000126 	beq	r2,zero,801e26c <altera_avalon_jtag_uart_write+0x1c8>
         break;
 801e268:	00000206 	br	801e274 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 801e26c:	e0bffe17 	ldw	r2,-8(fp)
 801e270:	00bf9716 	blt	zero,r2,801e0d0 <__alt_data_end+0xfc01e0d0>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 801e274:	e0fffd17 	ldw	r3,-12(fp)
 801e278:	e0bff717 	ldw	r2,-36(fp)
 801e27c:	18800426 	beq	r3,r2,801e290 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 801e280:	e0fffd17 	ldw	r3,-12(fp)
 801e284:	e0bff717 	ldw	r2,-36(fp)
 801e288:	1885c83a 	sub	r2,r3,r2
 801e28c:	00000606 	br	801e2a8 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 801e290:	e0bfff17 	ldw	r2,-4(fp)
 801e294:	1090000c 	andi	r2,r2,16384
 801e298:	10000226 	beq	r2,zero,801e2a4 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 801e29c:	00bffd44 	movi	r2,-11
 801e2a0:	00000106 	br	801e2a8 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 801e2a4:	00bffec4 	movi	r2,-5
}
 801e2a8:	e037883a 	mov	sp,fp
 801e2ac:	dfc00117 	ldw	ra,4(sp)
 801e2b0:	df000017 	ldw	fp,0(sp)
 801e2b4:	dec00204 	addi	sp,sp,8
 801e2b8:	f800283a 	ret

0801e2bc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 801e2bc:	defff504 	addi	sp,sp,-44
 801e2c0:	df000a15 	stw	fp,40(sp)
 801e2c4:	df000a04 	addi	fp,sp,40
 801e2c8:	e13ffc15 	stw	r4,-16(fp)
 801e2cc:	e17ffd15 	stw	r5,-12(fp)
 801e2d0:	e1bffe15 	stw	r6,-8(fp)
 801e2d4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 801e2d8:	e03ff615 	stw	zero,-40(fp)
 801e2dc:	008200b4 	movhi	r2,2050
 801e2e0:	10900204 	addi	r2,r2,16392
 801e2e4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 801e2e8:	10003f26 	beq	r2,zero,801e3e8 <alt_alarm_start+0x12c>
  {
    if (alarm)
 801e2ec:	e0bffc17 	ldw	r2,-16(fp)
 801e2f0:	10003b26 	beq	r2,zero,801e3e0 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 801e2f4:	e0bffc17 	ldw	r2,-16(fp)
 801e2f8:	e0fffe17 	ldw	r3,-8(fp)
 801e2fc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 801e300:	e0bffc17 	ldw	r2,-16(fp)
 801e304:	e0ffff17 	ldw	r3,-4(fp)
 801e308:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e30c:	0005303a 	rdctl	r2,status
 801e310:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e314:	e0fff817 	ldw	r3,-32(fp)
 801e318:	00bfff84 	movi	r2,-2
 801e31c:	1884703a 	and	r2,r3,r2
 801e320:	1001703a 	wrctl	status,r2
  
  return context;
 801e324:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 801e328:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 801e32c:	008200b4 	movhi	r2,2050
 801e330:	10900304 	addi	r2,r2,16396
 801e334:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 801e338:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 801e33c:	e0fffd17 	ldw	r3,-12(fp)
 801e340:	e0bff617 	ldw	r2,-40(fp)
 801e344:	1885883a 	add	r2,r3,r2
 801e348:	10c00044 	addi	r3,r2,1
 801e34c:	e0bffc17 	ldw	r2,-16(fp)
 801e350:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 801e354:	e0bffc17 	ldw	r2,-16(fp)
 801e358:	10c00217 	ldw	r3,8(r2)
 801e35c:	e0bff617 	ldw	r2,-40(fp)
 801e360:	1880042e 	bgeu	r3,r2,801e374 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 801e364:	e0bffc17 	ldw	r2,-16(fp)
 801e368:	00c00044 	movi	r3,1
 801e36c:	10c00405 	stb	r3,16(r2)
 801e370:	00000206 	br	801e37c <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 801e374:	e0bffc17 	ldw	r2,-16(fp)
 801e378:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 801e37c:	e0fffc17 	ldw	r3,-16(fp)
 801e380:	008200b4 	movhi	r2,2050
 801e384:	10890604 	addi	r2,r2,9240
 801e388:	e0bff915 	stw	r2,-28(fp)
 801e38c:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801e390:	e0bffa17 	ldw	r2,-24(fp)
 801e394:	e0fff917 	ldw	r3,-28(fp)
 801e398:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801e39c:	e0bff917 	ldw	r2,-28(fp)
 801e3a0:	10c00017 	ldw	r3,0(r2)
 801e3a4:	e0bffa17 	ldw	r2,-24(fp)
 801e3a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801e3ac:	e0bff917 	ldw	r2,-28(fp)
 801e3b0:	10800017 	ldw	r2,0(r2)
 801e3b4:	e0fffa17 	ldw	r3,-24(fp)
 801e3b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801e3bc:	e0bff917 	ldw	r2,-28(fp)
 801e3c0:	e0fffa17 	ldw	r3,-24(fp)
 801e3c4:	10c00015 	stw	r3,0(r2)
 801e3c8:	e0bff717 	ldw	r2,-36(fp)
 801e3cc:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e3d0:	e0bffb17 	ldw	r2,-20(fp)
 801e3d4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 801e3d8:	0005883a 	mov	r2,zero
 801e3dc:	00000306 	br	801e3ec <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 801e3e0:	00bffa84 	movi	r2,-22
 801e3e4:	00000106 	br	801e3ec <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 801e3e8:	00bfde84 	movi	r2,-134
  }
}
 801e3ec:	e037883a 	mov	sp,fp
 801e3f0:	df000017 	ldw	fp,0(sp)
 801e3f4:	dec00104 	addi	sp,sp,4
 801e3f8:	f800283a 	ret

0801e3fc <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 801e3fc:	defffa04 	addi	sp,sp,-24
 801e400:	dfc00515 	stw	ra,20(sp)
 801e404:	df000415 	stw	fp,16(sp)
 801e408:	df000404 	addi	fp,sp,16
 801e40c:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 801e410:	00800244 	movi	r2,9
 801e414:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 801e418:	e13ffd17 	ldw	r4,-12(fp)
 801e41c:	014003f4 	movhi	r5,15
 801e420:	29509004 	addi	r5,r5,16960
 801e424:	8009fe40 	call	8009fe4 <__mulsi3>
 801e428:	0100bef4 	movhi	r4,763
 801e42c:	213c2004 	addi	r4,r4,-3968
 801e430:	100b883a 	mov	r5,r2
 801e434:	8009fd40 	call	8009fd4 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 801e438:	01200034 	movhi	r4,32768
 801e43c:	213fffc4 	addi	r4,r4,-1
 801e440:	100b883a 	mov	r5,r2
 801e444:	8009fd40 	call	8009fd4 <__udivsi3>
 801e448:	e13fff17 	ldw	r4,-4(fp)
 801e44c:	100b883a 	mov	r5,r2
 801e450:	8009fd40 	call	8009fd4 <__udivsi3>
 801e454:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 801e458:	e0bffe17 	ldw	r2,-8(fp)
 801e45c:	10002a26 	beq	r2,zero,801e508 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 801e460:	e03ffc15 	stw	zero,-16(fp)
 801e464:	00001706 	br	801e4c4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 801e468:	00a00034 	movhi	r2,32768
 801e46c:	10bfffc4 	addi	r2,r2,-1
 801e470:	10bfffc4 	addi	r2,r2,-1
 801e474:	103ffe1e 	bne	r2,zero,801e470 <__alt_data_end+0xfc01e470>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 801e478:	e13ffd17 	ldw	r4,-12(fp)
 801e47c:	014003f4 	movhi	r5,15
 801e480:	29509004 	addi	r5,r5,16960
 801e484:	8009fe40 	call	8009fe4 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 801e488:	0100bef4 	movhi	r4,763
 801e48c:	213c2004 	addi	r4,r4,-3968
 801e490:	100b883a 	mov	r5,r2
 801e494:	8009fd40 	call	8009fd4 <__udivsi3>
 801e498:	01200034 	movhi	r4,32768
 801e49c:	213fffc4 	addi	r4,r4,-1
 801e4a0:	100b883a 	mov	r5,r2
 801e4a4:	8009fd40 	call	8009fd4 <__udivsi3>
 801e4a8:	1007883a 	mov	r3,r2
 801e4ac:	e0bfff17 	ldw	r2,-4(fp)
 801e4b0:	10c5c83a 	sub	r2,r2,r3
 801e4b4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 801e4b8:	e0bffc17 	ldw	r2,-16(fp)
 801e4bc:	10800044 	addi	r2,r2,1
 801e4c0:	e0bffc15 	stw	r2,-16(fp)
 801e4c4:	e0fffc17 	ldw	r3,-16(fp)
 801e4c8:	e0bffe17 	ldw	r2,-8(fp)
 801e4cc:	18bfe616 	blt	r3,r2,801e468 <__alt_data_end+0xfc01e468>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 801e4d0:	e13ffd17 	ldw	r4,-12(fp)
 801e4d4:	014003f4 	movhi	r5,15
 801e4d8:	29509004 	addi	r5,r5,16960
 801e4dc:	8009fe40 	call	8009fe4 <__mulsi3>
 801e4e0:	0100bef4 	movhi	r4,763
 801e4e4:	213c2004 	addi	r4,r4,-3968
 801e4e8:	100b883a 	mov	r5,r2
 801e4ec:	8009fd40 	call	8009fd4 <__udivsi3>
 801e4f0:	1009883a 	mov	r4,r2
 801e4f4:	e17fff17 	ldw	r5,-4(fp)
 801e4f8:	8009fe40 	call	8009fe4 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 801e4fc:	10bfffc4 	addi	r2,r2,-1
 801e500:	103ffe1e 	bne	r2,zero,801e4fc <__alt_data_end+0xfc01e4fc>
 801e504:	00000d06 	br	801e53c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 801e508:	e13ffd17 	ldw	r4,-12(fp)
 801e50c:	014003f4 	movhi	r5,15
 801e510:	29509004 	addi	r5,r5,16960
 801e514:	8009fe40 	call	8009fe4 <__mulsi3>
 801e518:	0100bef4 	movhi	r4,763
 801e51c:	213c2004 	addi	r4,r4,-3968
 801e520:	100b883a 	mov	r5,r2
 801e524:	8009fd40 	call	8009fd4 <__udivsi3>
 801e528:	1009883a 	mov	r4,r2
 801e52c:	e17fff17 	ldw	r5,-4(fp)
 801e530:	8009fe40 	call	8009fe4 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 801e534:	10bfffc4 	addi	r2,r2,-1
 801e538:	00bffe16 	blt	zero,r2,801e534 <__alt_data_end+0xfc01e534>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 801e53c:	0005883a 	mov	r2,zero
}
 801e540:	e037883a 	mov	sp,fp
 801e544:	dfc00117 	ldw	ra,4(sp)
 801e548:	df000017 	ldw	fp,0(sp)
 801e54c:	dec00204 	addi	sp,sp,8
 801e550:	f800283a 	ret

0801e554 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 801e554:	deffff04 	addi	sp,sp,-4
 801e558:	df000015 	stw	fp,0(sp)
 801e55c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 801e560:	e037883a 	mov	sp,fp
 801e564:	df000017 	ldw	fp,0(sp)
 801e568:	dec00104 	addi	sp,sp,4
 801e56c:	f800283a 	ret

0801e570 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801e570:	defffe04 	addi	sp,sp,-8
 801e574:	dfc00115 	stw	ra,4(sp)
 801e578:	df000015 	stw	fp,0(sp)
 801e57c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801e580:	008200b4 	movhi	r2,2050
 801e584:	10890304 	addi	r2,r2,9228
 801e588:	10800017 	ldw	r2,0(r2)
 801e58c:	10000526 	beq	r2,zero,801e5a4 <alt_get_errno+0x34>
 801e590:	008200b4 	movhi	r2,2050
 801e594:	10890304 	addi	r2,r2,9228
 801e598:	10800017 	ldw	r2,0(r2)
 801e59c:	103ee83a 	callr	r2
 801e5a0:	00000206 	br	801e5ac <alt_get_errno+0x3c>
 801e5a4:	008200b4 	movhi	r2,2050
 801e5a8:	108ffd04 	addi	r2,r2,16372
}
 801e5ac:	e037883a 	mov	sp,fp
 801e5b0:	dfc00117 	ldw	ra,4(sp)
 801e5b4:	df000017 	ldw	fp,0(sp)
 801e5b8:	dec00204 	addi	sp,sp,8
 801e5bc:	f800283a 	ret

0801e5c0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 801e5c0:	defffa04 	addi	sp,sp,-24
 801e5c4:	dfc00515 	stw	ra,20(sp)
 801e5c8:	df000415 	stw	fp,16(sp)
 801e5cc:	df000404 	addi	fp,sp,16
 801e5d0:	e13ffe15 	stw	r4,-8(fp)
 801e5d4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 801e5d8:	e0bffe17 	ldw	r2,-8(fp)
 801e5dc:	10000326 	beq	r2,zero,801e5ec <alt_dev_llist_insert+0x2c>
 801e5e0:	e0bffe17 	ldw	r2,-8(fp)
 801e5e4:	10800217 	ldw	r2,8(r2)
 801e5e8:	1000061e 	bne	r2,zero,801e604 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 801e5ec:	801e5700 	call	801e570 <alt_get_errno>
 801e5f0:	1007883a 	mov	r3,r2
 801e5f4:	00800584 	movi	r2,22
 801e5f8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 801e5fc:	00bffa84 	movi	r2,-22
 801e600:	00001306 	br	801e650 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 801e604:	e0bffe17 	ldw	r2,-8(fp)
 801e608:	e0ffff17 	ldw	r3,-4(fp)
 801e60c:	e0fffc15 	stw	r3,-16(fp)
 801e610:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801e614:	e0bffd17 	ldw	r2,-12(fp)
 801e618:	e0fffc17 	ldw	r3,-16(fp)
 801e61c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801e620:	e0bffc17 	ldw	r2,-16(fp)
 801e624:	10c00017 	ldw	r3,0(r2)
 801e628:	e0bffd17 	ldw	r2,-12(fp)
 801e62c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801e630:	e0bffc17 	ldw	r2,-16(fp)
 801e634:	10800017 	ldw	r2,0(r2)
 801e638:	e0fffd17 	ldw	r3,-12(fp)
 801e63c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801e640:	e0bffc17 	ldw	r2,-16(fp)
 801e644:	e0fffd17 	ldw	r3,-12(fp)
 801e648:	10c00015 	stw	r3,0(r2)

  return 0;  
 801e64c:	0005883a 	mov	r2,zero
}
 801e650:	e037883a 	mov	sp,fp
 801e654:	dfc00117 	ldw	ra,4(sp)
 801e658:	df000017 	ldw	fp,0(sp)
 801e65c:	dec00204 	addi	sp,sp,8
 801e660:	f800283a 	ret

0801e664 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 801e664:	defffd04 	addi	sp,sp,-12
 801e668:	dfc00215 	stw	ra,8(sp)
 801e66c:	df000115 	stw	fp,4(sp)
 801e670:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 801e674:	008200b4 	movhi	r2,2050
 801e678:	10bd7604 	addi	r2,r2,-2600
 801e67c:	e0bfff15 	stw	r2,-4(fp)
 801e680:	00000606 	br	801e69c <_do_ctors+0x38>
        (*ctor) (); 
 801e684:	e0bfff17 	ldw	r2,-4(fp)
 801e688:	10800017 	ldw	r2,0(r2)
 801e68c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 801e690:	e0bfff17 	ldw	r2,-4(fp)
 801e694:	10bfff04 	addi	r2,r2,-4
 801e698:	e0bfff15 	stw	r2,-4(fp)
 801e69c:	e0ffff17 	ldw	r3,-4(fp)
 801e6a0:	008200b4 	movhi	r2,2050
 801e6a4:	10bd7704 	addi	r2,r2,-2596
 801e6a8:	18bff62e 	bgeu	r3,r2,801e684 <__alt_data_end+0xfc01e684>
        (*ctor) (); 
}
 801e6ac:	e037883a 	mov	sp,fp
 801e6b0:	dfc00117 	ldw	ra,4(sp)
 801e6b4:	df000017 	ldw	fp,0(sp)
 801e6b8:	dec00204 	addi	sp,sp,8
 801e6bc:	f800283a 	ret

0801e6c0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 801e6c0:	defffd04 	addi	sp,sp,-12
 801e6c4:	dfc00215 	stw	ra,8(sp)
 801e6c8:	df000115 	stw	fp,4(sp)
 801e6cc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801e6d0:	008200b4 	movhi	r2,2050
 801e6d4:	10bd7604 	addi	r2,r2,-2600
 801e6d8:	e0bfff15 	stw	r2,-4(fp)
 801e6dc:	00000606 	br	801e6f8 <_do_dtors+0x38>
        (*dtor) (); 
 801e6e0:	e0bfff17 	ldw	r2,-4(fp)
 801e6e4:	10800017 	ldw	r2,0(r2)
 801e6e8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801e6ec:	e0bfff17 	ldw	r2,-4(fp)
 801e6f0:	10bfff04 	addi	r2,r2,-4
 801e6f4:	e0bfff15 	stw	r2,-4(fp)
 801e6f8:	e0ffff17 	ldw	r3,-4(fp)
 801e6fc:	008200b4 	movhi	r2,2050
 801e700:	10bd7704 	addi	r2,r2,-2596
 801e704:	18bff62e 	bgeu	r3,r2,801e6e0 <__alt_data_end+0xfc01e6e0>
        (*dtor) (); 
}
 801e708:	e037883a 	mov	sp,fp
 801e70c:	dfc00117 	ldw	ra,4(sp)
 801e710:	df000017 	ldw	fp,0(sp)
 801e714:	dec00204 	addi	sp,sp,8
 801e718:	f800283a 	ret

0801e71c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 801e71c:	deffff04 	addi	sp,sp,-4
 801e720:	df000015 	stw	fp,0(sp)
 801e724:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 801e728:	e037883a 	mov	sp,fp
 801e72c:	df000017 	ldw	fp,0(sp)
 801e730:	dec00104 	addi	sp,sp,4
 801e734:	f800283a 	ret

0801e738 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 801e738:	defff904 	addi	sp,sp,-28
 801e73c:	dfc00615 	stw	ra,24(sp)
 801e740:	df000515 	stw	fp,20(sp)
 801e744:	df000504 	addi	fp,sp,20
 801e748:	e13ffc15 	stw	r4,-16(fp)
 801e74c:	e17ffd15 	stw	r5,-12(fp)
 801e750:	e1bffe15 	stw	r6,-8(fp)
 801e754:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 801e758:	e0800217 	ldw	r2,8(fp)
 801e75c:	d8800015 	stw	r2,0(sp)
 801e760:	e13ffc17 	ldw	r4,-16(fp)
 801e764:	e17ffd17 	ldw	r5,-12(fp)
 801e768:	e1bffe17 	ldw	r6,-8(fp)
 801e76c:	e1ffff17 	ldw	r7,-4(fp)
 801e770:	801e9180 	call	801e918 <alt_iic_isr_register>
}  
 801e774:	e037883a 	mov	sp,fp
 801e778:	dfc00117 	ldw	ra,4(sp)
 801e77c:	df000017 	ldw	fp,0(sp)
 801e780:	dec00204 	addi	sp,sp,8
 801e784:	f800283a 	ret

0801e788 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 801e788:	defff904 	addi	sp,sp,-28
 801e78c:	df000615 	stw	fp,24(sp)
 801e790:	df000604 	addi	fp,sp,24
 801e794:	e13ffe15 	stw	r4,-8(fp)
 801e798:	e17fff15 	stw	r5,-4(fp)
 801e79c:	e0bfff17 	ldw	r2,-4(fp)
 801e7a0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e7a4:	0005303a 	rdctl	r2,status
 801e7a8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e7ac:	e0fffb17 	ldw	r3,-20(fp)
 801e7b0:	00bfff84 	movi	r2,-2
 801e7b4:	1884703a 	and	r2,r3,r2
 801e7b8:	1001703a 	wrctl	status,r2
  
  return context;
 801e7bc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801e7c0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 801e7c4:	e0bffa17 	ldw	r2,-24(fp)
 801e7c8:	00c00044 	movi	r3,1
 801e7cc:	1884983a 	sll	r2,r3,r2
 801e7d0:	1007883a 	mov	r3,r2
 801e7d4:	008200b4 	movhi	r2,2050
 801e7d8:	10900104 	addi	r2,r2,16388
 801e7dc:	10800017 	ldw	r2,0(r2)
 801e7e0:	1886b03a 	or	r3,r3,r2
 801e7e4:	008200b4 	movhi	r2,2050
 801e7e8:	10900104 	addi	r2,r2,16388
 801e7ec:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801e7f0:	008200b4 	movhi	r2,2050
 801e7f4:	10900104 	addi	r2,r2,16388
 801e7f8:	10800017 	ldw	r2,0(r2)
 801e7fc:	100170fa 	wrctl	ienable,r2
 801e800:	e0bffc17 	ldw	r2,-16(fp)
 801e804:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e808:	e0bffd17 	ldw	r2,-12(fp)
 801e80c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 801e810:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 801e814:	0001883a 	nop
}
 801e818:	e037883a 	mov	sp,fp
 801e81c:	df000017 	ldw	fp,0(sp)
 801e820:	dec00104 	addi	sp,sp,4
 801e824:	f800283a 	ret

0801e828 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 801e828:	defff904 	addi	sp,sp,-28
 801e82c:	df000615 	stw	fp,24(sp)
 801e830:	df000604 	addi	fp,sp,24
 801e834:	e13ffe15 	stw	r4,-8(fp)
 801e838:	e17fff15 	stw	r5,-4(fp)
 801e83c:	e0bfff17 	ldw	r2,-4(fp)
 801e840:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e844:	0005303a 	rdctl	r2,status
 801e848:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e84c:	e0fffb17 	ldw	r3,-20(fp)
 801e850:	00bfff84 	movi	r2,-2
 801e854:	1884703a 	and	r2,r3,r2
 801e858:	1001703a 	wrctl	status,r2
  
  return context;
 801e85c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801e860:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 801e864:	e0bffa17 	ldw	r2,-24(fp)
 801e868:	00c00044 	movi	r3,1
 801e86c:	1884983a 	sll	r2,r3,r2
 801e870:	0084303a 	nor	r2,zero,r2
 801e874:	1007883a 	mov	r3,r2
 801e878:	008200b4 	movhi	r2,2050
 801e87c:	10900104 	addi	r2,r2,16388
 801e880:	10800017 	ldw	r2,0(r2)
 801e884:	1886703a 	and	r3,r3,r2
 801e888:	008200b4 	movhi	r2,2050
 801e88c:	10900104 	addi	r2,r2,16388
 801e890:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801e894:	008200b4 	movhi	r2,2050
 801e898:	10900104 	addi	r2,r2,16388
 801e89c:	10800017 	ldw	r2,0(r2)
 801e8a0:	100170fa 	wrctl	ienable,r2
 801e8a4:	e0bffc17 	ldw	r2,-16(fp)
 801e8a8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e8ac:	e0bffd17 	ldw	r2,-12(fp)
 801e8b0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 801e8b4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 801e8b8:	0001883a 	nop
}
 801e8bc:	e037883a 	mov	sp,fp
 801e8c0:	df000017 	ldw	fp,0(sp)
 801e8c4:	dec00104 	addi	sp,sp,4
 801e8c8:	f800283a 	ret

0801e8cc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 801e8cc:	defffc04 	addi	sp,sp,-16
 801e8d0:	df000315 	stw	fp,12(sp)
 801e8d4:	df000304 	addi	fp,sp,12
 801e8d8:	e13ffe15 	stw	r4,-8(fp)
 801e8dc:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 801e8e0:	000530fa 	rdctl	r2,ienable
 801e8e4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 801e8e8:	e0bfff17 	ldw	r2,-4(fp)
 801e8ec:	00c00044 	movi	r3,1
 801e8f0:	1884983a 	sll	r2,r3,r2
 801e8f4:	1007883a 	mov	r3,r2
 801e8f8:	e0bffd17 	ldw	r2,-12(fp)
 801e8fc:	1884703a 	and	r2,r3,r2
 801e900:	1004c03a 	cmpne	r2,r2,zero
 801e904:	10803fcc 	andi	r2,r2,255
}
 801e908:	e037883a 	mov	sp,fp
 801e90c:	df000017 	ldw	fp,0(sp)
 801e910:	dec00104 	addi	sp,sp,4
 801e914:	f800283a 	ret

0801e918 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 801e918:	defff504 	addi	sp,sp,-44
 801e91c:	dfc00a15 	stw	ra,40(sp)
 801e920:	df000915 	stw	fp,36(sp)
 801e924:	df000904 	addi	fp,sp,36
 801e928:	e13ffc15 	stw	r4,-16(fp)
 801e92c:	e17ffd15 	stw	r5,-12(fp)
 801e930:	e1bffe15 	stw	r6,-8(fp)
 801e934:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 801e938:	00bffa84 	movi	r2,-22
 801e93c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 801e940:	e0bffd17 	ldw	r2,-12(fp)
 801e944:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 801e948:	e0bff817 	ldw	r2,-32(fp)
 801e94c:	10800808 	cmpgei	r2,r2,32
 801e950:	1000271e 	bne	r2,zero,801e9f0 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e954:	0005303a 	rdctl	r2,status
 801e958:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e95c:	e0fffa17 	ldw	r3,-24(fp)
 801e960:	00bfff84 	movi	r2,-2
 801e964:	1884703a 	and	r2,r3,r2
 801e968:	1001703a 	wrctl	status,r2
  
  return context;
 801e96c:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 801e970:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 801e974:	008200f4 	movhi	r2,2051
 801e978:	10a27b04 	addi	r2,r2,-30228
 801e97c:	e0fff817 	ldw	r3,-32(fp)
 801e980:	180690fa 	slli	r3,r3,3
 801e984:	10c5883a 	add	r2,r2,r3
 801e988:	e0fffe17 	ldw	r3,-8(fp)
 801e98c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 801e990:	008200f4 	movhi	r2,2051
 801e994:	10a27b04 	addi	r2,r2,-30228
 801e998:	e0fff817 	ldw	r3,-32(fp)
 801e99c:	180690fa 	slli	r3,r3,3
 801e9a0:	10c5883a 	add	r2,r2,r3
 801e9a4:	10800104 	addi	r2,r2,4
 801e9a8:	e0ffff17 	ldw	r3,-4(fp)
 801e9ac:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 801e9b0:	e0bffe17 	ldw	r2,-8(fp)
 801e9b4:	10000526 	beq	r2,zero,801e9cc <alt_iic_isr_register+0xb4>
 801e9b8:	e0bff817 	ldw	r2,-32(fp)
 801e9bc:	e13ffc17 	ldw	r4,-16(fp)
 801e9c0:	100b883a 	mov	r5,r2
 801e9c4:	801e7880 	call	801e788 <alt_ic_irq_enable>
 801e9c8:	00000406 	br	801e9dc <alt_iic_isr_register+0xc4>
 801e9cc:	e0bff817 	ldw	r2,-32(fp)
 801e9d0:	e13ffc17 	ldw	r4,-16(fp)
 801e9d4:	100b883a 	mov	r5,r2
 801e9d8:	801e8280 	call	801e828 <alt_ic_irq_disable>
 801e9dc:	e0bff715 	stw	r2,-36(fp)
 801e9e0:	e0bff917 	ldw	r2,-28(fp)
 801e9e4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e9e8:	e0bffb17 	ldw	r2,-20(fp)
 801e9ec:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 801e9f0:	e0bff717 	ldw	r2,-36(fp)
}
 801e9f4:	e037883a 	mov	sp,fp
 801e9f8:	dfc00117 	ldw	ra,4(sp)
 801e9fc:	df000017 	ldw	fp,0(sp)
 801ea00:	dec00204 	addi	sp,sp,8
 801ea04:	f800283a 	ret

0801ea08 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 801ea08:	defff804 	addi	sp,sp,-32
 801ea0c:	dfc00715 	stw	ra,28(sp)
 801ea10:	df000615 	stw	fp,24(sp)
 801ea14:	dc000515 	stw	r16,20(sp)
 801ea18:	df000604 	addi	fp,sp,24
 801ea1c:	e13ffb15 	stw	r4,-20(fp)
 801ea20:	e17ffc15 	stw	r5,-16(fp)
 801ea24:	e1bffd15 	stw	r6,-12(fp)
 801ea28:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 801ea2c:	e13ffc17 	ldw	r4,-16(fp)
 801ea30:	e17ffd17 	ldw	r5,-12(fp)
 801ea34:	e1bffe17 	ldw	r6,-8(fp)
 801ea38:	801eca40 	call	801eca4 <open>
 801ea3c:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 801ea40:	e0bffa17 	ldw	r2,-24(fp)
 801ea44:	10002216 	blt	r2,zero,801ead0 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 801ea48:	040200b4 	movhi	r16,2050
 801ea4c:	84047a04 	addi	r16,r16,4584
 801ea50:	e0bffa17 	ldw	r2,-24(fp)
 801ea54:	1009883a 	mov	r4,r2
 801ea58:	01400304 	movi	r5,12
 801ea5c:	8009fe40 	call	8009fe4 <__mulsi3>
 801ea60:	8085883a 	add	r2,r16,r2
 801ea64:	10c00017 	ldw	r3,0(r2)
 801ea68:	e0bffb17 	ldw	r2,-20(fp)
 801ea6c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 801ea70:	040200b4 	movhi	r16,2050
 801ea74:	84047a04 	addi	r16,r16,4584
 801ea78:	e0bffa17 	ldw	r2,-24(fp)
 801ea7c:	1009883a 	mov	r4,r2
 801ea80:	01400304 	movi	r5,12
 801ea84:	8009fe40 	call	8009fe4 <__mulsi3>
 801ea88:	8085883a 	add	r2,r16,r2
 801ea8c:	10800104 	addi	r2,r2,4
 801ea90:	10c00017 	ldw	r3,0(r2)
 801ea94:	e0bffb17 	ldw	r2,-20(fp)
 801ea98:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 801ea9c:	040200b4 	movhi	r16,2050
 801eaa0:	84047a04 	addi	r16,r16,4584
 801eaa4:	e0bffa17 	ldw	r2,-24(fp)
 801eaa8:	1009883a 	mov	r4,r2
 801eaac:	01400304 	movi	r5,12
 801eab0:	8009fe40 	call	8009fe4 <__mulsi3>
 801eab4:	8085883a 	add	r2,r16,r2
 801eab8:	10800204 	addi	r2,r2,8
 801eabc:	10c00017 	ldw	r3,0(r2)
 801eac0:	e0bffb17 	ldw	r2,-20(fp)
 801eac4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 801eac8:	e13ffa17 	ldw	r4,-24(fp)
 801eacc:	801d50c0 	call	801d50c <alt_release_fd>
  }
} 
 801ead0:	e6ffff04 	addi	sp,fp,-4
 801ead4:	dfc00217 	ldw	ra,8(sp)
 801ead8:	df000117 	ldw	fp,4(sp)
 801eadc:	dc000017 	ldw	r16,0(sp)
 801eae0:	dec00304 	addi	sp,sp,12
 801eae4:	f800283a 	ret

0801eae8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 801eae8:	defffb04 	addi	sp,sp,-20
 801eaec:	dfc00415 	stw	ra,16(sp)
 801eaf0:	df000315 	stw	fp,12(sp)
 801eaf4:	df000304 	addi	fp,sp,12
 801eaf8:	e13ffd15 	stw	r4,-12(fp)
 801eafc:	e17ffe15 	stw	r5,-8(fp)
 801eb00:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 801eb04:	010200b4 	movhi	r4,2050
 801eb08:	21047d04 	addi	r4,r4,4596
 801eb0c:	e17ffd17 	ldw	r5,-12(fp)
 801eb10:	01800044 	movi	r6,1
 801eb14:	01c07fc4 	movi	r7,511
 801eb18:	801ea080 	call	801ea08 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 801eb1c:	010200b4 	movhi	r4,2050
 801eb20:	21047a04 	addi	r4,r4,4584
 801eb24:	e17ffe17 	ldw	r5,-8(fp)
 801eb28:	000d883a 	mov	r6,zero
 801eb2c:	01c07fc4 	movi	r7,511
 801eb30:	801ea080 	call	801ea08 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 801eb34:	010200b4 	movhi	r4,2050
 801eb38:	21048004 	addi	r4,r4,4608
 801eb3c:	e17fff17 	ldw	r5,-4(fp)
 801eb40:	01800044 	movi	r6,1
 801eb44:	01c07fc4 	movi	r7,511
 801eb48:	801ea080 	call	801ea08 <alt_open_fd>
}  
 801eb4c:	e037883a 	mov	sp,fp
 801eb50:	dfc00117 	ldw	ra,4(sp)
 801eb54:	df000017 	ldw	fp,0(sp)
 801eb58:	dec00204 	addi	sp,sp,8
 801eb5c:	f800283a 	ret

0801eb60 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801eb60:	defffe04 	addi	sp,sp,-8
 801eb64:	dfc00115 	stw	ra,4(sp)
 801eb68:	df000015 	stw	fp,0(sp)
 801eb6c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801eb70:	008200b4 	movhi	r2,2050
 801eb74:	10890304 	addi	r2,r2,9228
 801eb78:	10800017 	ldw	r2,0(r2)
 801eb7c:	10000526 	beq	r2,zero,801eb94 <alt_get_errno+0x34>
 801eb80:	008200b4 	movhi	r2,2050
 801eb84:	10890304 	addi	r2,r2,9228
 801eb88:	10800017 	ldw	r2,0(r2)
 801eb8c:	103ee83a 	callr	r2
 801eb90:	00000206 	br	801eb9c <alt_get_errno+0x3c>
 801eb94:	008200b4 	movhi	r2,2050
 801eb98:	108ffd04 	addi	r2,r2,16372
}
 801eb9c:	e037883a 	mov	sp,fp
 801eba0:	dfc00117 	ldw	ra,4(sp)
 801eba4:	df000017 	ldw	fp,0(sp)
 801eba8:	dec00204 	addi	sp,sp,8
 801ebac:	f800283a 	ret

0801ebb0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 801ebb0:	defffb04 	addi	sp,sp,-20
 801ebb4:	dfc00415 	stw	ra,16(sp)
 801ebb8:	df000315 	stw	fp,12(sp)
 801ebbc:	dc000215 	stw	r16,8(sp)
 801ebc0:	df000304 	addi	fp,sp,12
 801ebc4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 801ebc8:	e0bffe17 	ldw	r2,-8(fp)
 801ebcc:	10800217 	ldw	r2,8(r2)
 801ebd0:	10d00034 	orhi	r3,r2,16384
 801ebd4:	e0bffe17 	ldw	r2,-8(fp)
 801ebd8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801ebdc:	e03ffd15 	stw	zero,-12(fp)
 801ebe0:	00002306 	br	801ec70 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 801ebe4:	040200b4 	movhi	r16,2050
 801ebe8:	84047a04 	addi	r16,r16,4584
 801ebec:	e0bffd17 	ldw	r2,-12(fp)
 801ebf0:	1009883a 	mov	r4,r2
 801ebf4:	01400304 	movi	r5,12
 801ebf8:	8009fe40 	call	8009fe4 <__mulsi3>
 801ebfc:	8085883a 	add	r2,r16,r2
 801ec00:	10c00017 	ldw	r3,0(r2)
 801ec04:	e0bffe17 	ldw	r2,-8(fp)
 801ec08:	10800017 	ldw	r2,0(r2)
 801ec0c:	1880151e 	bne	r3,r2,801ec64 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 801ec10:	040200b4 	movhi	r16,2050
 801ec14:	84047a04 	addi	r16,r16,4584
 801ec18:	e0bffd17 	ldw	r2,-12(fp)
 801ec1c:	1009883a 	mov	r4,r2
 801ec20:	01400304 	movi	r5,12
 801ec24:	8009fe40 	call	8009fe4 <__mulsi3>
 801ec28:	8085883a 	add	r2,r16,r2
 801ec2c:	10800204 	addi	r2,r2,8
 801ec30:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 801ec34:	10000b0e 	bge	r2,zero,801ec64 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 801ec38:	e13ffd17 	ldw	r4,-12(fp)
 801ec3c:	01400304 	movi	r5,12
 801ec40:	8009fe40 	call	8009fe4 <__mulsi3>
 801ec44:	1007883a 	mov	r3,r2
 801ec48:	008200b4 	movhi	r2,2050
 801ec4c:	10847a04 	addi	r2,r2,4584
 801ec50:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 801ec54:	e0bffe17 	ldw	r2,-8(fp)
 801ec58:	18800226 	beq	r3,r2,801ec64 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 801ec5c:	00bffcc4 	movi	r2,-13
 801ec60:	00000a06 	br	801ec8c <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801ec64:	e0bffd17 	ldw	r2,-12(fp)
 801ec68:	10800044 	addi	r2,r2,1
 801ec6c:	e0bffd15 	stw	r2,-12(fp)
 801ec70:	008200b4 	movhi	r2,2050
 801ec74:	10890204 	addi	r2,r2,9224
 801ec78:	10800017 	ldw	r2,0(r2)
 801ec7c:	1007883a 	mov	r3,r2
 801ec80:	e0bffd17 	ldw	r2,-12(fp)
 801ec84:	18bfd72e 	bgeu	r3,r2,801ebe4 <__alt_data_end+0xfc01ebe4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 801ec88:	0005883a 	mov	r2,zero
}
 801ec8c:	e6ffff04 	addi	sp,fp,-4
 801ec90:	dfc00217 	ldw	ra,8(sp)
 801ec94:	df000117 	ldw	fp,4(sp)
 801ec98:	dc000017 	ldw	r16,0(sp)
 801ec9c:	dec00304 	addi	sp,sp,12
 801eca0:	f800283a 	ret

0801eca4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 801eca4:	defff604 	addi	sp,sp,-40
 801eca8:	dfc00915 	stw	ra,36(sp)
 801ecac:	df000815 	stw	fp,32(sp)
 801ecb0:	df000804 	addi	fp,sp,32
 801ecb4:	e13ffd15 	stw	r4,-12(fp)
 801ecb8:	e17ffe15 	stw	r5,-8(fp)
 801ecbc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 801ecc0:	00bfffc4 	movi	r2,-1
 801ecc4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 801ecc8:	00bffb44 	movi	r2,-19
 801eccc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 801ecd0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 801ecd4:	e13ffd17 	ldw	r4,-12(fp)
 801ecd8:	014200b4 	movhi	r5,2050
 801ecdc:	29490004 	addi	r5,r5,9216
 801ece0:	801efc00 	call	801efc0 <alt_find_dev>
 801ece4:	e0bff815 	stw	r2,-32(fp)
 801ece8:	e0bff817 	ldw	r2,-32(fp)
 801ecec:	1000051e 	bne	r2,zero,801ed04 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 801ecf0:	e13ffd17 	ldw	r4,-12(fp)
 801ecf4:	801f0500 	call	801f050 <alt_find_file>
 801ecf8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 801ecfc:	00800044 	movi	r2,1
 801ed00:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 801ed04:	e0bff817 	ldw	r2,-32(fp)
 801ed08:	10002b26 	beq	r2,zero,801edb8 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 801ed0c:	e13ff817 	ldw	r4,-32(fp)
 801ed10:	801f1640 	call	801f164 <alt_get_fd>
 801ed14:	e0bff915 	stw	r2,-28(fp)
 801ed18:	e0bff917 	ldw	r2,-28(fp)
 801ed1c:	1000030e 	bge	r2,zero,801ed2c <open+0x88>
    {
      status = index;
 801ed20:	e0bff917 	ldw	r2,-28(fp)
 801ed24:	e0bffa15 	stw	r2,-24(fp)
 801ed28:	00002506 	br	801edc0 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 801ed2c:	e13ff917 	ldw	r4,-28(fp)
 801ed30:	01400304 	movi	r5,12
 801ed34:	8009fe40 	call	8009fe4 <__mulsi3>
 801ed38:	1007883a 	mov	r3,r2
 801ed3c:	008200b4 	movhi	r2,2050
 801ed40:	10847a04 	addi	r2,r2,4584
 801ed44:	1885883a 	add	r2,r3,r2
 801ed48:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 801ed4c:	e0fffe17 	ldw	r3,-8(fp)
 801ed50:	00900034 	movhi	r2,16384
 801ed54:	10bfffc4 	addi	r2,r2,-1
 801ed58:	1886703a 	and	r3,r3,r2
 801ed5c:	e0bffc17 	ldw	r2,-16(fp)
 801ed60:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 801ed64:	e0bffb17 	ldw	r2,-20(fp)
 801ed68:	1000051e 	bne	r2,zero,801ed80 <open+0xdc>
 801ed6c:	e13ffc17 	ldw	r4,-16(fp)
 801ed70:	801ebb00 	call	801ebb0 <alt_file_locked>
 801ed74:	e0bffa15 	stw	r2,-24(fp)
 801ed78:	e0bffa17 	ldw	r2,-24(fp)
 801ed7c:	10001016 	blt	r2,zero,801edc0 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 801ed80:	e0bff817 	ldw	r2,-32(fp)
 801ed84:	10800317 	ldw	r2,12(r2)
 801ed88:	10000826 	beq	r2,zero,801edac <open+0x108>
 801ed8c:	e0bff817 	ldw	r2,-32(fp)
 801ed90:	10800317 	ldw	r2,12(r2)
 801ed94:	e13ffc17 	ldw	r4,-16(fp)
 801ed98:	e17ffd17 	ldw	r5,-12(fp)
 801ed9c:	e1bffe17 	ldw	r6,-8(fp)
 801eda0:	e1ffff17 	ldw	r7,-4(fp)
 801eda4:	103ee83a 	callr	r2
 801eda8:	00000106 	br	801edb0 <open+0x10c>
 801edac:	0005883a 	mov	r2,zero
 801edb0:	e0bffa15 	stw	r2,-24(fp)
 801edb4:	00000206 	br	801edc0 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 801edb8:	00bffb44 	movi	r2,-19
 801edbc:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 801edc0:	e0bffa17 	ldw	r2,-24(fp)
 801edc4:	1000090e 	bge	r2,zero,801edec <open+0x148>
  {
    alt_release_fd (index);  
 801edc8:	e13ff917 	ldw	r4,-28(fp)
 801edcc:	801d50c0 	call	801d50c <alt_release_fd>
    ALT_ERRNO = -status;
 801edd0:	801eb600 	call	801eb60 <alt_get_errno>
 801edd4:	1007883a 	mov	r3,r2
 801edd8:	e0bffa17 	ldw	r2,-24(fp)
 801eddc:	0085c83a 	sub	r2,zero,r2
 801ede0:	18800015 	stw	r2,0(r3)
    return -1;
 801ede4:	00bfffc4 	movi	r2,-1
 801ede8:	00000106 	br	801edf0 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 801edec:	e0bff917 	ldw	r2,-28(fp)
}
 801edf0:	e037883a 	mov	sp,fp
 801edf4:	dfc00117 	ldw	ra,4(sp)
 801edf8:	df000017 	ldw	fp,0(sp)
 801edfc:	dec00204 	addi	sp,sp,8
 801ee00:	f800283a 	ret

0801ee04 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 801ee04:	defffa04 	addi	sp,sp,-24
 801ee08:	df000515 	stw	fp,20(sp)
 801ee0c:	df000504 	addi	fp,sp,20
 801ee10:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801ee14:	0005303a 	rdctl	r2,status
 801ee18:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801ee1c:	e0fffc17 	ldw	r3,-16(fp)
 801ee20:	00bfff84 	movi	r2,-2
 801ee24:	1884703a 	and	r2,r3,r2
 801ee28:	1001703a 	wrctl	status,r2
  
  return context;
 801ee2c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 801ee30:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 801ee34:	e0bfff17 	ldw	r2,-4(fp)
 801ee38:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 801ee3c:	e0bffd17 	ldw	r2,-12(fp)
 801ee40:	10800017 	ldw	r2,0(r2)
 801ee44:	e0fffd17 	ldw	r3,-12(fp)
 801ee48:	18c00117 	ldw	r3,4(r3)
 801ee4c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 801ee50:	e0bffd17 	ldw	r2,-12(fp)
 801ee54:	10800117 	ldw	r2,4(r2)
 801ee58:	e0fffd17 	ldw	r3,-12(fp)
 801ee5c:	18c00017 	ldw	r3,0(r3)
 801ee60:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 801ee64:	e0bffd17 	ldw	r2,-12(fp)
 801ee68:	e0fffd17 	ldw	r3,-12(fp)
 801ee6c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 801ee70:	e0bffd17 	ldw	r2,-12(fp)
 801ee74:	e0fffd17 	ldw	r3,-12(fp)
 801ee78:	10c00015 	stw	r3,0(r2)
 801ee7c:	e0bffb17 	ldw	r2,-20(fp)
 801ee80:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801ee84:	e0bffe17 	ldw	r2,-8(fp)
 801ee88:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 801ee8c:	e037883a 	mov	sp,fp
 801ee90:	df000017 	ldw	fp,0(sp)
 801ee94:	dec00104 	addi	sp,sp,4
 801ee98:	f800283a 	ret

0801ee9c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 801ee9c:	defffb04 	addi	sp,sp,-20
 801eea0:	dfc00415 	stw	ra,16(sp)
 801eea4:	df000315 	stw	fp,12(sp)
 801eea8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 801eeac:	d0a01417 	ldw	r2,-32688(gp)
 801eeb0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 801eeb4:	d0a71117 	ldw	r2,-25532(gp)
 801eeb8:	10800044 	addi	r2,r2,1
 801eebc:	d0a71115 	stw	r2,-25532(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 801eec0:	00002e06 	br	801ef7c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 801eec4:	e0bffd17 	ldw	r2,-12(fp)
 801eec8:	10800017 	ldw	r2,0(r2)
 801eecc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 801eed0:	e0bffd17 	ldw	r2,-12(fp)
 801eed4:	10800403 	ldbu	r2,16(r2)
 801eed8:	10803fcc 	andi	r2,r2,255
 801eedc:	10000426 	beq	r2,zero,801eef0 <alt_tick+0x54>
 801eee0:	d0a71117 	ldw	r2,-25532(gp)
 801eee4:	1000021e 	bne	r2,zero,801eef0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 801eee8:	e0bffd17 	ldw	r2,-12(fp)
 801eeec:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 801eef0:	e0bffd17 	ldw	r2,-12(fp)
 801eef4:	10800217 	ldw	r2,8(r2)
 801eef8:	d0e71117 	ldw	r3,-25532(gp)
 801eefc:	18801d36 	bltu	r3,r2,801ef74 <alt_tick+0xd8>
 801ef00:	e0bffd17 	ldw	r2,-12(fp)
 801ef04:	10800403 	ldbu	r2,16(r2)
 801ef08:	10803fcc 	andi	r2,r2,255
 801ef0c:	1000191e 	bne	r2,zero,801ef74 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 801ef10:	e0bffd17 	ldw	r2,-12(fp)
 801ef14:	10800317 	ldw	r2,12(r2)
 801ef18:	e0fffd17 	ldw	r3,-12(fp)
 801ef1c:	18c00517 	ldw	r3,20(r3)
 801ef20:	1809883a 	mov	r4,r3
 801ef24:	103ee83a 	callr	r2
 801ef28:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 801ef2c:	e0bfff17 	ldw	r2,-4(fp)
 801ef30:	1000031e 	bne	r2,zero,801ef40 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 801ef34:	e13ffd17 	ldw	r4,-12(fp)
 801ef38:	801ee040 	call	801ee04 <alt_alarm_stop>
 801ef3c:	00000d06 	br	801ef74 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 801ef40:	e0bffd17 	ldw	r2,-12(fp)
 801ef44:	10c00217 	ldw	r3,8(r2)
 801ef48:	e0bfff17 	ldw	r2,-4(fp)
 801ef4c:	1887883a 	add	r3,r3,r2
 801ef50:	e0bffd17 	ldw	r2,-12(fp)
 801ef54:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 801ef58:	e0bffd17 	ldw	r2,-12(fp)
 801ef5c:	10c00217 	ldw	r3,8(r2)
 801ef60:	d0a71117 	ldw	r2,-25532(gp)
 801ef64:	1880032e 	bgeu	r3,r2,801ef74 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 801ef68:	e0bffd17 	ldw	r2,-12(fp)
 801ef6c:	00c00044 	movi	r3,1
 801ef70:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 801ef74:	e0bffe17 	ldw	r2,-8(fp)
 801ef78:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 801ef7c:	e0fffd17 	ldw	r3,-12(fp)
 801ef80:	d0a01404 	addi	r2,gp,-32688
 801ef84:	18bfcf1e 	bne	r3,r2,801eec4 <__alt_data_end+0xfc01eec4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 801ef88:	0001883a 	nop
}
 801ef8c:	e037883a 	mov	sp,fp
 801ef90:	dfc00117 	ldw	ra,4(sp)
 801ef94:	df000017 	ldw	fp,0(sp)
 801ef98:	dec00204 	addi	sp,sp,8
 801ef9c:	f800283a 	ret

0801efa0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 801efa0:	deffff04 	addi	sp,sp,-4
 801efa4:	df000015 	stw	fp,0(sp)
 801efa8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 801efac:	000170fa 	wrctl	ienable,zero
}
 801efb0:	e037883a 	mov	sp,fp
 801efb4:	df000017 	ldw	fp,0(sp)
 801efb8:	dec00104 	addi	sp,sp,4
 801efbc:	f800283a 	ret

0801efc0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 801efc0:	defffa04 	addi	sp,sp,-24
 801efc4:	dfc00515 	stw	ra,20(sp)
 801efc8:	df000415 	stw	fp,16(sp)
 801efcc:	df000404 	addi	fp,sp,16
 801efd0:	e13ffe15 	stw	r4,-8(fp)
 801efd4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 801efd8:	e0bfff17 	ldw	r2,-4(fp)
 801efdc:	10800017 	ldw	r2,0(r2)
 801efe0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 801efe4:	e13ffe17 	ldw	r4,-8(fp)
 801efe8:	800d1b80 	call	800d1b8 <strlen>
 801efec:	10800044 	addi	r2,r2,1
 801eff0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 801eff4:	00000d06 	br	801f02c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 801eff8:	e0bffc17 	ldw	r2,-16(fp)
 801effc:	10c00217 	ldw	r3,8(r2)
 801f000:	e0bffd17 	ldw	r2,-12(fp)
 801f004:	1809883a 	mov	r4,r3
 801f008:	e17ffe17 	ldw	r5,-8(fp)
 801f00c:	100d883a 	mov	r6,r2
 801f010:	801f2840 	call	801f284 <memcmp>
 801f014:	1000021e 	bne	r2,zero,801f020 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 801f018:	e0bffc17 	ldw	r2,-16(fp)
 801f01c:	00000706 	br	801f03c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 801f020:	e0bffc17 	ldw	r2,-16(fp)
 801f024:	10800017 	ldw	r2,0(r2)
 801f028:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 801f02c:	e0fffc17 	ldw	r3,-16(fp)
 801f030:	e0bfff17 	ldw	r2,-4(fp)
 801f034:	18bff01e 	bne	r3,r2,801eff8 <__alt_data_end+0xfc01eff8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 801f038:	0005883a 	mov	r2,zero
}
 801f03c:	e037883a 	mov	sp,fp
 801f040:	dfc00117 	ldw	ra,4(sp)
 801f044:	df000017 	ldw	fp,0(sp)
 801f048:	dec00204 	addi	sp,sp,8
 801f04c:	f800283a 	ret

0801f050 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 801f050:	defffb04 	addi	sp,sp,-20
 801f054:	dfc00415 	stw	ra,16(sp)
 801f058:	df000315 	stw	fp,12(sp)
 801f05c:	df000304 	addi	fp,sp,12
 801f060:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 801f064:	008200b4 	movhi	r2,2050
 801f068:	1088fe04 	addi	r2,r2,9208
 801f06c:	10800017 	ldw	r2,0(r2)
 801f070:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801f074:	00003106 	br	801f13c <alt_find_file+0xec>
  {
    len = strlen(next->name);
 801f078:	e0bffd17 	ldw	r2,-12(fp)
 801f07c:	10800217 	ldw	r2,8(r2)
 801f080:	1009883a 	mov	r4,r2
 801f084:	800d1b80 	call	800d1b8 <strlen>
 801f088:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 801f08c:	e0bffd17 	ldw	r2,-12(fp)
 801f090:	10c00217 	ldw	r3,8(r2)
 801f094:	e0bffe17 	ldw	r2,-8(fp)
 801f098:	10bfffc4 	addi	r2,r2,-1
 801f09c:	1885883a 	add	r2,r3,r2
 801f0a0:	10800003 	ldbu	r2,0(r2)
 801f0a4:	10803fcc 	andi	r2,r2,255
 801f0a8:	1080201c 	xori	r2,r2,128
 801f0ac:	10bfe004 	addi	r2,r2,-128
 801f0b0:	10800bd8 	cmpnei	r2,r2,47
 801f0b4:	1000031e 	bne	r2,zero,801f0c4 <alt_find_file+0x74>
    {
      len -= 1;
 801f0b8:	e0bffe17 	ldw	r2,-8(fp)
 801f0bc:	10bfffc4 	addi	r2,r2,-1
 801f0c0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801f0c4:	e0bffe17 	ldw	r2,-8(fp)
 801f0c8:	e0ffff17 	ldw	r3,-4(fp)
 801f0cc:	1885883a 	add	r2,r3,r2
 801f0d0:	10800003 	ldbu	r2,0(r2)
 801f0d4:	10803fcc 	andi	r2,r2,255
 801f0d8:	1080201c 	xori	r2,r2,128
 801f0dc:	10bfe004 	addi	r2,r2,-128
 801f0e0:	10800be0 	cmpeqi	r2,r2,47
 801f0e4:	1000081e 	bne	r2,zero,801f108 <alt_find_file+0xb8>
 801f0e8:	e0bffe17 	ldw	r2,-8(fp)
 801f0ec:	e0ffff17 	ldw	r3,-4(fp)
 801f0f0:	1885883a 	add	r2,r3,r2
 801f0f4:	10800003 	ldbu	r2,0(r2)
 801f0f8:	10803fcc 	andi	r2,r2,255
 801f0fc:	1080201c 	xori	r2,r2,128
 801f100:	10bfe004 	addi	r2,r2,-128
 801f104:	10000a1e 	bne	r2,zero,801f130 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 801f108:	e0bffd17 	ldw	r2,-12(fp)
 801f10c:	10c00217 	ldw	r3,8(r2)
 801f110:	e0bffe17 	ldw	r2,-8(fp)
 801f114:	1809883a 	mov	r4,r3
 801f118:	e17fff17 	ldw	r5,-4(fp)
 801f11c:	100d883a 	mov	r6,r2
 801f120:	801f2840 	call	801f284 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801f124:	1000021e 	bne	r2,zero,801f130 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 801f128:	e0bffd17 	ldw	r2,-12(fp)
 801f12c:	00000806 	br	801f150 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 801f130:	e0bffd17 	ldw	r2,-12(fp)
 801f134:	10800017 	ldw	r2,0(r2)
 801f138:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801f13c:	e0fffd17 	ldw	r3,-12(fp)
 801f140:	008200b4 	movhi	r2,2050
 801f144:	1088fe04 	addi	r2,r2,9208
 801f148:	18bfcb1e 	bne	r3,r2,801f078 <__alt_data_end+0xfc01f078>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 801f14c:	0005883a 	mov	r2,zero
}
 801f150:	e037883a 	mov	sp,fp
 801f154:	dfc00117 	ldw	ra,4(sp)
 801f158:	df000017 	ldw	fp,0(sp)
 801f15c:	dec00204 	addi	sp,sp,8
 801f160:	f800283a 	ret

0801f164 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 801f164:	defffa04 	addi	sp,sp,-24
 801f168:	dfc00515 	stw	ra,20(sp)
 801f16c:	df000415 	stw	fp,16(sp)
 801f170:	dc000315 	stw	r16,12(sp)
 801f174:	df000404 	addi	fp,sp,16
 801f178:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 801f17c:	00bffa04 	movi	r2,-24
 801f180:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801f184:	e03ffc15 	stw	zero,-16(fp)
 801f188:	00002106 	br	801f210 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 801f18c:	040200b4 	movhi	r16,2050
 801f190:	84047a04 	addi	r16,r16,4584
 801f194:	e0bffc17 	ldw	r2,-16(fp)
 801f198:	1009883a 	mov	r4,r2
 801f19c:	01400304 	movi	r5,12
 801f1a0:	8009fe40 	call	8009fe4 <__mulsi3>
 801f1a4:	8085883a 	add	r2,r16,r2
 801f1a8:	10800017 	ldw	r2,0(r2)
 801f1ac:	1000151e 	bne	r2,zero,801f204 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 801f1b0:	040200b4 	movhi	r16,2050
 801f1b4:	84047a04 	addi	r16,r16,4584
 801f1b8:	e0bffc17 	ldw	r2,-16(fp)
 801f1bc:	1009883a 	mov	r4,r2
 801f1c0:	01400304 	movi	r5,12
 801f1c4:	8009fe40 	call	8009fe4 <__mulsi3>
 801f1c8:	8085883a 	add	r2,r16,r2
 801f1cc:	e0fffe17 	ldw	r3,-8(fp)
 801f1d0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 801f1d4:	008200b4 	movhi	r2,2050
 801f1d8:	10890204 	addi	r2,r2,9224
 801f1dc:	10c00017 	ldw	r3,0(r2)
 801f1e0:	e0bffc17 	ldw	r2,-16(fp)
 801f1e4:	1880040e 	bge	r3,r2,801f1f8 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 801f1e8:	008200b4 	movhi	r2,2050
 801f1ec:	10890204 	addi	r2,r2,9224
 801f1f0:	e0fffc17 	ldw	r3,-16(fp)
 801f1f4:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 801f1f8:	e0bffc17 	ldw	r2,-16(fp)
 801f1fc:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 801f200:	00000606 	br	801f21c <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801f204:	e0bffc17 	ldw	r2,-16(fp)
 801f208:	10800044 	addi	r2,r2,1
 801f20c:	e0bffc15 	stw	r2,-16(fp)
 801f210:	e0bffc17 	ldw	r2,-16(fp)
 801f214:	10800810 	cmplti	r2,r2,32
 801f218:	103fdc1e 	bne	r2,zero,801f18c <__alt_data_end+0xfc01f18c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 801f21c:	e0bffd17 	ldw	r2,-12(fp)
}
 801f220:	e6ffff04 	addi	sp,fp,-4
 801f224:	dfc00217 	ldw	ra,8(sp)
 801f228:	df000117 	ldw	fp,4(sp)
 801f22c:	dc000017 	ldw	r16,0(sp)
 801f230:	dec00304 	addi	sp,sp,12
 801f234:	f800283a 	ret

0801f238 <atexit>:
 801f238:	200b883a 	mov	r5,r4
 801f23c:	000d883a 	mov	r6,zero
 801f240:	0009883a 	mov	r4,zero
 801f244:	000f883a 	mov	r7,zero
 801f248:	801f3001 	jmpi	801f300 <__register_exitproc>

0801f24c <exit>:
 801f24c:	defffe04 	addi	sp,sp,-8
 801f250:	000b883a 	mov	r5,zero
 801f254:	dc000015 	stw	r16,0(sp)
 801f258:	dfc00115 	stw	ra,4(sp)
 801f25c:	2021883a 	mov	r16,r4
 801f260:	801f4140 	call	801f414 <__call_exitprocs>
 801f264:	008200b4 	movhi	r2,2050
 801f268:	1088f704 	addi	r2,r2,9180
 801f26c:	11000017 	ldw	r4,0(r2)
 801f270:	20800f17 	ldw	r2,60(r4)
 801f274:	10000126 	beq	r2,zero,801f27c <exit+0x30>
 801f278:	103ee83a 	callr	r2
 801f27c:	8009883a 	mov	r4,r16
 801f280:	801f5a80 	call	801f5a8 <_exit>

0801f284 <memcmp>:
 801f284:	01c000c4 	movi	r7,3
 801f288:	3980192e 	bgeu	r7,r6,801f2f0 <memcmp+0x6c>
 801f28c:	2144b03a 	or	r2,r4,r5
 801f290:	11c4703a 	and	r2,r2,r7
 801f294:	10000f26 	beq	r2,zero,801f2d4 <memcmp+0x50>
 801f298:	20800003 	ldbu	r2,0(r4)
 801f29c:	28c00003 	ldbu	r3,0(r5)
 801f2a0:	10c0151e 	bne	r2,r3,801f2f8 <memcmp+0x74>
 801f2a4:	31bfff84 	addi	r6,r6,-2
 801f2a8:	01ffffc4 	movi	r7,-1
 801f2ac:	00000406 	br	801f2c0 <memcmp+0x3c>
 801f2b0:	20800003 	ldbu	r2,0(r4)
 801f2b4:	28c00003 	ldbu	r3,0(r5)
 801f2b8:	31bfffc4 	addi	r6,r6,-1
 801f2bc:	10c00e1e 	bne	r2,r3,801f2f8 <memcmp+0x74>
 801f2c0:	21000044 	addi	r4,r4,1
 801f2c4:	29400044 	addi	r5,r5,1
 801f2c8:	31fff91e 	bne	r6,r7,801f2b0 <__alt_data_end+0xfc01f2b0>
 801f2cc:	0005883a 	mov	r2,zero
 801f2d0:	f800283a 	ret
 801f2d4:	20c00017 	ldw	r3,0(r4)
 801f2d8:	28800017 	ldw	r2,0(r5)
 801f2dc:	1880041e 	bne	r3,r2,801f2f0 <memcmp+0x6c>
 801f2e0:	31bfff04 	addi	r6,r6,-4
 801f2e4:	21000104 	addi	r4,r4,4
 801f2e8:	29400104 	addi	r5,r5,4
 801f2ec:	39bff936 	bltu	r7,r6,801f2d4 <__alt_data_end+0xfc01f2d4>
 801f2f0:	303fe91e 	bne	r6,zero,801f298 <__alt_data_end+0xfc01f298>
 801f2f4:	003ff506 	br	801f2cc <__alt_data_end+0xfc01f2cc>
 801f2f8:	10c5c83a 	sub	r2,r2,r3
 801f2fc:	f800283a 	ret

0801f300 <__register_exitproc>:
 801f300:	008200b4 	movhi	r2,2050
 801f304:	defffa04 	addi	sp,sp,-24
 801f308:	1088f704 	addi	r2,r2,9180
 801f30c:	dc000315 	stw	r16,12(sp)
 801f310:	14000017 	ldw	r16,0(r2)
 801f314:	dc400415 	stw	r17,16(sp)
 801f318:	dfc00515 	stw	ra,20(sp)
 801f31c:	80805217 	ldw	r2,328(r16)
 801f320:	2023883a 	mov	r17,r4
 801f324:	10003626 	beq	r2,zero,801f400 <__register_exitproc+0x100>
 801f328:	10c00117 	ldw	r3,4(r2)
 801f32c:	010007c4 	movi	r4,31
 801f330:	20c00e16 	blt	r4,r3,801f36c <__register_exitproc+0x6c>
 801f334:	1a400044 	addi	r9,r3,1
 801f338:	8800211e 	bne	r17,zero,801f3c0 <__register_exitproc+0xc0>
 801f33c:	18c00084 	addi	r3,r3,2
 801f340:	18c7883a 	add	r3,r3,r3
 801f344:	18c7883a 	add	r3,r3,r3
 801f348:	12400115 	stw	r9,4(r2)
 801f34c:	10c7883a 	add	r3,r2,r3
 801f350:	19400015 	stw	r5,0(r3)
 801f354:	0005883a 	mov	r2,zero
 801f358:	dfc00517 	ldw	ra,20(sp)
 801f35c:	dc400417 	ldw	r17,16(sp)
 801f360:	dc000317 	ldw	r16,12(sp)
 801f364:	dec00604 	addi	sp,sp,24
 801f368:	f800283a 	ret
 801f36c:	00800034 	movhi	r2,0
 801f370:	10800004 	addi	r2,r2,0
 801f374:	10002526 	beq	r2,zero,801f40c <__register_exitproc+0x10c>
 801f378:	01006404 	movi	r4,400
 801f37c:	d9400015 	stw	r5,0(sp)
 801f380:	d9800115 	stw	r6,4(sp)
 801f384:	d9c00215 	stw	r7,8(sp)
 801f388:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 801f38c:	d9400017 	ldw	r5,0(sp)
 801f390:	d9800117 	ldw	r6,4(sp)
 801f394:	d9c00217 	ldw	r7,8(sp)
 801f398:	10001c26 	beq	r2,zero,801f40c <__register_exitproc+0x10c>
 801f39c:	80c05217 	ldw	r3,328(r16)
 801f3a0:	10000115 	stw	zero,4(r2)
 801f3a4:	02400044 	movi	r9,1
 801f3a8:	10c00015 	stw	r3,0(r2)
 801f3ac:	80805215 	stw	r2,328(r16)
 801f3b0:	10006215 	stw	zero,392(r2)
 801f3b4:	10006315 	stw	zero,396(r2)
 801f3b8:	0007883a 	mov	r3,zero
 801f3bc:	883fdf26 	beq	r17,zero,801f33c <__alt_data_end+0xfc01f33c>
 801f3c0:	18d1883a 	add	r8,r3,r3
 801f3c4:	4211883a 	add	r8,r8,r8
 801f3c8:	1211883a 	add	r8,r2,r8
 801f3cc:	41802215 	stw	r6,136(r8)
 801f3d0:	01000044 	movi	r4,1
 801f3d4:	11806217 	ldw	r6,392(r2)
 801f3d8:	20c8983a 	sll	r4,r4,r3
 801f3dc:	310cb03a 	or	r6,r6,r4
 801f3e0:	11806215 	stw	r6,392(r2)
 801f3e4:	41c04215 	stw	r7,264(r8)
 801f3e8:	01800084 	movi	r6,2
 801f3ec:	89bfd31e 	bne	r17,r6,801f33c <__alt_data_end+0xfc01f33c>
 801f3f0:	11806317 	ldw	r6,396(r2)
 801f3f4:	3108b03a 	or	r4,r6,r4
 801f3f8:	11006315 	stw	r4,396(r2)
 801f3fc:	003fcf06 	br	801f33c <__alt_data_end+0xfc01f33c>
 801f400:	80805304 	addi	r2,r16,332
 801f404:	80805215 	stw	r2,328(r16)
 801f408:	003fc706 	br	801f328 <__alt_data_end+0xfc01f328>
 801f40c:	00bfffc4 	movi	r2,-1
 801f410:	003fd106 	br	801f358 <__alt_data_end+0xfc01f358>

0801f414 <__call_exitprocs>:
 801f414:	008200b4 	movhi	r2,2050
 801f418:	1088f704 	addi	r2,r2,9180
 801f41c:	10800017 	ldw	r2,0(r2)
 801f420:	defff404 	addi	sp,sp,-48
 801f424:	dd800815 	stw	r22,32(sp)
 801f428:	d8800015 	stw	r2,0(sp)
 801f42c:	10805204 	addi	r2,r2,328
 801f430:	dd000615 	stw	r20,24(sp)
 801f434:	dc800415 	stw	r18,16(sp)
 801f438:	dfc00b15 	stw	ra,44(sp)
 801f43c:	df000a15 	stw	fp,40(sp)
 801f440:	ddc00915 	stw	r23,36(sp)
 801f444:	dd400715 	stw	r21,28(sp)
 801f448:	dcc00515 	stw	r19,20(sp)
 801f44c:	dc400315 	stw	r17,12(sp)
 801f450:	dc000215 	stw	r16,8(sp)
 801f454:	2025883a 	mov	r18,r4
 801f458:	2829883a 	mov	r20,r5
 801f45c:	d8800115 	stw	r2,4(sp)
 801f460:	05bfffc4 	movi	r22,-1
 801f464:	d8800017 	ldw	r2,0(sp)
 801f468:	14c05217 	ldw	r19,328(r2)
 801f46c:	98001d26 	beq	r19,zero,801f4e4 <__call_exitprocs+0xd0>
 801f470:	dd400117 	ldw	r21,4(sp)
 801f474:	98800117 	ldw	r2,4(r19)
 801f478:	173fffc4 	addi	fp,r2,-1
 801f47c:	e0000d16 	blt	fp,zero,801f4b4 <__call_exitprocs+0xa0>
 801f480:	14000044 	addi	r16,r2,1
 801f484:	8421883a 	add	r16,r16,r16
 801f488:	8421883a 	add	r16,r16,r16
 801f48c:	84402004 	addi	r17,r16,128
 801f490:	9c63883a 	add	r17,r19,r17
 801f494:	9c21883a 	add	r16,r19,r16
 801f498:	a0001e26 	beq	r20,zero,801f514 <__call_exitprocs+0x100>
 801f49c:	80804017 	ldw	r2,256(r16)
 801f4a0:	15001c26 	beq	r2,r20,801f514 <__call_exitprocs+0x100>
 801f4a4:	e73fffc4 	addi	fp,fp,-1
 801f4a8:	843fff04 	addi	r16,r16,-4
 801f4ac:	8c7fff04 	addi	r17,r17,-4
 801f4b0:	e5bff91e 	bne	fp,r22,801f498 <__alt_data_end+0xfc01f498>
 801f4b4:	00800034 	movhi	r2,0
 801f4b8:	10800004 	addi	r2,r2,0
 801f4bc:	10000926 	beq	r2,zero,801f4e4 <__call_exitprocs+0xd0>
 801f4c0:	98800117 	ldw	r2,4(r19)
 801f4c4:	1000311e 	bne	r2,zero,801f58c <__call_exitprocs+0x178>
 801f4c8:	98800017 	ldw	r2,0(r19)
 801f4cc:	10003426 	beq	r2,zero,801f5a0 <__call_exitprocs+0x18c>
 801f4d0:	9809883a 	mov	r4,r19
 801f4d4:	a8800015 	stw	r2,0(r21)
 801f4d8:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 801f4dc:	acc00017 	ldw	r19,0(r21)
 801f4e0:	983fe41e 	bne	r19,zero,801f474 <__alt_data_end+0xfc01f474>
 801f4e4:	dfc00b17 	ldw	ra,44(sp)
 801f4e8:	df000a17 	ldw	fp,40(sp)
 801f4ec:	ddc00917 	ldw	r23,36(sp)
 801f4f0:	dd800817 	ldw	r22,32(sp)
 801f4f4:	dd400717 	ldw	r21,28(sp)
 801f4f8:	dd000617 	ldw	r20,24(sp)
 801f4fc:	dcc00517 	ldw	r19,20(sp)
 801f500:	dc800417 	ldw	r18,16(sp)
 801f504:	dc400317 	ldw	r17,12(sp)
 801f508:	dc000217 	ldw	r16,8(sp)
 801f50c:	dec00c04 	addi	sp,sp,48
 801f510:	f800283a 	ret
 801f514:	98800117 	ldw	r2,4(r19)
 801f518:	80c00017 	ldw	r3,0(r16)
 801f51c:	10bfffc4 	addi	r2,r2,-1
 801f520:	17001526 	beq	r2,fp,801f578 <__call_exitprocs+0x164>
 801f524:	80000015 	stw	zero,0(r16)
 801f528:	183fde26 	beq	r3,zero,801f4a4 <__alt_data_end+0xfc01f4a4>
 801f52c:	00800044 	movi	r2,1
 801f530:	1708983a 	sll	r4,r2,fp
 801f534:	98806217 	ldw	r2,392(r19)
 801f538:	9dc00117 	ldw	r23,4(r19)
 801f53c:	2084703a 	and	r2,r4,r2
 801f540:	1000061e 	bne	r2,zero,801f55c <__call_exitprocs+0x148>
 801f544:	183ee83a 	callr	r3
 801f548:	98800117 	ldw	r2,4(r19)
 801f54c:	15ffc51e 	bne	r2,r23,801f464 <__alt_data_end+0xfc01f464>
 801f550:	a8800017 	ldw	r2,0(r21)
 801f554:	14ffd326 	beq	r2,r19,801f4a4 <__alt_data_end+0xfc01f4a4>
 801f558:	003fc206 	br	801f464 <__alt_data_end+0xfc01f464>
 801f55c:	98806317 	ldw	r2,396(r19)
 801f560:	2084703a 	and	r2,r4,r2
 801f564:	1000061e 	bne	r2,zero,801f580 <__call_exitprocs+0x16c>
 801f568:	89400017 	ldw	r5,0(r17)
 801f56c:	9009883a 	mov	r4,r18
 801f570:	183ee83a 	callr	r3
 801f574:	003ff406 	br	801f548 <__alt_data_end+0xfc01f548>
 801f578:	9f000115 	stw	fp,4(r19)
 801f57c:	003fea06 	br	801f528 <__alt_data_end+0xfc01f528>
 801f580:	89000017 	ldw	r4,0(r17)
 801f584:	183ee83a 	callr	r3
 801f588:	003fef06 	br	801f548 <__alt_data_end+0xfc01f548>
 801f58c:	98800017 	ldw	r2,0(r19)
 801f590:	982b883a 	mov	r21,r19
 801f594:	1027883a 	mov	r19,r2
 801f598:	983fb61e 	bne	r19,zero,801f474 <__alt_data_end+0xfc01f474>
 801f59c:	003fd106 	br	801f4e4 <__alt_data_end+0xfc01f4e4>
 801f5a0:	0005883a 	mov	r2,zero
 801f5a4:	003ffa06 	br	801f590 <__alt_data_end+0xfc01f590>

0801f5a8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 801f5a8:	defffd04 	addi	sp,sp,-12
 801f5ac:	df000215 	stw	fp,8(sp)
 801f5b0:	df000204 	addi	fp,sp,8
 801f5b4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 801f5b8:	0001883a 	nop
 801f5bc:	e0bfff17 	ldw	r2,-4(fp)
 801f5c0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 801f5c4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 801f5c8:	10000226 	beq	r2,zero,801f5d4 <_exit+0x2c>
    ALT_SIM_FAIL();
 801f5cc:	002af070 	cmpltui	zero,zero,43969
 801f5d0:	00000106 	br	801f5d8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 801f5d4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 801f5d8:	003fff06 	br	801f5d8 <__alt_data_end+0xfc01f5d8>
